{"expireTime":9007200911206587000,"key":"transformer-remark-markdown-html-88e8248e2d80c1172a71447e69e147dd-gatsby-remark-prismjs-","val":"<p>Like many C-like programming languages, most operators JavaScript are binary or\nunary, and written in infix notation, i.e. <code class=\"language-text\">a op b</code>.</p>\n<p>Here is list of typical operations:</p>\n<ul>\n<li><strong>[Assignment][]</strong>: <code class=\"language-text\">a = b</code>, <code class=\"language-text\">a += b</code>, <code class=\"language-text\">a |= b</code>, and more</li>\n<li></li>\n<li><strong>[Arithmetic][]</strong>: <code class=\"language-text\">a + b</code>, `a - b</li>\n<li></li>\n<li><strong>String concatenation:</strong> <code class=\"language-text\">a + b</code></li>\n<li></li>\n<li><strong>[Boolean][]:</strong> <code class=\"language-text\">a &amp;&amp; b</code>, <code class=\"language-text\">a || b</code>, <code class=\"language-text\">!a</code></li>\n<li></li>\n<li><strong>[Bitwise][]:</strong> <code class=\"language-text\">a &amp; b</code>, <code class=\"language-text\">a | b</code>, <code class=\"language-text\">a ^ b</code>, <code class=\"language-text\">~a</code>, <code class=\"language-text\">a &lt;&lt; b</code>, <code class=\"language-text\">a >> b</code>, <code class=\"language-text\">a >>> b</code></li>\n<li><strong>Function calls</strong>: <code class=\"language-text\">foo()</code>, <code class=\"language-text\">foo(a, b, c)</code></li>\n<li><strong>Increment/Decrement</strong>: <code class=\"language-text\">a++</code>, <code class=\"language-text\">++a</code>, <code class=\"language-text\">a--</code>, <code class=\"language-text\">--a</code></li>\n<li><strong>[Conditional][]</strong>: <code class=\"language-text\">foo ? bar : baz</code></li>\n<li>Others: [<code class=\"language-text\">in</code>][in], [<code class=\"language-text\">instanceof</code>][instanceof], [<code class=\"language-text\">typeof</code>][typeof],\n[<code class=\"language-text\">new</code>][new]</li>\n</ul>\n<p>JavaScript also has <strong>comparison</strong> operators and <strong>property accessors</strong>,\nboth of which are explained in more detail in the next slides.</p>\n<div class=\"callout secondary\">\n<i class=\"fa fa-info-circle\" aria-hidden=\"true\">\n</i> **ES2016**\n<p>ES2016 introduces the <em>[exponentiation operator][pow]</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// equivalent to Math.pow(5, 2)</span></code></pre></div>\n</div>"}