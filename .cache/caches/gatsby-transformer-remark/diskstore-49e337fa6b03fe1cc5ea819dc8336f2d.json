{"expireTime":9007200911870450000,"key":"transformer-remark-markdown-ast-01ccf8f56e1bb336c9ccad7645fb76b2-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Math.floor()","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":15,"offset":14},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":15,"offset":14},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1,"offset":16},"end":{"line":3,"column":5,"offset":20},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Math.floor()</code>","position":{"start":{"line":3,"column":5,"offset":20},"end":{"line":3,"column":19,"offset":34},"indent":[]}},{"type":"text","value":" function returns the largest integer less than or equal to a given number.","position":{"start":{"line":3,"column":19,"offset":34},"end":{"line":3,"column":94,"offset":109},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":16},"end":{"line":3,"column":94,"offset":109},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":5,"column":4,"offset":114},"end":{"line":5,"column":10,"offset":120},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":111},"end":{"line":5,"column":10,"offset":120},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.floor(x)</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":122},"end":{"line":7,"column":18,"offset":139},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":9,"column":5,"offset":145},"end":{"line":9,"column":15,"offset":155},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":141},"end":{"line":9,"column":15,"offset":155},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":11,"column":1,"offset":157},"end":{"line":11,"column":4,"offset":160},"indent":[]}},{"type":"break","position":{"start":{"line":11,"column":4,"offset":160},"end":{"line":12,"column":1,"offset":163},"indent":[1]}},{"type":"text","value":"A number.","position":{"start":{"line":12,"column":1,"offset":163},"end":{"line":12,"column":10,"offset":172},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":157},"end":{"line":12,"column":10,"offset":172},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return value","position":{"start":{"line":14,"column":5,"offset":178},"end":{"line":14,"column":17,"offset":190},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":174},"end":{"line":14,"column":17,"offset":190},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A number representing the largest integer less than or equal to the specified number.","position":{"start":{"line":16,"column":1,"offset":192},"end":{"line":16,"column":86,"offset":277},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":192},"end":{"line":16,"column":86,"offset":277},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Description","position":{"start":{"line":18,"column":4,"offset":282},"end":{"line":18,"column":15,"offset":293},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":279},"end":{"line":18,"column":15,"offset":293},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because ","position":{"start":{"line":20,"column":1,"offset":295},"end":{"line":20,"column":9,"offset":303},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">floor()</code>","position":{"start":{"line":20,"column":9,"offset":303},"end":{"line":20,"column":18,"offset":312},"indent":[]}},{"type":"text","value":" is a static method of ","position":{"start":{"line":20,"column":18,"offset":312},"end":{"line":20,"column":41,"offset":335},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Math</code>","position":{"start":{"line":20,"column":41,"offset":335},"end":{"line":20,"column":47,"offset":341},"indent":[]}},{"type":"text","value":", you always use it as ","position":{"start":{"line":20,"column":47,"offset":341},"end":{"line":20,"column":70,"offset":364},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Math.floor()</code>","position":{"start":{"line":20,"column":70,"offset":364},"end":{"line":20,"column":84,"offset":378},"indent":[]}},{"type":"text","value":", rather than as a method of a ","position":{"start":{"line":20,"column":84,"offset":378},"end":{"line":20,"column":115,"offset":409},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Math</code>","position":{"start":{"line":20,"column":115,"offset":409},"end":{"line":20,"column":121,"offset":415},"indent":[]}},{"type":"text","value":" object you created (","position":{"start":{"line":20,"column":121,"offset":415},"end":{"line":20,"column":142,"offset":436},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Math</code>","position":{"start":{"line":20,"column":142,"offset":436},"end":{"line":20,"column":148,"offset":442},"indent":[]}},{"type":"text","value":" is not a constructor).","position":{"start":{"line":20,"column":148,"offset":442},"end":{"line":20,"column":171,"offset":465},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":295},"end":{"line":20,"column":171,"offset":465},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":22,"column":3,"offset":469},"end":{"line":22,"column":8,"offset":474},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":467},"end":{"line":22,"column":10,"offset":476},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":22,"column":10,"offset":476},"end":{"line":22,"column":11,"offset":477},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Math.floor(null)</code>","position":{"start":{"line":22,"column":11,"offset":477},"end":{"line":22,"column":29,"offset":495},"indent":[]}},{"type":"text","value":" returns 0, not a ","position":{"start":{"line":22,"column":29,"offset":495},"end":{"line":22,"column":47,"offset":513},"indent":[]}},{"type":"link","title":null,"url":"../nan","children":[{"type":"html","value":"<code class=\"language-text\">NaN</code>","position":{"start":{"line":22,"column":48,"offset":514},"end":{"line":22,"column":53,"offset":519},"indent":[]}}],"position":{"start":{"line":22,"column":47,"offset":513},"end":{"line":22,"column":62,"offset":528},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":22,"column":62,"offset":528},"end":{"line":22,"column":63,"offset":529},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":467},"end":{"line":22,"column":63,"offset":529},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":24,"column":4,"offset":534},"end":{"line":24,"column":12,"offset":542},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":531},"end":{"line":24,"column":12,"offset":542},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using Math.floor()","position":{"start":{"line":26,"column":5,"offset":548},"end":{"line":26,"column":23,"offset":566},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":544},"end":{"line":26,"column":23,"offset":566},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.floor( 45.95); //  45\nMath.floor( 45.05); //  45\nMath.floor(  4   ); //   4\nMath.floor(-45.05); // -46\nMath.floor(-45.95); // -46</code></pre></div>","position":{"start":{"line":28,"column":1,"offset":568},"end":{"line":32,"column":31,"offset":722},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Decimal adjustment","position":{"start":{"line":34,"column":5,"offset":728},"end":{"line":34,"column":23,"offset":746},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":724},"end":{"line":34,"column":23,"offset":746},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token comment\">/**\n     * Decimal adjustment of a number.\n     *\n     * @param {String}  type  The type of adjustment.\n     * @param {Number}  value The number.\n     * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n     * @returns {Number} The adjusted value.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">decimalAdjust</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> exp</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// If the exp is undefined or zero...</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> exp <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">||</span> <span class=\"token operator\">+</span>exp <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      value <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>value<span class=\"token punctuation\">;</span>\n      exp <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>exp<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// If the value is not a number or the exp is not an integer...</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> exp <span class=\"token operator\">===</span> <span class=\"token string\">'number'</span> <span class=\"token operator\">&amp;&amp;</span> exp <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Shift</span>\n      value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      value <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'e'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">+</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> exp<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span>exp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Shift back</span>\n      value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'e'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">+</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> exp<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> exp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Decimal round</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">round10</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> exp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">decimalAdjust</span><span class=\"token punctuation\">(</span><span class=\"token string\">'round'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> exp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Decimal floor</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">floor10</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> exp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">decimalAdjust</span><span class=\"token punctuation\">(</span><span class=\"token string\">'floor'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> exp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Decimal ceil</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ceil10</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> exp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">decimalAdjust</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ceil'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> exp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Round</span>\n    <span class=\"token function\">round10</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.55</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 55.6</span>\n    <span class=\"token function\">round10</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.549</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 55.5</span>\n    <span class=\"token function\">round10</span><span class=\"token punctuation\">(</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 60</span>\n    <span class=\"token function\">round10</span><span class=\"token punctuation\">(</span><span class=\"token number\">54.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 50</span>\n    <span class=\"token function\">round10</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">55.55</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// -55.5</span>\n    <span class=\"token function\">round10</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">55.551</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -55.6</span>\n    <span class=\"token function\">round10</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// -50</span>\n    <span class=\"token function\">round10</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">55.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// -60</span>\n    <span class=\"token comment\">// Floor</span>\n    <span class=\"token function\">floor10</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.59</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 55.5</span>\n    <span class=\"token function\">floor10</span><span class=\"token punctuation\">(</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 50</span>\n    <span class=\"token function\">floor10</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">55.51</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// -55.6</span>\n    <span class=\"token function\">floor10</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// -60</span>\n    <span class=\"token comment\">// Ceil</span>\n    <span class=\"token function\">ceil10</span><span class=\"token punctuation\">(</span><span class=\"token number\">55.51</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 55.6</span>\n    <span class=\"token function\">ceil10</span><span class=\"token punctuation\">(</span><span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 60</span>\n    <span class=\"token function\">ceil10</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">55.59</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// -55.5</span>\n    <span class=\"token function\">ceil10</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// -50</span></code></pre></div>","position":{"start":{"line":36,"column":1,"offset":748},"end":{"line":94,"column":4,"offset":2583},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":94,"column":4,"offset":2583}}}}