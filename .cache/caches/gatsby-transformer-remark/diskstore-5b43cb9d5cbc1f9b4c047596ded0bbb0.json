{"expireTime":9007200911206577000,"key":"transformer-remark-markdown-ast-dfb873e94ef4b9210016d3a30b2b6393-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"By default you cannot pass arguments to a callback function. For example:","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":74,"offset":74},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":74,"offset":74},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi human'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'someelem'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":4,"column":1,"offset":76},"end":{"line":11,"column":4,"offset":215},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can take advantage of the closure scope in Javascript to pass arguments to callback functions. Check this example:","position":{"start":{"line":13,"column":1,"offset":217},"end":{"line":13,"column":119,"offset":335},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":217},"end":{"line":13,"column":119,"offset":335},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum = '</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'someelem'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":15,"column":1,"offset":337},"end":{"line":26,"column":4,"offset":549},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"What are closures?","position":{"start":{"line":28,"column":5,"offset":555},"end":{"line":28,"column":23,"offset":573},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":551},"end":{"line":28,"column":23,"offset":573},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Closures are functions that refer to independent (free) variables. In other words, the function defined in the closure 'remembers' the environment in which it was created. ","position":{"start":{"line":30,"column":1,"offset":575},"end":{"line":30,"column":173,"offset":747},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures","children":[{"type":"text","value":"Check MDN Documentation","position":{"start":{"line":30,"column":174,"offset":748},"end":{"line":30,"column":197,"offset":771},"indent":[]}}],"position":{"start":{"line":30,"column":173,"offset":747},"end":{"line":30,"column":264,"offset":838},"indent":[]}},{"type":"text","value":" to learn more.","position":{"start":{"line":30,"column":264,"offset":838},"end":{"line":30,"column":279,"offset":853},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":575},"end":{"line":30,"column":279,"offset":853},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So this way the arguments ","position":{"start":{"line":32,"column":1,"offset":855},"end":{"line":32,"column":27,"offset":881},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":32,"column":27,"offset":881},"end":{"line":32,"column":30,"offset":884},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":32,"column":30,"offset":884},"end":{"line":32,"column":35,"offset":889},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">y</code>","position":{"start":{"line":32,"column":35,"offset":889},"end":{"line":32,"column":38,"offset":892},"indent":[]}},{"type":"text","value":" are in scope of the callback function when it is called.","position":{"start":{"line":32,"column":38,"offset":892},"end":{"line":32,"column":95,"offset":949},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":855},"end":{"line":32,"column":95,"offset":949},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Another method to do this is using the ","position":{"start":{"line":34,"column":1,"offset":951},"end":{"line":34,"column":40,"offset":990},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">bind</code>","position":{"start":{"line":34,"column":40,"offset":990},"end":{"line":34,"column":46,"offset":996},"indent":[]}},{"type":"text","value":" method. For example:","position":{"start":{"line":34,"column":46,"offset":996},"end":{"line":34,"column":67,"offset":1017},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":951},"end":{"line":34,"column":67,"offset":1017},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">alertText</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'someelem'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">alertText</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":36,"column":1,"offset":1019},"end":{"line":43,"column":4,"offset":1180},"indent":[1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":44,"column":1,"offset":1181}}}}