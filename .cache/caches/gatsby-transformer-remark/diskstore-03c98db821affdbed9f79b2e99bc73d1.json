{"expireTime":9007200911870450000,"key":"transformer-remark-markdown-ast-3a1a271bce18ced3b297ca8d8f07db67-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"html","value":"<h1 align=\"center\">Hi 👋, I'm Bryan</h1>","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":41,"offset":42},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":4,"column":1,"offset":46},"end":{"line":4,"column":4,"offset":49},"indent":[]}},{"type":"html","value":"<div align=\"center\">","position":{"start":{"line":6,"column":1,"offset":53},"end":{"line":6,"column":21,"offset":73},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://komarev.com/ghpvc/?username=bgoonz","alt":"profile views","position":{"start":{"line":8,"column":1,"offset":77},"end":{"line":8,"column":61,"offset":137},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":77},"end":{"line":8,"column":61,"offset":137},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/","children":[{"type":"html","value":"<b>","position":{"start":{"line":10,"column":5,"offset":145},"end":{"line":10,"column":8,"offset":148},"indent":[]}},{"type":"text","value":"WEBSITE","position":{"start":{"line":10,"column":8,"offset":148},"end":{"line":10,"column":15,"offset":155},"indent":[]}},{"type":"html","value":"</b>","position":{"start":{"line":10,"column":15,"offset":155},"end":{"line":10,"column":19,"offset":159},"indent":[]}}],"position":{"start":{"line":10,"column":4,"offset":144},"end":{"line":10,"column":54,"offset":194},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":141},"end":{"line":10,"column":54,"offset":194},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Search Website: ","position":{"start":{"line":12,"column":3,"offset":200},"end":{"line":12,"column":19,"offset":216},"indent":[]}},{"type":"link","title":null,"url":"https://www.algolia.com/realtime-search-demo/web-dev-resource-hub-9e6b8aa8-6106-44c5-9f59-ff3f9531abd4","children":[{"type":"text","value":"search","position":{"start":{"line":12,"column":20,"offset":217},"end":{"line":12,"column":26,"offset":223},"indent":[]}}],"position":{"start":{"line":12,"column":19,"offset":216},"end":{"line":12,"column":131,"offset":328},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":198},"end":{"line":12,"column":131,"offset":328},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://bgoonzblog20-backup.netlify.app/#gsc.tab=0","children":[{"type":"text","value":"Backup Repo Deploy","position":{"start":{"line":14,"column":5,"offset":336},"end":{"line":14,"column":23,"offset":354},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":335},"end":{"line":14,"column":76,"offset":407},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":332},"end":{"line":14,"column":76,"offset":407},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://bgoonz.github.io/BGOONZ_BLOG_2.0/","children":[{"type":"text","value":"Github pages","position":{"start":{"line":16,"column":5,"offset":415},"end":{"line":16,"column":17,"offset":427},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":414},"end":{"line":16,"column":61,"offset":471},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":411},"end":{"line":16,"column":61,"offset":471},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://views.whatilearened.today/views/github/bgoonz/views.svg","alt":"Profile views","position":{"start":{"line":18,"column":1,"offset":475},"end":{"line":18,"column":82,"offset":556},"indent":[]}},{"type":"link","title":null,"url":"https://gitter.im/bgoonz/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge","children":[{"type":"image","title":null,"url":"https://badges.gitter.im/bgoonz/community.svg","alt":"Gitter","position":{"start":{"line":18,"column":83,"offset":557},"end":{"line":18,"column":139,"offset":613},"indent":[]}}],"position":{"start":{"line":18,"column":82,"offset":556},"end":{"line":18,"column":232,"offset":706},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":475},"end":{"line":18,"column":232,"offset":706},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://app.netlify.com/sites/best-celery-b2d7c/deploys","children":[{"type":"image","title":null,"url":"https://api.netlify.com/api/v1/badges/a1b7ee1a-11a7-4bd2-a341-2260656e216f/deploy-status","alt":"Netlify Status","position":{"start":{"line":20,"column":2,"offset":711},"end":{"line":20,"column":109,"offset":818},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":710},"end":{"line":20,"column":167,"offset":876},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":710},"end":{"line":20,"column":167,"offset":876},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codescene.io/projects/17026","children":[{"type":"image","title":null,"url":"https://codescene.io/projects/17026/status-badges/system-mastery","alt":"CodeScene System Mastery","position":{"start":{"line":22,"column":2,"offset":881},"end":{"line":22,"column":95,"offset":974},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":880},"end":{"line":22,"column":133,"offset":1012},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":880},"end":{"line":22,"column":133,"offset":1012},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://github.com/bgoonz/BGOONZ_BLOG_2.0/blob/master/static/images/iframes.gif?raw=true","alt":"Demo","position":{"start":{"line":24,"column":1,"offset":1016},"end":{"line":24,"column":98,"offset":1113},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1016},"end":{"line":24,"column":98,"offset":1113},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Homepage","position":{"start":{"line":26,"column":3,"offset":1119},"end":{"line":26,"column":11,"offset":1127},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1117},"end":{"line":26,"column":11,"offset":1127},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"./static/images/bgoonzblog20.png","alt":"Homepage","position":{"start":{"line":28,"column":1,"offset":1131},"end":{"line":28,"column":46,"offset":1176},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1131},"end":{"line":28,"column":46,"offset":1176},"indent":[]}},{"type":"html","value":"</div>","position":{"start":{"line":30,"column":1,"offset":1180},"end":{"line":30,"column":7,"offset":1186},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Technologies used","position":{"start":{"line":32,"column":3,"offset":1192},"end":{"line":32,"column":20,"offset":1209},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1190},"end":{"line":32,"column":20,"offset":1209},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/analytics/Global-Site-Tag","children":[{"type":"text","value":"Global Site Tag","position":{"start":{"line":34,"column":5,"offset":1217},"end":{"line":34,"column":20,"offset":1232},"indent":[]}}],"position":{"start":{"line":34,"column":4,"offset":1216},"end":{"line":34,"column":77,"offset":1289},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1213},"end":{"line":34,"column":77,"offset":1289},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/analytics/Global-Site-Tag","children":[{"type":"text","value":"Global Site Tag Usage Statistics","position":{"start":{"line":36,"column":2,"offset":1294},"end":{"line":36,"column":34,"offset":1326},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1293},"end":{"line":36,"column":91,"offset":1383},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":36,"column":91,"offset":1383},"end":{"line":36,"column":94,"offset":1386},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Global-Site-Tag","children":[{"type":"text","value":"Download List of All Websites using Global Site Tag","position":{"start":{"line":36,"column":95,"offset":1387},"end":{"line":36,"column":146,"offset":1438},"indent":[]}}],"position":{"start":{"line":36,"column":94,"offset":1386},"end":{"line":36,"column":205,"offset":1497},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1293},"end":{"line":36,"column":205,"offset":1497},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Google's primary tag for Google Measurement/Conversion Tracking, Adwords and DoubleClick.","position":{"start":{"line":38,"column":1,"offset":1501},"end":{"line":38,"column":90,"offset":1590},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1501},"end":{"line":38,"column":90,"offset":1590},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/analytics/Google-Analytics","children":[{"type":"text","value":"Google Analytics","position":{"start":{"line":40,"column":5,"offset":1598},"end":{"line":40,"column":21,"offset":1614},"indent":[]}}],"position":{"start":{"line":40,"column":4,"offset":1597},"end":{"line":40,"column":79,"offset":1672},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1594},"end":{"line":40,"column":79,"offset":1672},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/analytics/Google-Analytics","children":[{"type":"text","value":"Google Analytics Usage Statistics","position":{"start":{"line":42,"column":2,"offset":1677},"end":{"line":42,"column":35,"offset":1710},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1676},"end":{"line":42,"column":93,"offset":1768},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":42,"column":93,"offset":1768},"end":{"line":42,"column":96,"offset":1771},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Google-Analytics","children":[{"type":"text","value":"Download List of All Websites using Google Analytics","position":{"start":{"line":42,"column":97,"offset":1772},"end":{"line":42,"column":149,"offset":1824},"indent":[]}}],"position":{"start":{"line":42,"column":96,"offset":1771},"end":{"line":42,"column":209,"offset":1884},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1676},"end":{"line":42,"column":209,"offset":1884},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Google Analytics offers a host of compelling features and benefits for everyone from senior executives and advertising and marketing professionals to site owners and content developers.","position":{"start":{"line":44,"column":1,"offset":1888},"end":{"line":44,"column":186,"offset":2073},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1888},"end":{"line":44,"column":186,"offset":2073},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/analytics/application-performance","children":[{"type":"text","value":"Application Performance","position":{"start":{"line":46,"column":2,"offset":2078},"end":{"line":46,"column":25,"offset":2101},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2077},"end":{"line":46,"column":90,"offset":2166},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":46,"column":90,"offset":2166},"end":{"line":46,"column":93,"offset":2169},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/analytics/audience-measurement","children":[{"type":"text","value":"Audience Measurement","position":{"start":{"line":46,"column":94,"offset":2170},"end":{"line":46,"column":114,"offset":2190},"indent":[]}}],"position":{"start":{"line":46,"column":93,"offset":2169},"end":{"line":46,"column":176,"offset":2252},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":46,"column":176,"offset":2252},"end":{"line":46,"column":179,"offset":2255},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/analytics/visitor-count-tracking","children":[{"type":"text","value":"Visitor Count Tracking","position":{"start":{"line":46,"column":180,"offset":2256},"end":{"line":46,"column":202,"offset":2278},"indent":[]}}],"position":{"start":{"line":46,"column":179,"offset":2255},"end":{"line":46,"column":266,"offset":2342},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2077},"end":{"line":46,"column":266,"offset":2342},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/analytics/Google-Analytics-4","children":[{"type":"text","value":"Google Analytics 4","position":{"start":{"line":48,"column":8,"offset":2353},"end":{"line":48,"column":26,"offset":2371},"indent":[]}}],"position":{"start":{"line":48,"column":7,"offset":2352},"end":{"line":48,"column":86,"offset":2431},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":2346},"end":{"line":48,"column":86,"offset":2431},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/analytics/Google-Analytics-4","children":[{"type":"text","value":"Google Analytics 4 Usage Statistics","position":{"start":{"line":50,"column":2,"offset":2436},"end":{"line":50,"column":37,"offset":2471},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":2435},"end":{"line":50,"column":97,"offset":2531},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":50,"column":97,"offset":2531},"end":{"line":50,"column":100,"offset":2534},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Google-Analytics-4","children":[{"type":"text","value":"Download List of All Websites using Google Analytics 4","position":{"start":{"line":50,"column":101,"offset":2535},"end":{"line":50,"column":155,"offset":2589},"indent":[]}}],"position":{"start":{"line":50,"column":100,"offset":2534},"end":{"line":50,"column":217,"offset":2651},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":2435},"end":{"line":50,"column":217,"offset":2651},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Google Analytics 4 formerly known as App + Web is a new version of Google Analytics that was released in October 2020.","position":{"start":{"line":52,"column":1,"offset":2655},"end":{"line":52,"column":119,"offset":2773},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":2655},"end":{"line":52,"column":119,"offset":2773},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Widgets","position":{"start":{"line":54,"column":8,"offset":2784},"end":{"line":54,"column":15,"offset":2791},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2777},"end":{"line":54,"column":15,"offset":2791},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":56,"column":2,"offset":2796},"end":{"line":56,"column":20,"offset":2814},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2795},"end":{"line":56,"column":59,"offset":2853},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2795},"end":{"line":56,"column":59,"offset":2853},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Imgur","children":[{"type":"text","value":"Imgur","position":{"start":{"line":58,"column":5,"offset":2861},"end":{"line":58,"column":10,"offset":2866},"indent":[]}}],"position":{"start":{"line":58,"column":4,"offset":2860},"end":{"line":58,"column":55,"offset":2911},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2857},"end":{"line":58,"column":55,"offset":2911},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Imgur","children":[{"type":"text","value":"Imgur Usage Statistics","position":{"start":{"line":60,"column":2,"offset":2916},"end":{"line":60,"column":24,"offset":2938},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2915},"end":{"line":60,"column":69,"offset":2983},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":60,"column":69,"offset":2983},"end":{"line":60,"column":72,"offset":2986},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Imgur","children":[{"type":"text","value":"Download List of All Websites using Imgur","position":{"start":{"line":60,"column":73,"offset":2987},"end":{"line":60,"column":114,"offset":3028},"indent":[]}}],"position":{"start":{"line":60,"column":72,"offset":2986},"end":{"line":60,"column":163,"offset":3077},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2915},"end":{"line":60,"column":163,"offset":3077},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The page contains content from image sharing website imgur.","position":{"start":{"line":62,"column":1,"offset":3081},"end":{"line":62,"column":60,"offset":3140},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":3081},"end":{"line":62,"column":60,"offset":3140},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Google-Font-API","children":[{"type":"text","value":"Google Font API","position":{"start":{"line":64,"column":5,"offset":3148},"end":{"line":64,"column":20,"offset":3163},"indent":[]}}],"position":{"start":{"line":64,"column":4,"offset":3147},"end":{"line":64,"column":75,"offset":3218},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":3144},"end":{"line":64,"column":75,"offset":3218},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Google-Font-API","children":[{"type":"text","value":"Google Font API Usage Statistics","position":{"start":{"line":66,"column":2,"offset":3223},"end":{"line":66,"column":34,"offset":3255},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":3222},"end":{"line":66,"column":89,"offset":3310},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":66,"column":89,"offset":3310},"end":{"line":66,"column":92,"offset":3313},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Google-Font-API","children":[{"type":"text","value":"Download List of All Websites using Google Font API","position":{"start":{"line":66,"column":93,"offset":3314},"end":{"line":66,"column":144,"offset":3365},"indent":[]}}],"position":{"start":{"line":66,"column":92,"offset":3313},"end":{"line":66,"column":203,"offset":3424},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":3222},"end":{"line":66,"column":203,"offset":3424},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Google Font API helps you add web fonts to any web page.","position":{"start":{"line":68,"column":1,"offset":3428},"end":{"line":68,"column":61,"offset":3488},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":3428},"end":{"line":68,"column":61,"offset":3488},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/fonts","children":[{"type":"text","value":"Fonts","position":{"start":{"line":70,"column":2,"offset":3493},"end":{"line":70,"column":7,"offset":3498},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":3492},"end":{"line":70,"column":52,"offset":3543},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":3492},"end":{"line":70,"column":52,"offset":3543},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Google-Tag-Manager","children":[{"type":"text","value":"Google Tag Manager","position":{"start":{"line":72,"column":5,"offset":3551},"end":{"line":72,"column":23,"offset":3569},"indent":[]}}],"position":{"start":{"line":72,"column":4,"offset":3550},"end":{"line":72,"column":81,"offset":3627},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":3547},"end":{"line":72,"column":81,"offset":3627},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Google-Tag-Manager","children":[{"type":"text","value":"Google Tag Manager Usage Statistics","position":{"start":{"line":74,"column":2,"offset":3632},"end":{"line":74,"column":37,"offset":3667},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3631},"end":{"line":74,"column":95,"offset":3725},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":74,"column":95,"offset":3725},"end":{"line":74,"column":98,"offset":3728},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Google-Tag-Manager","children":[{"type":"text","value":"Download List of All Websites using Google Tag Manager","position":{"start":{"line":74,"column":99,"offset":3729},"end":{"line":74,"column":153,"offset":3783},"indent":[]}}],"position":{"start":{"line":74,"column":98,"offset":3728},"end":{"line":74,"column":215,"offset":3845},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3631},"end":{"line":74,"column":215,"offset":3845},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Tag management that lets you add and update website tags without changes to underlying website code.","position":{"start":{"line":76,"column":1,"offset":3849},"end":{"line":76,"column":101,"offset":3949},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":3849},"end":{"line":76,"column":101,"offset":3949},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/tag-management","children":[{"type":"text","value":"Tag Management","position":{"start":{"line":78,"column":2,"offset":3954},"end":{"line":78,"column":16,"offset":3968},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3953},"end":{"line":78,"column":70,"offset":4022},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3953},"end":{"line":78,"column":70,"offset":4022},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Icons8","children":[{"type":"text","value":"Icons8","position":{"start":{"line":80,"column":5,"offset":4030},"end":{"line":80,"column":11,"offset":4036},"indent":[]}}],"position":{"start":{"line":80,"column":4,"offset":4029},"end":{"line":80,"column":57,"offset":4082},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":4026},"end":{"line":80,"column":57,"offset":4082},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Icons8","children":[{"type":"text","value":"Icons8 Usage Statistics","position":{"start":{"line":82,"column":2,"offset":4087},"end":{"line":82,"column":25,"offset":4110},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":4086},"end":{"line":82,"column":71,"offset":4156},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":82,"column":71,"offset":4156},"end":{"line":82,"column":74,"offset":4159},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Icons8","children":[{"type":"text","value":"Download List of All Websites using Icons8","position":{"start":{"line":82,"column":75,"offset":4160},"end":{"line":82,"column":117,"offset":4202},"indent":[]}}],"position":{"start":{"line":82,"column":74,"offset":4159},"end":{"line":82,"column":167,"offset":4252},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":4086},"end":{"line":82,"column":167,"offset":4252},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Icons, photos and illustrations.","position":{"start":{"line":84,"column":1,"offset":4256},"end":{"line":84,"column":33,"offset":4288},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":4256},"end":{"line":84,"column":33,"offset":4288},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/image-provider","children":[{"type":"text","value":"Image Provider","position":{"start":{"line":86,"column":2,"offset":4293},"end":{"line":86,"column":16,"offset":4307},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":4292},"end":{"line":86,"column":70,"offset":4361},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":4292},"end":{"line":86,"column":70,"offset":4361},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Lorem-Ipsum","children":[{"type":"text","value":"Lorem Ipsum","position":{"start":{"line":88,"column":5,"offset":4369},"end":{"line":88,"column":16,"offset":4380},"indent":[]}}],"position":{"start":{"line":88,"column":4,"offset":4368},"end":{"line":88,"column":67,"offset":4431},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":4365},"end":{"line":88,"column":67,"offset":4431},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/Lorem-Ipsum","children":[{"type":"text","value":"Lorem Ipsum Usage Statistics","position":{"start":{"line":90,"column":2,"offset":4436},"end":{"line":90,"column":30,"offset":4464},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":4435},"end":{"line":90,"column":81,"offset":4515},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":90,"column":81,"offset":4515},"end":{"line":90,"column":84,"offset":4518},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Lorem-Ipsum","children":[{"type":"text","value":"Download List of All Websites using Lorem Ipsum","position":{"start":{"line":90,"column":85,"offset":4519},"end":{"line":90,"column":132,"offset":4566},"indent":[]}}],"position":{"start":{"line":90,"column":84,"offset":4518},"end":{"line":90,"column":187,"offset":4621},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":4435},"end":{"line":90,"column":187,"offset":4621},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This website contains the phrase 'lorem ipsum' which means it may have placeholder text.","position":{"start":{"line":92,"column":1,"offset":4625},"end":{"line":92,"column":89,"offset":4713},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":4625},"end":{"line":92,"column":89,"offset":4713},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/AddThis","children":[{"type":"text","value":"AddThis","position":{"start":{"line":94,"column":5,"offset":4721},"end":{"line":94,"column":12,"offset":4728},"indent":[]}}],"position":{"start":{"line":94,"column":4,"offset":4720},"end":{"line":94,"column":59,"offset":4775},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":4717},"end":{"line":94,"column":59,"offset":4775},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/AddThis","children":[{"type":"text","value":"AddThis Usage Statistics","position":{"start":{"line":96,"column":2,"offset":4780},"end":{"line":96,"column":26,"offset":4804},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":4779},"end":{"line":96,"column":73,"offset":4851},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":96,"column":73,"offset":4851},"end":{"line":96,"column":76,"offset":4854},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/AddThis","children":[{"type":"text","value":"Download List of All Websites using AddThis","position":{"start":{"line":96,"column":77,"offset":4855},"end":{"line":96,"column":120,"offset":4898},"indent":[]}}],"position":{"start":{"line":96,"column":76,"offset":4854},"end":{"line":96,"column":171,"offset":4949},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":4779},"end":{"line":96,"column":171,"offset":4949},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Widgets that allow visitors to save and promote the site.","position":{"start":{"line":98,"column":1,"offset":4953},"end":{"line":98,"column":58,"offset":5010},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":4953},"end":{"line":98,"column":58,"offset":5010},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/social-sharing","children":[{"type":"text","value":"Social Sharing","position":{"start":{"line":100,"column":2,"offset":5015},"end":{"line":100,"column":16,"offset":5029},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":5014},"end":{"line":100,"column":70,"offset":5083},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":100,"column":70,"offset":5083},"end":{"line":100,"column":73,"offset":5086},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/bookmarking","children":[{"type":"text","value":"Bookmarking","position":{"start":{"line":100,"column":74,"offset":5087},"end":{"line":100,"column":85,"offset":5098},"indent":[]}}],"position":{"start":{"line":100,"column":73,"offset":5086},"end":{"line":100,"column":136,"offset":5149},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":5014},"end":{"line":100,"column":136,"offset":5149},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/tawk.to","children":[{"type":"text","value":"tawk.to","position":{"start":{"line":102,"column":5,"offset":5157},"end":{"line":102,"column":12,"offset":5164},"indent":[]}}],"position":{"start":{"line":102,"column":4,"offset":5156},"end":{"line":102,"column":59,"offset":5211},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":5153},"end":{"line":102,"column":59,"offset":5211},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/tawk.to","children":[{"type":"text","value":"tawk.to Usage Statistics","position":{"start":{"line":104,"column":2,"offset":5216},"end":{"line":104,"column":26,"offset":5240},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":5215},"end":{"line":104,"column":73,"offset":5287},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":104,"column":73,"offset":5287},"end":{"line":104,"column":76,"offset":5290},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/tawk.to","children":[{"type":"text","value":"Download List of All Websites using tawk.to","position":{"start":{"line":104,"column":77,"offset":5291},"end":{"line":104,"column":120,"offset":5334},"indent":[]}}],"position":{"start":{"line":104,"column":76,"offset":5290},"end":{"line":104,"column":171,"offset":5385},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":5215},"end":{"line":104,"column":171,"offset":5385},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"tawk.to is a free live chat app that lets you monitor and chat with visitors.","position":{"start":{"line":106,"column":1,"offset":5389},"end":{"line":106,"column":78,"offset":5466},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":5389},"end":{"line":106,"column":78,"offset":5466},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/widgets/live-chat","children":[{"type":"text","value":"Live Chat","position":{"start":{"line":108,"column":2,"offset":5471},"end":{"line":108,"column":11,"offset":5480},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":5470},"end":{"line":108,"column":60,"offset":5529},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":5470},"end":{"line":108,"column":60,"offset":5529},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Frameworks","position":{"start":{"line":110,"column":8,"offset":5540},"end":{"line":110,"column":18,"offset":5550},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":5533},"end":{"line":110,"column":18,"offset":5550},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/framework","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":112,"column":2,"offset":5555},"end":{"line":112,"column":20,"offset":5573},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":5554},"end":{"line":112,"column":61,"offset":5614},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":5554},"end":{"line":112,"column":61,"offset":5614},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/framework/Gatsby-JS","children":[{"type":"text","value":"Gatsby JS","position":{"start":{"line":114,"column":5,"offset":5622},"end":{"line":114,"column":14,"offset":5631},"indent":[]}}],"position":{"start":{"line":114,"column":4,"offset":5621},"end":{"line":114,"column":65,"offset":5682},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":5618},"end":{"line":114,"column":65,"offset":5682},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/framework/Gatsby-JS","children":[{"type":"text","value":"Gatsby JS Usage Statistics","position":{"start":{"line":116,"column":2,"offset":5687},"end":{"line":116,"column":28,"offset":5713},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":5686},"end":{"line":116,"column":79,"offset":5764},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":116,"column":79,"offset":5764},"end":{"line":116,"column":82,"offset":5767},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Gatsby-JS","children":[{"type":"text","value":"Download List of All Websites using Gatsby JS","position":{"start":{"line":116,"column":83,"offset":5768},"end":{"line":116,"column":128,"offset":5813},"indent":[]}}],"position":{"start":{"line":116,"column":82,"offset":5767},"end":{"line":116,"column":181,"offset":5866},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":5686},"end":{"line":116,"column":181,"offset":5866},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Modern website and web apps generator for React.","position":{"start":{"line":118,"column":1,"offset":5870},"end":{"line":118,"column":49,"offset":5918},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":5870},"end":{"line":118,"column":49,"offset":5918},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mobile","position":{"start":{"line":120,"column":8,"offset":5929},"end":{"line":120,"column":14,"offset":5935},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":5922},"end":{"line":120,"column":14,"offset":5935},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/mobile","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":122,"column":2,"offset":5940},"end":{"line":122,"column":20,"offset":5958},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":5939},"end":{"line":122,"column":58,"offset":5996},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":5939},"end":{"line":122,"column":58,"offset":5996},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/mobile/Viewport-Meta","children":[{"type":"text","value":"Viewport Meta","position":{"start":{"line":124,"column":5,"offset":6004},"end":{"line":124,"column":18,"offset":6017},"indent":[]}}],"position":{"start":{"line":124,"column":4,"offset":6003},"end":{"line":124,"column":70,"offset":6069},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":6000},"end":{"line":124,"column":70,"offset":6069},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/mobile/Viewport-Meta","children":[{"type":"text","value":"Viewport Meta Usage Statistics","position":{"start":{"line":126,"column":2,"offset":6074},"end":{"line":126,"column":32,"offset":6104},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":6073},"end":{"line":126,"column":84,"offset":6156},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":126,"column":84,"offset":6156},"end":{"line":126,"column":87,"offset":6159},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Viewport-Meta","children":[{"type":"text","value":"Download List of All Websites using Viewport Meta","position":{"start":{"line":126,"column":88,"offset":6160},"end":{"line":126,"column":137,"offset":6209},"indent":[]}}],"position":{"start":{"line":126,"column":87,"offset":6159},"end":{"line":126,"column":194,"offset":6266},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":6073},"end":{"line":126,"column":194,"offset":6266},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This page uses the viewport meta tag which means the content may be optimized for mobile content.","position":{"start":{"line":128,"column":1,"offset":6270},"end":{"line":128,"column":98,"offset":6367},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":6270},"end":{"line":128,"column":98,"offset":6367},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/mobile/IPhone---Mobile-Compatible","children":[{"type":"text","value":"IPhone / Mobile Compatible","position":{"start":{"line":130,"column":5,"offset":6375},"end":{"line":130,"column":31,"offset":6401},"indent":[]}}],"position":{"start":{"line":130,"column":4,"offset":6374},"end":{"line":130,"column":96,"offset":6466},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":6371},"end":{"line":130,"column":96,"offset":6466},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/mobile/IPhone---Mobile-Compatible","children":[{"type":"text","value":"IPhone / Mobile Compatible Usage Statistics","position":{"start":{"line":132,"column":2,"offset":6471},"end":{"line":132,"column":45,"offset":6514},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":6470},"end":{"line":132,"column":110,"offset":6579},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":132,"column":110,"offset":6579},"end":{"line":132,"column":113,"offset":6582},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/IPhone---Mobile-Compatible","children":[{"type":"text","value":"Download List of All Websites using IPhone / Mobile Compatible","position":{"start":{"line":132,"column":114,"offset":6583},"end":{"line":132,"column":176,"offset":6645},"indent":[]}}],"position":{"start":{"line":132,"column":113,"offset":6582},"end":{"line":132,"column":246,"offset":6715},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":6470},"end":{"line":132,"column":246,"offset":6715},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The website contains code that allows the page to support IPhone / Mobile Content.","position":{"start":{"line":134,"column":1,"offset":6719},"end":{"line":134,"column":83,"offset":6801},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":6719},"end":{"line":134,"column":83,"offset":6801},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/mobile/Apple-Mobile-Web-Clips-Icon","children":[{"type":"text","value":"Apple Mobile Web Clips Icon","position":{"start":{"line":136,"column":5,"offset":6809},"end":{"line":136,"column":32,"offset":6836},"indent":[]}}],"position":{"start":{"line":136,"column":4,"offset":6808},"end":{"line":136,"column":98,"offset":6902},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":6805},"end":{"line":136,"column":98,"offset":6902},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/mobile/Apple-Mobile-Web-Clips-Icon","children":[{"type":"text","value":"Apple Mobile Web Clips Icon Usage Statistics","position":{"start":{"line":138,"column":2,"offset":6907},"end":{"line":138,"column":46,"offset":6951},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":6906},"end":{"line":138,"column":112,"offset":7017},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":138,"column":112,"offset":7017},"end":{"line":138,"column":115,"offset":7020},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Apple-Mobile-Web-Clips-Icon","children":[{"type":"text","value":"Download List of All Websites using Apple Mobile Web Clips Icon","position":{"start":{"line":138,"column":116,"offset":7021},"end":{"line":138,"column":179,"offset":7084},"indent":[]}}],"position":{"start":{"line":138,"column":115,"offset":7020},"end":{"line":138,"column":250,"offset":7155},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":6906},"end":{"line":138,"column":250,"offset":7155},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This page contains an icon for iPhone, iPad and iTouch devices.","position":{"start":{"line":140,"column":1,"offset":7159},"end":{"line":140,"column":64,"offset":7222},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":7159},"end":{"line":140,"column":64,"offset":7222},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Content Delivery Network","position":{"start":{"line":142,"column":8,"offset":7233},"end":{"line":142,"column":32,"offset":7257},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":7226},"end":{"line":142,"column":32,"offset":7257},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cdn","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":144,"column":2,"offset":7262},"end":{"line":144,"column":20,"offset":7280},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":7261},"end":{"line":144,"column":55,"offset":7315},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":7261},"end":{"line":144,"column":55,"offset":7315},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cdn/AJAX-Libraries-API","children":[{"type":"text","value":"AJAX Libraries API","position":{"start":{"line":146,"column":5,"offset":7323},"end":{"line":146,"column":23,"offset":7341},"indent":[]}}],"position":{"start":{"line":146,"column":4,"offset":7322},"end":{"line":146,"column":77,"offset":7395},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":7319},"end":{"line":146,"column":77,"offset":7395},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cdn/AJAX-Libraries-API","children":[{"type":"text","value":"AJAX Libraries API Usage Statistics","position":{"start":{"line":148,"column":2,"offset":7400},"end":{"line":148,"column":37,"offset":7435},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":7399},"end":{"line":148,"column":91,"offset":7489},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":148,"column":91,"offset":7489},"end":{"line":148,"column":94,"offset":7492},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/AJAX-Libraries-API","children":[{"type":"text","value":"Download List of All Websites using AJAX Libraries API","position":{"start":{"line":148,"column":95,"offset":7493},"end":{"line":148,"column":149,"offset":7547},"indent":[]}}],"position":{"start":{"line":148,"column":94,"offset":7492},"end":{"line":148,"column":211,"offset":7609},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":7399},"end":{"line":148,"column":211,"offset":7609},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The AJAX Libraries API is a content distribution network and loading architecture for the most popular, open source JavaScript libraries.","position":{"start":{"line":150,"column":1,"offset":7613},"end":{"line":150,"column":138,"offset":7750},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":7613},"end":{"line":150,"column":138,"offset":7750},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cdn/jsDelivr","children":[{"type":"text","value":"jsDelivr","position":{"start":{"line":152,"column":5,"offset":7758},"end":{"line":152,"column":13,"offset":7766},"indent":[]}}],"position":{"start":{"line":152,"column":4,"offset":7757},"end":{"line":152,"column":57,"offset":7810},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":7754},"end":{"line":152,"column":57,"offset":7810},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cdn/jsDelivr","children":[{"type":"text","value":"jsDelivr Usage Statistics","position":{"start":{"line":154,"column":2,"offset":7815},"end":{"line":154,"column":27,"offset":7840},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":7814},"end":{"line":154,"column":71,"offset":7884},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":154,"column":71,"offset":7884},"end":{"line":154,"column":74,"offset":7887},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/jsDelivr","children":[{"type":"text","value":"Download List of All Websites using jsDelivr","position":{"start":{"line":154,"column":75,"offset":7888},"end":{"line":154,"column":119,"offset":7932},"indent":[]}}],"position":{"start":{"line":154,"column":74,"offset":7887},"end":{"line":154,"column":171,"offset":7984},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":7814},"end":{"line":154,"column":171,"offset":7984},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A free CDN where Javascript developers can host their files. Encompasses MaxCDN, and BootstrapCDN.","position":{"start":{"line":156,"column":1,"offset":7988},"end":{"line":156,"column":99,"offset":8086},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":7988},"end":{"line":156,"column":99,"offset":8086},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cdn/CloudFront","children":[{"type":"text","value":"CloudFront","position":{"start":{"line":158,"column":5,"offset":8094},"end":{"line":158,"column":15,"offset":8104},"indent":[]}}],"position":{"start":{"line":158,"column":4,"offset":8093},"end":{"line":158,"column":61,"offset":8150},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":8090},"end":{"line":158,"column":61,"offset":8150},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cdn/CloudFront","children":[{"type":"text","value":"CloudFront Usage Statistics","position":{"start":{"line":160,"column":2,"offset":8155},"end":{"line":160,"column":29,"offset":8182},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":8154},"end":{"line":160,"column":75,"offset":8228},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":160,"column":75,"offset":8228},"end":{"line":160,"column":78,"offset":8231},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/CloudFront","children":[{"type":"text","value":"Download List of All Websites using CloudFront","position":{"start":{"line":160,"column":79,"offset":8232},"end":{"line":160,"column":125,"offset":8278},"indent":[]}}],"position":{"start":{"line":160,"column":78,"offset":8231},"end":{"line":160,"column":179,"offset":8332},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":8154},"end":{"line":160,"column":179,"offset":8332},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Amazon CloudFront is a web service for content delivery. It integrates with other Amazon Web Services to give developers and businesses an easy way to distribute content to end users with low latency, high data transfer speeds, and no commitments.","position":{"start":{"line":162,"column":1,"offset":8336},"end":{"line":162,"column":248,"offset":8583},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":8336},"end":{"line":162,"column":248,"offset":8583},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Content Management System","position":{"start":{"line":164,"column":8,"offset":8594},"end":{"line":164,"column":33,"offset":8619},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":8587},"end":{"line":164,"column":33,"offset":8619},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cms","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":166,"column":2,"offset":8624},"end":{"line":166,"column":20,"offset":8642},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":8623},"end":{"line":166,"column":55,"offset":8677},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":8623},"end":{"line":166,"column":55,"offset":8677},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cms/Netlify","children":[{"type":"text","value":"Netlify","position":{"start":{"line":168,"column":5,"offset":8685},"end":{"line":168,"column":12,"offset":8692},"indent":[]}}],"position":{"start":{"line":168,"column":4,"offset":8684},"end":{"line":168,"column":55,"offset":8735},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":8681},"end":{"line":168,"column":55,"offset":8735},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cms/Netlify","children":[{"type":"text","value":"Netlify Usage Statistics","position":{"start":{"line":170,"column":2,"offset":8740},"end":{"line":170,"column":26,"offset":8764},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":8739},"end":{"line":170,"column":69,"offset":8807},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":170,"column":69,"offset":8807},"end":{"line":170,"column":72,"offset":8810},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Netlify","children":[{"type":"text","value":"Download List of All Websites using Netlify","position":{"start":{"line":170,"column":73,"offset":8811},"end":{"line":170,"column":116,"offset":8854},"indent":[]}}],"position":{"start":{"line":170,"column":72,"offset":8810},"end":{"line":170,"column":167,"offset":8905},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":8739},"end":{"line":170,"column":167,"offset":8905},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Netlify is a platform that automates your code to create web sites.","position":{"start":{"line":172,"column":1,"offset":8909},"end":{"line":172,"column":68,"offset":8976},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":8909},"end":{"line":172,"column":68,"offset":8976},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"JavaScript Libraries and Functions","position":{"start":{"line":174,"column":8,"offset":8987},"end":{"line":174,"column":42,"offset":9021},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":8980},"end":{"line":174,"column":42,"offset":9021},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/javascript","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":176,"column":2,"offset":9026},"end":{"line":176,"column":20,"offset":9044},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":9025},"end":{"line":176,"column":62,"offset":9086},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":9025},"end":{"line":176,"column":62,"offset":9086},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/javascript/Google-Hosted-Libraries","children":[{"type":"text","value":"Google Hosted Libraries","position":{"start":{"line":178,"column":5,"offset":9094},"end":{"line":178,"column":28,"offset":9117},"indent":[]}}],"position":{"start":{"line":178,"column":4,"offset":9093},"end":{"line":178,"column":94,"offset":9183},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":9090},"end":{"line":178,"column":94,"offset":9183},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/javascript/Google-Hosted-Libraries","children":[{"type":"text","value":"Google Hosted Libraries Usage Statistics","position":{"start":{"line":180,"column":2,"offset":9188},"end":{"line":180,"column":42,"offset":9228},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":9187},"end":{"line":180,"column":108,"offset":9294},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":180,"column":108,"offset":9294},"end":{"line":180,"column":111,"offset":9297},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Google-Hosted-Libraries","children":[{"type":"text","value":"Download List of All Websites using Google Hosted Libraries","position":{"start":{"line":180,"column":112,"offset":9298},"end":{"line":180,"column":171,"offset":9357},"indent":[]}}],"position":{"start":{"line":180,"column":111,"offset":9297},"end":{"line":180,"column":238,"offset":9424},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":9187},"end":{"line":180,"column":238,"offset":9424},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Google Hosted Libraries is a globally available content distribution network for the most popular, open-source JavaScript libraries.","position":{"start":{"line":182,"column":1,"offset":9428},"end":{"line":182,"column":133,"offset":9560},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":9428},"end":{"line":182,"column":133,"offset":9560},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/javascript/Google-Hosted-jQuery","children":[{"type":"text","value":"Google Hosted jQuery","position":{"start":{"line":184,"column":8,"offset":9571},"end":{"line":184,"column":28,"offset":9591},"indent":[]}}],"position":{"start":{"line":184,"column":7,"offset":9570},"end":{"line":184,"column":91,"offset":9654},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":9564},"end":{"line":184,"column":91,"offset":9654},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/javascript/Google-Hosted-jQuery","children":[{"type":"text","value":"Google Hosted jQuery Usage Statistics","position":{"start":{"line":186,"column":2,"offset":9659},"end":{"line":186,"column":39,"offset":9696},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":9658},"end":{"line":186,"column":102,"offset":9759},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":186,"column":102,"offset":9759},"end":{"line":186,"column":105,"offset":9762},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Google-Hosted-jQuery","children":[{"type":"text","value":"Download List of All Websites using Google Hosted jQuery","position":{"start":{"line":186,"column":106,"offset":9763},"end":{"line":186,"column":162,"offset":9819},"indent":[]}}],"position":{"start":{"line":186,"column":105,"offset":9762},"end":{"line":186,"column":226,"offset":9883},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":9658},"end":{"line":186,"column":226,"offset":9883},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"jQuery hoted at Google.","position":{"start":{"line":188,"column":1,"offset":9887},"end":{"line":188,"column":24,"offset":9910},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":9887},"end":{"line":188,"column":24,"offset":9910},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Advertising","position":{"start":{"line":190,"column":8,"offset":9921},"end":{"line":190,"column":19,"offset":9932},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":9914},"end":{"line":190,"column":19,"offset":9932},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/ads","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":192,"column":2,"offset":9937},"end":{"line":192,"column":20,"offset":9955},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":9936},"end":{"line":192,"column":55,"offset":9990},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":9936},"end":{"line":192,"column":55,"offset":9990},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/ads/Google-Adsense","children":[{"type":"text","value":"Google Adsense","position":{"start":{"line":194,"column":5,"offset":9998},"end":{"line":194,"column":19,"offset":10012},"indent":[]}}],"position":{"start":{"line":194,"column":4,"offset":9997},"end":{"line":194,"column":69,"offset":10062},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":9994},"end":{"line":194,"column":69,"offset":10062},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/ads/Google-Adsense","children":[{"type":"text","value":"Google Adsense Usage Statistics","position":{"start":{"line":196,"column":2,"offset":10067},"end":{"line":196,"column":33,"offset":10098},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":10066},"end":{"line":196,"column":83,"offset":10148},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":196,"column":83,"offset":10148},"end":{"line":196,"column":86,"offset":10151},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Google-Adsense","children":[{"type":"text","value":"Download List of All Websites using Google Adsense","position":{"start":{"line":196,"column":87,"offset":10152},"end":{"line":196,"column":137,"offset":10202},"indent":[]}}],"position":{"start":{"line":196,"column":86,"offset":10151},"end":{"line":196,"column":195,"offset":10260},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":10066},"end":{"line":196,"column":195,"offset":10260},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A contextual advertising solution for delivering Google AdWords ads that are relevant to site content pages.","position":{"start":{"line":198,"column":1,"offset":10264},"end":{"line":198,"column":109,"offset":10372},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":10264},"end":{"line":198,"column":109,"offset":10372},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/ads/contextual-advertising","children":[{"type":"text","value":"Contextual Advertising","position":{"start":{"line":200,"column":2,"offset":10377},"end":{"line":200,"column":24,"offset":10399},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":10376},"end":{"line":200,"column":82,"offset":10457},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":10376},"end":{"line":200,"column":82,"offset":10457},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/ads/Google-Adsense-Asynchronous","children":[{"type":"text","value":"Google Adsense Asynchronous","position":{"start":{"line":202,"column":8,"offset":10468},"end":{"line":202,"column":35,"offset":10495},"indent":[]}}],"position":{"start":{"line":202,"column":7,"offset":10467},"end":{"line":202,"column":98,"offset":10558},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":10461},"end":{"line":202,"column":98,"offset":10558},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/ads/Google-Adsense-Asynchronous","children":[{"type":"text","value":"Google Adsense Asynchronous Usage Statistics","position":{"start":{"line":204,"column":2,"offset":10563},"end":{"line":204,"column":46,"offset":10607},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":10562},"end":{"line":204,"column":109,"offset":10670},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":204,"column":109,"offset":10670},"end":{"line":204,"column":112,"offset":10673},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Google-Adsense-Asynchronous","children":[{"type":"text","value":"Download List of All Websites using Google Adsense Asynchronous","position":{"start":{"line":204,"column":113,"offset":10674},"end":{"line":204,"column":176,"offset":10737},"indent":[]}}],"position":{"start":{"line":204,"column":112,"offset":10673},"end":{"line":204,"column":247,"offset":10808},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":10562},"end":{"line":204,"column":247,"offset":10808},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Fully asynchronous version of the AdSense ad code.","position":{"start":{"line":206,"column":1,"offset":10812},"end":{"line":206,"column":51,"offset":10862},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":10812},"end":{"line":206,"column":51,"offset":10862},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Document Encoding","position":{"start":{"line":208,"column":8,"offset":10873},"end":{"line":208,"column":25,"offset":10890},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":10866},"end":{"line":208,"column":25,"offset":10890},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/encoding","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":210,"column":2,"offset":10895},"end":{"line":210,"column":20,"offset":10913},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":10894},"end":{"line":210,"column":60,"offset":10953},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":10894},"end":{"line":210,"column":60,"offset":10953},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/encoding/UTF-8","children":[{"type":"text","value":"UTF-8","position":{"start":{"line":212,"column":5,"offset":10961},"end":{"line":212,"column":10,"offset":10966},"indent":[]}}],"position":{"start":{"line":212,"column":4,"offset":10960},"end":{"line":212,"column":56,"offset":11012},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":10957},"end":{"line":212,"column":56,"offset":11012},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/encoding/UTF-8","children":[{"type":"text","value":"UTF-8 Usage Statistics","position":{"start":{"line":214,"column":2,"offset":11017},"end":{"line":214,"column":24,"offset":11039},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":11016},"end":{"line":214,"column":70,"offset":11085},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":214,"column":70,"offset":11085},"end":{"line":214,"column":73,"offset":11088},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/UTF-8","children":[{"type":"text","value":"Download List of All Websites using UTF-8","position":{"start":{"line":214,"column":74,"offset":11089},"end":{"line":214,"column":115,"offset":11130},"indent":[]}}],"position":{"start":{"line":214,"column":73,"offset":11088},"end":{"line":214,"column":164,"offset":11179},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":11016},"end":{"line":214,"column":164,"offset":11179},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"UTF-8 (8-bit UCS/Unicode Transformation Format) is a variable-length character encoding for Unicode. It is the preferred encoding for web pages.","position":{"start":{"line":216,"column":1,"offset":11183},"end":{"line":216,"column":145,"offset":11327},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":11183},"end":{"line":216,"column":145,"offset":11327},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Document Standards","position":{"start":{"line":218,"column":8,"offset":11338},"end":{"line":218,"column":26,"offset":11356},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":11331},"end":{"line":218,"column":26,"offset":11356},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":220,"column":2,"offset":11361},"end":{"line":220,"column":20,"offset":11379},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":11360},"end":{"line":220,"column":59,"offset":11418},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":11360},"end":{"line":220,"column":59,"offset":11418},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/HTML5-DocType","children":[{"type":"text","value":"HTML5 DocType","position":{"start":{"line":222,"column":5,"offset":11426},"end":{"line":222,"column":18,"offset":11439},"indent":[]}}],"position":{"start":{"line":222,"column":4,"offset":11425},"end":{"line":222,"column":71,"offset":11492},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":11422},"end":{"line":222,"column":71,"offset":11492},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/HTML5-DocType","children":[{"type":"text","value":"HTML5 DocType Usage Statistics","position":{"start":{"line":224,"column":2,"offset":11497},"end":{"line":224,"column":32,"offset":11527},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":11496},"end":{"line":224,"column":85,"offset":11580},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":224,"column":85,"offset":11580},"end":{"line":224,"column":88,"offset":11583},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/HTML5-DocType","children":[{"type":"text","value":"Download List of All Websites using HTML5 DocType","position":{"start":{"line":224,"column":89,"offset":11584},"end":{"line":224,"column":138,"offset":11633},"indent":[]}}],"position":{"start":{"line":224,"column":88,"offset":11583},"end":{"line":224,"column":195,"offset":11690},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":11496},"end":{"line":224,"column":195,"offset":11690},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The DOCTYPE is a required preamble for HTML5 websites.","position":{"start":{"line":226,"column":1,"offset":11694},"end":{"line":226,"column":55,"offset":11748},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":11694},"end":{"line":226,"column":55,"offset":11748},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Cascading-Style-Sheets","children":[{"type":"text","value":"Cascading Style Sheets","position":{"start":{"line":228,"column":5,"offset":11756},"end":{"line":228,"column":27,"offset":11778},"indent":[]}}],"position":{"start":{"line":228,"column":4,"offset":11755},"end":{"line":228,"column":89,"offset":11840},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":11752},"end":{"line":228,"column":89,"offset":11840},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Cascading-Style-Sheets","children":[{"type":"text","value":"Cascading Style Sheets Usage Statistics","position":{"start":{"line":230,"column":2,"offset":11845},"end":{"line":230,"column":41,"offset":11884},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":11844},"end":{"line":230,"column":103,"offset":11946},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":230,"column":103,"offset":11946},"end":{"line":230,"column":106,"offset":11949},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Cascading-Style-Sheets","children":[{"type":"text","value":"Download List of All Websites using Cascading Style Sheets","position":{"start":{"line":230,"column":107,"offset":11950},"end":{"line":230,"column":165,"offset":12008},"indent":[]}}],"position":{"start":{"line":230,"column":106,"offset":11949},"end":{"line":230,"column":231,"offset":12074},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":11844},"end":{"line":230,"column":231,"offset":12074},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in a markup language. Its most common application is to style web pages written in HTML","position":{"start":{"line":232,"column":1,"offset":12078},"end":{"line":232,"column":198,"offset":12275},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":12078},"end":{"line":232,"column":198,"offset":12275},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Open-Graph-Protocol","children":[{"type":"text","value":"Open Graph Protocol","position":{"start":{"line":234,"column":5,"offset":12283},"end":{"line":234,"column":24,"offset":12302},"indent":[]}}],"position":{"start":{"line":234,"column":4,"offset":12282},"end":{"line":234,"column":83,"offset":12361},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":12279},"end":{"line":234,"column":83,"offset":12361},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Open-Graph-Protocol","children":[{"type":"text","value":"Open Graph Protocol Usage Statistics","position":{"start":{"line":236,"column":2,"offset":12366},"end":{"line":236,"column":38,"offset":12402},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":12365},"end":{"line":236,"column":97,"offset":12461},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":236,"column":97,"offset":12461},"end":{"line":236,"column":100,"offset":12464},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Open-Graph-Protocol","children":[{"type":"text","value":"Download List of All Websites using Open Graph Protocol","position":{"start":{"line":236,"column":101,"offset":12465},"end":{"line":236,"column":156,"offset":12520},"indent":[]}}],"position":{"start":{"line":236,"column":100,"offset":12464},"end":{"line":236,"column":219,"offset":12583},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":12365},"end":{"line":236,"column":219,"offset":12583},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Open Graph protocol enables any web page to become a rich object in a social graph, a open protocol supported by Facebook","position":{"start":{"line":238,"column":1,"offset":12587},"end":{"line":238,"column":126,"offset":12712},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":12587},"end":{"line":238,"column":126,"offset":12712},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Twitter-Cards","children":[{"type":"text","value":"Twitter Cards","position":{"start":{"line":240,"column":5,"offset":12720},"end":{"line":240,"column":18,"offset":12733},"indent":[]}}],"position":{"start":{"line":240,"column":4,"offset":12719},"end":{"line":240,"column":71,"offset":12786},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":12716},"end":{"line":240,"column":71,"offset":12786},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Twitter-Cards","children":[{"type":"text","value":"Twitter Cards Usage Statistics","position":{"start":{"line":242,"column":2,"offset":12791},"end":{"line":242,"column":32,"offset":12821},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":12790},"end":{"line":242,"column":85,"offset":12874},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":242,"column":85,"offset":12874},"end":{"line":242,"column":88,"offset":12877},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Twitter-Cards","children":[{"type":"text","value":"Download List of All Websites using Twitter Cards","position":{"start":{"line":242,"column":89,"offset":12878},"end":{"line":242,"column":138,"offset":12927},"indent":[]}}],"position":{"start":{"line":242,"column":88,"offset":12877},"end":{"line":242,"column":195,"offset":12984},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":12790},"end":{"line":242,"column":195,"offset":12984},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Twitter cards make it possible for you to attach media experiences to Tweets that link to your content.","position":{"start":{"line":244,"column":1,"offset":12988},"end":{"line":244,"column":104,"offset":13091},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":12988},"end":{"line":244,"column":104,"offset":13091},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Javascript","children":[{"type":"text","value":"Javascript","position":{"start":{"line":246,"column":5,"offset":13099},"end":{"line":246,"column":15,"offset":13109},"indent":[]}}],"position":{"start":{"line":246,"column":4,"offset":13098},"end":{"line":246,"column":65,"offset":13159},"indent":[]}}],"position":{"start":{"line":246,"column":1,"offset":13095},"end":{"line":246,"column":65,"offset":13159},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Javascript","children":[{"type":"text","value":"Javascript Usage Statistics","position":{"start":{"line":248,"column":2,"offset":13164},"end":{"line":248,"column":29,"offset":13191},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":13163},"end":{"line":248,"column":79,"offset":13241},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":248,"column":79,"offset":13241},"end":{"line":248,"column":82,"offset":13244},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Javascript","children":[{"type":"text","value":"Download List of All Websites using Javascript","position":{"start":{"line":248,"column":83,"offset":13245},"end":{"line":248,"column":129,"offset":13291},"indent":[]}}],"position":{"start":{"line":248,"column":82,"offset":13244},"end":{"line":248,"column":183,"offset":13345},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":13163},"end":{"line":248,"column":183,"offset":13345},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JavaScript is a scripting language most often used for client-side web development.","position":{"start":{"line":250,"column":1,"offset":13349},"end":{"line":250,"column":84,"offset":13432},"indent":[]}}],"position":{"start":{"line":250,"column":1,"offset":13349},"end":{"line":250,"column":84,"offset":13432},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/IFrame","children":[{"type":"text","value":"IFrame","position":{"start":{"line":252,"column":5,"offset":13440},"end":{"line":252,"column":11,"offset":13446},"indent":[]}}],"position":{"start":{"line":252,"column":4,"offset":13439},"end":{"line":252,"column":57,"offset":13492},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":13436},"end":{"line":252,"column":57,"offset":13492},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/IFrame","children":[{"type":"text","value":"IFrame Usage Statistics","position":{"start":{"line":254,"column":2,"offset":13497},"end":{"line":254,"column":25,"offset":13520},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":13496},"end":{"line":254,"column":71,"offset":13566},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":254,"column":71,"offset":13566},"end":{"line":254,"column":74,"offset":13569},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/IFrame","children":[{"type":"text","value":"Download List of All Websites using IFrame","position":{"start":{"line":254,"column":75,"offset":13570},"end":{"line":254,"column":117,"offset":13612},"indent":[]}}],"position":{"start":{"line":254,"column":74,"offset":13569},"end":{"line":254,"column":167,"offset":13662},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":13496},"end":{"line":254,"column":167,"offset":13662},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The page shows content with an iframe; an embedded frame that loads another webpage.","position":{"start":{"line":256,"column":1,"offset":13666},"end":{"line":256,"column":85,"offset":13750},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":13666},"end":{"line":256,"column":85,"offset":13750},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Font-Face-Rule","children":[{"type":"text","value":"Font Face Rule","position":{"start":{"line":258,"column":5,"offset":13758},"end":{"line":258,"column":19,"offset":13772},"indent":[]}}],"position":{"start":{"line":258,"column":4,"offset":13757},"end":{"line":258,"column":73,"offset":13826},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":13754},"end":{"line":258,"column":73,"offset":13826},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Font-Face-Rule","children":[{"type":"text","value":"Font Face Rule Usage Statistics","position":{"start":{"line":260,"column":2,"offset":13831},"end":{"line":260,"column":33,"offset":13862},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":13830},"end":{"line":260,"column":87,"offset":13916},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":260,"column":87,"offset":13916},"end":{"line":260,"column":90,"offset":13919},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Font-Face-Rule","children":[{"type":"text","value":"Download List of All Websites using Font Face Rule","position":{"start":{"line":260,"column":91,"offset":13920},"end":{"line":260,"column":141,"offset":13970},"indent":[]}}],"position":{"start":{"line":260,"column":90,"offset":13919},"end":{"line":260,"column":199,"offset":14028},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":13830},"end":{"line":260,"column":199,"offset":14028},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The @font-face rule allows for linking to fonts that are automatically activated when needed.","position":{"start":{"line":262,"column":1,"offset":14032},"end":{"line":262,"column":94,"offset":14125},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":14032},"end":{"line":262,"column":94,"offset":14125},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/X-UA-Compatible","children":[{"type":"text","value":"X-UA-Compatible","position":{"start":{"line":264,"column":5,"offset":14133},"end":{"line":264,"column":20,"offset":14148},"indent":[]}}],"position":{"start":{"line":264,"column":4,"offset":14132},"end":{"line":264,"column":75,"offset":14203},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":14129},"end":{"line":264,"column":75,"offset":14203},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/X-UA-Compatible","children":[{"type":"text","value":"X-UA-Compatible Usage Statistics","position":{"start":{"line":266,"column":2,"offset":14208},"end":{"line":266,"column":34,"offset":14240},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":14207},"end":{"line":266,"column":89,"offset":14295},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":266,"column":89,"offset":14295},"end":{"line":266,"column":92,"offset":14298},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/X-UA-Compatible","children":[{"type":"text","value":"Download List of All Websites using X-UA-Compatible","position":{"start":{"line":266,"column":93,"offset":14299},"end":{"line":266,"column":144,"offset":14350},"indent":[]}}],"position":{"start":{"line":266,"column":92,"offset":14298},"end":{"line":266,"column":203,"offset":14409},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":14207},"end":{"line":266,"column":203,"offset":14409},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Allows a website to define how a page is rendered in Internet Explorer 8, allowing a website to decide to use IE7 style rendering over IE8 rendering.","position":{"start":{"line":268,"column":1,"offset":14413},"end":{"line":268,"column":150,"offset":14562},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":14413},"end":{"line":268,"column":150,"offset":14562},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Meta-Keywords","children":[{"type":"text","value":"Meta Keywords","position":{"start":{"line":270,"column":5,"offset":14570},"end":{"line":270,"column":18,"offset":14583},"indent":[]}}],"position":{"start":{"line":270,"column":4,"offset":14569},"end":{"line":270,"column":71,"offset":14636},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":14566},"end":{"line":270,"column":71,"offset":14636},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Meta-Keywords","children":[{"type":"text","value":"Meta Keywords Usage Statistics","position":{"start":{"line":272,"column":2,"offset":14641},"end":{"line":272,"column":32,"offset":14671},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":14640},"end":{"line":272,"column":85,"offset":14724},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":272,"column":85,"offset":14724},"end":{"line":272,"column":88,"offset":14727},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Meta-Keywords","children":[{"type":"text","value":"Download List of All Websites using Meta Keywords","position":{"start":{"line":272,"column":89,"offset":14728},"end":{"line":272,"column":138,"offset":14777},"indent":[]}}],"position":{"start":{"line":272,"column":88,"offset":14727},"end":{"line":272,"column":195,"offset":14834},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":14640},"end":{"line":272,"column":195,"offset":14834},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Meta tag containing keywords related to the page.","position":{"start":{"line":274,"column":1,"offset":14838},"end":{"line":274,"column":50,"offset":14887},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":14838},"end":{"line":274,"column":50,"offset":14887},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Meta-Description","children":[{"type":"text","value":"Meta Description","position":{"start":{"line":276,"column":5,"offset":14895},"end":{"line":276,"column":21,"offset":14911},"indent":[]}}],"position":{"start":{"line":276,"column":4,"offset":14894},"end":{"line":276,"column":77,"offset":14967},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":14891},"end":{"line":276,"column":77,"offset":14967},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Meta-Description","children":[{"type":"text","value":"Meta Description Usage Statistics","position":{"start":{"line":278,"column":2,"offset":14972},"end":{"line":278,"column":35,"offset":15005},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":14971},"end":{"line":278,"column":91,"offset":15061},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":278,"column":91,"offset":15061},"end":{"line":278,"column":94,"offset":15064},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Meta-Description","children":[{"type":"text","value":"Download List of All Websites using Meta Description","position":{"start":{"line":278,"column":95,"offset":15065},"end":{"line":278,"column":147,"offset":15117},"indent":[]}}],"position":{"start":{"line":278,"column":94,"offset":15064},"end":{"line":278,"column":207,"offset":15177},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":14971},"end":{"line":278,"column":207,"offset":15177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The description attribute provides a concise explanation of the page content.","position":{"start":{"line":280,"column":1,"offset":15181},"end":{"line":280,"column":78,"offset":15258},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":15181},"end":{"line":280,"column":78,"offset":15258},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/HTML-5-Specific-Tags","children":[{"type":"text","value":"HTML 5 Specific Tags","position":{"start":{"line":282,"column":5,"offset":15266},"end":{"line":282,"column":25,"offset":15286},"indent":[]}}],"position":{"start":{"line":282,"column":4,"offset":15265},"end":{"line":282,"column":85,"offset":15346},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":15262},"end":{"line":282,"column":85,"offset":15346},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/HTML-5-Specific-Tags","children":[{"type":"text","value":"HTML 5 Specific Tags Usage Statistics","position":{"start":{"line":284,"column":2,"offset":15351},"end":{"line":284,"column":39,"offset":15388},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":15350},"end":{"line":284,"column":99,"offset":15448},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":284,"column":99,"offset":15448},"end":{"line":284,"column":102,"offset":15451},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/HTML-5-Specific-Tags","children":[{"type":"text","value":"Download List of All Websites using HTML 5 Specific Tags","position":{"start":{"line":284,"column":103,"offset":15452},"end":{"line":284,"column":159,"offset":15508},"indent":[]}}],"position":{"start":{"line":284,"column":102,"offset":15451},"end":{"line":284,"column":223,"offset":15572},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":15350},"end":{"line":284,"column":223,"offset":15572},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This page contains tags that are specific to an HTML 5 implementation.","position":{"start":{"line":286,"column":1,"offset":15576},"end":{"line":286,"column":71,"offset":15646},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":15576},"end":{"line":286,"column":71,"offset":15646},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/WAI-ARIA","children":[{"type":"text","value":"WAI-ARIA","position":{"start":{"line":288,"column":5,"offset":15654},"end":{"line":288,"column":13,"offset":15662},"indent":[]}}],"position":{"start":{"line":288,"column":4,"offset":15653},"end":{"line":288,"column":61,"offset":15710},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":15650},"end":{"line":288,"column":61,"offset":15710},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/WAI-ARIA","children":[{"type":"text","value":"WAI-ARIA Usage Statistics","position":{"start":{"line":290,"column":2,"offset":15715},"end":{"line":290,"column":27,"offset":15740},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":15714},"end":{"line":290,"column":75,"offset":15788},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":290,"column":75,"offset":15788},"end":{"line":290,"column":78,"offset":15791},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/WAI-ARIA","children":[{"type":"text","value":"Download List of All Websites using WAI-ARIA","position":{"start":{"line":290,"column":79,"offset":15792},"end":{"line":290,"column":123,"offset":15836},"indent":[]}}],"position":{"start":{"line":290,"column":78,"offset":15791},"end":{"line":290,"column":175,"offset":15888},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":15714},"end":{"line":290,"column":175,"offset":15888},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A way to make Web content and Web applications more accessible to people with disabilities. It especially helps with dynamic content and advanced user interface controls developed with Ajax, HTML, JavaScript, and related technologies.","position":{"start":{"line":292,"column":1,"offset":15892},"end":{"line":292,"column":235,"offset":16126},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":15892},"end":{"line":292,"column":235,"offset":16126},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Strict-Transport-Security","children":[{"type":"text","value":"Strict Transport Security","position":{"start":{"line":294,"column":5,"offset":16134},"end":{"line":294,"column":30,"offset":16159},"indent":[]}}],"position":{"start":{"line":294,"column":4,"offset":16133},"end":{"line":294,"column":95,"offset":16224},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":16130},"end":{"line":294,"column":95,"offset":16224},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/Strict-Transport-Security","children":[{"type":"text","value":"Strict Transport Security Usage Statistics","position":{"start":{"line":296,"column":2,"offset":16229},"end":{"line":296,"column":44,"offset":16271},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":16228},"end":{"line":296,"column":109,"offset":16336},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":296,"column":109,"offset":16336},"end":{"line":296,"column":112,"offset":16339},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Strict-Transport-Security","children":[{"type":"text","value":"Download List of All Websites using Strict Transport Security","position":{"start":{"line":296,"column":113,"offset":16340},"end":{"line":296,"column":174,"offset":16401},"indent":[]}}],"position":{"start":{"line":296,"column":112,"offset":16339},"end":{"line":296,"column":243,"offset":16470},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":16228},"end":{"line":296,"column":243,"offset":16470},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The HTTP Strict-Transport-Security (HSTS) header instructs the browser to only use https.","position":{"start":{"line":298,"column":1,"offset":16474},"end":{"line":298,"column":90,"offset":16563},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":16474},"end":{"line":298,"column":90,"offset":16563},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/HSTS","children":[{"type":"text","value":"HSTS","position":{"start":{"line":300,"column":5,"offset":16571},"end":{"line":300,"column":9,"offset":16575},"indent":[]}}],"position":{"start":{"line":300,"column":4,"offset":16570},"end":{"line":300,"column":53,"offset":16619},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":16567},"end":{"line":300,"column":53,"offset":16619},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/HSTS","children":[{"type":"text","value":"HSTS Usage Statistics","position":{"start":{"line":302,"column":2,"offset":16624},"end":{"line":302,"column":23,"offset":16645},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":16623},"end":{"line":302,"column":67,"offset":16689},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":302,"column":67,"offset":16689},"end":{"line":302,"column":70,"offset":16692},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/HSTS","children":[{"type":"text","value":"Download List of All Websites using HSTS","position":{"start":{"line":302,"column":71,"offset":16693},"end":{"line":302,"column":111,"offset":16733},"indent":[]}}],"position":{"start":{"line":302,"column":70,"offset":16692},"end":{"line":302,"column":159,"offset":16781},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":16623},"end":{"line":302,"column":159,"offset":16781},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Forces browsers to only communicate with the site using HTTPS.","position":{"start":{"line":304,"column":1,"offset":16785},"end":{"line":304,"column":63,"offset":16847},"indent":[]}}],"position":{"start":{"line":304,"column":1,"offset":16785},"end":{"line":304,"column":63,"offset":16847},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/HSTS-IncludeSubdomains-PreLoad","children":[{"type":"text","value":"HSTS IncludeSubdomains PreLoad","position":{"start":{"line":306,"column":5,"offset":16855},"end":{"line":306,"column":35,"offset":16885},"indent":[]}}],"position":{"start":{"line":306,"column":4,"offset":16854},"end":{"line":306,"column":105,"offset":16955},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":16851},"end":{"line":306,"column":105,"offset":16955},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/docinfo/HSTS-IncludeSubdomains-PreLoad","children":[{"type":"text","value":"HSTS IncludeSubdomains PreLoad Usage Statistics","position":{"start":{"line":308,"column":2,"offset":16960},"end":{"line":308,"column":49,"offset":17007},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":16959},"end":{"line":308,"column":119,"offset":17077},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":308,"column":119,"offset":17077},"end":{"line":308,"column":122,"offset":17080},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/HSTS-IncludeSubdomains-PreLoad","children":[{"type":"text","value":"Download List of All Websites using HSTS IncludeSubdomains PreLoad","position":{"start":{"line":308,"column":123,"offset":17081},"end":{"line":308,"column":189,"offset":17147},"indent":[]}}],"position":{"start":{"line":308,"column":122,"offset":17080},"end":{"line":308,"column":263,"offset":17221},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":16959},"end":{"line":308,"column":263,"offset":17221},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This website includes instructions for HSTS loading that would allow it to be submitted to the HSTS preload list.","position":{"start":{"line":310,"column":1,"offset":17225},"end":{"line":310,"column":114,"offset":17338},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":17225},"end":{"line":310,"column":114,"offset":17338},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Web Master Registration","position":{"start":{"line":312,"column":8,"offset":17349},"end":{"line":312,"column":31,"offset":17372},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":17342},"end":{"line":312,"column":31,"offset":17372},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/web-master","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":314,"column":2,"offset":17377},"end":{"line":314,"column":20,"offset":17395},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":17376},"end":{"line":314,"column":62,"offset":17437},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":17376},"end":{"line":314,"column":62,"offset":17437},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/Web-Master/Google-Webmaster","children":[{"type":"text","value":"Google Webmaster","position":{"start":{"line":316,"column":5,"offset":17445},"end":{"line":316,"column":21,"offset":17461},"indent":[]}}],"position":{"start":{"line":316,"column":4,"offset":17444},"end":{"line":316,"column":80,"offset":17520},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":17441},"end":{"line":316,"column":80,"offset":17520},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/Web-Master/Google-Webmaster","children":[{"type":"text","value":"Google Webmaster Usage Statistics","position":{"start":{"line":318,"column":2,"offset":17525},"end":{"line":318,"column":35,"offset":17558},"indent":[]}}],"position":{"start":{"line":318,"column":1,"offset":17524},"end":{"line":318,"column":94,"offset":17617},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":318,"column":94,"offset":17617},"end":{"line":318,"column":97,"offset":17620},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Google-Webmaster","children":[{"type":"text","value":"Download List of All Websites using Google Webmaster","position":{"start":{"line":318,"column":98,"offset":17621},"end":{"line":318,"column":150,"offset":17673},"indent":[]}}],"position":{"start":{"line":318,"column":97,"offset":17620},"end":{"line":318,"column":210,"offset":17733},"indent":[]}}],"position":{"start":{"line":318,"column":1,"offset":17524},"end":{"line":318,"column":210,"offset":17733},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Webmaster tools provide you with a free and easy way to make your site more Google-friendly.","position":{"start":{"line":320,"column":1,"offset":17737},"end":{"line":320,"column":93,"offset":17829},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":17737},"end":{"line":320,"column":93,"offset":17829},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Content Delivery Network","position":{"start":{"line":322,"column":8,"offset":17840},"end":{"line":322,"column":32,"offset":17864},"indent":[]}}],"position":{"start":{"line":322,"column":1,"offset":17833},"end":{"line":322,"column":32,"offset":17864},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/cdn","children":[{"type":"text","value":"View Global Trends","position":{"start":{"line":324,"column":2,"offset":17869},"end":{"line":324,"column":20,"offset":17887},"indent":[]}}],"position":{"start":{"line":324,"column":1,"offset":17868},"end":{"line":324,"column":55,"offset":17922},"indent":[]}}],"position":{"start":{"line":324,"column":1,"offset":17868},"end":{"line":324,"column":55,"offset":17922},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/CDN/Content-Delivery-Network","children":[{"type":"text","value":"Content Delivery Network","position":{"start":{"line":326,"column":5,"offset":17930},"end":{"line":326,"column":29,"offset":17954},"indent":[]}}],"position":{"start":{"line":326,"column":4,"offset":17929},"end":{"line":326,"column":89,"offset":18014},"indent":[]}}],"position":{"start":{"line":326,"column":1,"offset":17926},"end":{"line":326,"column":89,"offset":18014},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://trends.builtwith.com/CDN/Content-Delivery-Network","children":[{"type":"text","value":"Content Delivery Network Usage Statistics","position":{"start":{"line":328,"column":2,"offset":18019},"end":{"line":328,"column":43,"offset":18060},"indent":[]}}],"position":{"start":{"line":328,"column":1,"offset":18018},"end":{"line":328,"column":103,"offset":18120},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":328,"column":103,"offset":18120},"end":{"line":328,"column":106,"offset":18123},"indent":[]}},{"type":"link","title":null,"url":"https://trends.builtwith.com/websitelist/Content-Delivery-Network","children":[{"type":"text","value":"Download List of All Websites using Content Delivery Network","position":{"start":{"line":328,"column":107,"offset":18124},"end":{"line":328,"column":167,"offset":18184},"indent":[]}}],"position":{"start":{"line":328,"column":106,"offset":18123},"end":{"line":328,"column":235,"offset":18252},"indent":[]}}],"position":{"start":{"line":328,"column":1,"offset":18018},"end":{"line":328,"column":235,"offset":18252},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This page contains links that give the impression that some of the site contents are stored on a content delivery network.","position":{"start":{"line":330,"column":1,"offset":18256},"end":{"line":330,"column":123,"offset":18378},"indent":[]}}],"position":{"start":{"line":330,"column":1,"offset":18256},"end":{"line":330,"column":123,"offset":18378},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Docs Structure","position":{"start":{"line":332,"column":4,"offset":18385},"end":{"line":332,"column":18,"offset":18399},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":18382},"end":{"line":332,"column":18,"offset":18399},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.\n\n├── ./About\n\n│   ├── ./About/index.md\n\n│   ├── ./About/introduction2bg.md\n\n│   ├── ./About/me.md\n\n│   └── ./About/resume.md\n\n├── ./articles\n\n│   ├── ./articles/algo.md\n\n│   └── ./articles/basic-web-dev.md\n\n├── ./faq\n\n│   ├── ./faq/Contact.md\n\n│   ├── ./faq/index.md\n\n│   └── ./faq/other-sites.md\n\n├── ./index.md\n\n├── ./jupyter-notebooks.md\n\n├── ./links\n\n│   ├── ./links/Social.md\n\n│   ├── ./links/index.md\n\n│   └── ./links/my-websites.md\n\n├── ./portfolio-web.md\n\n├── ./python.md\n\n├── ./quick-reference\n\n│   ├── ./quick-reference/Emmet.md\n\n│   ├── ./quick-reference/index.md\n\n│   ├── ./quick-reference/installation.md\n\n│   └── ./quick-reference/new-repo-instructions.md\n\n├── ./react\n\n│   ├── ./react/createReactApp.md\n\n│   ├── ./react/index.md\n\n│   └── ./react/react2.md\n\n├── ./resources.md\n\n└── ./tools\n\n    ├── ./tools/Git-Html-Preview.md\n\n    ├── ./tools/default-readme.md\n\n    ├── ./tools/index.md\n\n    ├── ./tools/notes-template.md\n\n    └── ./tools/plug-ins.md\n\n7 directories, 29 files</code></pre></div>","position":{"start":{"line":334,"column":1,"offset":18403},"end":{"line":412,"column":4,"offset":19483},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":414,"column":1,"offset":19487},"end":{"line":414,"column":4,"offset":19490},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Sitemap","position":{"start":{"line":416,"column":3,"offset":19496},"end":{"line":416,"column":10,"offset":19503},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":19494},"end":{"line":416,"column":10,"offset":19503},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/job-hunt/","children":[{"type":"text","value":"/job-hunt/","position":{"start":{"line":418,"column":6,"offset":19512},"end":{"line":418,"column":16,"offset":19522},"indent":[]}}],"position":{"start":{"line":418,"column":5,"offset":19511},"end":{"line":418,"column":60,"offset":19566},"indent":[]}}],"position":{"start":{"line":418,"column":5,"offset":19511},"end":{"line":418,"column":60,"offset":19566},"indent":[]}}],"position":{"start":{"line":418,"column":1,"offset":19507},"end":{"line":419,"column":1,"offset":19568},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/notes-template/","children":[{"type":"text","value":"/notes-template/","position":{"start":{"line":420,"column":6,"offset":19575},"end":{"line":420,"column":22,"offset":19591},"indent":[]}}],"position":{"start":{"line":420,"column":5,"offset":19574},"end":{"line":420,"column":72,"offset":19641},"indent":[]}}],"position":{"start":{"line":420,"column":5,"offset":19574},"end":{"line":420,"column":72,"offset":19641},"indent":[]}}],"position":{"start":{"line":420,"column":1,"offset":19570},"end":{"line":421,"column":1,"offset":19643},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/","children":[{"type":"text","value":"/","position":{"start":{"line":422,"column":6,"offset":19650},"end":{"line":422,"column":7,"offset":19651},"indent":[]}}],"position":{"start":{"line":422,"column":5,"offset":19649},"end":{"line":422,"column":42,"offset":19686},"indent":[]}}],"position":{"start":{"line":422,"column":5,"offset":19649},"end":{"line":422,"column":42,"offset":19686},"indent":[]}}],"position":{"start":{"line":422,"column":1,"offset":19645},"end":{"line":423,"column":1,"offset":19688},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/showcase/","children":[{"type":"text","value":"/showcase/","position":{"start":{"line":424,"column":6,"offset":19695},"end":{"line":424,"column":16,"offset":19705},"indent":[]}}],"position":{"start":{"line":424,"column":5,"offset":19694},"end":{"line":424,"column":60,"offset":19749},"indent":[]}}],"position":{"start":{"line":424,"column":5,"offset":19694},"end":{"line":424,"column":60,"offset":19749},"indent":[]}}],"position":{"start":{"line":424,"column":1,"offset":19690},"end":{"line":425,"column":1,"offset":19751},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/","children":[{"type":"text","value":"/blog/","position":{"start":{"line":426,"column":6,"offset":19758},"end":{"line":426,"column":12,"offset":19764},"indent":[]}}],"position":{"start":{"line":426,"column":5,"offset":19757},"end":{"line":426,"column":52,"offset":19804},"indent":[]}}],"position":{"start":{"line":426,"column":5,"offset":19757},"end":{"line":426,"column":52,"offset":19804},"indent":[]}}],"position":{"start":{"line":426,"column":1,"offset":19753},"end":{"line":427,"column":1,"offset":19806},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/review/","children":[{"type":"text","value":"/review/","position":{"start":{"line":428,"column":6,"offset":19813},"end":{"line":428,"column":14,"offset":19821},"indent":[]}}],"position":{"start":{"line":428,"column":5,"offset":19812},"end":{"line":428,"column":56,"offset":19863},"indent":[]}}],"position":{"start":{"line":428,"column":5,"offset":19812},"end":{"line":428,"column":56,"offset":19863},"indent":[]}}],"position":{"start":{"line":428,"column":1,"offset":19808},"end":{"line":429,"column":1,"offset":19865},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/blog-archive/","children":[{"type":"text","value":"/blog/blog-archive/","position":{"start":{"line":430,"column":6,"offset":19872},"end":{"line":430,"column":25,"offset":19891},"indent":[]}}],"position":{"start":{"line":430,"column":5,"offset":19871},"end":{"line":430,"column":78,"offset":19944},"indent":[]}}],"position":{"start":{"line":430,"column":5,"offset":19871},"end":{"line":430,"column":78,"offset":19944},"indent":[]}}],"position":{"start":{"line":430,"column":1,"offset":19867},"end":{"line":431,"column":1,"offset":19946},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/my-medium/","children":[{"type":"text","value":"/blog/my-medium/","position":{"start":{"line":432,"column":6,"offset":19953},"end":{"line":432,"column":22,"offset":19969},"indent":[]}}],"position":{"start":{"line":432,"column":5,"offset":19952},"end":{"line":432,"column":72,"offset":20019},"indent":[]}}],"position":{"start":{"line":432,"column":5,"offset":19952},"end":{"line":432,"column":72,"offset":20019},"indent":[]}}],"position":{"start":{"line":432,"column":1,"offset":19948},"end":{"line":433,"column":1,"offset":20021},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/blogwcomments/","children":[{"type":"text","value":"/blog/blogwcomments/","position":{"start":{"line":434,"column":6,"offset":20028},"end":{"line":434,"column":26,"offset":20048},"indent":[]}}],"position":{"start":{"line":434,"column":5,"offset":20027},"end":{"line":434,"column":80,"offset":20102},"indent":[]}}],"position":{"start":{"line":434,"column":5,"offset":20027},"end":{"line":434,"column":80,"offset":20102},"indent":[]}}],"position":{"start":{"line":434,"column":1,"offset":20023},"end":{"line":435,"column":1,"offset":20104},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/data-structures/","children":[{"type":"text","value":"/blog/data-structures/","position":{"start":{"line":436,"column":6,"offset":20111},"end":{"line":436,"column":28,"offset":20133},"indent":[]}}],"position":{"start":{"line":436,"column":5,"offset":20110},"end":{"line":436,"column":84,"offset":20189},"indent":[]}}],"position":{"start":{"line":436,"column":5,"offset":20110},"end":{"line":436,"column":84,"offset":20189},"indent":[]}}],"position":{"start":{"line":436,"column":1,"offset":20106},"end":{"line":437,"column":1,"offset":20191},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/gallery/","children":[{"type":"text","value":"/docs/gallery/","position":{"start":{"line":438,"column":6,"offset":20198},"end":{"line":438,"column":20,"offset":20212},"indent":[]}}],"position":{"start":{"line":438,"column":5,"offset":20197},"end":{"line":438,"column":68,"offset":20260},"indent":[]}}],"position":{"start":{"line":438,"column":5,"offset":20197},"end":{"line":438,"column":68,"offset":20260},"indent":[]}}],"position":{"start":{"line":438,"column":1,"offset":20193},"end":{"line":439,"column":1,"offset":20262},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/python-for-js-dev/","children":[{"type":"text","value":"/blog/python-for-js-dev/","position":{"start":{"line":440,"column":6,"offset":20269},"end":{"line":440,"column":30,"offset":20293},"indent":[]}}],"position":{"start":{"line":440,"column":5,"offset":20268},"end":{"line":440,"column":88,"offset":20351},"indent":[]}}],"position":{"start":{"line":440,"column":5,"offset":20268},"end":{"line":440,"column":88,"offset":20351},"indent":[]}}],"position":{"start":{"line":440,"column":1,"offset":20264},"end":{"line":441,"column":1,"offset":20353},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/platform-docs/","children":[{"type":"text","value":"/blog/platform-docs/","position":{"start":{"line":442,"column":6,"offset":20360},"end":{"line":442,"column":26,"offset":20380},"indent":[]}}],"position":{"start":{"line":442,"column":5,"offset":20359},"end":{"line":442,"column":80,"offset":20434},"indent":[]}}],"position":{"start":{"line":442,"column":5,"offset":20359},"end":{"line":442,"column":80,"offset":20434},"indent":[]}}],"position":{"start":{"line":442,"column":1,"offset":20355},"end":{"line":443,"column":1,"offset":20436},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/sitemap/","children":[{"type":"text","value":"/docs/sitemap/","position":{"start":{"line":444,"column":6,"offset":20443},"end":{"line":444,"column":20,"offset":20457},"indent":[]}}],"position":{"start":{"line":444,"column":5,"offset":20442},"end":{"line":444,"column":68,"offset":20505},"indent":[]}}],"position":{"start":{"line":444,"column":5,"offset":20442},"end":{"line":444,"column":68,"offset":20505},"indent":[]}}],"position":{"start":{"line":444,"column":1,"offset":20438},"end":{"line":445,"column":1,"offset":20507},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/about/me/","children":[{"type":"text","value":"/docs/about/me/","position":{"start":{"line":446,"column":6,"offset":20514},"end":{"line":446,"column":21,"offset":20529},"indent":[]}}],"position":{"start":{"line":446,"column":5,"offset":20513},"end":{"line":446,"column":70,"offset":20578},"indent":[]}}],"position":{"start":{"line":446,"column":5,"offset":20513},"end":{"line":446,"column":70,"offset":20578},"indent":[]}}],"position":{"start":{"line":446,"column":1,"offset":20509},"end":{"line":447,"column":1,"offset":20580},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/python-resources/","children":[{"type":"text","value":"/blog/python-resources/","position":{"start":{"line":448,"column":6,"offset":20587},"end":{"line":448,"column":29,"offset":20610},"indent":[]}}],"position":{"start":{"line":448,"column":5,"offset":20586},"end":{"line":448,"column":86,"offset":20667},"indent":[]}}],"position":{"start":{"line":448,"column":5,"offset":20586},"end":{"line":448,"column":86,"offset":20667},"indent":[]}}],"position":{"start":{"line":448,"column":1,"offset":20582},"end":{"line":449,"column":1,"offset":20669},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/about/resume/","children":[{"type":"text","value":"/docs/about/resume/","position":{"start":{"line":450,"column":6,"offset":20676},"end":{"line":450,"column":25,"offset":20695},"indent":[]}}],"position":{"start":{"line":450,"column":5,"offset":20675},"end":{"line":450,"column":78,"offset":20748},"indent":[]}}],"position":{"start":{"line":450,"column":5,"offset":20675},"end":{"line":450,"column":78,"offset":20748},"indent":[]}}],"position":{"start":{"line":450,"column":1,"offset":20671},"end":{"line":451,"column":1,"offset":20750},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://preview--bgoonz-b2d7c.stackbit.https://bgoonz-blog.netlify.app/log/web-scraping/","children":[{"type":"text","value":"/docs/","position":{"start":{"line":452,"column":6,"offset":20757},"end":{"line":452,"column":12,"offset":20763},"indent":[]}}],"position":{"start":{"line":452,"column":5,"offset":20756},"end":{"line":452,"column":103,"offset":20854},"indent":[]}}],"position":{"start":{"line":452,"column":5,"offset":20756},"end":{"line":452,"column":103,"offset":20854},"indent":[]}}],"position":{"start":{"line":452,"column":1,"offset":20752},"end":{"line":453,"column":1,"offset":20856},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/about/","children":[{"type":"text","value":"/docs/about/","position":{"start":{"line":454,"column":6,"offset":20863},"end":{"line":454,"column":18,"offset":20875},"indent":[]}}],"position":{"start":{"line":454,"column":5,"offset":20862},"end":{"line":454,"column":64,"offset":20921},"indent":[]}}],"position":{"start":{"line":454,"column":5,"offset":20862},"end":{"line":454,"column":64,"offset":20921},"indent":[]}}],"position":{"start":{"line":454,"column":1,"offset":20858},"end":{"line":455,"column":1,"offset":20923},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/algo/","children":[{"type":"text","value":"/docs/articles/algo/","position":{"start":{"line":456,"column":6,"offset":20930},"end":{"line":456,"column":26,"offset":20950},"indent":[]}}],"position":{"start":{"line":456,"column":5,"offset":20929},"end":{"line":456,"column":80,"offset":21004},"indent":[]}}],"position":{"start":{"line":456,"column":5,"offset":20929},"end":{"line":456,"column":80,"offset":21004},"indent":[]}}],"position":{"start":{"line":456,"column":1,"offset":20925},"end":{"line":457,"column":1,"offset":21006},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/install/","children":[{"type":"text","value":"/docs/articles/install/","position":{"start":{"line":458,"column":6,"offset":21013},"end":{"line":458,"column":29,"offset":21036},"indent":[]}}],"position":{"start":{"line":458,"column":5,"offset":21012},"end":{"line":458,"column":86,"offset":21093},"indent":[]}}],"position":{"start":{"line":458,"column":5,"offset":21012},"end":{"line":458,"column":86,"offset":21093},"indent":[]}}],"position":{"start":{"line":458,"column":1,"offset":21008},"end":{"line":459,"column":1,"offset":21095},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/","children":[{"type":"text","value":"/docs/articles/","position":{"start":{"line":460,"column":6,"offset":21102},"end":{"line":460,"column":21,"offset":21117},"indent":[]}}],"position":{"start":{"line":460,"column":5,"offset":21101},"end":{"line":460,"column":70,"offset":21166},"indent":[]}}],"position":{"start":{"line":460,"column":5,"offset":21101},"end":{"line":460,"column":70,"offset":21166},"indent":[]}}],"position":{"start":{"line":460,"column":1,"offset":21097},"end":{"line":461,"column":1,"offset":21168},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/gallery/","children":[{"type":"text","value":"/docs/articles/gallery/","position":{"start":{"line":462,"column":6,"offset":21175},"end":{"line":462,"column":29,"offset":21198},"indent":[]}}],"position":{"start":{"line":462,"column":5,"offset":21174},"end":{"line":462,"column":86,"offset":21255},"indent":[]}}],"position":{"start":{"line":462,"column":5,"offset":21174},"end":{"line":462,"column":86,"offset":21255},"indent":[]}}],"position":{"start":{"line":462,"column":1,"offset":21170},"end":{"line":463,"column":1,"offset":21257},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/intro/","children":[{"type":"text","value":"/docs/articles/intro/","position":{"start":{"line":464,"column":6,"offset":21264},"end":{"line":464,"column":27,"offset":21285},"indent":[]}}],"position":{"start":{"line":464,"column":5,"offset":21263},"end":{"line":464,"column":82,"offset":21340},"indent":[]}}],"position":{"start":{"line":464,"column":5,"offset":21263},"end":{"line":464,"column":82,"offset":21340},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":21259},"end":{"line":465,"column":1,"offset":21342},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/basic-web-dev/","children":[{"type":"text","value":"/docs/articles/basic-web-dev/","position":{"start":{"line":466,"column":6,"offset":21349},"end":{"line":466,"column":35,"offset":21378},"indent":[]}}],"position":{"start":{"line":466,"column":5,"offset":21348},"end":{"line":466,"column":98,"offset":21441},"indent":[]}}],"position":{"start":{"line":466,"column":5,"offset":21348},"end":{"line":466,"column":98,"offset":21441},"indent":[]}}],"position":{"start":{"line":466,"column":1,"offset":21344},"end":{"line":467,"column":1,"offset":21443},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/reading-files/","children":[{"type":"text","value":"/docs/articles/reading-files/","position":{"start":{"line":468,"column":6,"offset":21450},"end":{"line":468,"column":35,"offset":21479},"indent":[]}}],"position":{"start":{"line":468,"column":5,"offset":21449},"end":{"line":468,"column":98,"offset":21542},"indent":[]}}],"position":{"start":{"line":468,"column":5,"offset":21449},"end":{"line":468,"column":98,"offset":21542},"indent":[]}}],"position":{"start":{"line":468,"column":1,"offset":21445},"end":{"line":469,"column":1,"offset":21544},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/writing-files/","children":[{"type":"text","value":"/docs/articles/writing-files/","position":{"start":{"line":470,"column":6,"offset":21551},"end":{"line":470,"column":35,"offset":21580},"indent":[]}}],"position":{"start":{"line":470,"column":5,"offset":21550},"end":{"line":470,"column":98,"offset":21643},"indent":[]}}],"position":{"start":{"line":470,"column":5,"offset":21550},"end":{"line":470,"column":98,"offset":21643},"indent":[]}}],"position":{"start":{"line":470,"column":1,"offset":21546},"end":{"line":471,"column":1,"offset":21645},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/audio/audio/","children":[{"type":"text","value":"/docs/audio/audio/","position":{"start":{"line":472,"column":6,"offset":21652},"end":{"line":472,"column":24,"offset":21670},"indent":[]}}],"position":{"start":{"line":472,"column":5,"offset":21651},"end":{"line":472,"column":76,"offset":21722},"indent":[]}}],"position":{"start":{"line":472,"column":5,"offset":21651},"end":{"line":472,"column":76,"offset":21722},"indent":[]}}],"position":{"start":{"line":472,"column":1,"offset":21647},"end":{"line":473,"column":1,"offset":21724},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/projects/","children":[{"type":"text","value":"/docs/content/projects/","position":{"start":{"line":474,"column":6,"offset":21731},"end":{"line":474,"column":29,"offset":21754},"indent":[]}}],"position":{"start":{"line":474,"column":5,"offset":21730},"end":{"line":474,"column":86,"offset":21811},"indent":[]}}],"position":{"start":{"line":474,"column":5,"offset":21730},"end":{"line":474,"column":86,"offset":21811},"indent":[]}}],"position":{"start":{"line":474,"column":1,"offset":21726},"end":{"line":475,"column":1,"offset":21813},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/audio/terms/","children":[{"type":"text","value":"/docs/audio/terms/","position":{"start":{"line":476,"column":6,"offset":21820},"end":{"line":476,"column":24,"offset":21838},"indent":[]}}],"position":{"start":{"line":476,"column":5,"offset":21819},"end":{"line":476,"column":76,"offset":21890},"indent":[]}}],"position":{"start":{"line":476,"column":5,"offset":21819},"end":{"line":476,"column":76,"offset":21890},"indent":[]}}],"position":{"start":{"line":476,"column":1,"offset":21815},"end":{"line":477,"column":1,"offset":21892},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/faq/","children":[{"type":"text","value":"/docs/faq/","position":{"start":{"line":478,"column":6,"offset":21899},"end":{"line":478,"column":16,"offset":21909},"indent":[]}}],"position":{"start":{"line":478,"column":5,"offset":21898},"end":{"line":478,"column":60,"offset":21953},"indent":[]}}],"position":{"start":{"line":478,"column":5,"offset":21898},"end":{"line":478,"column":60,"offset":21953},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":21894},"end":{"line":479,"column":1,"offset":21955},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/community/","children":[{"type":"text","value":"/docs/community/","position":{"start":{"line":480,"column":6,"offset":21962},"end":{"line":480,"column":22,"offset":21978},"indent":[]}}],"position":{"start":{"line":480,"column":5,"offset":21961},"end":{"line":480,"column":72,"offset":22028},"indent":[]}}],"position":{"start":{"line":480,"column":5,"offset":21961},"end":{"line":480,"column":72,"offset":22028},"indent":[]}}],"position":{"start":{"line":480,"column":1,"offset":21957},"end":{"line":481,"column":1,"offset":22030},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/resources/","children":[{"type":"text","value":"/docs/articles/resources/","position":{"start":{"line":482,"column":6,"offset":22037},"end":{"line":482,"column":31,"offset":22062},"indent":[]}}],"position":{"start":{"line":482,"column":5,"offset":22036},"end":{"line":482,"column":90,"offset":22121},"indent":[]}}],"position":{"start":{"line":482,"column":5,"offset":22036},"end":{"line":482,"column":90,"offset":22121},"indent":[]}}],"position":{"start":{"line":482,"column":1,"offset":22032},"end":{"line":483,"column":1,"offset":22123},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/","children":[{"type":"text","value":"/docs/content/","position":{"start":{"line":484,"column":6,"offset":22130},"end":{"line":484,"column":20,"offset":22144},"indent":[]}}],"position":{"start":{"line":484,"column":5,"offset":22129},"end":{"line":484,"column":68,"offset":22192},"indent":[]}}],"position":{"start":{"line":484,"column":5,"offset":22129},"end":{"line":484,"column":68,"offset":22192},"indent":[]}}],"position":{"start":{"line":484,"column":1,"offset":22125},"end":{"line":485,"column":1,"offset":22194},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/git-repos/","children":[{"type":"text","value":"/docs/docs/git-repos/","position":{"start":{"line":486,"column":6,"offset":22201},"end":{"line":486,"column":27,"offset":22222},"indent":[]}}],"position":{"start":{"line":486,"column":5,"offset":22200},"end":{"line":486,"column":82,"offset":22277},"indent":[]}}],"position":{"start":{"line":486,"column":5,"offset":22200},"end":{"line":486,"column":82,"offset":22277},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":22196},"end":{"line":487,"column":1,"offset":22279},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/trouble-shooting/","children":[{"type":"text","value":"/docs/content/trouble-shooting/","position":{"start":{"line":488,"column":6,"offset":22286},"end":{"line":488,"column":37,"offset":22317},"indent":[]}}],"position":{"start":{"line":488,"column":5,"offset":22285},"end":{"line":488,"column":102,"offset":22382},"indent":[]}}],"position":{"start":{"line":488,"column":5,"offset":22285},"end":{"line":488,"column":102,"offset":22382},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":22281},"end":{"line":489,"column":1,"offset":22384},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/python/","children":[{"type":"text","value":"/docs/articles/python/","position":{"start":{"line":490,"column":6,"offset":22391},"end":{"line":490,"column":28,"offset":22413},"indent":[]}}],"position":{"start":{"line":490,"column":5,"offset":22390},"end":{"line":490,"column":84,"offset":22469},"indent":[]}}],"position":{"start":{"line":490,"column":5,"offset":22390},"end":{"line":490,"column":84,"offset":22469},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":22386},"end":{"line":491,"column":1,"offset":22471},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/interact/clock/","children":[{"type":"text","value":"/docs/interact/clock/","position":{"start":{"line":492,"column":6,"offset":22478},"end":{"line":492,"column":27,"offset":22499},"indent":[]}}],"position":{"start":{"line":492,"column":5,"offset":22477},"end":{"line":492,"column":82,"offset":22554},"indent":[]}}],"position":{"start":{"line":492,"column":5,"offset":22477},"end":{"line":492,"column":82,"offset":22554},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":22473},"end":{"line":493,"column":1,"offset":22556},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/python/","children":[{"type":"text","value":"/docs/docs/python/","position":{"start":{"line":494,"column":6,"offset":22563},"end":{"line":494,"column":24,"offset":22581},"indent":[]}}],"position":{"start":{"line":494,"column":5,"offset":22562},"end":{"line":494,"column":76,"offset":22633},"indent":[]}}],"position":{"start":{"line":494,"column":5,"offset":22562},"end":{"line":494,"column":76,"offset":22633},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":22558},"end":{"line":495,"column":1,"offset":22635},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/interact/jupyter-notebooks/","children":[{"type":"text","value":"/docs/interact/jupyter-notebooks/","position":{"start":{"line":496,"column":6,"offset":22642},"end":{"line":496,"column":39,"offset":22675},"indent":[]}}],"position":{"start":{"line":496,"column":5,"offset":22641},"end":{"line":496,"column":106,"offset":22742},"indent":[]}}],"position":{"start":{"line":496,"column":5,"offset":22641},"end":{"line":496,"column":106,"offset":22742},"indent":[]}}],"position":{"start":{"line":496,"column":1,"offset":22637},"end":{"line":497,"column":1,"offset":22744},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/interact/","children":[{"type":"text","value":"/docs/interact/","position":{"start":{"line":498,"column":6,"offset":22751},"end":{"line":498,"column":21,"offset":22766},"indent":[]}}],"position":{"start":{"line":498,"column":5,"offset":22750},"end":{"line":498,"column":70,"offset":22815},"indent":[]}}],"position":{"start":{"line":498,"column":5,"offset":22750},"end":{"line":498,"column":70,"offset":22815},"indent":[]}}],"position":{"start":{"line":498,"column":1,"offset":22746},"end":{"line":499,"column":1,"offset":22817},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/faq/contact/","children":[{"type":"text","value":"/docs/faq/contact/","position":{"start":{"line":500,"column":6,"offset":22824},"end":{"line":500,"column":24,"offset":22842},"indent":[]}}],"position":{"start":{"line":500,"column":5,"offset":22823},"end":{"line":500,"column":76,"offset":22894},"indent":[]}}],"position":{"start":{"line":500,"column":5,"offset":22823},"end":{"line":500,"column":76,"offset":22894},"indent":[]}}],"position":{"start":{"line":500,"column":1,"offset":22819},"end":{"line":501,"column":1,"offset":22896},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/docs/","children":[{"type":"text","value":"/docs/quick-reference/docs/","position":{"start":{"line":502,"column":6,"offset":22903},"end":{"line":502,"column":33,"offset":22930},"indent":[]}}],"position":{"start":{"line":502,"column":5,"offset":22902},"end":{"line":502,"column":94,"offset":22991},"indent":[]}}],"position":{"start":{"line":502,"column":5,"offset":22902},"end":{"line":502,"column":94,"offset":22991},"indent":[]}}],"position":{"start":{"line":502,"column":1,"offset":22898},"end":{"line":503,"column":1,"offset":22993},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/interact/other-sites/","children":[{"type":"text","value":"/docs/interact/other-sites/","position":{"start":{"line":504,"column":6,"offset":23000},"end":{"line":504,"column":33,"offset":23027},"indent":[]}}],"position":{"start":{"line":504,"column":5,"offset":22999},"end":{"line":504,"column":94,"offset":23088},"indent":[]}}],"position":{"start":{"line":504,"column":5,"offset":22999},"end":{"line":504,"column":94,"offset":23088},"indent":[]}}],"position":{"start":{"line":504,"column":1,"offset":22995},"end":{"line":505,"column":1,"offset":23090},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/new-repo-instructions/","children":[{"type":"text","value":"/docs/quick-reference/new-repo-instructions/","position":{"start":{"line":506,"column":6,"offset":23097},"end":{"line":506,"column":50,"offset":23141},"indent":[]}}],"position":{"start":{"line":506,"column":5,"offset":23096},"end":{"line":506,"column":128,"offset":23219},"indent":[]}}],"position":{"start":{"line":506,"column":5,"offset":23096},"end":{"line":506,"column":128,"offset":23219},"indent":[]}}],"position":{"start":{"line":506,"column":1,"offset":23092},"end":{"line":507,"column":1,"offset":23221},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/Emmet/","children":[{"type":"text","value":"/docs/quick-reference/Emmet/","position":{"start":{"line":508,"column":6,"offset":23228},"end":{"line":508,"column":34,"offset":23256},"indent":[]}}],"position":{"start":{"line":508,"column":5,"offset":23227},"end":{"line":508,"column":96,"offset":23318},"indent":[]}}],"position":{"start":{"line":508,"column":5,"offset":23227},"end":{"line":508,"column":96,"offset":23318},"indent":[]}}],"position":{"start":{"line":508,"column":1,"offset":23223},"end":{"line":509,"column":1,"offset":23320},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/installation/","children":[{"type":"text","value":"/docs/quick-reference/installation/","position":{"start":{"line":510,"column":6,"offset":23327},"end":{"line":510,"column":41,"offset":23362},"indent":[]}}],"position":{"start":{"line":510,"column":5,"offset":23326},"end":{"line":510,"column":110,"offset":23431},"indent":[]}}],"position":{"start":{"line":510,"column":5,"offset":23326},"end":{"line":510,"column":110,"offset":23431},"indent":[]}}],"position":{"start":{"line":510,"column":1,"offset":23322},"end":{"line":511,"column":1,"offset":23433},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/vscode-themes/","children":[{"type":"text","value":"/docs/quick-reference/vscode-themes/","position":{"start":{"line":512,"column":6,"offset":23440},"end":{"line":512,"column":42,"offset":23476},"indent":[]}}],"position":{"start":{"line":512,"column":5,"offset":23439},"end":{"line":512,"column":112,"offset":23546},"indent":[]}}],"position":{"start":{"line":512,"column":5,"offset":23439},"end":{"line":512,"column":112,"offset":23546},"indent":[]}}],"position":{"start":{"line":512,"column":1,"offset":23435},"end":{"line":513,"column":1,"offset":23548},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react/createReactApp/","children":[{"type":"text","value":"/docs/react/createReactApp/","position":{"start":{"line":514,"column":6,"offset":23555},"end":{"line":514,"column":33,"offset":23582},"indent":[]}}],"position":{"start":{"line":514,"column":5,"offset":23554},"end":{"line":514,"column":94,"offset":23643},"indent":[]}}],"position":{"start":{"line":514,"column":5,"offset":23554},"end":{"line":514,"column":94,"offset":23643},"indent":[]}}],"position":{"start":{"line":514,"column":1,"offset":23550},"end":{"line":515,"column":1,"offset":23645},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react/react2/","children":[{"type":"text","value":"/docs/react/react2/","position":{"start":{"line":516,"column":6,"offset":23652},"end":{"line":516,"column":25,"offset":23671},"indent":[]}}],"position":{"start":{"line":516,"column":5,"offset":23651},"end":{"line":516,"column":78,"offset":23724},"indent":[]}}],"position":{"start":{"line":516,"column":5,"offset":23651},"end":{"line":516,"column":78,"offset":23724},"indent":[]}}],"position":{"start":{"line":516,"column":1,"offset":23647},"end":{"line":517,"column":1,"offset":23726},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/","children":[{"type":"text","value":"/docs/quick-reference/","position":{"start":{"line":518,"column":6,"offset":23733},"end":{"line":518,"column":28,"offset":23755},"indent":[]}}],"position":{"start":{"line":518,"column":5,"offset":23732},"end":{"line":518,"column":84,"offset":23811},"indent":[]}}],"position":{"start":{"line":518,"column":5,"offset":23732},"end":{"line":518,"column":84,"offset":23811},"indent":[]}}],"position":{"start":{"line":518,"column":1,"offset":23728},"end":{"line":519,"column":1,"offset":23813},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react/","children":[{"type":"text","value":"/docs/react/","position":{"start":{"line":520,"column":6,"offset":23820},"end":{"line":520,"column":18,"offset":23832},"indent":[]}}],"position":{"start":{"line":520,"column":5,"offset":23819},"end":{"line":520,"column":64,"offset":23878},"indent":[]}}],"position":{"start":{"line":520,"column":5,"offset":23819},"end":{"line":520,"column":64,"offset":23878},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":23815},"end":{"line":521,"column":1,"offset":23880},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/","children":[{"type":"text","value":"/docs/tools/","position":{"start":{"line":522,"column":6,"offset":23887},"end":{"line":522,"column":18,"offset":23899},"indent":[]}}],"position":{"start":{"line":522,"column":5,"offset":23886},"end":{"line":522,"column":64,"offset":23945},"indent":[]}}],"position":{"start":{"line":522,"column":5,"offset":23886},"end":{"line":522,"column":64,"offset":23945},"indent":[]}}],"position":{"start":{"line":522,"column":1,"offset":23882},"end":{"line":523,"column":1,"offset":23947},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/notes-template/","children":[{"type":"text","value":"/docs/tools/notes-template/","position":{"start":{"line":524,"column":6,"offset":23954},"end":{"line":524,"column":33,"offset":23981},"indent":[]}}],"position":{"start":{"line":524,"column":5,"offset":23953},"end":{"line":524,"column":94,"offset":24042},"indent":[]}}],"position":{"start":{"line":524,"column":5,"offset":23953},"end":{"line":524,"column":94,"offset":24042},"indent":[]}}],"position":{"start":{"line":524,"column":1,"offset":23949},"end":{"line":525,"column":1,"offset":24044},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/more-tools/","children":[{"type":"text","value":"/docs/tools/more-tools/","position":{"start":{"line":526,"column":6,"offset":24051},"end":{"line":526,"column":29,"offset":24074},"indent":[]}}],"position":{"start":{"line":526,"column":5,"offset":24050},"end":{"line":526,"column":86,"offset":24131},"indent":[]}}],"position":{"start":{"line":526,"column":5,"offset":24050},"end":{"line":526,"column":86,"offset":24131},"indent":[]}}],"position":{"start":{"line":526,"column":1,"offset":24046},"end":{"line":527,"column":1,"offset":24133},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/plug-ins/","children":[{"type":"text","value":"/docs/tools/plug-ins/","position":{"start":{"line":528,"column":6,"offset":24140},"end":{"line":528,"column":27,"offset":24161},"indent":[]}}],"position":{"start":{"line":528,"column":5,"offset":24139},"end":{"line":528,"column":82,"offset":24216},"indent":[]}}],"position":{"start":{"line":528,"column":5,"offset":24139},"end":{"line":528,"column":82,"offset":24216},"indent":[]}}],"position":{"start":{"line":528,"column":1,"offset":24135},"end":{"line":529,"column":1,"offset":24218},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node/install/","children":[{"type":"text","value":"/docs/articles/node/install/","position":{"start":{"line":530,"column":6,"offset":24225},"end":{"line":530,"column":34,"offset":24253},"indent":[]}}],"position":{"start":{"line":530,"column":5,"offset":24224},"end":{"line":530,"column":96,"offset":24315},"indent":[]}}],"position":{"start":{"line":530,"column":5,"offset":24224},"end":{"line":530,"column":96,"offset":24315},"indent":[]}}],"position":{"start":{"line":530,"column":1,"offset":24220},"end":{"line":531,"column":1,"offset":24317},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/vscode/","children":[{"type":"text","value":"/docs/tools/vscode/","position":{"start":{"line":532,"column":6,"offset":24324},"end":{"line":532,"column":25,"offset":24343},"indent":[]}}],"position":{"start":{"line":532,"column":5,"offset":24323},"end":{"line":532,"column":78,"offset":24396},"indent":[]}}],"position":{"start":{"line":532,"column":5,"offset":24323},"end":{"line":532,"column":78,"offset":24396},"indent":[]}}],"position":{"start":{"line":532,"column":1,"offset":24319},"end":{"line":533,"column":1,"offset":24398},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node/intro/","children":[{"type":"text","value":"/docs/articles/node/intro/","position":{"start":{"line":534,"column":6,"offset":24405},"end":{"line":534,"column":32,"offset":24431},"indent":[]}}],"position":{"start":{"line":534,"column":5,"offset":24404},"end":{"line":534,"column":92,"offset":24491},"indent":[]}}],"position":{"start":{"line":534,"column":5,"offset":24404},"end":{"line":534,"column":92,"offset":24491},"indent":[]}}],"position":{"start":{"line":534,"column":1,"offset":24400},"end":{"line":535,"column":1,"offset":24493},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node/nodejs/","children":[{"type":"text","value":"/docs/articles/node/nodejs/","position":{"start":{"line":536,"column":6,"offset":24500},"end":{"line":536,"column":33,"offset":24527},"indent":[]}}],"position":{"start":{"line":536,"column":5,"offset":24499},"end":{"line":536,"column":94,"offset":24588},"indent":[]}}],"position":{"start":{"line":536,"column":5,"offset":24499},"end":{"line":536,"column":94,"offset":24588},"indent":[]}}],"position":{"start":{"line":536,"column":1,"offset":24495},"end":{"line":537,"column":1,"offset":24590},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node/nodevsbrowser/","children":[{"type":"text","value":"/docs/articles/node/nodevsbrowser/","position":{"start":{"line":538,"column":6,"offset":24597},"end":{"line":538,"column":40,"offset":24631},"indent":[]}}],"position":{"start":{"line":538,"column":5,"offset":24596},"end":{"line":538,"column":108,"offset":24699},"indent":[]}}],"position":{"start":{"line":538,"column":5,"offset":24596},"end":{"line":538,"column":108,"offset":24699},"indent":[]}}],"position":{"start":{"line":538,"column":1,"offset":24592},"end":{"line":539,"column":1,"offset":24701},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node/npm/","children":[{"type":"text","value":"/docs/articles/node/npm/","position":{"start":{"line":540,"column":6,"offset":24708},"end":{"line":540,"column":30,"offset":24732},"indent":[]}}],"position":{"start":{"line":540,"column":5,"offset":24707},"end":{"line":540,"column":88,"offset":24790},"indent":[]}}],"position":{"start":{"line":540,"column":5,"offset":24707},"end":{"line":540,"column":88,"offset":24790},"indent":[]}}],"position":{"start":{"line":540,"column":1,"offset":24703},"end":{"line":541,"column":1,"offset":24792},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node/reading-files/","children":[{"type":"text","value":"/docs/articles/node/reading-files/","position":{"start":{"line":542,"column":6,"offset":24799},"end":{"line":542,"column":40,"offset":24833},"indent":[]}}],"position":{"start":{"line":542,"column":5,"offset":24798},"end":{"line":542,"column":108,"offset":24901},"indent":[]}}],"position":{"start":{"line":542,"column":5,"offset":24798},"end":{"line":542,"column":108,"offset":24901},"indent":[]}}],"position":{"start":{"line":542,"column":1,"offset":24794},"end":{"line":543,"column":1,"offset":24903},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node/writing-files/","children":[{"type":"text","value":"/docs/articles/node/writing-files/","position":{"start":{"line":544,"column":6,"offset":24910},"end":{"line":544,"column":40,"offset":24944},"indent":[]}}],"position":{"start":{"line":544,"column":5,"offset":24909},"end":{"line":544,"column":108,"offset":25012},"indent":[]}}],"position":{"start":{"line":544,"column":5,"offset":24909},"end":{"line":544,"column":108,"offset":25012},"indent":[]}}],"position":{"start":{"line":544,"column":1,"offset":24905},"end":{"line":545,"column":1,"offset":25014},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react-in-depth/","children":[{"type":"text","value":"/docs/react-in-depth/","position":{"start":{"line":546,"column":6,"offset":25021},"end":{"line":546,"column":27,"offset":25042},"indent":[]}}],"position":{"start":{"line":546,"column":5,"offset":25020},"end":{"line":546,"column":82,"offset":25097},"indent":[]}}],"position":{"start":{"line":546,"column":5,"offset":25020},"end":{"line":546,"column":82,"offset":25097},"indent":[]}}],"position":{"start":{"line":546,"column":1,"offset":25016},"end":{"line":547,"column":1,"offset":25099},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/article-compilation/","children":[{"type":"text","value":"/docs/articles/article-compilation/","position":{"start":{"line":548,"column":6,"offset":25106},"end":{"line":548,"column":41,"offset":25141},"indent":[]}}],"position":{"start":{"line":548,"column":5,"offset":25105},"end":{"line":548,"column":110,"offset":25210},"indent":[]}}],"position":{"start":{"line":548,"column":5,"offset":25105},"end":{"line":548,"column":110,"offset":25210},"indent":[]}}],"position":{"start":{"line":548,"column":1,"offset":25101},"end":{"line":549,"column":1,"offset":25212},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/medium/my-websites/","children":[{"type":"text","value":"/docs/medium/my-websites/","position":{"start":{"line":550,"column":6,"offset":25219},"end":{"line":550,"column":31,"offset":25244},"indent":[]}}],"position":{"start":{"line":550,"column":5,"offset":25218},"end":{"line":550,"column":90,"offset":25303},"indent":[]}}],"position":{"start":{"line":550,"column":5,"offset":25218},"end":{"line":550,"column":90,"offset":25303},"indent":[]}}],"position":{"start":{"line":550,"column":1,"offset":25214},"end":{"line":551,"column":1,"offset":25305},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/medium/social/","children":[{"type":"text","value":"/docs/medium/social/","position":{"start":{"line":552,"column":6,"offset":25312},"end":{"line":552,"column":26,"offset":25332},"indent":[]}}],"position":{"start":{"line":552,"column":5,"offset":25311},"end":{"line":552,"column":80,"offset":25386},"indent":[]}}],"position":{"start":{"line":552,"column":5,"offset":25311},"end":{"line":552,"column":80,"offset":25386},"indent":[]}}],"position":{"start":{"line":552,"column":1,"offset":25307},"end":{"line":553,"column":1,"offset":25388},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/medium/medium-links/","children":[{"type":"text","value":"/docs/medium/medium-links/","position":{"start":{"line":554,"column":6,"offset":25395},"end":{"line":554,"column":32,"offset":25421},"indent":[]}}],"position":{"start":{"line":554,"column":5,"offset":25394},"end":{"line":554,"column":92,"offset":25481},"indent":[]}}],"position":{"start":{"line":554,"column":5,"offset":25394},"end":{"line":554,"column":92,"offset":25481},"indent":[]}}],"position":{"start":{"line":554,"column":1,"offset":25390},"end":{"line":555,"column":1,"offset":25483},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/medium/","children":[{"type":"text","value":"/docs/medium/","position":{"start":{"line":556,"column":6,"offset":25490},"end":{"line":556,"column":19,"offset":25503},"indent":[]}}],"position":{"start":{"line":556,"column":5,"offset":25489},"end":{"line":556,"column":66,"offset":25550},"indent":[]}}],"position":{"start":{"line":556,"column":5,"offset":25489},"end":{"line":556,"column":66,"offset":25550},"indent":[]}}],"position":{"start":{"line":556,"column":1,"offset":25485},"end":{"line":556,"column":66,"offset":25550},"indent":[]}}],"position":{"start":{"line":418,"column":1,"offset":19507},"end":{"line":556,"column":66,"offset":25550},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Sitemap","position":{"start":{"line":558,"column":3,"offset":25556},"end":{"line":558,"column":10,"offset":25563},"indent":[]}}],"position":{"start":{"line":558,"column":1,"offset":25554},"end":{"line":558,"column":10,"offset":25563},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":560,"column":1,"offset":25567},"end":{"line":560,"column":4,"offset":25570},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/big-o-complexity/","children":[{"type":"text","value":"/blog/big-o-complexity/","position":{"start":{"line":562,"column":6,"offset":25579},"end":{"line":562,"column":29,"offset":25602},"indent":[]}}],"position":{"start":{"line":562,"column":5,"offset":25578},"end":{"line":562,"column":86,"offset":25659},"indent":[]}}],"position":{"start":{"line":562,"column":5,"offset":25578},"end":{"line":562,"column":86,"offset":25659},"indent":[]}}],"position":{"start":{"line":562,"column":1,"offset":25574},"end":{"line":563,"column":1,"offset":25661},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/showcase/","children":[{"type":"text","value":"/showcase/","position":{"start":{"line":564,"column":6,"offset":25668},"end":{"line":564,"column":16,"offset":25678},"indent":[]}}],"position":{"start":{"line":564,"column":5,"offset":25667},"end":{"line":564,"column":60,"offset":25722},"indent":[]}}],"position":{"start":{"line":564,"column":5,"offset":25667},"end":{"line":564,"column":60,"offset":25722},"indent":[]}}],"position":{"start":{"line":564,"column":1,"offset":25663},"end":{"line":565,"column":1,"offset":25724},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/blog-archive/","children":[{"type":"text","value":"/blog/blog-archive/","position":{"start":{"line":566,"column":6,"offset":25731},"end":{"line":566,"column":25,"offset":25750},"indent":[]}}],"position":{"start":{"line":566,"column":5,"offset":25730},"end":{"line":566,"column":78,"offset":25803},"indent":[]}}],"position":{"start":{"line":566,"column":5,"offset":25730},"end":{"line":566,"column":78,"offset":25803},"indent":[]}}],"position":{"start":{"line":566,"column":1,"offset":25726},"end":{"line":567,"column":1,"offset":25805},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/","children":[{"type":"text","value":"/blog/","position":{"start":{"line":568,"column":6,"offset":25812},"end":{"line":568,"column":12,"offset":25818},"indent":[]}}],"position":{"start":{"line":568,"column":5,"offset":25811},"end":{"line":568,"column":52,"offset":25858},"indent":[]}}],"position":{"start":{"line":568,"column":5,"offset":25811},"end":{"line":568,"column":52,"offset":25858},"indent":[]}}],"position":{"start":{"line":568,"column":1,"offset":25807},"end":{"line":569,"column":1,"offset":25860},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/review/","children":[{"type":"text","value":"/review/","position":{"start":{"line":570,"column":6,"offset":25867},"end":{"line":570,"column":14,"offset":25875},"indent":[]}}],"position":{"start":{"line":570,"column":5,"offset":25866},"end":{"line":570,"column":56,"offset":25917},"indent":[]}}],"position":{"start":{"line":570,"column":5,"offset":25866},"end":{"line":570,"column":56,"offset":25917},"indent":[]}}],"position":{"start":{"line":570,"column":1,"offset":25862},"end":{"line":571,"column":1,"offset":25919},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/data-structures/","children":[{"type":"text","value":"/blog/data-structures/","position":{"start":{"line":572,"column":6,"offset":25926},"end":{"line":572,"column":28,"offset":25948},"indent":[]}}],"position":{"start":{"line":572,"column":5,"offset":25925},"end":{"line":572,"column":84,"offset":26004},"indent":[]}}],"position":{"start":{"line":572,"column":5,"offset":25925},"end":{"line":572,"column":84,"offset":26004},"indent":[]}}],"position":{"start":{"line":572,"column":1,"offset":25921},"end":{"line":573,"column":1,"offset":26006},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/blogwcomments/","children":[{"type":"text","value":"/blog/blogwcomments/","position":{"start":{"line":574,"column":6,"offset":26013},"end":{"line":574,"column":26,"offset":26033},"indent":[]}}],"position":{"start":{"line":574,"column":5,"offset":26012},"end":{"line":574,"column":80,"offset":26087},"indent":[]}}],"position":{"start":{"line":574,"column":5,"offset":26012},"end":{"line":574,"column":80,"offset":26087},"indent":[]}}],"position":{"start":{"line":574,"column":1,"offset":26008},"end":{"line":575,"column":1,"offset":26089},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/platform-docs/","children":[{"type":"text","value":"/blog/platform-docs/","position":{"start":{"line":576,"column":6,"offset":26096},"end":{"line":576,"column":26,"offset":26116},"indent":[]}}],"position":{"start":{"line":576,"column":5,"offset":26095},"end":{"line":576,"column":80,"offset":26170},"indent":[]}}],"position":{"start":{"line":576,"column":5,"offset":26095},"end":{"line":576,"column":80,"offset":26170},"indent":[]}}],"position":{"start":{"line":576,"column":1,"offset":26091},"end":{"line":577,"column":1,"offset":26172},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/python-resources/","children":[{"type":"text","value":"/blog/python-resources/","position":{"start":{"line":578,"column":6,"offset":26179},"end":{"line":578,"column":29,"offset":26202},"indent":[]}}],"position":{"start":{"line":578,"column":5,"offset":26178},"end":{"line":578,"column":86,"offset":26259},"indent":[]}}],"position":{"start":{"line":578,"column":5,"offset":26178},"end":{"line":578,"column":86,"offset":26259},"indent":[]}}],"position":{"start":{"line":578,"column":1,"offset":26174},"end":{"line":579,"column":1,"offset":26261},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/python-for-js-dev/","children":[{"type":"text","value":"/blog/python-for-js-dev/","position":{"start":{"line":580,"column":6,"offset":26268},"end":{"line":580,"column":30,"offset":26292},"indent":[]}}],"position":{"start":{"line":580,"column":5,"offset":26267},"end":{"line":580,"column":88,"offset":26350},"indent":[]}}],"position":{"start":{"line":580,"column":5,"offset":26267},"end":{"line":580,"column":88,"offset":26350},"indent":[]}}],"position":{"start":{"line":580,"column":1,"offset":26263},"end":{"line":581,"column":1,"offset":26352},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/gallery/","children":[{"type":"text","value":"/docs/gallery/","position":{"start":{"line":582,"column":6,"offset":26359},"end":{"line":582,"column":20,"offset":26373},"indent":[]}}],"position":{"start":{"line":582,"column":5,"offset":26358},"end":{"line":582,"column":68,"offset":26421},"indent":[]}}],"position":{"start":{"line":582,"column":5,"offset":26358},"end":{"line":582,"column":68,"offset":26421},"indent":[]}}],"position":{"start":{"line":582,"column":1,"offset":26354},"end":{"line":583,"column":1,"offset":26423},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/my-medium/","children":[{"type":"text","value":"/blog/my-medium/","position":{"start":{"line":584,"column":6,"offset":26430},"end":{"line":584,"column":22,"offset":26446},"indent":[]}}],"position":{"start":{"line":584,"column":5,"offset":26429},"end":{"line":584,"column":72,"offset":26496},"indent":[]}}],"position":{"start":{"line":584,"column":5,"offset":26429},"end":{"line":584,"column":72,"offset":26496},"indent":[]}}],"position":{"start":{"line":584,"column":1,"offset":26425},"end":{"line":585,"column":1,"offset":26498},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/search/","children":[{"type":"text","value":"/docs/search/","position":{"start":{"line":586,"column":6,"offset":26505},"end":{"line":586,"column":19,"offset":26518},"indent":[]}}],"position":{"start":{"line":586,"column":5,"offset":26504},"end":{"line":586,"column":66,"offset":26565},"indent":[]}}],"position":{"start":{"line":586,"column":5,"offset":26504},"end":{"line":586,"column":66,"offset":26565},"indent":[]}}],"position":{"start":{"line":586,"column":1,"offset":26500},"end":{"line":587,"column":1,"offset":26567},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/about/eng-portfolio/","children":[{"type":"text","value":"/docs/about/eng-portfolio/","position":{"start":{"line":588,"column":6,"offset":26574},"end":{"line":588,"column":32,"offset":26600},"indent":[]}}],"position":{"start":{"line":588,"column":5,"offset":26573},"end":{"line":588,"column":92,"offset":26660},"indent":[]}}],"position":{"start":{"line":588,"column":5,"offset":26573},"end":{"line":588,"column":92,"offset":26660},"indent":[]}}],"position":{"start":{"line":588,"column":1,"offset":26569},"end":{"line":589,"column":1,"offset":26662},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/about/intrests/","children":[{"type":"text","value":"/docs/about/intrests/","position":{"start":{"line":590,"column":6,"offset":26669},"end":{"line":590,"column":27,"offset":26690},"indent":[]}}],"position":{"start":{"line":590,"column":5,"offset":26668},"end":{"line":590,"column":82,"offset":26745},"indent":[]}}],"position":{"start":{"line":590,"column":5,"offset":26668},"end":{"line":590,"column":82,"offset":26745},"indent":[]}}],"position":{"start":{"line":590,"column":1,"offset":26664},"end":{"line":591,"column":1,"offset":26747},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/sitemap/","children":[{"type":"text","value":"/docs/sitemap/","position":{"start":{"line":592,"column":6,"offset":26754},"end":{"line":592,"column":20,"offset":26768},"indent":[]}}],"position":{"start":{"line":592,"column":5,"offset":26753},"end":{"line":592,"column":68,"offset":26816},"indent":[]}}],"position":{"start":{"line":592,"column":5,"offset":26753},"end":{"line":592,"column":68,"offset":26816},"indent":[]}}],"position":{"start":{"line":592,"column":1,"offset":26749},"end":{"line":593,"column":1,"offset":26818},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/about/resume/","children":[{"type":"text","value":"/docs/about/resume/","position":{"start":{"line":594,"column":6,"offset":26825},"end":{"line":594,"column":25,"offset":26844},"indent":[]}}],"position":{"start":{"line":594,"column":5,"offset":26824},"end":{"line":594,"column":78,"offset":26897},"indent":[]}}],"position":{"start":{"line":594,"column":5,"offset":26824},"end":{"line":594,"column":78,"offset":26897},"indent":[]}}],"position":{"start":{"line":594,"column":1,"offset":26820},"end":{"line":595,"column":1,"offset":26899},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/web-scraping/","children":[{"type":"text","value":"/blog/web-scraping/","position":{"start":{"line":596,"column":6,"offset":26906},"end":{"line":596,"column":25,"offset":26925},"indent":[]}}],"position":{"start":{"line":596,"column":5,"offset":26905},"end":{"line":596,"column":78,"offset":26978},"indent":[]}}],"position":{"start":{"line":596,"column":5,"offset":26905},"end":{"line":596,"column":78,"offset":26978},"indent":[]}}],"position":{"start":{"line":596,"column":1,"offset":26901},"end":{"line":597,"column":1,"offset":26980},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/about/job-search/","children":[{"type":"text","value":"/docs/about/job-search/","position":{"start":{"line":598,"column":6,"offset":26987},"end":{"line":598,"column":29,"offset":27010},"indent":[]}}],"position":{"start":{"line":598,"column":5,"offset":26986},"end":{"line":598,"column":86,"offset":27067},"indent":[]}}],"position":{"start":{"line":598,"column":5,"offset":26986},"end":{"line":598,"column":86,"offset":27067},"indent":[]}}],"position":{"start":{"line":598,"column":1,"offset":26982},"end":{"line":599,"column":1,"offset":27069},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/","children":[{"type":"text","value":"/docs/","position":{"start":{"line":600,"column":6,"offset":27076},"end":{"line":600,"column":12,"offset":27082},"indent":[]}}],"position":{"start":{"line":600,"column":5,"offset":27075},"end":{"line":600,"column":52,"offset":27122},"indent":[]}}],"position":{"start":{"line":600,"column":5,"offset":27075},"end":{"line":600,"column":52,"offset":27122},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":27071},"end":{"line":601,"column":1,"offset":27124},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/buffers/","children":[{"type":"text","value":"/docs/articles/buffers/","position":{"start":{"line":602,"column":6,"offset":27131},"end":{"line":602,"column":29,"offset":27154},"indent":[]}}],"position":{"start":{"line":602,"column":5,"offset":27130},"end":{"line":602,"column":86,"offset":27211},"indent":[]}}],"position":{"start":{"line":602,"column":5,"offset":27130},"end":{"line":602,"column":86,"offset":27211},"indent":[]}}],"position":{"start":{"line":602,"column":1,"offset":27126},"end":{"line":603,"column":1,"offset":27213},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/about/","children":[{"type":"text","value":"/docs/about/","position":{"start":{"line":604,"column":6,"offset":27220},"end":{"line":604,"column":18,"offset":27232},"indent":[]}}],"position":{"start":{"line":604,"column":5,"offset":27219},"end":{"line":604,"column":64,"offset":27278},"indent":[]}}],"position":{"start":{"line":604,"column":5,"offset":27219},"end":{"line":604,"column":64,"offset":27278},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":27215},"end":{"line":605,"column":1,"offset":27280},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/event-loop/","children":[{"type":"text","value":"/docs/articles/event-loop/","position":{"start":{"line":606,"column":6,"offset":27287},"end":{"line":606,"column":32,"offset":27313},"indent":[]}}],"position":{"start":{"line":606,"column":5,"offset":27286},"end":{"line":606,"column":92,"offset":27373},"indent":[]}}],"position":{"start":{"line":606,"column":5,"offset":27286},"end":{"line":606,"column":92,"offset":27373},"indent":[]}}],"position":{"start":{"line":606,"column":1,"offset":27282},"end":{"line":607,"column":1,"offset":27375},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/dev-dep/","children":[{"type":"text","value":"/docs/articles/dev-dep/","position":{"start":{"line":608,"column":6,"offset":27382},"end":{"line":608,"column":29,"offset":27405},"indent":[]}}],"position":{"start":{"line":608,"column":5,"offset":27381},"end":{"line":608,"column":86,"offset":27462},"indent":[]}}],"position":{"start":{"line":608,"column":5,"offset":27381},"end":{"line":608,"column":86,"offset":27462},"indent":[]}}],"position":{"start":{"line":608,"column":1,"offset":27377},"end":{"line":609,"column":1,"offset":27464},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/","children":[{"type":"text","value":"/docs/articles/","position":{"start":{"line":610,"column":6,"offset":27471},"end":{"line":610,"column":21,"offset":27486},"indent":[]}}],"position":{"start":{"line":610,"column":5,"offset":27470},"end":{"line":610,"column":70,"offset":27535},"indent":[]}}],"position":{"start":{"line":610,"column":5,"offset":27470},"end":{"line":610,"column":70,"offset":27535},"indent":[]}}],"position":{"start":{"line":610,"column":1,"offset":27466},"end":{"line":611,"column":1,"offset":27537},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/install/","children":[{"type":"text","value":"/docs/articles/install/","position":{"start":{"line":612,"column":6,"offset":27544},"end":{"line":612,"column":29,"offset":27567},"indent":[]}}],"position":{"start":{"line":612,"column":5,"offset":27543},"end":{"line":612,"column":86,"offset":27624},"indent":[]}}],"position":{"start":{"line":612,"column":5,"offset":27543},"end":{"line":612,"column":86,"offset":27624},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":27539},"end":{"line":613,"column":1,"offset":27626},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/fs-module/","children":[{"type":"text","value":"/docs/articles/fs-module/","position":{"start":{"line":614,"column":6,"offset":27633},"end":{"line":614,"column":31,"offset":27658},"indent":[]}}],"position":{"start":{"line":614,"column":5,"offset":27632},"end":{"line":614,"column":90,"offset":27717},"indent":[]}}],"position":{"start":{"line":614,"column":5,"offset":27632},"end":{"line":614,"column":90,"offset":27717},"indent":[]}}],"position":{"start":{"line":614,"column":1,"offset":27628},"end":{"line":615,"column":1,"offset":27719},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node-cli-args/","children":[{"type":"text","value":"/docs/articles/node-cli-args/","position":{"start":{"line":616,"column":6,"offset":27726},"end":{"line":616,"column":35,"offset":27755},"indent":[]}}],"position":{"start":{"line":616,"column":5,"offset":27725},"end":{"line":616,"column":98,"offset":27818},"indent":[]}}],"position":{"start":{"line":616,"column":5,"offset":27725},"end":{"line":616,"column":98,"offset":27818},"indent":[]}}],"position":{"start":{"line":616,"column":1,"offset":27721},"end":{"line":617,"column":1,"offset":27820},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/module-exports/","children":[{"type":"text","value":"/docs/articles/module-exports/","position":{"start":{"line":618,"column":6,"offset":27827},"end":{"line":618,"column":36,"offset":27857},"indent":[]}}],"position":{"start":{"line":618,"column":5,"offset":27826},"end":{"line":618,"column":100,"offset":27921},"indent":[]}}],"position":{"start":{"line":618,"column":5,"offset":27826},"end":{"line":618,"column":100,"offset":27921},"indent":[]}}],"position":{"start":{"line":618,"column":1,"offset":27822},"end":{"line":619,"column":1,"offset":27923},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node-env-variables/","children":[{"type":"text","value":"/docs/articles/node-env-variables/","position":{"start":{"line":620,"column":6,"offset":27930},"end":{"line":620,"column":40,"offset":27964},"indent":[]}}],"position":{"start":{"line":620,"column":5,"offset":27929},"end":{"line":620,"column":108,"offset":28032},"indent":[]}}],"position":{"start":{"line":620,"column":5,"offset":27929},"end":{"line":620,"column":108,"offset":28032},"indent":[]}}],"position":{"start":{"line":620,"column":1,"offset":27925},"end":{"line":621,"column":1,"offset":28034},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/intro/","children":[{"type":"text","value":"/docs/articles/intro/","position":{"start":{"line":622,"column":6,"offset":28041},"end":{"line":622,"column":27,"offset":28062},"indent":[]}}],"position":{"start":{"line":622,"column":5,"offset":28040},"end":{"line":622,"column":82,"offset":28117},"indent":[]}}],"position":{"start":{"line":622,"column":5,"offset":28040},"end":{"line":622,"column":82,"offset":28117},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":28036},"end":{"line":623,"column":1,"offset":28119},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node-js-language/","children":[{"type":"text","value":"/docs/articles/node-js-language/","position":{"start":{"line":624,"column":6,"offset":28126},"end":{"line":624,"column":38,"offset":28158},"indent":[]}}],"position":{"start":{"line":624,"column":5,"offset":28125},"end":{"line":624,"column":104,"offset":28224},"indent":[]}}],"position":{"start":{"line":624,"column":5,"offset":28125},"end":{"line":624,"column":104,"offset":28224},"indent":[]}}],"position":{"start":{"line":624,"column":1,"offset":28121},"end":{"line":625,"column":1,"offset":28226},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/basic-web-dev/","children":[{"type":"text","value":"/docs/articles/basic-web-dev/","position":{"start":{"line":626,"column":6,"offset":28233},"end":{"line":626,"column":35,"offset":28262},"indent":[]}}],"position":{"start":{"line":626,"column":5,"offset":28232},"end":{"line":626,"column":98,"offset":28325},"indent":[]}}],"position":{"start":{"line":626,"column":5,"offset":28232},"end":{"line":626,"column":98,"offset":28325},"indent":[]}}],"position":{"start":{"line":626,"column":1,"offset":28228},"end":{"line":627,"column":1,"offset":28327},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node-repl/","children":[{"type":"text","value":"/docs/articles/node-repl/","position":{"start":{"line":628,"column":6,"offset":28334},"end":{"line":628,"column":31,"offset":28359},"indent":[]}}],"position":{"start":{"line":628,"column":5,"offset":28333},"end":{"line":628,"column":90,"offset":28418},"indent":[]}}],"position":{"start":{"line":628,"column":5,"offset":28333},"end":{"line":628,"column":90,"offset":28418},"indent":[]}}],"position":{"start":{"line":628,"column":1,"offset":28329},"end":{"line":629,"column":1,"offset":28420},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node-package-manager/","children":[{"type":"text","value":"/docs/articles/node-package-manager/","position":{"start":{"line":630,"column":6,"offset":28427},"end":{"line":630,"column":42,"offset":28463},"indent":[]}}],"position":{"start":{"line":630,"column":5,"offset":28426},"end":{"line":630,"column":112,"offset":28533},"indent":[]}}],"position":{"start":{"line":630,"column":5,"offset":28426},"end":{"line":630,"column":112,"offset":28533},"indent":[]}}],"position":{"start":{"line":630,"column":1,"offset":28422},"end":{"line":631,"column":1,"offset":28535},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/node-run-cli/","children":[{"type":"text","value":"/docs/articles/node-run-cli/","position":{"start":{"line":632,"column":6,"offset":28542},"end":{"line":632,"column":34,"offset":28570},"indent":[]}}],"position":{"start":{"line":632,"column":5,"offset":28541},"end":{"line":632,"column":96,"offset":28632},"indent":[]}}],"position":{"start":{"line":632,"column":5,"offset":28541},"end":{"line":632,"column":96,"offset":28632},"indent":[]}}],"position":{"start":{"line":632,"column":1,"offset":28537},"end":{"line":633,"column":1,"offset":28634},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/npx/","children":[{"type":"text","value":"/docs/articles/npx/","position":{"start":{"line":634,"column":6,"offset":28641},"end":{"line":634,"column":25,"offset":28660},"indent":[]}}],"position":{"start":{"line":634,"column":5,"offset":28640},"end":{"line":634,"column":78,"offset":28713},"indent":[]}}],"position":{"start":{"line":634,"column":5,"offset":28640},"end":{"line":634,"column":78,"offset":28713},"indent":[]}}],"position":{"start":{"line":634,"column":1,"offset":28636},"end":{"line":635,"column":1,"offset":28715},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/v8/","children":[{"type":"text","value":"/docs/articles/v8/","position":{"start":{"line":636,"column":6,"offset":28722},"end":{"line":636,"column":24,"offset":28740},"indent":[]}}],"position":{"start":{"line":636,"column":5,"offset":28721},"end":{"line":636,"column":76,"offset":28792},"indent":[]}}],"position":{"start":{"line":636,"column":5,"offset":28721},"end":{"line":636,"column":76,"offset":28792},"indent":[]}}],"position":{"start":{"line":636,"column":1,"offset":28717},"end":{"line":637,"column":1,"offset":28794},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/nodevsbrowser/","children":[{"type":"text","value":"/docs/articles/nodevsbrowser/","position":{"start":{"line":638,"column":6,"offset":28801},"end":{"line":638,"column":35,"offset":28830},"indent":[]}}],"position":{"start":{"line":638,"column":5,"offset":28800},"end":{"line":638,"column":98,"offset":28893},"indent":[]}}],"position":{"start":{"line":638,"column":5,"offset":28800},"end":{"line":638,"column":98,"offset":28893},"indent":[]}}],"position":{"start":{"line":638,"column":1,"offset":28796},"end":{"line":639,"column":1,"offset":28895},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/reading-files/","children":[{"type":"text","value":"/docs/articles/reading-files/","position":{"start":{"line":640,"column":6,"offset":28902},"end":{"line":640,"column":35,"offset":28931},"indent":[]}}],"position":{"start":{"line":640,"column":5,"offset":28901},"end":{"line":640,"column":98,"offset":28994},"indent":[]}}],"position":{"start":{"line":640,"column":5,"offset":28901},"end":{"line":640,"column":98,"offset":28994},"indent":[]}}],"position":{"start":{"line":640,"column":1,"offset":28897},"end":{"line":641,"column":1,"offset":28996},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/nodejs/","children":[{"type":"text","value":"/docs/articles/nodejs/","position":{"start":{"line":642,"column":6,"offset":29003},"end":{"line":642,"column":28,"offset":29025},"indent":[]}}],"position":{"start":{"line":642,"column":5,"offset":29002},"end":{"line":642,"column":84,"offset":29081},"indent":[]}}],"position":{"start":{"line":642,"column":5,"offset":29002},"end":{"line":642,"column":84,"offset":29081},"indent":[]}}],"position":{"start":{"line":642,"column":1,"offset":28998},"end":{"line":643,"column":1,"offset":29083},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/npm/","children":[{"type":"text","value":"/docs/articles/npm/","position":{"start":{"line":644,"column":6,"offset":29090},"end":{"line":644,"column":25,"offset":29109},"indent":[]}}],"position":{"start":{"line":644,"column":5,"offset":29089},"end":{"line":644,"column":78,"offset":29162},"indent":[]}}],"position":{"start":{"line":644,"column":5,"offset":29089},"end":{"line":644,"column":78,"offset":29162},"indent":[]}}],"position":{"start":{"line":644,"column":1,"offset":29085},"end":{"line":645,"column":1,"offset":29164},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/semantic/","children":[{"type":"text","value":"/docs/articles/semantic/","position":{"start":{"line":646,"column":6,"offset":29171},"end":{"line":646,"column":30,"offset":29195},"indent":[]}}],"position":{"start":{"line":646,"column":5,"offset":29170},"end":{"line":646,"column":88,"offset":29253},"indent":[]}}],"position":{"start":{"line":646,"column":5,"offset":29170},"end":{"line":646,"column":88,"offset":29253},"indent":[]}}],"position":{"start":{"line":646,"column":1,"offset":29166},"end":{"line":647,"column":1,"offset":29255},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/writing-files/","children":[{"type":"text","value":"/docs/articles/writing-files/","position":{"start":{"line":648,"column":6,"offset":29262},"end":{"line":648,"column":35,"offset":29291},"indent":[]}}],"position":{"start":{"line":648,"column":5,"offset":29261},"end":{"line":648,"column":98,"offset":29354},"indent":[]}}],"position":{"start":{"line":648,"column":5,"offset":29261},"end":{"line":648,"column":98,"offset":29354},"indent":[]}}],"position":{"start":{"line":648,"column":1,"offset":29257},"end":{"line":649,"column":1,"offset":29356},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/audio/dynamic-time-warping/","children":[{"type":"text","value":"/docs/audio/dynamic-time-warping/","position":{"start":{"line":650,"column":6,"offset":29363},"end":{"line":650,"column":39,"offset":29396},"indent":[]}}],"position":{"start":{"line":650,"column":5,"offset":29362},"end":{"line":650,"column":106,"offset":29463},"indent":[]}}],"position":{"start":{"line":650,"column":5,"offset":29362},"end":{"line":650,"column":106,"offset":29463},"indent":[]}}],"position":{"start":{"line":650,"column":1,"offset":29358},"end":{"line":651,"column":1,"offset":29465},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/audio/","children":[{"type":"text","value":"/docs/audio/","position":{"start":{"line":652,"column":6,"offset":29472},"end":{"line":652,"column":18,"offset":29484},"indent":[]}}],"position":{"start":{"line":652,"column":5,"offset":29471},"end":{"line":652,"column":64,"offset":29530},"indent":[]}}],"position":{"start":{"line":652,"column":5,"offset":29471},"end":{"line":652,"column":64,"offset":29530},"indent":[]}}],"position":{"start":{"line":652,"column":1,"offset":29467},"end":{"line":653,"column":1,"offset":29532},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/audio/terms/","children":[{"type":"text","value":"/docs/audio/terms/","position":{"start":{"line":654,"column":6,"offset":29539},"end":{"line":654,"column":24,"offset":29557},"indent":[]}}],"position":{"start":{"line":654,"column":5,"offset":29538},"end":{"line":654,"column":76,"offset":29609},"indent":[]}}],"position":{"start":{"line":654,"column":5,"offset":29538},"end":{"line":654,"column":76,"offset":29609},"indent":[]}}],"position":{"start":{"line":654,"column":1,"offset":29534},"end":{"line":655,"column":1,"offset":29611},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/os-module/","children":[{"type":"text","value":"/docs/articles/os-module/","position":{"start":{"line":656,"column":6,"offset":29618},"end":{"line":656,"column":31,"offset":29643},"indent":[]}}],"position":{"start":{"line":656,"column":5,"offset":29617},"end":{"line":656,"column":90,"offset":29702},"indent":[]}}],"position":{"start":{"line":656,"column":5,"offset":29617},"end":{"line":656,"column":90,"offset":29702},"indent":[]}}],"position":{"start":{"line":656,"column":1,"offset":29613},"end":{"line":657,"column":1,"offset":29704},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/community/","children":[{"type":"text","value":"/docs/community/","position":{"start":{"line":658,"column":6,"offset":29711},"end":{"line":658,"column":22,"offset":29727},"indent":[]}}],"position":{"start":{"line":658,"column":5,"offset":29710},"end":{"line":658,"column":72,"offset":29777},"indent":[]}}],"position":{"start":{"line":658,"column":5,"offset":29710},"end":{"line":658,"column":72,"offset":29777},"indent":[]}}],"position":{"start":{"line":658,"column":1,"offset":29706},"end":{"line":659,"column":1,"offset":29779},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/community/video-chat/","children":[{"type":"text","value":"/docs/community/video-chat/","position":{"start":{"line":660,"column":6,"offset":29786},"end":{"line":660,"column":33,"offset":29813},"indent":[]}}],"position":{"start":{"line":660,"column":5,"offset":29785},"end":{"line":660,"column":94,"offset":29874},"indent":[]}}],"position":{"start":{"line":660,"column":5,"offset":29785},"end":{"line":660,"column":94,"offset":29874},"indent":[]}}],"position":{"start":{"line":660,"column":1,"offset":29781},"end":{"line":661,"column":1,"offset":29876},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/archive/","children":[{"type":"text","value":"/docs/content/archive/","position":{"start":{"line":662,"column":6,"offset":29883},"end":{"line":662,"column":28,"offset":29905},"indent":[]}}],"position":{"start":{"line":662,"column":5,"offset":29882},"end":{"line":662,"column":84,"offset":29961},"indent":[]}}],"position":{"start":{"line":662,"column":5,"offset":29882},"end":{"line":662,"column":84,"offset":29961},"indent":[]}}],"position":{"start":{"line":662,"column":1,"offset":29878},"end":{"line":663,"column":1,"offset":29963},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/data-structures-algo/","children":[{"type":"text","value":"/docs/content/data-structures-algo/","position":{"start":{"line":664,"column":6,"offset":29970},"end":{"line":664,"column":41,"offset":30005},"indent":[]}}],"position":{"start":{"line":664,"column":5,"offset":29969},"end":{"line":664,"column":110,"offset":30074},"indent":[]}}],"position":{"start":{"line":664,"column":5,"offset":29969},"end":{"line":664,"column":110,"offset":30074},"indent":[]}}],"position":{"start":{"line":664,"column":1,"offset":29965},"end":{"line":665,"column":1,"offset":30076},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/","children":[{"type":"text","value":"/docs/content/","position":{"start":{"line":666,"column":6,"offset":30083},"end":{"line":666,"column":20,"offset":30097},"indent":[]}}],"position":{"start":{"line":666,"column":5,"offset":30082},"end":{"line":666,"column":68,"offset":30145},"indent":[]}}],"position":{"start":{"line":666,"column":5,"offset":30082},"end":{"line":666,"column":68,"offset":30145},"indent":[]}}],"position":{"start":{"line":666,"column":1,"offset":30078},"end":{"line":667,"column":1,"offset":30147},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/notes-template/","children":[{"type":"text","value":"/docs/content/notes-template/","position":{"start":{"line":668,"column":6,"offset":30154},"end":{"line":668,"column":35,"offset":30183},"indent":[]}}],"position":{"start":{"line":668,"column":5,"offset":30153},"end":{"line":668,"column":98,"offset":30246},"indent":[]}}],"position":{"start":{"line":668,"column":5,"offset":30153},"end":{"line":668,"column":98,"offset":30246},"indent":[]}}],"position":{"start":{"line":668,"column":1,"offset":30149},"end":{"line":669,"column":1,"offset":30248},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/gatsby-Queries-Mutations/","children":[{"type":"text","value":"/docs/content/gatsby-Queries-Mutations/","position":{"start":{"line":670,"column":6,"offset":30255},"end":{"line":670,"column":45,"offset":30294},"indent":[]}}],"position":{"start":{"line":670,"column":5,"offset":30254},"end":{"line":670,"column":118,"offset":30367},"indent":[]}}],"position":{"start":{"line":670,"column":5,"offset":30254},"end":{"line":670,"column":118,"offset":30367},"indent":[]}}],"position":{"start":{"line":670,"column":1,"offset":30250},"end":{"line":671,"column":1,"offset":30369},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/projects/","children":[{"type":"text","value":"/docs/content/projects/","position":{"start":{"line":672,"column":6,"offset":30376},"end":{"line":672,"column":29,"offset":30399},"indent":[]}}],"position":{"start":{"line":672,"column":5,"offset":30375},"end":{"line":672,"column":86,"offset":30456},"indent":[]}}],"position":{"start":{"line":672,"column":5,"offset":30375},"end":{"line":672,"column":86,"offset":30456},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":30371},"end":{"line":673,"column":1,"offset":30458},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/trouble-shooting/","children":[{"type":"text","value":"/docs/content/trouble-shooting/","position":{"start":{"line":674,"column":6,"offset":30465},"end":{"line":674,"column":37,"offset":30496},"indent":[]}}],"position":{"start":{"line":674,"column":5,"offset":30464},"end":{"line":674,"column":102,"offset":30561},"indent":[]}}],"position":{"start":{"line":674,"column":5,"offset":30464},"end":{"line":674,"column":102,"offset":30561},"indent":[]}}],"position":{"start":{"line":674,"column":1,"offset":30460},"end":{"line":675,"column":1,"offset":30563},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/audio/dfft/","children":[{"type":"text","value":"/docs/audio/dfft/","position":{"start":{"line":676,"column":6,"offset":30570},"end":{"line":676,"column":23,"offset":30587},"indent":[]}}],"position":{"start":{"line":676,"column":5,"offset":30569},"end":{"line":676,"column":74,"offset":30638},"indent":[]}}],"position":{"start":{"line":676,"column":5,"offset":30569},"end":{"line":676,"column":74,"offset":30638},"indent":[]}}],"position":{"start":{"line":676,"column":1,"offset":30565},"end":{"line":677,"column":1,"offset":30640},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/content/algo/","children":[{"type":"text","value":"/docs/content/algo/","position":{"start":{"line":678,"column":6,"offset":30647},"end":{"line":678,"column":25,"offset":30666},"indent":[]}}],"position":{"start":{"line":678,"column":5,"offset":30646},"end":{"line":678,"column":78,"offset":30719},"indent":[]}}],"position":{"start":{"line":678,"column":5,"offset":30646},"end":{"line":678,"column":78,"offset":30719},"indent":[]}}],"position":{"start":{"line":678,"column":1,"offset":30642},"end":{"line":679,"column":1,"offset":30721},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/await-keyword/","children":[{"type":"text","value":"/docs/docs/await-keyword/","position":{"start":{"line":680,"column":6,"offset":30728},"end":{"line":680,"column":31,"offset":30753},"indent":[]}}],"position":{"start":{"line":680,"column":5,"offset":30727},"end":{"line":680,"column":90,"offset":30812},"indent":[]}}],"position":{"start":{"line":680,"column":5,"offset":30727},"end":{"line":680,"column":90,"offset":30812},"indent":[]}}],"position":{"start":{"line":680,"column":1,"offset":30723},"end":{"line":681,"column":1,"offset":30814},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/appendix/","children":[{"type":"text","value":"/docs/docs/appendix/","position":{"start":{"line":682,"column":6,"offset":30821},"end":{"line":682,"column":26,"offset":30841},"indent":[]}}],"position":{"start":{"line":682,"column":5,"offset":30820},"end":{"line":682,"column":80,"offset":30895},"indent":[]}}],"position":{"start":{"line":682,"column":5,"offset":30820},"end":{"line":682,"column":80,"offset":30895},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":30816},"end":{"line":683,"column":1,"offset":30897},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/algolia/","children":[{"type":"text","value":"/docs/docs/algolia/","position":{"start":{"line":684,"column":6,"offset":30904},"end":{"line":684,"column":25,"offset":30923},"indent":[]}}],"position":{"start":{"line":684,"column":5,"offset":30903},"end":{"line":684,"column":78,"offset":30976},"indent":[]}}],"position":{"start":{"line":684,"column":5,"offset":30903},"end":{"line":684,"column":78,"offset":30976},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":30899},"end":{"line":685,"column":1,"offset":30978},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/data-structures-docs/","children":[{"type":"text","value":"/docs/docs/data-structures-docs/","position":{"start":{"line":686,"column":6,"offset":30985},"end":{"line":686,"column":38,"offset":31017},"indent":[]}}],"position":{"start":{"line":686,"column":5,"offset":30984},"end":{"line":686,"column":104,"offset":31083},"indent":[]}}],"position":{"start":{"line":686,"column":5,"offset":30984},"end":{"line":686,"column":104,"offset":31083},"indent":[]}}],"position":{"start":{"line":686,"column":1,"offset":30980},"end":{"line":687,"column":1,"offset":31085},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/","children":[{"type":"text","value":"/docs/docs/","position":{"start":{"line":688,"column":6,"offset":31092},"end":{"line":688,"column":17,"offset":31103},"indent":[]}}],"position":{"start":{"line":688,"column":5,"offset":31091},"end":{"line":688,"column":62,"offset":31148},"indent":[]}}],"position":{"start":{"line":688,"column":5,"offset":31091},"end":{"line":688,"column":62,"offset":31148},"indent":[]}}],"position":{"start":{"line":688,"column":1,"offset":31087},"end":{"line":689,"column":1,"offset":31150},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/git-repos/","children":[{"type":"text","value":"/docs/docs/git-repos/","position":{"start":{"line":690,"column":6,"offset":31157},"end":{"line":690,"column":27,"offset":31178},"indent":[]}}],"position":{"start":{"line":690,"column":5,"offset":31156},"end":{"line":690,"column":82,"offset":31233},"indent":[]}}],"position":{"start":{"line":690,"column":5,"offset":31156},"end":{"line":690,"column":82,"offset":31233},"indent":[]}}],"position":{"start":{"line":690,"column":1,"offset":31152},"end":{"line":691,"column":1,"offset":31235},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/sitemap/","children":[{"type":"text","value":"/docs/docs/sitemap/","position":{"start":{"line":692,"column":6,"offset":31242},"end":{"line":692,"column":25,"offset":31261},"indent":[]}}],"position":{"start":{"line":692,"column":5,"offset":31241},"end":{"line":692,"column":78,"offset":31314},"indent":[]}}],"position":{"start":{"line":692,"column":5,"offset":31241},"end":{"line":692,"column":78,"offset":31314},"indent":[]}}],"position":{"start":{"line":692,"column":1,"offset":31237},"end":{"line":693,"column":1,"offset":31316},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/css/","children":[{"type":"text","value":"/docs/docs/css/","position":{"start":{"line":694,"column":6,"offset":31323},"end":{"line":694,"column":21,"offset":31338},"indent":[]}}],"position":{"start":{"line":694,"column":5,"offset":31322},"end":{"line":694,"column":70,"offset":31387},"indent":[]}}],"position":{"start":{"line":694,"column":5,"offset":31322},"end":{"line":694,"column":70,"offset":31387},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":31318},"end":{"line":695,"column":1,"offset":31389},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/docs/regex-in-js/","children":[{"type":"text","value":"/docs/docs/regex-in-js/","position":{"start":{"line":696,"column":6,"offset":31396},"end":{"line":696,"column":29,"offset":31419},"indent":[]}}],"position":{"start":{"line":696,"column":5,"offset":31395},"end":{"line":696,"column":86,"offset":31476},"indent":[]}}],"position":{"start":{"line":696,"column":5,"offset":31395},"end":{"line":696,"column":86,"offset":31476},"indent":[]}}],"position":{"start":{"line":696,"column":1,"offset":31391},"end":{"line":697,"column":1,"offset":31478},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/faq/contact/","children":[{"type":"text","value":"/docs/faq/contact/","position":{"start":{"line":698,"column":6,"offset":31485},"end":{"line":698,"column":24,"offset":31503},"indent":[]}}],"position":{"start":{"line":698,"column":5,"offset":31484},"end":{"line":698,"column":76,"offset":31555},"indent":[]}}],"position":{"start":{"line":698,"column":5,"offset":31484},"end":{"line":698,"column":76,"offset":31555},"indent":[]}}],"position":{"start":{"line":698,"column":1,"offset":31480},"end":{"line":699,"column":1,"offset":31557},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/interact/jupyter-notebooks/","children":[{"type":"text","value":"/docs/interact/jupyter-notebooks/","position":{"start":{"line":700,"column":6,"offset":31564},"end":{"line":700,"column":39,"offset":31597},"indent":[]}}],"position":{"start":{"line":700,"column":5,"offset":31563},"end":{"line":700,"column":106,"offset":31664},"indent":[]}}],"position":{"start":{"line":700,"column":5,"offset":31563},"end":{"line":700,"column":106,"offset":31664},"indent":[]}}],"position":{"start":{"line":700,"column":1,"offset":31559},"end":{"line":701,"column":1,"offset":31666},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/interact/clock/","children":[{"type":"text","value":"/docs/interact/clock/","position":{"start":{"line":702,"column":6,"offset":31673},"end":{"line":702,"column":27,"offset":31694},"indent":[]}}],"position":{"start":{"line":702,"column":5,"offset":31672},"end":{"line":702,"column":82,"offset":31749},"indent":[]}}],"position":{"start":{"line":702,"column":5,"offset":31672},"end":{"line":702,"column":82,"offset":31749},"indent":[]}}],"position":{"start":{"line":702,"column":1,"offset":31668},"end":{"line":703,"column":1,"offset":31751},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/interact/","children":[{"type":"text","value":"/docs/interact/","position":{"start":{"line":704,"column":6,"offset":31758},"end":{"line":704,"column":21,"offset":31773},"indent":[]}}],"position":{"start":{"line":704,"column":5,"offset":31757},"end":{"line":704,"column":70,"offset":31822},"indent":[]}}],"position":{"start":{"line":704,"column":5,"offset":31757},"end":{"line":704,"column":70,"offset":31822},"indent":[]}}],"position":{"start":{"line":704,"column":1,"offset":31753},"end":{"line":705,"column":1,"offset":31824},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/faq/","children":[{"type":"text","value":"/docs/faq/","position":{"start":{"line":706,"column":6,"offset":31831},"end":{"line":706,"column":16,"offset":31841},"indent":[]}}],"position":{"start":{"line":706,"column":5,"offset":31830},"end":{"line":706,"column":60,"offset":31885},"indent":[]}}],"position":{"start":{"line":706,"column":5,"offset":31830},"end":{"line":706,"column":60,"offset":31885},"indent":[]}}],"position":{"start":{"line":706,"column":1,"offset":31826},"end":{"line":707,"column":1,"offset":31887},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/interact/video-chat/","children":[{"type":"text","value":"/docs/interact/video-chat/","position":{"start":{"line":708,"column":6,"offset":31894},"end":{"line":708,"column":32,"offset":31920},"indent":[]}}],"position":{"start":{"line":708,"column":5,"offset":31893},"end":{"line":708,"column":92,"offset":31980},"indent":[]}}],"position":{"start":{"line":708,"column":5,"offset":31893},"end":{"line":708,"column":92,"offset":31980},"indent":[]}}],"position":{"start":{"line":708,"column":1,"offset":31889},"end":{"line":709,"column":1,"offset":31982},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/interact/other-sites/","children":[{"type":"text","value":"/docs/interact/other-sites/","position":{"start":{"line":710,"column":6,"offset":31989},"end":{"line":710,"column":33,"offset":32016},"indent":[]}}],"position":{"start":{"line":710,"column":5,"offset":31988},"end":{"line":710,"column":94,"offset":32077},"indent":[]}}],"position":{"start":{"line":710,"column":5,"offset":31988},"end":{"line":710,"column":94,"offset":32077},"indent":[]}}],"position":{"start":{"line":710,"column":1,"offset":31984},"end":{"line":711,"column":1,"offset":32079},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/faq/plug-ins/","children":[{"type":"text","value":"/docs/faq/plug-ins/","position":{"start":{"line":712,"column":6,"offset":32086},"end":{"line":712,"column":25,"offset":32105},"indent":[]}}],"position":{"start":{"line":712,"column":5,"offset":32085},"end":{"line":712,"column":78,"offset":32158},"indent":[]}}],"position":{"start":{"line":712,"column":5,"offset":32085},"end":{"line":712,"column":78,"offset":32158},"indent":[]}}],"position":{"start":{"line":712,"column":1,"offset":32081},"end":{"line":713,"column":1,"offset":32160},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/medium/my-websites/","children":[{"type":"text","value":"/docs/medium/my-websites/","position":{"start":{"line":714,"column":6,"offset":32167},"end":{"line":714,"column":31,"offset":32192},"indent":[]}}],"position":{"start":{"line":714,"column":5,"offset":32166},"end":{"line":714,"column":90,"offset":32251},"indent":[]}}],"position":{"start":{"line":714,"column":5,"offset":32166},"end":{"line":714,"column":90,"offset":32251},"indent":[]}}],"position":{"start":{"line":714,"column":1,"offset":32162},"end":{"line":715,"column":1,"offset":32253},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/medium/medium-links/","children":[{"type":"text","value":"/docs/medium/medium-links/","position":{"start":{"line":716,"column":6,"offset":32260},"end":{"line":716,"column":32,"offset":32286},"indent":[]}}],"position":{"start":{"line":716,"column":5,"offset":32259},"end":{"line":716,"column":92,"offset":32346},"indent":[]}}],"position":{"start":{"line":716,"column":5,"offset":32259},"end":{"line":716,"column":92,"offset":32346},"indent":[]}}],"position":{"start":{"line":716,"column":1,"offset":32255},"end":{"line":717,"column":1,"offset":32348},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/medium/","children":[{"type":"text","value":"/docs/medium/","position":{"start":{"line":718,"column":6,"offset":32355},"end":{"line":718,"column":19,"offset":32368},"indent":[]}}],"position":{"start":{"line":718,"column":5,"offset":32354},"end":{"line":718,"column":66,"offset":32415},"indent":[]}}],"position":{"start":{"line":718,"column":5,"offset":32354},"end":{"line":718,"column":66,"offset":32415},"indent":[]}}],"position":{"start":{"line":718,"column":1,"offset":32350},"end":{"line":719,"column":1,"offset":32417},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/create-react-app/","children":[{"type":"text","value":"/docs/quick-reference/create-react-app/","position":{"start":{"line":720,"column":6,"offset":32424},"end":{"line":720,"column":45,"offset":32463},"indent":[]}}],"position":{"start":{"line":720,"column":5,"offset":32423},"end":{"line":720,"column":118,"offset":32536},"indent":[]}}],"position":{"start":{"line":720,"column":5,"offset":32423},"end":{"line":720,"column":118,"offset":32536},"indent":[]}}],"position":{"start":{"line":720,"column":1,"offset":32419},"end":{"line":721,"column":1,"offset":32538},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/javascript/constructor-functions/","children":[{"type":"text","value":"/docs/javascript/constructor-functions/","position":{"start":{"line":722,"column":6,"offset":32545},"end":{"line":722,"column":45,"offset":32584},"indent":[]}}],"position":{"start":{"line":722,"column":5,"offset":32544},"end":{"line":722,"column":118,"offset":32657},"indent":[]}}],"position":{"start":{"line":722,"column":5,"offset":32544},"end":{"line":722,"column":118,"offset":32657},"indent":[]}}],"position":{"start":{"line":722,"column":1,"offset":32540},"end":{"line":723,"column":1,"offset":32659},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/Emmet/","children":[{"type":"text","value":"/docs/quick-reference/Emmet/","position":{"start":{"line":724,"column":6,"offset":32666},"end":{"line":724,"column":34,"offset":32694},"indent":[]}}],"position":{"start":{"line":724,"column":5,"offset":32665},"end":{"line":724,"column":96,"offset":32756},"indent":[]}}],"position":{"start":{"line":724,"column":5,"offset":32665},"end":{"line":724,"column":96,"offset":32756},"indent":[]}}],"position":{"start":{"line":724,"column":1,"offset":32661},"end":{"line":725,"column":1,"offset":32758},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/python/","children":[{"type":"text","value":"/docs/python/","position":{"start":{"line":726,"column":6,"offset":32765},"end":{"line":726,"column":19,"offset":32778},"indent":[]}}],"position":{"start":{"line":726,"column":5,"offset":32764},"end":{"line":726,"column":66,"offset":32825},"indent":[]}}],"position":{"start":{"line":726,"column":5,"offset":32764},"end":{"line":726,"column":66,"offset":32825},"indent":[]}}],"position":{"start":{"line":726,"column":1,"offset":32760},"end":{"line":727,"column":1,"offset":32827},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/awesome-static/","children":[{"type":"text","value":"/docs/quick-reference/awesome-static/","position":{"start":{"line":728,"column":6,"offset":32834},"end":{"line":728,"column":43,"offset":32871},"indent":[]}}],"position":{"start":{"line":728,"column":5,"offset":32833},"end":{"line":728,"column":114,"offset":32942},"indent":[]}}],"position":{"start":{"line":728,"column":5,"offset":32833},"end":{"line":728,"column":114,"offset":32942},"indent":[]}}],"position":{"start":{"line":728,"column":1,"offset":32829},"end":{"line":729,"column":1,"offset":32944},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/","children":[{"type":"text","value":"/docs/quick-reference/","position":{"start":{"line":730,"column":6,"offset":32951},"end":{"line":730,"column":28,"offset":32973},"indent":[]}}],"position":{"start":{"line":730,"column":5,"offset":32950},"end":{"line":730,"column":84,"offset":33029},"indent":[]}}],"position":{"start":{"line":730,"column":5,"offset":32950},"end":{"line":730,"column":84,"offset":33029},"indent":[]}}],"position":{"start":{"line":730,"column":1,"offset":32946},"end":{"line":731,"column":1,"offset":33031},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/new-repo-instructions/","children":[{"type":"text","value":"/docs/quick-reference/new-repo-instructions/","position":{"start":{"line":732,"column":6,"offset":33038},"end":{"line":732,"column":50,"offset":33082},"indent":[]}}],"position":{"start":{"line":732,"column":5,"offset":33037},"end":{"line":732,"column":128,"offset":33160},"indent":[]}}],"position":{"start":{"line":732,"column":5,"offset":33037},"end":{"line":732,"column":128,"offset":33160},"indent":[]}}],"position":{"start":{"line":732,"column":1,"offset":33033},"end":{"line":733,"column":1,"offset":33162},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/installation/","children":[{"type":"text","value":"/docs/quick-reference/installation/","position":{"start":{"line":734,"column":6,"offset":33169},"end":{"line":734,"column":41,"offset":33204},"indent":[]}}],"position":{"start":{"line":734,"column":5,"offset":33168},"end":{"line":734,"column":110,"offset":33273},"indent":[]}}],"position":{"start":{"line":734,"column":5,"offset":33168},"end":{"line":734,"column":110,"offset":33273},"indent":[]}}],"position":{"start":{"line":734,"column":1,"offset":33164},"end":{"line":735,"column":1,"offset":33275},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/google-firebase/","children":[{"type":"text","value":"/docs/quick-reference/google-firebase/","position":{"start":{"line":736,"column":6,"offset":33282},"end":{"line":736,"column":44,"offset":33320},"indent":[]}}],"position":{"start":{"line":736,"column":5,"offset":33281},"end":{"line":736,"column":116,"offset":33392},"indent":[]}}],"position":{"start":{"line":736,"column":5,"offset":33281},"end":{"line":736,"column":116,"offset":33392},"indent":[]}}],"position":{"start":{"line":736,"column":1,"offset":33277},"end":{"line":737,"column":1,"offset":33394},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/notes-template/","children":[{"type":"text","value":"/docs/quick-reference/notes-template/","position":{"start":{"line":738,"column":6,"offset":33401},"end":{"line":738,"column":43,"offset":33438},"indent":[]}}],"position":{"start":{"line":738,"column":5,"offset":33400},"end":{"line":738,"column":114,"offset":33509},"indent":[]}}],"position":{"start":{"line":738,"column":5,"offset":33400},"end":{"line":738,"column":114,"offset":33509},"indent":[]}}],"position":{"start":{"line":738,"column":1,"offset":33396},"end":{"line":739,"column":1,"offset":33511},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/heroku-error-codes/","children":[{"type":"text","value":"/docs/quick-reference/heroku-error-codes/","position":{"start":{"line":740,"column":6,"offset":33518},"end":{"line":740,"column":47,"offset":33559},"indent":[]}}],"position":{"start":{"line":740,"column":5,"offset":33517},"end":{"line":740,"column":122,"offset":33634},"indent":[]}}],"position":{"start":{"line":740,"column":5,"offset":33517},"end":{"line":740,"column":122,"offset":33634},"indent":[]}}],"position":{"start":{"line":740,"column":1,"offset":33513},"end":{"line":741,"column":1,"offset":33636},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/psql-setup/","children":[{"type":"text","value":"/docs/quick-reference/psql-setup/","position":{"start":{"line":742,"column":6,"offset":33643},"end":{"line":742,"column":39,"offset":33676},"indent":[]}}],"position":{"start":{"line":742,"column":5,"offset":33642},"end":{"line":742,"column":106,"offset":33743},"indent":[]}}],"position":{"start":{"line":742,"column":5,"offset":33642},"end":{"line":742,"column":106,"offset":33743},"indent":[]}}],"position":{"start":{"line":742,"column":1,"offset":33638},"end":{"line":743,"column":1,"offset":33745},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react/createReactApp/","children":[{"type":"text","value":"/docs/react/createReactApp/","position":{"start":{"line":744,"column":6,"offset":33752},"end":{"line":744,"column":33,"offset":33779},"indent":[]}}],"position":{"start":{"line":744,"column":5,"offset":33751},"end":{"line":744,"column":94,"offset":33840},"indent":[]}}],"position":{"start":{"line":744,"column":5,"offset":33751},"end":{"line":744,"column":94,"offset":33840},"indent":[]}}],"position":{"start":{"line":744,"column":1,"offset":33747},"end":{"line":745,"column":1,"offset":33842},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/topRepos/","children":[{"type":"text","value":"/docs/quick-reference/topRepos/","position":{"start":{"line":746,"column":6,"offset":33849},"end":{"line":746,"column":37,"offset":33880},"indent":[]}}],"position":{"start":{"line":746,"column":5,"offset":33848},"end":{"line":746,"column":102,"offset":33945},"indent":[]}}],"position":{"start":{"line":746,"column":5,"offset":33848},"end":{"line":746,"column":102,"offset":33945},"indent":[]}}],"position":{"start":{"line":746,"column":1,"offset":33844},"end":{"line":747,"column":1,"offset":33947},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react/react2/","children":[{"type":"text","value":"/docs/react/react2/","position":{"start":{"line":748,"column":6,"offset":33954},"end":{"line":748,"column":25,"offset":33973},"indent":[]}}],"position":{"start":{"line":748,"column":5,"offset":33953},"end":{"line":748,"column":78,"offset":34026},"indent":[]}}],"position":{"start":{"line":748,"column":5,"offset":33953},"end":{"line":748,"column":78,"offset":34026},"indent":[]}}],"position":{"start":{"line":748,"column":1,"offset":33949},"end":{"line":749,"column":1,"offset":34028},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/resources/","children":[{"type":"text","value":"/docs/quick-reference/resources/","position":{"start":{"line":750,"column":6,"offset":34035},"end":{"line":750,"column":38,"offset":34067},"indent":[]}}],"position":{"start":{"line":750,"column":5,"offset":34034},"end":{"line":750,"column":104,"offset":34133},"indent":[]}}],"position":{"start":{"line":750,"column":5,"offset":34034},"end":{"line":750,"column":104,"offset":34133},"indent":[]}}],"position":{"start":{"line":750,"column":1,"offset":34030},"end":{"line":751,"column":1,"offset":34135},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/vscode/","children":[{"type":"text","value":"/docs/quick-reference/vscode/","position":{"start":{"line":752,"column":6,"offset":34142},"end":{"line":752,"column":35,"offset":34171},"indent":[]}}],"position":{"start":{"line":752,"column":5,"offset":34141},"end":{"line":752,"column":98,"offset":34234},"indent":[]}}],"position":{"start":{"line":752,"column":5,"offset":34141},"end":{"line":752,"column":98,"offset":34234},"indent":[]}}],"position":{"start":{"line":752,"column":1,"offset":34137},"end":{"line":753,"column":1,"offset":34236},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/dev-utilities/","children":[{"type":"text","value":"/docs/tools/dev-utilities/","position":{"start":{"line":754,"column":6,"offset":34243},"end":{"line":754,"column":32,"offset":34269},"indent":[]}}],"position":{"start":{"line":754,"column":5,"offset":34242},"end":{"line":754,"column":92,"offset":34329},"indent":[]}}],"position":{"start":{"line":754,"column":5,"offset":34242},"end":{"line":754,"column":92,"offset":34329},"indent":[]}}],"position":{"start":{"line":754,"column":1,"offset":34238},"end":{"line":755,"column":1,"offset":34331},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/data-structures/","children":[{"type":"text","value":"/docs/tools/data-structures/","position":{"start":{"line":756,"column":6,"offset":34338},"end":{"line":756,"column":34,"offset":34366},"indent":[]}}],"position":{"start":{"line":756,"column":5,"offset":34337},"end":{"line":756,"column":96,"offset":34428},"indent":[]}}],"position":{"start":{"line":756,"column":5,"offset":34337},"end":{"line":756,"column":96,"offset":34428},"indent":[]}}],"position":{"start":{"line":756,"column":1,"offset":34333},"end":{"line":757,"column":1,"offset":34430},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/markdown-html/","children":[{"type":"text","value":"/docs/tools/markdown-html/","position":{"start":{"line":758,"column":6,"offset":34437},"end":{"line":758,"column":32,"offset":34463},"indent":[]}}],"position":{"start":{"line":758,"column":5,"offset":34436},"end":{"line":758,"column":92,"offset":34523},"indent":[]}}],"position":{"start":{"line":758,"column":5,"offset":34436},"end":{"line":758,"column":92,"offset":34523},"indent":[]}}],"position":{"start":{"line":758,"column":1,"offset":34432},"end":{"line":759,"column":1,"offset":34525},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/psql/","children":[{"type":"text","value":"/docs/quick-reference/psql/","position":{"start":{"line":760,"column":6,"offset":34532},"end":{"line":760,"column":33,"offset":34559},"indent":[]}}],"position":{"start":{"line":760,"column":5,"offset":34531},"end":{"line":760,"column":94,"offset":34620},"indent":[]}}],"position":{"start":{"line":760,"column":5,"offset":34531},"end":{"line":760,"column":94,"offset":34620},"indent":[]}}],"position":{"start":{"line":760,"column":1,"offset":34527},"end":{"line":760,"column":94,"offset":34620},"indent":[]}}],"position":{"start":{"line":562,"column":1,"offset":25574},"end":{"line":760,"column":94,"offset":34620},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":762,"column":1,"offset":34624},"end":{"line":762,"column":4,"offset":34627},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Links","position":{"start":{"line":764,"column":5,"offset":34635},"end":{"line":764,"column":10,"offset":34640},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":34631},"end":{"line":764,"column":10,"offset":34640},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Try it out without cloning the entire repo","position":{"start":{"line":766,"column":7,"offset":34650},"end":{"line":766,"column":49,"offset":34692},"indent":[]}}],"position":{"start":{"line":766,"column":1,"offset":34644},"end":{"line":766,"column":49,"offset":34692},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"link","title":null,"url":"https://exploring-firebase-4c023.firebaseapp.com/","children":[{"type":"text","value":"stackblitz demo hosted on firebase","position":{"start":{"line":768,"column":8,"offset":34703},"end":{"line":768,"column":42,"offset":34737},"indent":[]}}],"position":{"start":{"line":768,"column":7,"offset":34702},"end":{"line":768,"column":94,"offset":34789},"indent":[]}}],"position":{"start":{"line":768,"column":1,"offset":34696},"end":{"line":768,"column":94,"offset":34789},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/showcase/","children":[{"type":"text","value":"/showcase/","position":{"start":{"line":770,"column":6,"offset":34798},"end":{"line":770,"column":16,"offset":34808},"indent":[]}}],"position":{"start":{"line":770,"column":5,"offset":34797},"end":{"line":770,"column":60,"offset":34852},"indent":[]}}],"position":{"start":{"line":770,"column":5,"offset":34797},"end":{"line":770,"column":60,"offset":34852},"indent":[]}}],"position":{"start":{"line":770,"column":1,"offset":34793},"end":{"line":771,"column":1,"offset":34854},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/repos/","children":[{"type":"text","value":"/repos/","position":{"start":{"line":772,"column":6,"offset":34861},"end":{"line":772,"column":13,"offset":34868},"indent":[]}}],"position":{"start":{"line":772,"column":5,"offset":34860},"end":{"line":772,"column":54,"offset":34909},"indent":[]}}],"position":{"start":{"line":772,"column":5,"offset":34860},"end":{"line":772,"column":54,"offset":34909},"indent":[]}}],"position":{"start":{"line":772,"column":1,"offset":34856},"end":{"line":773,"column":1,"offset":34911},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/","children":[{"type":"text","value":"/blog/","position":{"start":{"line":774,"column":6,"offset":34918},"end":{"line":774,"column":12,"offset":34924},"indent":[]}}],"position":{"start":{"line":774,"column":5,"offset":34917},"end":{"line":774,"column":52,"offset":34964},"indent":[]}}],"position":{"start":{"line":774,"column":5,"offset":34917},"end":{"line":774,"column":52,"offset":34964},"indent":[]}}],"position":{"start":{"line":774,"column":1,"offset":34913},"end":{"line":775,"column":1,"offset":34966},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/jupyter-notebooks/","children":[{"type":"text","value":"/docs/jupyter-notebooks/","position":{"start":{"line":776,"column":6,"offset":34973},"end":{"line":776,"column":30,"offset":34997},"indent":[]}}],"position":{"start":{"line":776,"column":5,"offset":34972},"end":{"line":776,"column":88,"offset":35055},"indent":[]}}],"position":{"start":{"line":776,"column":5,"offset":34972},"end":{"line":776,"column":88,"offset":35055},"indent":[]}}],"position":{"start":{"line":776,"column":1,"offset":34968},"end":{"line":777,"column":1,"offset":35057},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/portfolio-web/","children":[{"type":"text","value":"/docs/portfolio-web/","position":{"start":{"line":778,"column":6,"offset":35064},"end":{"line":778,"column":26,"offset":35084},"indent":[]}}],"position":{"start":{"line":778,"column":5,"offset":35063},"end":{"line":778,"column":80,"offset":35138},"indent":[]}}],"position":{"start":{"line":778,"column":5,"offset":35063},"end":{"line":778,"column":80,"offset":35138},"indent":[]}}],"position":{"start":{"line":778,"column":1,"offset":35059},"end":{"line":779,"column":1,"offset":35140},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/python/","children":[{"type":"text","value":"/docs/python/","position":{"start":{"line":780,"column":6,"offset":35147},"end":{"line":780,"column":19,"offset":35160},"indent":[]}}],"position":{"start":{"line":780,"column":5,"offset":35146},"end":{"line":780,"column":66,"offset":35207},"indent":[]}}],"position":{"start":{"line":780,"column":5,"offset":35146},"end":{"line":780,"column":66,"offset":35207},"indent":[]}}],"position":{"start":{"line":780,"column":1,"offset":35142},"end":{"line":781,"column":1,"offset":35209},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/About/","children":[{"type":"text","value":"/docs/About/","position":{"start":{"line":782,"column":6,"offset":35216},"end":{"line":782,"column":18,"offset":35228},"indent":[]}}],"position":{"start":{"line":782,"column":5,"offset":35215},"end":{"line":782,"column":64,"offset":35274},"indent":[]}}],"position":{"start":{"line":782,"column":5,"offset":35215},"end":{"line":782,"column":64,"offset":35274},"indent":[]}}],"position":{"start":{"line":782,"column":1,"offset":35211},"end":{"line":783,"column":1,"offset":35276},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/About/resume/","children":[{"type":"text","value":"/docs/About/resume/","position":{"start":{"line":784,"column":6,"offset":35283},"end":{"line":784,"column":25,"offset":35302},"indent":[]}}],"position":{"start":{"line":784,"column":5,"offset":35282},"end":{"line":784,"column":78,"offset":35355},"indent":[]}}],"position":{"start":{"line":784,"column":5,"offset":35282},"end":{"line":784,"column":78,"offset":35355},"indent":[]}}],"position":{"start":{"line":784,"column":1,"offset":35278},"end":{"line":785,"column":1,"offset":35357},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/about/","children":[{"type":"text","value":"/docs/about/","position":{"start":{"line":786,"column":6,"offset":35364},"end":{"line":786,"column":18,"offset":35376},"indent":[]}}],"position":{"start":{"line":786,"column":5,"offset":35363},"end":{"line":786,"column":64,"offset":35422},"indent":[]}}],"position":{"start":{"line":786,"column":5,"offset":35363},"end":{"line":786,"column":64,"offset":35422},"indent":[]}}],"position":{"start":{"line":786,"column":1,"offset":35359},"end":{"line":787,"column":1,"offset":35424},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/faq/","children":[{"type":"text","value":"/docs/faq/","position":{"start":{"line":788,"column":6,"offset":35431},"end":{"line":788,"column":16,"offset":35441},"indent":[]}}],"position":{"start":{"line":788,"column":5,"offset":35430},"end":{"line":788,"column":60,"offset":35485},"indent":[]}}],"position":{"start":{"line":788,"column":5,"offset":35430},"end":{"line":788,"column":60,"offset":35485},"indent":[]}}],"position":{"start":{"line":788,"column":1,"offset":35426},"end":{"line":789,"column":1,"offset":35487},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/","children":[{"type":"text","value":"/docs/quick-reference/","position":{"start":{"line":790,"column":6,"offset":35494},"end":{"line":790,"column":28,"offset":35516},"indent":[]}}],"position":{"start":{"line":790,"column":5,"offset":35493},"end":{"line":790,"column":84,"offset":35572},"indent":[]}}],"position":{"start":{"line":790,"column":5,"offset":35493},"end":{"line":790,"column":84,"offset":35572},"indent":[]}}],"position":{"start":{"line":790,"column":1,"offset":35489},"end":{"line":791,"column":1,"offset":35574},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/Emmet/","children":[{"type":"text","value":"/docs/quick-reference/Emmet/","position":{"start":{"line":792,"column":6,"offset":35581},"end":{"line":792,"column":34,"offset":35609},"indent":[]}}],"position":{"start":{"line":792,"column":5,"offset":35580},"end":{"line":792,"column":96,"offset":35671},"indent":[]}}],"position":{"start":{"line":792,"column":5,"offset":35580},"end":{"line":792,"column":96,"offset":35671},"indent":[]}}],"position":{"start":{"line":792,"column":1,"offset":35576},"end":{"line":793,"column":1,"offset":35673},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/new-repo-instructions/","children":[{"type":"text","value":"/docs/quick-reference/new-repo-instructions/","position":{"start":{"line":794,"column":6,"offset":35680},"end":{"line":794,"column":50,"offset":35724},"indent":[]}}],"position":{"start":{"line":794,"column":5,"offset":35679},"end":{"line":794,"column":128,"offset":35802},"indent":[]}}],"position":{"start":{"line":794,"column":5,"offset":35679},"end":{"line":794,"column":128,"offset":35802},"indent":[]}}],"position":{"start":{"line":794,"column":1,"offset":35675},"end":{"line":795,"column":1,"offset":35804},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/links/Social/","children":[{"type":"text","value":"/docs/links/Social/","position":{"start":{"line":796,"column":6,"offset":35811},"end":{"line":796,"column":25,"offset":35830},"indent":[]}}],"position":{"start":{"line":796,"column":5,"offset":35810},"end":{"line":796,"column":78,"offset":35883},"indent":[]}}],"position":{"start":{"line":796,"column":5,"offset":35810},"end":{"line":796,"column":78,"offset":35883},"indent":[]}}],"position":{"start":{"line":796,"column":1,"offset":35806},"end":{"line":797,"column":1,"offset":35885},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/links/","children":[{"type":"text","value":"/docs/links/","position":{"start":{"line":798,"column":6,"offset":35892},"end":{"line":798,"column":18,"offset":35904},"indent":[]}}],"position":{"start":{"line":798,"column":5,"offset":35891},"end":{"line":798,"column":64,"offset":35950},"indent":[]}}],"position":{"start":{"line":798,"column":5,"offset":35891},"end":{"line":798,"column":64,"offset":35950},"indent":[]}}],"position":{"start":{"line":798,"column":1,"offset":35887},"end":{"line":799,"column":1,"offset":35952},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/quick-reference/installation/","children":[{"type":"text","value":"/docs/quick-reference/installation/","position":{"start":{"line":800,"column":6,"offset":35959},"end":{"line":800,"column":41,"offset":35994},"indent":[]}}],"position":{"start":{"line":800,"column":5,"offset":35958},"end":{"line":800,"column":110,"offset":36063},"indent":[]}}],"position":{"start":{"line":800,"column":5,"offset":35958},"end":{"line":800,"column":110,"offset":36063},"indent":[]}}],"position":{"start":{"line":800,"column":1,"offset":35954},"end":{"line":801,"column":1,"offset":36065},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/links/my-websites/","children":[{"type":"text","value":"/docs/links/my-websites/","position":{"start":{"line":802,"column":6,"offset":36072},"end":{"line":802,"column":30,"offset":36096},"indent":[]}}],"position":{"start":{"line":802,"column":5,"offset":36071},"end":{"line":802,"column":88,"offset":36154},"indent":[]}}],"position":{"start":{"line":802,"column":5,"offset":36071},"end":{"line":802,"column":88,"offset":36154},"indent":[]}}],"position":{"start":{"line":802,"column":1,"offset":36067},"end":{"line":803,"column":1,"offset":36156},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/","children":[{"type":"text","value":"/docs/","position":{"start":{"line":804,"column":6,"offset":36163},"end":{"line":804,"column":12,"offset":36169},"indent":[]}}],"position":{"start":{"line":804,"column":5,"offset":36162},"end":{"line":804,"column":52,"offset":36209},"indent":[]}}],"position":{"start":{"line":804,"column":5,"offset":36162},"end":{"line":804,"column":52,"offset":36209},"indent":[]}}],"position":{"start":{"line":804,"column":1,"offset":36158},"end":{"line":805,"column":1,"offset":36211},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/community/","children":[{"type":"text","value":"/blog/community/","position":{"start":{"line":806,"column":6,"offset":36218},"end":{"line":806,"column":22,"offset":36234},"indent":[]}}],"position":{"start":{"line":806,"column":5,"offset":36217},"end":{"line":806,"column":72,"offset":36284},"indent":[]}}],"position":{"start":{"line":806,"column":5,"offset":36217},"end":{"line":806,"column":72,"offset":36284},"indent":[]}}],"position":{"start":{"line":806,"column":1,"offset":36213},"end":{"line":807,"column":1,"offset":36286},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/python/","children":[{"type":"text","value":"/blog/python/","position":{"start":{"line":808,"column":6,"offset":36293},"end":{"line":808,"column":19,"offset":36306},"indent":[]}}],"position":{"start":{"line":808,"column":5,"offset":36292},"end":{"line":808,"column":66,"offset":36353},"indent":[]}}],"position":{"start":{"line":808,"column":5,"offset":36292},"end":{"line":808,"column":66,"offset":36353},"indent":[]}}],"position":{"start":{"line":808,"column":1,"offset":36288},"end":{"line":809,"column":1,"offset":36355},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/resources/","children":[{"type":"text","value":"/docs/resources/","position":{"start":{"line":810,"column":6,"offset":36362},"end":{"line":810,"column":22,"offset":36378},"indent":[]}}],"position":{"start":{"line":810,"column":5,"offset":36361},"end":{"line":810,"column":72,"offset":36428},"indent":[]}}],"position":{"start":{"line":810,"column":5,"offset":36361},"end":{"line":810,"column":72,"offset":36428},"indent":[]}}],"position":{"start":{"line":810,"column":1,"offset":36357},"end":{"line":811,"column":1,"offset":36430},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react/createReactApp/","children":[{"type":"text","value":"/docs/react/createReactApp/","position":{"start":{"line":812,"column":6,"offset":36437},"end":{"line":812,"column":33,"offset":36464},"indent":[]}}],"position":{"start":{"line":812,"column":5,"offset":36436},"end":{"line":812,"column":94,"offset":36525},"indent":[]}}],"position":{"start":{"line":812,"column":5,"offset":36436},"end":{"line":812,"column":94,"offset":36525},"indent":[]}}],"position":{"start":{"line":812,"column":1,"offset":36432},"end":{"line":813,"column":1,"offset":36527},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/","children":[{"type":"text","value":"/docs/tools/","position":{"start":{"line":814,"column":6,"offset":36534},"end":{"line":814,"column":18,"offset":36546},"indent":[]}}],"position":{"start":{"line":814,"column":5,"offset":36533},"end":{"line":814,"column":64,"offset":36592},"indent":[]}}],"position":{"start":{"line":814,"column":5,"offset":36533},"end":{"line":814,"column":64,"offset":36592},"indent":[]}}],"position":{"start":{"line":814,"column":1,"offset":36529},"end":{"line":815,"column":1,"offset":36594},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/notes-template/","children":[{"type":"text","value":"/notes-template/","position":{"start":{"line":816,"column":6,"offset":36601},"end":{"line":816,"column":22,"offset":36617},"indent":[]}}],"position":{"start":{"line":816,"column":5,"offset":36600},"end":{"line":816,"column":72,"offset":36667},"indent":[]}}],"position":{"start":{"line":816,"column":5,"offset":36600},"end":{"line":816,"column":72,"offset":36667},"indent":[]}}],"position":{"start":{"line":816,"column":1,"offset":36596},"end":{"line":817,"column":1,"offset":36669},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/my-medium/","children":[{"type":"text","value":"/blog/my-medium/","position":{"start":{"line":818,"column":6,"offset":36676},"end":{"line":818,"column":22,"offset":36692},"indent":[]}}],"position":{"start":{"line":818,"column":5,"offset":36675},"end":{"line":818,"column":72,"offset":36742},"indent":[]}}],"position":{"start":{"line":818,"column":5,"offset":36675},"end":{"line":818,"column":72,"offset":36742},"indent":[]}}],"position":{"start":{"line":818,"column":1,"offset":36671},"end":{"line":819,"column":1,"offset":36744},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/default-readme/","children":[{"type":"text","value":"/docs/tools/default-readme/","position":{"start":{"line":820,"column":6,"offset":36751},"end":{"line":820,"column":33,"offset":36778},"indent":[]}}],"position":{"start":{"line":820,"column":5,"offset":36750},"end":{"line":820,"column":94,"offset":36839},"indent":[]}}],"position":{"start":{"line":820,"column":5,"offset":36750},"end":{"line":820,"column":94,"offset":36839},"indent":[]}}],"position":{"start":{"line":820,"column":1,"offset":36746},"end":{"line":821,"column":1,"offset":36841},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/plug-ins/","children":[{"type":"text","value":"/docs/tools/plug-ins/","position":{"start":{"line":822,"column":6,"offset":36848},"end":{"line":822,"column":27,"offset":36869},"indent":[]}}],"position":{"start":{"line":822,"column":5,"offset":36847},"end":{"line":822,"column":82,"offset":36924},"indent":[]}}],"position":{"start":{"line":822,"column":5,"offset":36847},"end":{"line":822,"column":82,"offset":36924},"indent":[]}}],"position":{"start":{"line":822,"column":1,"offset":36843},"end":{"line":823,"column":1,"offset":36926},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react/react2/","children":[{"type":"text","value":"/docs/react/react2/","position":{"start":{"line":824,"column":6,"offset":36933},"end":{"line":824,"column":25,"offset":36952},"indent":[]}}],"position":{"start":{"line":824,"column":5,"offset":36932},"end":{"line":824,"column":78,"offset":37005},"indent":[]}}],"position":{"start":{"line":824,"column":5,"offset":36932},"end":{"line":824,"column":78,"offset":37005},"indent":[]}}],"position":{"start":{"line":824,"column":1,"offset":36928},"end":{"line":825,"column":1,"offset":37007},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/notes-template/","children":[{"type":"text","value":"/docs/tools/notes-template/","position":{"start":{"line":826,"column":6,"offset":37014},"end":{"line":826,"column":33,"offset":37041},"indent":[]}}],"position":{"start":{"line":826,"column":5,"offset":37013},"end":{"line":826,"column":94,"offset":37102},"indent":[]}}],"position":{"start":{"line":826,"column":5,"offset":37013},"end":{"line":826,"column":94,"offset":37102},"indent":[]}}],"position":{"start":{"line":826,"column":1,"offset":37009},"end":{"line":827,"column":1,"offset":37104},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/review/","children":[{"type":"text","value":"/review/","position":{"start":{"line":828,"column":6,"offset":37111},"end":{"line":828,"column":14,"offset":37119},"indent":[]}}],"position":{"start":{"line":828,"column":5,"offset":37110},"end":{"line":828,"column":56,"offset":37161},"indent":[]}}],"position":{"start":{"line":828,"column":5,"offset":37110},"end":{"line":828,"column":56,"offset":37161},"indent":[]}}],"position":{"start":{"line":828,"column":1,"offset":37106},"end":{"line":829,"column":1,"offset":37163},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/articles/basic-web-dev/","children":[{"type":"text","value":"/docs/articles/basic-web-dev/","position":{"start":{"line":830,"column":6,"offset":37170},"end":{"line":830,"column":35,"offset":37199},"indent":[]}}],"position":{"start":{"line":830,"column":5,"offset":37169},"end":{"line":830,"column":98,"offset":37262},"indent":[]}}],"position":{"start":{"line":830,"column":5,"offset":37169},"end":{"line":830,"column":98,"offset":37262},"indent":[]}}],"position":{"start":{"line":830,"column":1,"offset":37165},"end":{"line":831,"column":1,"offset":37264},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/blog/data-structures/","children":[{"type":"text","value":"/blog/data-structures/","position":{"start":{"line":832,"column":6,"offset":37271},"end":{"line":832,"column":28,"offset":37293},"indent":[]}}],"position":{"start":{"line":832,"column":5,"offset":37270},"end":{"line":832,"column":84,"offset":37349},"indent":[]}}],"position":{"start":{"line":832,"column":5,"offset":37270},"end":{"line":832,"column":84,"offset":37349},"indent":[]}}],"position":{"start":{"line":832,"column":1,"offset":37266},"end":{"line":833,"column":1,"offset":37351},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/About/me/","children":[{"type":"text","value":"/docs/About/me/","position":{"start":{"line":834,"column":6,"offset":37358},"end":{"line":834,"column":21,"offset":37373},"indent":[]}}],"position":{"start":{"line":834,"column":5,"offset":37357},"end":{"line":834,"column":70,"offset":37422},"indent":[]}}],"position":{"start":{"line":834,"column":5,"offset":37357},"end":{"line":834,"column":70,"offset":37422},"indent":[]}}],"position":{"start":{"line":834,"column":1,"offset":37353},"end":{"line":835,"column":1,"offset":37424},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/About/introduction2bg/","children":[{"type":"text","value":"/docs/About/introduction2bg/","position":{"start":{"line":836,"column":6,"offset":37431},"end":{"line":836,"column":34,"offset":37459},"indent":[]}}],"position":{"start":{"line":836,"column":5,"offset":37430},"end":{"line":836,"column":96,"offset":37521},"indent":[]}}],"position":{"start":{"line":836,"column":5,"offset":37430},"end":{"line":836,"column":96,"offset":37521},"indent":[]}}],"position":{"start":{"line":836,"column":1,"offset":37426},"end":{"line":837,"column":1,"offset":37523},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react/","children":[{"type":"text","value":"/docs/react/","position":{"start":{"line":838,"column":6,"offset":37530},"end":{"line":838,"column":18,"offset":37542},"indent":[]}}],"position":{"start":{"line":838,"column":5,"offset":37529},"end":{"line":838,"column":64,"offset":37588},"indent":[]}}],"position":{"start":{"line":838,"column":5,"offset":37529},"end":{"line":838,"column":64,"offset":37588},"indent":[]}}],"position":{"start":{"line":838,"column":1,"offset":37525},"end":{"line":839,"column":1,"offset":37590},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/tools/Git-Html-Preview/","children":[{"type":"text","value":"/docs/tools/Git-Html-Preview/","position":{"start":{"line":840,"column":6,"offset":37597},"end":{"line":840,"column":35,"offset":37626},"indent":[]}}],"position":{"start":{"line":840,"column":5,"offset":37596},"end":{"line":840,"column":98,"offset":37689},"indent":[]}}],"position":{"start":{"line":840,"column":5,"offset":37596},"end":{"line":840,"column":98,"offset":37689},"indent":[]}}],"position":{"start":{"line":840,"column":1,"offset":37592},"end":{"line":841,"column":1,"offset":37691},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/gallery/","children":[{"type":"text","value":"/gallery/","position":{"start":{"line":842,"column":6,"offset":37698},"end":{"line":842,"column":15,"offset":37707},"indent":[]}}],"position":{"start":{"line":842,"column":5,"offset":37697},"end":{"line":842,"column":58,"offset":37750},"indent":[]}}],"position":{"start":{"line":842,"column":5,"offset":37697},"end":{"line":842,"column":58,"offset":37750},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":37693},"end":{"line":842,"column":58,"offset":37750},"indent":[]}}],"position":{"start":{"line":770,"column":1,"offset":34793},"end":{"line":842,"column":58,"offset":37750},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Blog","position":{"start":{"line":844,"column":4,"offset":37757},"end":{"line":844,"column":8,"offset":37761},"indent":[]}}],"position":{"start":{"line":844,"column":1,"offset":37754},"end":{"line":844,"column":8,"offset":37761},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/react/react2/?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"introductory-react-part-2","position":{"start":{"line":846,"column":6,"offset":37770},"end":{"line":846,"column":31,"offset":37795},"indent":[]}}],"position":{"start":{"line":846,"column":5,"offset":37769},"end":{"line":846,"column":146,"offset":37910},"indent":[]}}],"position":{"start":{"line":846,"column":5,"offset":37769},"end":{"line":846,"column":146,"offset":37910},"indent":[]}}],"position":{"start":{"line":846,"column":1,"offset":37765},"end":{"line":847,"column":1,"offset":37912},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bryanguner.medium.com/a-very-quick-guide-to-calculating-big-o-computational-complexity-eb1557e85fa3?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"a-very-quick-guide-to-calculating-big-o-computational-complexity","position":{"start":{"line":848,"column":6,"offset":37919},"end":{"line":848,"column":70,"offset":37983},"indent":[]}}],"position":{"start":{"line":848,"column":5,"offset":37918},"end":{"line":848,"column":242,"offset":38155},"indent":[]}}],"position":{"start":{"line":848,"column":5,"offset":37918},"end":{"line":848,"column":242,"offset":38155},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":37914},"end":{"line":849,"column":1,"offset":38157},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://javascript.plainenglish.io/introduction-to-react-for-complete-beginners-8021738aa1ad?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"introduction-to-react-for-complete-beginners","position":{"start":{"line":850,"column":6,"offset":38164},"end":{"line":850,"column":50,"offset":38208},"indent":[]}}],"position":{"start":{"line":850,"column":5,"offset":38163},"end":{"line":850,"column":207,"offset":38365},"indent":[]}}],"position":{"start":{"line":850,"column":5,"offset":38163},"end":{"line":850,"column":207,"offset":38365},"indent":[]}}],"position":{"start":{"line":850,"column":1,"offset":38159},"end":{"line":851,"column":1,"offset":38367},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://javascript.plainenglish.io/scheduling-settimeout-and-setinterval-fcb2f40d16f7?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"scheduling-settimeout-and-setinterval","position":{"start":{"line":852,"column":6,"offset":38374},"end":{"line":852,"column":43,"offset":38411},"indent":[]}}],"position":{"start":{"line":852,"column":5,"offset":38373},"end":{"line":852,"column":193,"offset":38561},"indent":[]}}],"position":{"start":{"line":852,"column":5,"offset":38373},"end":{"line":852,"column":193,"offset":38561},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":38369},"end":{"line":853,"column":1,"offset":38563},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bryanguner.medium.com/css-animations-d196a20099a5?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"css-animations","position":{"start":{"line":854,"column":6,"offset":38570},"end":{"line":854,"column":20,"offset":38584},"indent":[]}}],"position":{"start":{"line":854,"column":5,"offset":38569},"end":{"line":854,"column":142,"offset":38706},"indent":[]}}],"position":{"start":{"line":854,"column":5,"offset":38569},"end":{"line":854,"column":142,"offset":38706},"indent":[]}}],"position":{"start":{"line":854,"column":1,"offset":38565},"end":{"line":855,"column":1,"offset":38708},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bryanguner.medium.com/these-are-the-bash-shell-commands-that-stand-between-me-and-insanity-984865ba5d1b?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"these-are-the-bash-shell-commands-that-stand-between-me-and-insanity","position":{"start":{"line":856,"column":6,"offset":38715},"end":{"line":856,"column":74,"offset":38783},"indent":[]}}],"position":{"start":{"line":856,"column":5,"offset":38714},"end":{"line":856,"column":250,"offset":38959},"indent":[]}}],"position":{"start":{"line":856,"column":5,"offset":38714},"end":{"line":856,"column":250,"offset":38959},"indent":[]}}],"position":{"start":{"line":856,"column":1,"offset":38710},"end":{"line":857,"column":1,"offset":38961},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bryanguner.medium.com/how-to-implement-native-es6-data-structures-using-arrays-objects-ce953b9f6a07?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"how-to-implement-native-es6-data-structures-using-arrays-objects","position":{"start":{"line":858,"column":6,"offset":38968},"end":{"line":858,"column":70,"offset":39032},"indent":[]}}],"position":{"start":{"line":858,"column":5,"offset":38967},"end":{"line":858,"column":242,"offset":39204},"indent":[]}}],"position":{"start":{"line":858,"column":5,"offset":38967},"end":{"line":858,"column":242,"offset":39204},"indent":[]}}],"position":{"start":{"line":858,"column":1,"offset":38963},"end":{"line":859,"column":1,"offset":39206},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/codex/objects-in-javascript-cc578a781e1d?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"objects-in-javascript","position":{"start":{"line":860,"column":6,"offset":39213},"end":{"line":860,"column":27,"offset":39234},"indent":[]}}],"position":{"start":{"line":860,"column":5,"offset":39212},"end":{"line":860,"column":151,"offset":39358},"indent":[]}}],"position":{"start":{"line":860,"column":5,"offset":39212},"end":{"line":860,"column":151,"offset":39358},"indent":[]}}],"position":{"start":{"line":860,"column":1,"offset":39208},"end":{"line":861,"column":1,"offset":39360},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://javascript.plainenglish.io/absolute-beginners-guide-to-javascript-part-1-e222d166b6e1?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"absolute-beginners-guide-to-javascript-part1","position":{"start":{"line":862,"column":6,"offset":39367},"end":{"line":862,"column":50,"offset":39411},"indent":[]}}],"position":{"start":{"line":862,"column":5,"offset":39366},"end":{"line":862,"column":208,"offset":39569},"indent":[]}}],"position":{"start":{"line":862,"column":5,"offset":39366},"end":{"line":862,"column":208,"offset":39569},"indent":[]}}],"position":{"start":{"line":862,"column":1,"offset":39362},"end":{"line":863,"column":1,"offset":39571},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/star-gazers/web-developer-resource-list-part-4-fd686892b9eb?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"web-developer-resource-list-part-4","position":{"start":{"line":864,"column":6,"offset":39578},"end":{"line":864,"column":40,"offset":39612},"indent":[]}}],"position":{"start":{"line":864,"column":5,"offset":39577},"end":{"line":864,"column":183,"offset":39755},"indent":[]}}],"position":{"start":{"line":864,"column":5,"offset":39577},"end":{"line":864,"column":183,"offset":39755},"indent":[]}}],"position":{"start":{"line":864,"column":1,"offset":39573},"end":{"line":865,"column":1,"offset":39757},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/codex/vscode-extensions-specifically-for-javascript-development-ea91305cbd4a?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"vscode-extensions-specifically-for-javascript-development","position":{"start":{"line":866,"column":6,"offset":39764},"end":{"line":866,"column":63,"offset":39821},"indent":[]}}],"position":{"start":{"line":866,"column":5,"offset":39763},"end":{"line":866,"column":223,"offset":39981},"indent":[]}}],"position":{"start":{"line":866,"column":5,"offset":39763},"end":{"line":866,"column":223,"offset":39981},"indent":[]}}],"position":{"start":{"line":866,"column":1,"offset":39759},"end":{"line":867,"column":1,"offset":39983},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bryanguner.medium.com/a-list-of-all-of-my-articles-to-link-to-future-posts-1f6f88ebdf5b?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"a-list-of-all-of-my-articles-to-link-to-future-posts","position":{"start":{"line":868,"column":6,"offset":39990},"end":{"line":868,"column":58,"offset":40042},"indent":[]}}],"position":{"start":{"line":868,"column":5,"offset":39989},"end":{"line":868,"column":218,"offset":40202},"indent":[]}}],"position":{"start":{"line":868,"column":5,"offset":39989},"end":{"line":868,"column":218,"offset":40202},"indent":[]}}],"position":{"start":{"line":868,"column":1,"offset":39985},"end":{"line":869,"column":1,"offset":40204},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://javascript.plainenglish.io/lists-stacks-and-queues-in-javascript-88466fae0fbb?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"lists-stacks-and-queues-in-javascript","position":{"start":{"line":870,"column":6,"offset":40211},"end":{"line":870,"column":43,"offset":40248},"indent":[]}}],"position":{"start":{"line":870,"column":5,"offset":40210},"end":{"line":870,"column":193,"offset":40398},"indent":[]}}],"position":{"start":{"line":870,"column":5,"offset":40210},"end":{"line":870,"column":193,"offset":40398},"indent":[]}}],"position":{"start":{"line":870,"column":1,"offset":40206},"end":{"line":871,"column":1,"offset":40400},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bryanguner.medium.com/web-development-resources-part-3-f862ceb2b82a?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"web-development-resources-part-3","position":{"start":{"line":872,"column":6,"offset":40407},"end":{"line":872,"column":38,"offset":40439},"indent":[]}}],"position":{"start":{"line":872,"column":5,"offset":40406},"end":{"line":872,"column":178,"offset":40579},"indent":[]}}],"position":{"start":{"line":872,"column":5,"offset":40406},"end":{"line":872,"column":178,"offset":40579},"indent":[]}}],"position":{"start":{"line":872,"column":1,"offset":40402},"end":{"line":873,"column":1,"offset":40581},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/codex/web-development-interview-part-3-826ae81a9107?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"web-development-interview-part-3","position":{"start":{"line":874,"column":6,"offset":40588},"end":{"line":874,"column":38,"offset":40620},"indent":[]}}],"position":{"start":{"line":874,"column":5,"offset":40587},"end":{"line":874,"column":173,"offset":40755},"indent":[]}}],"position":{"start":{"line":874,"column":5,"offset":40587},"end":{"line":874,"column":173,"offset":40755},"indent":[]}}],"position":{"start":{"line":874,"column":1,"offset":40583},"end":{"line":875,"column":1,"offset":40757},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bryanguner.medium.com/running-list-of-interesting-articles-tools-and-ideas-as-i-explore-them-b87a2f04d9a6?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"running-list-of-interesting-articles-tools","position":{"start":{"line":876,"column":6,"offset":40764},"end":{"line":876,"column":48,"offset":40806},"indent":[]}}],"position":{"start":{"line":876,"column":5,"offset":40763},"end":{"line":876,"column":226,"offset":40984},"indent":[]}}],"position":{"start":{"line":876,"column":5,"offset":40763},"end":{"line":876,"column":226,"offset":40984},"indent":[]}}],"position":{"start":{"line":876,"column":1,"offset":40759},"end":{"line":877,"column":1,"offset":40986},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://bryanguner.medium.com/the-best-cloud-based-code-playgrounds-of-2021-part-1-cdae9448db24?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"the-best-cloud-based-code-playgrounds-of-2021-part-1","position":{"start":{"line":878,"column":6,"offset":40993},"end":{"line":878,"column":58,"offset":41045},"indent":[]}}],"position":{"start":{"line":878,"column":5,"offset":40992},"end":{"line":878,"column":218,"offset":41205},"indent":[]}}],"position":{"start":{"line":878,"column":5,"offset":40992},"end":{"line":878,"column":218,"offset":41205},"indent":[]}}],"position":{"start":{"line":878,"column":1,"offset":40988},"end":{"line":879,"column":1,"offset":41207},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/codex/front-end-interview-questions-part-2-86ddc0e91443?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"front-end-interview-questions-part-2","position":{"start":{"line":880,"column":6,"offset":41214},"end":{"line":880,"column":42,"offset":41250},"indent":[]}}],"position":{"start":{"line":880,"column":5,"offset":41213},"end":{"line":880,"column":181,"offset":41389},"indent":[]}}],"position":{"start":{"line":880,"column":5,"offset":41213},"end":{"line":880,"column":181,"offset":41389},"indent":[]}}],"position":{"start":{"line":880,"column":1,"offset":41209},"end":{"line":881,"column":1,"offset":41391},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/star-gazers/web-developer-resource-list-part-2-9c5cb56ab263?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"web-developer-resource-list-part-2","position":{"start":{"line":882,"column":6,"offset":41398},"end":{"line":882,"column":40,"offset":41432},"indent":[]}}],"position":{"start":{"line":882,"column":5,"offset":41397},"end":{"line":882,"column":183,"offset":41575},"indent":[]}}],"position":{"start":{"line":882,"column":5,"offset":41397},"end":{"line":882,"column":183,"offset":41575},"indent":[]}}],"position":{"start":{"line":882,"column":1,"offset":41393},"end":{"line":883,"column":1,"offset":41577},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://levelup.gitconnected.com/http-basics-8f02a96a834a?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"http-basics","position":{"start":{"line":884,"column":6,"offset":41584},"end":{"line":884,"column":17,"offset":41595},"indent":[]}}],"position":{"start":{"line":884,"column":5,"offset":41583},"end":{"line":884,"column":139,"offset":41717},"indent":[]}}],"position":{"start":{"line":884,"column":5,"offset":41583},"end":{"line":884,"column":139,"offset":41717},"indent":[]}}],"position":{"start":{"line":884,"column":1,"offset":41579},"end":{"line":885,"column":1,"offset":41719},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://javascript.plainenglish.io/javascript-frameworks-libraries-35931e187a35?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"javascript-frameworks-libraries","position":{"start":{"line":886,"column":6,"offset":41726},"end":{"line":886,"column":37,"offset":41757},"indent":[]}}],"position":{"start":{"line":886,"column":5,"offset":41725},"end":{"line":886,"column":181,"offset":41901},"indent":[]}}],"position":{"start":{"line":886,"column":5,"offset":41725},"end":{"line":886,"column":181,"offset":41901},"indent":[]}}],"position":{"start":{"line":886,"column":1,"offset":41721},"end":{"line":887,"column":1,"offset":41903},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://javascript.plainenglish.io/my-take-on-awesome-javascript-243255451e74?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"my-take-on-awesome-javascript","position":{"start":{"line":888,"column":6,"offset":41910},"end":{"line":888,"column":35,"offset":41939},"indent":[]}}],"position":{"start":{"line":888,"column":5,"offset":41909},"end":{"line":888,"column":177,"offset":42081},"indent":[]}}],"position":{"start":{"line":888,"column":5,"offset":41909},"end":{"line":888,"column":177,"offset":42081},"indent":[]}}],"position":{"start":{"line":888,"column":1,"offset":41905},"end":{"line":889,"column":1,"offset":42083},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://levelup.gitconnected.com/everything-you-need-to-get-started-with-vscode-extensions-resources-b9f4c8d91931?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"get-started-with-vscode-extensions","position":{"start":{"line":890,"column":6,"offset":42090},"end":{"line":890,"column":40,"offset":42124},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":42089},"end":{"line":890,"column":218,"offset":42302},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":42089},"end":{"line":890,"column":218,"offset":42302},"indent":[]}}],"position":{"start":{"line":890,"column":1,"offset":42085},"end":{"line":891,"column":1,"offset":42304},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://levelup.gitconnected.com/my-favorite-vscode-themes-9bab65af3f0f?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"my-favorite-vscode-themes","position":{"start":{"line":892,"column":6,"offset":42311},"end":{"line":892,"column":31,"offset":42336},"indent":[]}}],"position":{"start":{"line":892,"column":5,"offset":42310},"end":{"line":892,"column":167,"offset":42472},"indent":[]}}],"position":{"start":{"line":892,"column":5,"offset":42310},"end":{"line":892,"column":167,"offset":42472},"indent":[]}}],"position":{"start":{"line":892,"column":1,"offset":42306},"end":{"line":893,"column":1,"offset":42474},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://levelup.gitconnected.com/object-oriented-programming-in-javascript-d45007d06333?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"object-oriented-programming-in-javascript","position":{"start":{"line":894,"column":6,"offset":42481},"end":{"line":894,"column":47,"offset":42522},"indent":[]}}],"position":{"start":{"line":894,"column":5,"offset":42480},"end":{"line":894,"column":199,"offset":42674},"indent":[]}}],"position":{"start":{"line":894,"column":5,"offset":42480},"end":{"line":894,"column":199,"offset":42674},"indent":[]}}],"position":{"start":{"line":894,"column":1,"offset":42476},"end":{"line":895,"column":1,"offset":42676},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/codex/javascript-rotate-array-problemwalkthrough-31deb19ebba1?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"javascript-rotate-array-problemwalkthrough","position":{"start":{"line":896,"column":6,"offset":42683},"end":{"line":896,"column":48,"offset":42725},"indent":[]}}],"position":{"start":{"line":896,"column":5,"offset":42682},"end":{"line":896,"column":193,"offset":42870},"indent":[]}}],"position":{"start":{"line":896,"column":5,"offset":42682},"end":{"line":896,"column":193,"offset":42870},"indent":[]}}],"position":{"start":{"line":896,"column":1,"offset":42678},"end":{"line":897,"column":1,"offset":42872},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://levelup.gitconnected.com/super-simple-intro-to-html-651d695f9bc?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"super-simple-intro-to-html-651d695f9bc","position":{"start":{"line":898,"column":6,"offset":42879},"end":{"line":898,"column":44,"offset":42917},"indent":[]}}],"position":{"start":{"line":898,"column":5,"offset":42878},"end":{"line":898,"column":180,"offset":43053},"indent":[]}}],"position":{"start":{"line":898,"column":5,"offset":42878},"end":{"line":898,"column":180,"offset":43053},"indent":[]}}],"position":{"start":{"line":898,"column":1,"offset":42874},"end":{"line":899,"column":1,"offset":43055},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/codex/everything-you-need-to-know-about-relational-databases-sql-postgresql-and-sequelize-to-build-8acb68284a98?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"everything-you-need-to-know-about-relational-databases-sql-postgresql","position":{"start":{"line":900,"column":6,"offset":43062},"end":{"line":900,"column":75,"offset":43131},"indent":[]}}],"position":{"start":{"line":900,"column":5,"offset":43061},"end":{"line":900,"column":270,"offset":43326},"indent":[]}}],"position":{"start":{"line":900,"column":5,"offset":43061},"end":{"line":900,"column":270,"offset":43326},"indent":[]}}],"position":{"start":{"line":900,"column":1,"offset":43057},"end":{"line":901,"column":1,"offset":43328},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://levelup.gitconnected.com/understanding-git-a-beginners-guide-containing-cheat-sheets-resources-b50c9c01a107?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"understanding-git-a-beginners-guide-containing-cheat-sheets-resources-b50c9c01a107","position":{"start":{"line":902,"column":6,"offset":43335},"end":{"line":902,"column":88,"offset":43417},"indent":[]}}],"position":{"start":{"line":902,"column":5,"offset":43334},"end":{"line":902,"column":268,"offset":43597},"indent":[]}}],"position":{"start":{"line":902,"column":5,"offset":43334},"end":{"line":902,"column":268,"offset":43597},"indent":[]}}],"position":{"start":{"line":902,"column":1,"offset":43330},"end":{"line":903,"column":1,"offset":43599},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://javascript.plainenglish.io/complete-javascript-reference-guide-64306cd6b0db?source=your_stories_page-------------------------------------","children":[{"type":"text","value":"complete-javascript-reference-guide-64306cd6b0db","position":{"start":{"line":904,"column":6,"offset":43606},"end":{"line":904,"column":54,"offset":43654},"indent":[]}}],"position":{"start":{"line":904,"column":5,"offset":43605},"end":{"line":904,"column":202,"offset":43802},"indent":[]}},{"type":"text","value":"- [","position":{"start":{"line":904,"column":202,"offset":43802},"end":{"line":904,"column":205,"offset":43805},"indent":[]}}],"position":{"start":{"line":904,"column":5,"offset":43605},"end":{"line":904,"column":205,"offset":43805},"indent":[]}}],"position":{"start":{"line":904,"column":1,"offset":43601},"end":{"line":904,"column":205,"offset":43805},"indent":[]}}],"position":{"start":{"line":846,"column":1,"offset":37765},"end":{"line":904,"column":205,"offset":43805},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"</div>","position":{"start":{"line":906,"column":1,"offset":43809},"end":{"line":906,"column":7,"offset":43815},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":908,"column":1,"offset":43819},"end":{"line":908,"column":4,"offset":43822},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":910,"column":1,"offset":43826},"end":{"line":910,"column":4,"offset":43829},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"🚀 Quick start","position":{"start":{"line":912,"column":4,"offset":43836},"end":{"line":912,"column":18,"offset":43850},"indent":[]}}],"position":{"start":{"line":912,"column":1,"offset":43833},"end":{"line":912,"column":18,"offset":43850},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Create a Gatsby site.","position":{"start":{"line":914,"column":6,"offset":43859},"end":{"line":914,"column":27,"offset":43880},"indent":[]}}],"position":{"start":{"line":914,"column":4,"offset":43857},"end":{"line":914,"column":29,"offset":43882},"indent":[]}}],"position":{"start":{"line":914,"column":4,"offset":43857},"end":{"line":914,"column":29,"offset":43882},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the Gatsby CLI to create a new site, specifying the default starter.","position":{"start":{"line":916,"column":5,"offset":43890},"end":{"line":916,"column":77,"offset":43962},"indent":[]}}],"position":{"start":{"line":916,"column":5,"offset":43890},"end":{"line":916,"column":77,"offset":43962},"indent":[]}}],"position":{"start":{"line":914,"column":1,"offset":43854},"end":{"line":916,"column":77,"offset":43962},"indent":[1,1]}}],"position":{"start":{"line":914,"column":1,"offset":43854},"end":{"line":916,"column":77,"offset":43962},"indent":[1,1]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">   <span class=\"token comment\"># create a new Gatsby site using the default starter</span>\n\n   gatsby new my-default-starter https://github.com/gatsbyjs/gatsby-starter-default</code></pre></div>","position":{"start":{"line":918,"column":1,"offset":43966},"end":{"line":924,"column":4,"offset":44126},"indent":[1,1,1,1,1,1]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Start developing.","position":{"start":{"line":926,"column":6,"offset":44135},"end":{"line":926,"column":23,"offset":44152},"indent":[]}}],"position":{"start":{"line":926,"column":4,"offset":44133},"end":{"line":926,"column":25,"offset":44154},"indent":[]}}],"position":{"start":{"line":926,"column":4,"offset":44133},"end":{"line":926,"column":25,"offset":44154},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Navigate into your new site's directory and start it up.","position":{"start":{"line":928,"column":5,"offset":44162},"end":{"line":928,"column":61,"offset":44218},"indent":[]}}],"position":{"start":{"line":928,"column":5,"offset":44162},"end":{"line":928,"column":61,"offset":44218},"indent":[]}}],"position":{"start":{"line":926,"column":1,"offset":44130},"end":{"line":928,"column":61,"offset":44218},"indent":[1,1]}}],"position":{"start":{"line":926,"column":1,"offset":44130},"end":{"line":928,"column":61,"offset":44218},"indent":[1,1]}},{"type":"html","lang":"bash","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">   <span class=\"token builtin class-name\">cd</span> my-default-starter/\n\n   gatsby develop</code></pre></div>","position":{"start":{"line":930,"column":1,"offset":44222},"end":{"line":936,"column":4,"offset":44286},"indent":[1,1,1,1,1,1]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Open the source code and start editing!","position":{"start":{"line":938,"column":6,"offset":44295},"end":{"line":938,"column":45,"offset":44334},"indent":[]}}],"position":{"start":{"line":938,"column":4,"offset":44293},"end":{"line":938,"column":47,"offset":44336},"indent":[]}}],"position":{"start":{"line":938,"column":4,"offset":44293},"end":{"line":938,"column":47,"offset":44336},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your site is now running at ","position":{"start":{"line":940,"column":5,"offset":44344},"end":{"line":940,"column":33,"offset":44372},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">http://localhost:8000</code>","position":{"start":{"line":940,"column":33,"offset":44372},"end":{"line":940,"column":56,"offset":44395},"indent":[]}},{"type":"text","value":"!","position":{"start":{"line":940,"column":56,"offset":44395},"end":{"line":940,"column":57,"offset":44396},"indent":[]}}],"position":{"start":{"line":940,"column":5,"offset":44344},"end":{"line":940,"column":57,"offset":44396},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Note: You'll also see a second link:","position":{"start":{"line":942,"column":6,"offset":44405},"end":{"line":942,"column":42,"offset":44441},"indent":[]}}],"position":{"start":{"line":942,"column":5,"offset":44404},"end":{"line":942,"column":43,"offset":44442},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">http://localhost:8000/___graphql</code>","position":{"start":{"line":942,"column":43,"offset":44442},"end":{"line":942,"column":77,"offset":44476},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":". This is a tool you can use to experiment with querying your data. Learn more about using this tool in the ","position":{"start":{"line":942,"column":78,"offset":44477},"end":{"line":942,"column":186,"offset":44585},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/tutorial/part-five/#introducing-graphiql","children":[{"type":"text","value":"Gatsby tutorial","position":{"start":{"line":942,"column":187,"offset":44586},"end":{"line":942,"column":202,"offset":44601},"indent":[]}}],"position":{"start":{"line":942,"column":186,"offset":44585},"end":{"line":942,"column":270,"offset":44669},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":942,"column":270,"offset":44669},"end":{"line":942,"column":271,"offset":44670},"indent":[]}}],"position":{"start":{"line":942,"column":77,"offset":44476},"end":{"line":942,"column":272,"offset":44671},"indent":[]}}],"position":{"start":{"line":942,"column":5,"offset":44404},"end":{"line":942,"column":272,"offset":44671},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Open the ","position":{"start":{"line":944,"column":5,"offset":44679},"end":{"line":944,"column":14,"offset":44688},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">my-default-starter</code>","position":{"start":{"line":944,"column":14,"offset":44688},"end":{"line":944,"column":34,"offset":44708},"indent":[]}},{"type":"text","value":" directory in your code editor of choice and edit ","position":{"start":{"line":944,"column":34,"offset":44708},"end":{"line":944,"column":84,"offset":44758},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">src/pages/index.js</code>","position":{"start":{"line":944,"column":84,"offset":44758},"end":{"line":944,"column":104,"offset":44778},"indent":[]}},{"type":"text","value":". Save your changes and the browser will update in real time!","position":{"start":{"line":944,"column":104,"offset":44778},"end":{"line":944,"column":165,"offset":44839},"indent":[]}}],"position":{"start":{"line":944,"column":5,"offset":44679},"end":{"line":944,"column":165,"offset":44839},"indent":[]}}],"position":{"start":{"line":938,"column":1,"offset":44290},"end":{"line":944,"column":165,"offset":44839},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":938,"column":1,"offset":44290},"end":{"line":944,"column":165,"offset":44839},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"🧐 What's inside?","position":{"start":{"line":946,"column":4,"offset":44846},"end":{"line":946,"column":21,"offset":44863},"indent":[]}}],"position":{"start":{"line":946,"column":1,"offset":44843},"end":{"line":946,"column":21,"offset":44863},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A quick look at the top-level files and directories you'll see in a Gatsby project.","position":{"start":{"line":948,"column":1,"offset":44867},"end":{"line":948,"column":84,"offset":44950},"indent":[]}}],"position":{"start":{"line":948,"column":1,"offset":44867},"end":{"line":948,"column":84,"offset":44950},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.\n\n├── node_modules\n\n├── src\n\n├── .gitignore\n\n├── .prettierrc\n\n├── gatsby-browser.js\n\n├── gatsby-config.js\n\n├── gatsby-node.js\n\n├── gatsby-ssr.js\n\n├── LICENSE\n\n├── package-lock.json\n\n├── package.json\n\n└── README.md</code></pre></div>","position":{"start":{"line":950,"column":1,"offset":44954},"end":{"line":974,"column":18,"offset":45244},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">/node_modules</code>","position":{"start":{"line":976,"column":6,"offset":45253},"end":{"line":976,"column":21,"offset":45268},"indent":[]}}],"position":{"start":{"line":976,"column":4,"offset":45251},"end":{"line":976,"column":23,"offset":45270},"indent":[]}},{"type":"text","value":": This directory contains all of the modules of code that your project depends on (npm packages) are automatically installed.","position":{"start":{"line":976,"column":23,"offset":45270},"end":{"line":976,"column":148,"offset":45395},"indent":[]}}],"position":{"start":{"line":976,"column":4,"offset":45251},"end":{"line":976,"column":148,"offset":45395},"indent":[]}}],"position":{"start":{"line":976,"column":1,"offset":45248},"end":{"line":977,"column":1,"offset":45397},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">/src</code>","position":{"start":{"line":978,"column":6,"offset":45404},"end":{"line":978,"column":12,"offset":45410},"indent":[]}}],"position":{"start":{"line":978,"column":4,"offset":45402},"end":{"line":978,"column":14,"offset":45412},"indent":[]}},{"type":"text","value":": This directory will contain all of the code related to what you will see on the front-end of your site (what you see in the browser) such as your site header or a page template. ","position":{"start":{"line":978,"column":14,"offset":45412},"end":{"line":978,"column":194,"offset":45592},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">src</code>","position":{"start":{"line":978,"column":194,"offset":45592},"end":{"line":978,"column":199,"offset":45597},"indent":[]}},{"type":"text","value":" is a convention for \"source code\".","position":{"start":{"line":978,"column":199,"offset":45597},"end":{"line":978,"column":234,"offset":45632},"indent":[]}}],"position":{"start":{"line":978,"column":4,"offset":45402},"end":{"line":978,"column":234,"offset":45632},"indent":[]}}],"position":{"start":{"line":978,"column":1,"offset":45399},"end":{"line":979,"column":1,"offset":45634},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">.gitignore</code>","position":{"start":{"line":980,"column":6,"offset":45641},"end":{"line":980,"column":18,"offset":45653},"indent":[]}}],"position":{"start":{"line":980,"column":4,"offset":45639},"end":{"line":980,"column":20,"offset":45655},"indent":[]}},{"type":"text","value":": This file tells git which files it should not track / not maintain a version history for.","position":{"start":{"line":980,"column":20,"offset":45655},"end":{"line":980,"column":111,"offset":45746},"indent":[]}}],"position":{"start":{"line":980,"column":4,"offset":45639},"end":{"line":980,"column":111,"offset":45746},"indent":[]}}],"position":{"start":{"line":980,"column":1,"offset":45636},"end":{"line":981,"column":1,"offset":45748},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">.prettierrc</code>","position":{"start":{"line":982,"column":6,"offset":45755},"end":{"line":982,"column":19,"offset":45768},"indent":[]}}],"position":{"start":{"line":982,"column":4,"offset":45753},"end":{"line":982,"column":21,"offset":45770},"indent":[]}},{"type":"text","value":": This is a configuration file for ","position":{"start":{"line":982,"column":21,"offset":45770},"end":{"line":982,"column":56,"offset":45805},"indent":[]}},{"type":"link","title":null,"url":"https://prettier.io/","children":[{"type":"text","value":"Prettier","position":{"start":{"line":982,"column":57,"offset":45806},"end":{"line":982,"column":65,"offset":45814},"indent":[]}}],"position":{"start":{"line":982,"column":56,"offset":45805},"end":{"line":982,"column":88,"offset":45837},"indent":[]}},{"type":"text","value":". Prettier is a tool to help keep the formatting of your code consistent.","position":{"start":{"line":982,"column":88,"offset":45837},"end":{"line":982,"column":161,"offset":45910},"indent":[]}}],"position":{"start":{"line":982,"column":4,"offset":45753},"end":{"line":982,"column":161,"offset":45910},"indent":[]}}],"position":{"start":{"line":982,"column":1,"offset":45750},"end":{"line":983,"column":1,"offset":45912},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">gatsby-browser.js</code>","position":{"start":{"line":984,"column":6,"offset":45919},"end":{"line":984,"column":25,"offset":45938},"indent":[]}}],"position":{"start":{"line":984,"column":4,"offset":45917},"end":{"line":984,"column":27,"offset":45940},"indent":[]}},{"type":"text","value":": This file is where Gatsby expects to find any usage of the ","position":{"start":{"line":984,"column":27,"offset":45940},"end":{"line":984,"column":88,"offset":46001},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/browser-apis/","children":[{"type":"text","value":"Gatsby browser APIs","position":{"start":{"line":984,"column":89,"offset":46002},"end":{"line":984,"column":108,"offset":46021},"indent":[]}}],"position":{"start":{"line":984,"column":88,"offset":46001},"end":{"line":984,"column":154,"offset":46067},"indent":[]}},{"type":"text","value":" (if any). These allow customization/extension of default Gatsby settings affecting the browser.","position":{"start":{"line":984,"column":154,"offset":46067},"end":{"line":984,"column":250,"offset":46163},"indent":[]}}],"position":{"start":{"line":984,"column":4,"offset":45917},"end":{"line":984,"column":250,"offset":46163},"indent":[]}}],"position":{"start":{"line":984,"column":1,"offset":45914},"end":{"line":985,"column":1,"offset":46165},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">gatsby-config.js</code>","position":{"start":{"line":986,"column":6,"offset":46172},"end":{"line":986,"column":24,"offset":46190},"indent":[]}}],"position":{"start":{"line":986,"column":4,"offset":46170},"end":{"line":986,"column":26,"offset":46192},"indent":[]}},{"type":"text","value":": This is the main configuration file for a Gatsby site. This is where you can specify information about your site (metadata) like the site title and description, which Gatsby plugins you'd like to include, etc. (Check out the ","position":{"start":{"line":986,"column":26,"offset":46192},"end":{"line":986,"column":253,"offset":46419},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/gatsby-config/","children":[{"type":"text","value":"config docs","position":{"start":{"line":986,"column":254,"offset":46420},"end":{"line":986,"column":265,"offset":46431},"indent":[]}}],"position":{"start":{"line":986,"column":253,"offset":46419},"end":{"line":986,"column":312,"offset":46478},"indent":[]}},{"type":"text","value":" for more detail).","position":{"start":{"line":986,"column":312,"offset":46478},"end":{"line":986,"column":330,"offset":46496},"indent":[]}}],"position":{"start":{"line":986,"column":4,"offset":46170},"end":{"line":986,"column":330,"offset":46496},"indent":[]}}],"position":{"start":{"line":986,"column":1,"offset":46167},"end":{"line":987,"column":1,"offset":46498},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">gatsby-node.js</code>","position":{"start":{"line":988,"column":6,"offset":46505},"end":{"line":988,"column":22,"offset":46521},"indent":[]}}],"position":{"start":{"line":988,"column":4,"offset":46503},"end":{"line":988,"column":24,"offset":46523},"indent":[]}},{"type":"text","value":": This file is where Gatsby expects to find any usage of the ","position":{"start":{"line":988,"column":24,"offset":46523},"end":{"line":988,"column":85,"offset":46584},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/node-apis/","children":[{"type":"text","value":"Gatsby Node APIs","position":{"start":{"line":988,"column":86,"offset":46585},"end":{"line":988,"column":102,"offset":46601},"indent":[]}}],"position":{"start":{"line":988,"column":85,"offset":46584},"end":{"line":988,"column":145,"offset":46644},"indent":[]}},{"type":"text","value":" (if any). These allow customization/extension of default Gatsby settings affecting pieces of the site build process.","position":{"start":{"line":988,"column":145,"offset":46644},"end":{"line":988,"column":262,"offset":46761},"indent":[]}}],"position":{"start":{"line":988,"column":4,"offset":46503},"end":{"line":988,"column":262,"offset":46761},"indent":[]}}],"position":{"start":{"line":988,"column":1,"offset":46500},"end":{"line":989,"column":1,"offset":46763},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">gatsby-ssr.js</code>","position":{"start":{"line":990,"column":6,"offset":46770},"end":{"line":990,"column":21,"offset":46785},"indent":[]}}],"position":{"start":{"line":990,"column":4,"offset":46768},"end":{"line":990,"column":23,"offset":46787},"indent":[]}},{"type":"text","value":": This file is where Gatsby expects to find any usage of the ","position":{"start":{"line":990,"column":23,"offset":46787},"end":{"line":990,"column":84,"offset":46848},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/ssr-apis/","children":[{"type":"text","value":"Gatsby server-side rendering APIs","position":{"start":{"line":990,"column":85,"offset":46849},"end":{"line":990,"column":118,"offset":46882},"indent":[]}}],"position":{"start":{"line":990,"column":84,"offset":46848},"end":{"line":990,"column":160,"offset":46924},"indent":[]}},{"type":"text","value":" (if any). These allow customization of default Gatsby settings affecting server-side rendering.","position":{"start":{"line":990,"column":160,"offset":46924},"end":{"line":990,"column":256,"offset":47020},"indent":[]}}],"position":{"start":{"line":990,"column":4,"offset":46768},"end":{"line":990,"column":256,"offset":47020},"indent":[]}}],"position":{"start":{"line":990,"column":1,"offset":46765},"end":{"line":991,"column":1,"offset":47022},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">LICENSE</code>","position":{"start":{"line":992,"column":6,"offset":47029},"end":{"line":992,"column":15,"offset":47038},"indent":[]}}],"position":{"start":{"line":992,"column":4,"offset":47027},"end":{"line":992,"column":17,"offset":47040},"indent":[]}},{"type":"text","value":": This Gatsby starter is licensed under the 0BSD license. This means that you can see this file as a placeholder and replace it with your own license.","position":{"start":{"line":992,"column":17,"offset":47040},"end":{"line":992,"column":167,"offset":47190},"indent":[]}}],"position":{"start":{"line":992,"column":4,"offset":47027},"end":{"line":992,"column":167,"offset":47190},"indent":[]}}],"position":{"start":{"line":992,"column":1,"offset":47024},"end":{"line":993,"column":1,"offset":47192},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">package-lock.json</code>","position":{"start":{"line":994,"column":7,"offset":47200},"end":{"line":994,"column":26,"offset":47219},"indent":[]}}],"position":{"start":{"line":994,"column":5,"offset":47198},"end":{"line":994,"column":28,"offset":47221},"indent":[]}},{"type":"text","value":" (See ","position":{"start":{"line":994,"column":28,"offset":47221},"end":{"line":994,"column":34,"offset":47227},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">package.json</code>","position":{"start":{"line":994,"column":34,"offset":47227},"end":{"line":994,"column":48,"offset":47241},"indent":[]}},{"type":"text","value":" below, first). This is an automatically generated file based on the exact versions of your npm dependencies that were installed for your project. ","position":{"start":{"line":994,"column":48,"offset":47241},"end":{"line":994,"column":195,"offset":47388},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"(You won't change this file directly).","position":{"start":{"line":994,"column":197,"offset":47390},"end":{"line":994,"column":235,"offset":47428},"indent":[]}}],"position":{"start":{"line":994,"column":195,"offset":47388},"end":{"line":994,"column":237,"offset":47430},"indent":[]}}],"position":{"start":{"line":994,"column":5,"offset":47198},"end":{"line":994,"column":237,"offset":47430},"indent":[]}}],"position":{"start":{"line":994,"column":1,"offset":47194},"end":{"line":995,"column":1,"offset":47432},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">package.json</code>","position":{"start":{"line":996,"column":7,"offset":47440},"end":{"line":996,"column":21,"offset":47454},"indent":[]}}],"position":{"start":{"line":996,"column":5,"offset":47438},"end":{"line":996,"column":23,"offset":47456},"indent":[]}},{"type":"text","value":": A manifest file for Node.js projects, which includes things like metadata (the project's name, author, etc). This manifest is how npm knows which packages to install for your project.","position":{"start":{"line":996,"column":23,"offset":47456},"end":{"line":996,"column":208,"offset":47641},"indent":[]}}],"position":{"start":{"line":996,"column":5,"offset":47438},"end":{"line":996,"column":208,"offset":47641},"indent":[]}}],"position":{"start":{"line":996,"column":1,"offset":47434},"end":{"line":997,"column":1,"offset":47643},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"html","value":"<code class=\"language-text\">README.md</code>","position":{"start":{"line":998,"column":7,"offset":47651},"end":{"line":998,"column":18,"offset":47662},"indent":[]}}],"position":{"start":{"line":998,"column":5,"offset":47649},"end":{"line":998,"column":20,"offset":47664},"indent":[]}},{"type":"text","value":": A text file containing useful reference information about your project.","position":{"start":{"line":998,"column":20,"offset":47664},"end":{"line":998,"column":93,"offset":47737},"indent":[]}}],"position":{"start":{"line":998,"column":5,"offset":47649},"end":{"line":998,"column":93,"offset":47737},"indent":[]}}],"position":{"start":{"line":998,"column":1,"offset":47645},"end":{"line":998,"column":93,"offset":47737},"indent":[]}}],"position":{"start":{"line":976,"column":1,"offset":45248},"end":{"line":998,"column":93,"offset":47737},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"🎓 Learning Gatsby","position":{"start":{"line":1000,"column":4,"offset":47744},"end":{"line":1000,"column":22,"offset":47762},"indent":[]}}],"position":{"start":{"line":1000,"column":1,"offset":47741},"end":{"line":1000,"column":22,"offset":47762},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Looking for more guidance? Full documentation for Gatsby lives ","position":{"start":{"line":1002,"column":1,"offset":47766},"end":{"line":1002,"column":64,"offset":47829},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/","children":[{"type":"text","value":"on the website","position":{"start":{"line":1002,"column":65,"offset":47830},"end":{"line":1002,"column":79,"offset":47844},"indent":[]}}],"position":{"start":{"line":1002,"column":64,"offset":47829},"end":{"line":1002,"column":107,"offset":47872},"indent":[]}},{"type":"text","value":". Here are some places to start:","position":{"start":{"line":1002,"column":107,"offset":47872},"end":{"line":1002,"column":139,"offset":47904},"indent":[]}}],"position":{"start":{"line":1002,"column":1,"offset":47766},"end":{"line":1002,"column":139,"offset":47904},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"For most developers, we recommend starting with our ","position":{"start":{"line":1004,"column":7,"offset":47914},"end":{"line":1004,"column":59,"offset":47966},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/tutorial/","children":[{"type":"text","value":"in-depth tutorial for creating a site with Gatsby","position":{"start":{"line":1004,"column":60,"offset":47967},"end":{"line":1004,"column":109,"offset":48016},"indent":[]}}],"position":{"start":{"line":1004,"column":59,"offset":47966},"end":{"line":1004,"column":146,"offset":48053},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1004,"column":146,"offset":48053},"end":{"line":1004,"column":147,"offset":48054},"indent":[]}}],"position":{"start":{"line":1004,"column":5,"offset":47912},"end":{"line":1004,"column":149,"offset":48056},"indent":[]}},{"type":"text","value":" It starts with zero assumptions about your level of ability and walks through every step of the process.","position":{"start":{"line":1004,"column":149,"offset":48056},"end":{"line":1004,"column":254,"offset":48161},"indent":[]}}],"position":{"start":{"line":1004,"column":5,"offset":47912},"end":{"line":1004,"column":254,"offset":48161},"indent":[]}}],"position":{"start":{"line":1004,"column":1,"offset":47908},"end":{"line":1005,"column":1,"offset":48163},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"To dive straight into code samples, head ","position":{"start":{"line":1006,"column":7,"offset":48171},"end":{"line":1006,"column":48,"offset":48212},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/","children":[{"type":"text","value":"to our documentation","position":{"start":{"line":1006,"column":49,"offset":48213},"end":{"line":1006,"column":69,"offset":48233},"indent":[]}}],"position":{"start":{"line":1006,"column":48,"offset":48212},"end":{"line":1006,"column":102,"offset":48266},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1006,"column":102,"offset":48266},"end":{"line":1006,"column":103,"offset":48267},"indent":[]}}],"position":{"start":{"line":1006,"column":5,"offset":48169},"end":{"line":1006,"column":105,"offset":48269},"indent":[]}},{"type":"text","value":" In particular, check out the ","position":{"start":{"line":1006,"column":105,"offset":48269},"end":{"line":1006,"column":135,"offset":48299},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Guides","position":{"start":{"line":1006,"column":136,"offset":48300},"end":{"line":1006,"column":142,"offset":48306},"indent":[]}}],"position":{"start":{"line":1006,"column":135,"offset":48299},"end":{"line":1006,"column":143,"offset":48307},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":1006,"column":143,"offset":48307},"end":{"line":1006,"column":145,"offset":48309},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"API Reference","position":{"start":{"line":1006,"column":146,"offset":48310},"end":{"line":1006,"column":159,"offset":48323},"indent":[]}}],"position":{"start":{"line":1006,"column":145,"offset":48309},"end":{"line":1006,"column":160,"offset":48324},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":1006,"column":160,"offset":48324},"end":{"line":1006,"column":166,"offset":48330},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Advanced Tutorials","position":{"start":{"line":1006,"column":167,"offset":48331},"end":{"line":1006,"column":185,"offset":48349},"indent":[]}}],"position":{"start":{"line":1006,"column":166,"offset":48330},"end":{"line":1006,"column":186,"offset":48350},"indent":[]}},{"type":"text","value":" sections in the sidebar.","position":{"start":{"line":1006,"column":186,"offset":48350},"end":{"line":1006,"column":211,"offset":48375},"indent":[]}}],"position":{"start":{"line":1006,"column":5,"offset":48169},"end":{"line":1006,"column":211,"offset":48375},"indent":[]}}],"position":{"start":{"line":1006,"column":1,"offset":48165},"end":{"line":1006,"column":211,"offset":48375},"indent":[]}}],"position":{"start":{"line":1004,"column":1,"offset":47908},"end":{"line":1006,"column":211,"offset":48375},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"💫 Deploy","position":{"start":{"line":1008,"column":4,"offset":48382},"end":{"line":1008,"column":13,"offset":48391},"indent":[]}}],"position":{"start":{"line":1008,"column":1,"offset":48379},"end":{"line":1008,"column":13,"offset":48391},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://app.netlify.com/start/deploy?repository=https://github.com/BGOONZ_BLOG_2.0.git","children":[{"type":"image","title":null,"url":"https://www.netlify.com/img/deploy/button.svg","alt":"Deploy to Netlify","position":{"start":{"line":1010,"column":2,"offset":48396},"end":{"line":1010,"column":69,"offset":48463},"indent":[]}}],"position":{"start":{"line":1010,"column":1,"offset":48395},"end":{"line":1010,"column":158,"offset":48552},"indent":[]}}],"position":{"start":{"line":1010,"column":1,"offset":48395},"end":{"line":1010,"column":158,"offset":48552},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://vercel.com/import/project?template=https://github.com/BGOONZ_BLOG_2.0.git","children":[{"type":"image","title":null,"url":"https://vercel.com/button","alt":"Deploy with Vercel","position":{"start":{"line":1012,"column":2,"offset":48557},"end":{"line":1012,"column":50,"offset":48605},"indent":[]}}],"position":{"start":{"line":1012,"column":1,"offset":48556},"end":{"line":1012,"column":134,"offset":48689},"indent":[]}}],"position":{"start":{"line":1012,"column":1,"offset":48556},"end":{"line":1012,"column":134,"offset":48689},"indent":[]}},{"type":"html","value":"<!-- AUTO-GENERATED-CONTENT:END -->","position":{"start":{"line":1014,"column":1,"offset":48693},"end":{"line":1014,"column":36,"offset":48728},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1016,"column":1,"offset":48732},"end":{"line":1016,"column":4,"offset":48735},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1018,"column":1,"offset":48739},"end":{"line":1018,"column":4,"offset":48742},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Codebase","position":{"start":{"line":1020,"column":3,"offset":48748},"end":{"line":1020,"column":11,"offset":48756},"indent":[]}}],"position":{"start":{"line":1020,"column":1,"offset":48746},"end":{"line":1020,"column":11,"offset":48756},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">bryan@LAPTOP-9LGJ3JGS:/c/MY-WEB-DEV/BLOG____2.0/BLOG_2.0/src$ tree -f\n\n.\n\n├── ./components\n\n│   ├── ./components/ActionLink.js\n\n│   ├── ./components/CtaButtons.js\n\n│   ├── ./components/DocsMenu.js\n\n│   ├── ./components/DocsSubmenu.js\n\n│   ├── ./components/Footer.js\n\n│   ├── ./components/Header.js\n\n│   ├── ./components/Icon.js\n\n│   ├── ./components/Layout.js\n\n│   ├── ./components/SectionContent.js\n\n│   ├── ./components/SectionCta.js\n\n│   ├── ./components/SectionDocs.js\n\n│   ├── ./components/SectionGrid.js\n\n│   ├── ./components/SectionHero.js\n\n│   ├── ./components/Submenu.js\n\n│   ├── ./components/global.css\n\n│   └── ./components/index.js\n\n├── ./data\n\n│   └── ./data/doc_sections.yml\n\n├── ./hooks\n\n│   └── ./hooks/useScript.js\n\n├── ./html.js\n\n├── ./pages\n\n│   ├── ./pages/blog\n\n│   │   ├── ./pages/blog/blog-archive.md\n\n│   │   ├── ./pages/blog/blogwcomments.md\n\n│   │   ├── ./pages/blog/data-structures.md\n\n│   │   ├── ./pages/blog/index.md\n\n│   │   ├── ./pages/blog/my-medium.md\n\n│   │   ├── ./pages/blog/platform-docs.md\n\n│   │   ├── ./pages/blog/python-for-js-dev.md\n\n│   │   ├── ./pages/blog/python-resources.md\n\n│   │   └── ./pages/blog/web-scraping.md\n\n│   ├── ./pages/docs\n\n│   │   ├── ./pages/docs/about\n\n│   │   │   ├── ./pages/docs/about/index.md\n\n│   │   │   ├── ./pages/docs/about/me.md\n\n│   │   │   ├── ./pages/docs/about/node\n\n│   │   │   │   ├── ./pages/docs/about/node/install.md\n\n│   │   │   │   ├── ./pages/docs/about/node/intro.md\n\n│   │   │   │   ├── ./pages/docs/about/node/nodejs.md\n\n│   │   │   │   ├── ./pages/docs/about/node/nodevsbrowser.md\n\n│   │   │   │   ├── ./pages/docs/about/node/reading-files.md\n\n│   │   │   │   └── ./pages/docs/about/node/writing-files.md\n\n│   │   │   ├── ./pages/docs/about/npm.md\n\n│   │   │   └── ./pages/docs/about/resume.md\n\n│   │   ├── ./pages/docs/articles\n\n│   │   │   ├── ./pages/docs/articles/algo.md\n\n│   │   │   ├── ./pages/docs/articles/article-compilation.md\n\n│   │   │   ├── ./pages/docs/articles/basic-web-dev.md\n\n│   │   │   ├── ./pages/docs/articles/gists.md\n\n│   │   │   ├── ./pages/docs/articles/index.md\n\n│   │   │   ├── ./pages/docs/articles/install.md\n\n│   │   │   ├── ./pages/docs/articles/intro.md\n\n│   │   │   ├── ./pages/docs/articles/python.md\n\n│   │   │   ├── ./pages/docs/articles/reading-files.md\n\n│   │   │   ├── ./pages/docs/articles/resources.md\n\n│   │   │   ├── ./pages/docs/articles/ten-jamstack-apis-to-checkout.md\n\n│   │   │   └── ./pages/docs/articles/writing-files.md\n\n│   │   ├── ./pages/docs/docs\n\n│   │   │   └── ./pages/docs/docs/tools\n\n│   │   │       └── ./pages/docs/docs/tools/file-types.md\n\n│   │   ├── ./pages/docs/faq\n\n│   │   │   ├── ./pages/docs/faq/contact.md\n\n│   │   │   └── ./pages/docs/faq/index.md\n\n│   │   ├── ./pages/docs/gists.md\n\n│   │   ├── ./pages/docs/index.md\n\n│   │   ├── ./pages/docs/interact\n\n│   │   │   ├── ./pages/docs/interact/clock.md\n\n│   │   │   ├── ./pages/docs/interact/index.md\n\n│   │   │   └── ./pages/docs/interact/jupyter-notebooks.md\n\n│   │   ├── ./pages/docs/links\n\n│   │   │   ├── ./pages/docs/links/index.md\n\n│   │   │   ├── ./pages/docs/links/medium-links.md\n\n│   │   │   ├── ./pages/docs/links/my-websites.md\n\n│   │   │   └── ./pages/docs/links/social.md\n\n│   │   ├── ./pages/docs/quick-reference\n\n│   │   │   ├── ./pages/docs/quick-reference/Emmet.md\n\n│   │   │   ├── ./pages/docs/quick-reference/docs.md\n\n│   │   │   ├── ./pages/docs/quick-reference/index.md\n\n│   │   │   ├── ./pages/docs/quick-reference/installation.md\n\n│   │   │   └── ./pages/docs/quick-reference/new-repo-instructions.md\n\n│   │   ├── ./pages/docs/react\n\n│   │   │   ├── ./pages/docs/react/createReactApp.md\n\n│   │   │   ├── ./pages/docs/react/index.md\n\n│   │   │   └── ./pages/docs/react/react2.md\n\n│   │   ├── ./pages/docs/react-in-depth.md\n\n│   │   ├── ./pages/docs/sitemap.md\n\n│   │   └── ./pages/docs/tools\n\n│   │       ├── ./pages/docs/tools/index.md\n\n│   │       ├── ./pages/docs/tools/notes-template.md\n\n│   │       ├── ./pages/docs/tools/plug-ins.md\n\n│   │       └── ./pages/docs/tools/vscode.md\n\n│   ├── ./pages/index.md\n\n│   ├── ./pages/notes-template.md\n\n│   ├── ./pages/review.md\n\n│   └── ./pages/showcase.md\n\n├── ./sass\n\n│   ├── ./sass/imports\n\n│   │   ├── ./sass/imports/_animations.scss\n\n│   │   ├── ./sass/imports/_buttons.scss\n\n│   │   ├── ./sass/imports/_docs.scss\n\n│   │   ├── ./sass/imports/_footer.scss\n\n│   │   ├── ./sass/imports/_forms.scss\n\n│   │   ├── ./sass/imports/_functions.scss\n\n│   │   ├── ./sass/imports/_general.scss\n\n│   │   ├── ./sass/imports/_header.scss\n\n│   │   ├── ./sass/imports/_helpers.scss\n\n│   │   ├── ./sass/imports/_icons.scss\n\n│   │   ├── ./sass/imports/_palettes.scss\n\n│   │   ├── ./sass/imports/_posts.scss\n\n│   │   ├── ./sass/imports/_prism.scss\n\n│   │   ├── ./sass/imports/_reset.scss\n\n│   │   ├── ./sass/imports/_sections.scss\n\n│   │   ├── ./sass/imports/_structure.scss\n\n│   │   ├── ./sass/imports/_tables.scss\n\n│   │   └── ./sass/imports/_variables.scss\n\n│   └── ./sass/main.scss\n\n├── ./templates\n\n│   ├── ./templates/advanced.js\n\n│   ├── ./templates/blog.js\n\n│   ├── ./templates/docs.js\n\n│   ├── ./templates/page.js\n\n│   └── ./templates/post.js\n\n└── ./utils\n\n    ├── ./utils/attribute.js\n\n    ├── ./utils/classNames.js\n\n    ├── ./utils/cycler.js\n\n    ├── ./utils/getData.js\n\n    ├── ./utils/getPage.js\n\n    ├── ./utils/getPageByFilePath.js\n\n    ├── ./utils/getPages.js\n\n    ├── ./utils/htmlToReact.js\n\n    ├── ./utils/index.js\n\n    ├── ./utils/link.js\n\n    ├── ./utils/markdownify.js\n\n    ├── ./utils/pathJoin.js\n\n    ├── ./utils/toStyleObj.js\n\n    ├── ./utils/toUrl.js\n\n    └── ./utils/withPrefix.js\n\n21 directories, 119 files\n\nbryan@LAPTOP-9LGJ3JGS:/c/MY-WEB-DEV/BLOG____2.0/BLOG_2.0/src$</code></pre></div>","position":{"start":{"line":1022,"column":1,"offset":48760},"end":{"line":1312,"column":4,"offset":54724},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1314,"column":1,"offset":54728},"end":{"line":1314,"column":4,"offset":54731},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Components","position":{"start":{"line":1316,"column":3,"offset":54737},"end":{"line":1316,"column":13,"offset":54747},"indent":[]}}],"position":{"start":{"line":1316,"column":1,"offset":54735},"end":{"line":1316,"column":13,"offset":54747},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":1318,"column":1,"offset":54751},"end":{"line":1318,"column":10,"offset":54760},"indent":[]}},{"type":"html","value":"  <summary>\n<h1>Click to see React Components (src folder)!</h1>\n</summary>","position":{"start":{"line":1320,"column":1,"offset":54764},"end":{"line":1322,"column":11,"offset":54841},"indent":[1,1]}},{"type":"html","value":"<details>","position":{"start":{"line":1324,"column":1,"offset":54845},"end":{"line":1324,"column":10,"offset":54854},"indent":[]}},{"type":"html","value":"  <summary>ActionLink!</summary>","position":{"start":{"line":1326,"column":1,"offset":54858},"end":{"line":1326,"column":33,"offset":54890},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ActionLink","position":{"start":{"line":1328,"column":4,"offset":54897},"end":{"line":1328,"column":14,"offset":54907},"indent":[]}}],"position":{"start":{"line":1328,"column":1,"offset":54894},"end":{"line":1328,"column":14,"offset":54907},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link<span class=\"token punctuation\">,</span> withPrefix<span class=\"token punctuation\">,</span> classNames <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Icon <span class=\"token keyword\">from</span> <span class=\"token string\">'./Icon'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ActionLink</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">let</span> action <span class=\"token operator\">=</span> \\_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'action'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token operator\">&lt;</span>Link\n\nto<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'new_window'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'\\_blank'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'new*window'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'no*follow'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">rel</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'new*window'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'noopener '</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'no*follow'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'nofollow'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\nclassName<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">button</span><span class=\"token operator\">:</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'link'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'button-secondary'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'secondary'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'button-icon'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'icon'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">></span>\n\n<span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'icon'</span> <span class=\"token operator\">&amp;&amp;</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'icon*class'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>Icon <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> icon<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'icon*class'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"screen-reader-text\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'label'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n\n\\_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'label'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1330,"column":1,"offset":54911},"end":{"line":1399,"column":4,"offset":56127},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1401,"column":1,"offset":56131},"end":{"line":1401,"column":4,"offset":56134},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":1403,"column":1,"offset":56138},"end":{"line":1403,"column":10,"offset":56147},"indent":[]}},{"type":"html","value":"  <summary>CtaButtons!</summary>","position":{"start":{"line":1405,"column":1,"offset":56151},"end":{"line":1405,"column":33,"offset":56183},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CtaButtons","position":{"start":{"line":1407,"column":4,"offset":56190},"end":{"line":1407,"column":14,"offset":56200},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":56187},"end":{"line":1407,"column":14,"offset":56200},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1409,"column":1,"offset":56204},"end":{"line":1409,"column":4,"offset":56207},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link<span class=\"token punctuation\">,</span> withPrefix<span class=\"token punctuation\">,</span> classNames <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CtaButtons</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> actions <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'actions'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>actions<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">action<span class=\"token punctuation\">,</span> action_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>Link\n                key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>action_idx<span class=\"token punctuation\">}</span>\n                to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'new_window'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'_blank'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'new_window'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'no_follow'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n                          <span class=\"token literal-property property\">rel</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'new_window'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'noopener '</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'no_follow'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'nofollow'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n                      <span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">button</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'primary'</span> <span class=\"token operator\">||</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'secondary'</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token string-property property\">'button-secondary'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'secondary'</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'label'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1411,"column":1,"offset":56211},"end":{"line":1444,"column":4,"offset":57429},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1446,"column":1,"offset":57433},"end":{"line":1446,"column":4,"offset":57436},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":1448,"column":1,"offset":57440},"end":{"line":1448,"column":10,"offset":57449},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":1450,"column":1,"offset":57453},"end":{"line":1450,"column":38,"offset":57490},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"DocsMenu","position":{"start":{"line":1452,"column":4,"offset":57497},"end":{"line":1452,"column":12,"offset":57505},"indent":[]}}],"position":{"start":{"line":1452,"column":1,"offset":57494},"end":{"line":1452,"column":12,"offset":57505},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1454,"column":1,"offset":57509},"end":{"line":1454,"column":4,"offset":57512},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getPage<span class=\"token punctuation\">,</span> classNames<span class=\"token punctuation\">,</span> Link<span class=\"token punctuation\">,</span> withPrefix<span class=\"token punctuation\">,</span> pathJoin<span class=\"token punctuation\">,</span> getPages <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> DocsSubmenu <span class=\"token keyword\">from</span> <span class=\"token string\">'./DocsSubmenu'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DocsMenu</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> site <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'site'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> page <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'page'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> root_docs_path <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>site<span class=\"token punctuation\">,</span> <span class=\"token string\">'data.doc_sections.root_docs_path'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> root_page <span class=\"token operator\">=</span> <span class=\"token function\">getPage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>pageContext<span class=\"token punctuation\">.</span>pages<span class=\"token punctuation\">,</span> root_docs_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>nav id<span class=\"token operator\">=</span><span class=\"token string\">\"docs-nav\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"docs-nav\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"docs-nav-inside\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"docs-nav-inside sticky\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"docs-nav-toggle\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"docs-nav-toggle\"</span><span class=\"token operator\">></span>\n                        Navigate Docs\n                        <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"icon-angle-right\"</span> aria<span class=\"token operator\">-</span>hidden<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"docs-nav-menu\"</span><span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>ul id<span class=\"token operator\">=</span><span class=\"token string\">\"docs-menu\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"docs-menu\"</span><span class=\"token operator\">></span>\n                            <span class=\"token operator\">&lt;</span>li\n                                className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-menu-item'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token literal-property property\">current</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>root_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                            <span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>root_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>root_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'frontmatter.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>site<span class=\"token punctuation\">,</span> <span class=\"token string\">'data.doc_sections.sections'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">section<span class=\"token punctuation\">,</span> section_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">let</span> section_path <span class=\"token operator\">=</span> <span class=\"token function\">pathJoin</span><span class=\"token punctuation\">(</span>root_docs_path<span class=\"token punctuation\">,</span> section<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">let</span> section_page <span class=\"token operator\">=</span> <span class=\"token function\">getPage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>pageContext<span class=\"token punctuation\">.</span>pages<span class=\"token punctuation\">,</span> section_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">let</span> child_pages <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">orderBy</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPages</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>pageContext<span class=\"token punctuation\">.</span>pages<span class=\"token punctuation\">,</span> section_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'frontmatter.weight'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">let</span> child_count <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>child_pages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">let</span> has_children <span class=\"token operator\">=</span> child_count <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">let</span> is_current_page <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">let</span> is_active <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                                    <span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>Fragment key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>section_idx <span class=\"token operator\">+</span> <span class=\"token string\">'.1'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                                        <span class=\"token operator\">&lt;</span>li\n                                            key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>section_idx<span class=\"token punctuation\">}</span>\n                                            className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-menu-item'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                                <span class=\"token string-property property\">'has-children'</span><span class=\"token operator\">:</span> has_children<span class=\"token punctuation\">,</span>\n\n                                                <span class=\"token literal-property property\">current</span><span class=\"token operator\">:</span> is_current_page<span class=\"token punctuation\">,</span>\n\n                                                <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> is_active\n                                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                        <span class=\"token operator\">></span>\n                                            <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'frontmatter.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n\n                                            <span class=\"token punctuation\">{</span>has_children <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                                <span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n                                                    <span class=\"token operator\">&lt;</span>button className<span class=\"token operator\">=</span><span class=\"token string\">\"docs-submenu-toggle\"</span><span class=\"token operator\">></span>\n                                                        <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"screen-reader-text\"</span><span class=\"token operator\">></span>Submenu<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n\n                                                        <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"icon-angle-right\"</span> aria<span class=\"token operator\">-</span>hidden<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n\n                                                    <span class=\"token operator\">&lt;</span>DocsSubmenu <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> child_pages<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>child_pages<span class=\"token punctuation\">}</span> page<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>page<span class=\"token punctuation\">}</span> site<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>site<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n                                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n                                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1456,"column":1,"offset":57516},"end":{"line":1545,"column":4,"offset":61751},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1547,"column":1,"offset":61755},"end":{"line":1547,"column":4,"offset":61758},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":1549,"column":1,"offset":61762},"end":{"line":1549,"column":10,"offset":61771},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":1551,"column":1,"offset":61775},"end":{"line":1551,"column":38,"offset":61812},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"DocsSubmenu","position":{"start":{"line":1553,"column":4,"offset":61819},"end":{"line":1553,"column":15,"offset":61830},"indent":[]}}],"position":{"start":{"line":1553,"column":1,"offset":61816},"end":{"line":1553,"column":15,"offset":61830},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1555,"column":1,"offset":61834},"end":{"line":1555,"column":4,"offset":61837},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> classNames<span class=\"token punctuation\">,</span> Link<span class=\"token punctuation\">,</span> withPrefix <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DocsSubmenu</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> child_pages <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'child_pages'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> page <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'page'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>ul className<span class=\"token operator\">=</span><span class=\"token string\">\"docs-submenu\"</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>child_pages<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">child_page<span class=\"token punctuation\">,</span> child_page_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>li\n                        key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>child_page_idx<span class=\"token punctuation\">}</span>\n                        className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-menu-item'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">current</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>child_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>child_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>child_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'frontmatter.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1557,"column":1,"offset":61841},"end":{"line":1587,"column":4,"offset":62814},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1589,"column":1,"offset":62818},"end":{"line":1589,"column":4,"offset":62821},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":1591,"column":1,"offset":62825},"end":{"line":1591,"column":10,"offset":62834},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":1593,"column":1,"offset":62838},"end":{"line":1593,"column":38,"offset":62875},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Footer","position":{"start":{"line":1595,"column":4,"offset":62882},"end":{"line":1595,"column":10,"offset":62888},"indent":[]}}],"position":{"start":{"line":1595,"column":1,"offset":62879},"end":{"line":1595,"column":10,"offset":62888},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1597,"column":1,"offset":62892},"end":{"line":1597,"column":4,"offset":62895},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> htmlToReact <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> ActionLink <span class=\"token keyword\">from</span> <span class=\"token string\">'./ActionLink'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Footer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>footer id<span class=\"token operator\">=</span><span class=\"token string\">\"colophon\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"site-footer outer\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"inner\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"site-footer-inside\"</span><span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"site-info\"</span><span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.footer.content'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"copyright\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">htmlToReact</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.footer.content'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.footer.links'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">action<span class=\"token punctuation\">,</span> action_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                                <span class=\"token operator\">&lt;</span>ActionLink key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>action_idx<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> action<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>action<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n\n                        <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.footer.has_social'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                            <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"social-links\"</span><span class=\"token operator\">></span>\n                                <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.footer.social_links'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">action<span class=\"token punctuation\">,</span> action_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                                    <span class=\"token operator\">&lt;</span>ActionLink key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>action_idx<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> action<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>action<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>footer<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1599,"column":1,"offset":62899},"end":{"line":1638,"column":4,"offset":64560},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1640,"column":1,"offset":64564},"end":{"line":1640,"column":4,"offset":64567},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Header","position":{"start":{"line":1642,"column":4,"offset":64574},"end":{"line":1642,"column":10,"offset":64580},"indent":[]}}],"position":{"start":{"line":1642,"column":1,"offset":64571},"end":{"line":1642,"column":10,"offset":64580},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1644,"column":1,"offset":64584},"end":{"line":1644,"column":4,"offset":64587},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link<span class=\"token punctuation\">,</span> withPrefix<span class=\"token punctuation\">,</span> classNames <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> ActionLink <span class=\"token keyword\">from</span> <span class=\"token string\">'./ActionLink'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Submenu <span class=\"token keyword\">from</span> <span class=\"token string\">'./Submenu'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>header id<span class=\"token operator\">=</span><span class=\"token string\">\"masthead\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"site-header outer\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"inner\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"site-header-inside\"</span><span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"site-branding\"</span><span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.header.logo_img'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                                <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"site-logo\"</span><span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.header.url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                                        <span class=\"token operator\">&lt;</span>img\n                                            src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.header.logo_img'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                            alt<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.header.logo_img_alt'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n                                <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"site-title\"</span><span class=\"token operator\">></span>\n                                    <span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n                                    WebDevHub\n                                    <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.header.url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                                        <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.header.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n                        <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"search\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"inner\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n                        <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.header.has_nav'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                            <span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span>nav id<span class=\"token operator\">=</span><span class=\"token string\">\"main-navigation\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"site-navigation\"</span> aria<span class=\"token operator\">-</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"Main Navigation\"</span><span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"site-nav-inside\"</span><span class=\"token operator\">></span>\n                                        <span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"menu-close\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"menu-toggle\"</span><span class=\"token operator\">></span>\n                                            <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"screen-reader-text\"</span><span class=\"token operator\">></span>Open Menu<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n\n                                            <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"icon-close\"</span> aria<span class=\"token operator\">-</span>hidden<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n\n                                        <span class=\"token operator\">&lt;</span>ul className<span class=\"token operator\">=</span><span class=\"token string\">\"menu\"</span><span class=\"token operator\">></span>\n                                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.header.nav_links'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">action<span class=\"token punctuation\">,</span> action_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                                                <span class=\"token keyword\">let</span> page_url <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                                <span class=\"token keyword\">let</span> action_url <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                                                    <span class=\"token operator\">&lt;</span>li\n                                                        key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>action_idx<span class=\"token punctuation\">}</span>\n                                                        className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu-item'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                                            <span class=\"token string-property property\">'has-children'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'has_subnav'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'subnav_links'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                                            <span class=\"token literal-property property\">current</span><span class=\"token operator\">:</span> page_url <span class=\"token operator\">===</span> action_url<span class=\"token punctuation\">,</span>\n\n                                                            <span class=\"token string-property property\">'menu-button'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'link'</span>\n                                                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                                    <span class=\"token operator\">></span>\n                                                        <span class=\"token operator\">&lt;</span>ActionLink <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> action<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>action<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                                                        <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'has_subnav'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'subnav_links'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                                            <span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n                                                                <span class=\"token operator\">&lt;</span>button className<span class=\"token operator\">=</span><span class=\"token string\">\"submenu-toggle\"</span><span class=\"token operator\">></span>\n                                                                    <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"icon-angle-right\"</span> aria<span class=\"token operator\">-</span>hidden<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                                                                    <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"screen-reader-text\"</span><span class=\"token operator\">></span>Sub<span class=\"token operator\">-</span>menu<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n                                                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n\n                                                                <span class=\"token operator\">&lt;</span>Submenu\n                                                                    <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span>\n                                                                    submenu<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'subnav_links'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                                                    menu_class<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'submenu'</span><span class=\"token punctuation\">}</span>\n                                                                    page<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>pageContext<span class=\"token punctuation\">}</span>\n                                                                <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n                                                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n                                                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n\n                                <span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"menu-open\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"menu-toggle\"</span><span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"screen-reader-text\"</span><span class=\"token operator\">></span>Close Menu<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n\n                                    <span class=\"token operator\">&lt;</span>span className<span class=\"token operator\">=</span><span class=\"token string\">\"icon-menu\"</span> aria<span class=\"token operator\">-</span>hidden<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n                <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>a className<span class=\"token operator\">=</span><span class=\"token string\">\"github-corner\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"https://github.com/bgoonz/BGOONZ_BLOG_2.0\"</span> aria<span class=\"token operator\">-</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"View source on Github\"</span><span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>svg\n                            aria<span class=\"token operator\">-</span>hidden<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span>\n                            width<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">80</span><span class=\"token punctuation\">}</span>\n                            height<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">80</span><span class=\"token punctuation\">}</span>\n                            viewBox<span class=\"token operator\">=</span><span class=\"token string\">\"0 0 250 250\"</span>\n                            style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">zIndex</span><span class=\"token operator\">:</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">fill</span><span class=\"token operator\">:</span> <span class=\"token string\">'#194ccdaf'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token string\">'fixed'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> <span class=\"token string\">'20px'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token string\">'20px'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'scale(-1.5, 1.5)'</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">></span>\n                            <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>path<span class=\"token operator\">></span>\n\n                            <span class=\"token operator\">&lt;</span>path\n                                className<span class=\"token operator\">=</span><span class=\"token string\">\"octo-arm\"</span>\n                                d<span class=\"token operator\">=</span><span class=\"token string\">\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"</span>\n                                fill<span class=\"token operator\">=</span><span class=\"token string\">\"currentColor\"</span>\n                                style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transformOrigin</span><span class=\"token operator\">:</span> <span class=\"token string\">'130px 106px'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n                            <span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>path<span class=\"token operator\">></span>\n\n                            <span class=\"token operator\">&lt;</span>path\n                                className<span class=\"token operator\">=</span><span class=\"token string\">\"octo-body\"</span>\n                                d<span class=\"token operator\">=</span><span class=\"token string\">\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"</span>\n                                fill<span class=\"token operator\">=</span><span class=\"token string\">\"currentColor\"</span>\n                            <span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>path<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>svg<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>header<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1646,"column":1,"offset":64591},"end":{"line":1795,"column":4,"offset":72875},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1797,"column":1,"offset":72879},"end":{"line":1797,"column":4,"offset":72882},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":1799,"column":1,"offset":72886},"end":{"line":1799,"column":10,"offset":72895},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":1801,"column":1,"offset":72899},"end":{"line":1801,"column":38,"offset":72936},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Icon","position":{"start":{"line":1803,"column":4,"offset":72943},"end":{"line":1803,"column":8,"offset":72947},"indent":[]}}],"position":{"start":{"line":1803,"column":1,"offset":72940},"end":{"line":1803,"column":8,"offset":72947},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1805,"column":1,"offset":72951},"end":{"line":1805,"column":4,"offset":72954},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Icon</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> icon <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'icon'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>svg className<span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> viewBox<span class=\"token operator\">=</span><span class=\"token string\">\"0 0 24 24\"</span> xmlns<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/2000/svg\"</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>icon <span class=\"token operator\">===</span> <span class=\"token string\">'dev'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M7.42 10.05c-.18-.16-.46-.23-.84-.23H6l.02 2.44.04 2.45.56-.02c.41 0 .63-.07.83-.26.24-.24.26-.36.26-2.2 0-1.91-.02-1.96-.29-2.18zM0 4.94v14.12h24V4.94H0zM8.56 15.3c-.44.58-1.06.77-2.53.77H4.71V8.53h1.4c1.67 0 2.16.18 2.6.9.27.43.29.6.32 2.57.05 2.23-.02 2.73-.47 3.3zm5.09-5.47h-2.47v1.77h1.52v1.28l-.72.04-.75.03v1.77l1.22.03 1.2.04v1.28h-1.6c-1.53 0-1.6-.01-1.87-.3l-.3-.28v-3.16c0-3.02.01-3.18.25-3.48.23-.31.25-.31 1.88-.31h1.64v1.3zm4.68 5.45c-.17.43-.64.79-1 .79-.18 0-.45-.15-.67-.39-.32-.32-.45-.63-.82-2.08l-.9-3.39-.45-1.67h.76c.4 0 .75.02.75.05 0 .06 1.16 4.54 1.26 4.83.04.15.32-.7.73-2.3l.66-2.52.74-.04c.4-.02.73 0 .73.04 0 .14-1.67 6.38-1.8 6.68z\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> icon <span class=\"token operator\">===</span> <span class=\"token string\">'facebook'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M23.998 12c0-6.628-5.372-12-11.999-12C5.372 0 0 5.372 0 12c0 5.988 4.388 10.952 10.124 11.852v-8.384H7.078v-3.469h3.046V9.356c0-3.008 1.792-4.669 4.532-4.669 1.313 0 2.686.234 2.686.234v2.953H15.83c-1.49 0-1.955.925-1.955 1.874V12h3.328l-.532 3.469h-2.796v8.384c5.736-.9 10.124-5.864 10.124-11.853z\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> icon <span class=\"token operator\">===</span> <span class=\"token string\">'github'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> icon <span class=\"token operator\">===</span> <span class=\"token string\">'instagram'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913a5.885 5.885 0 001.384 2.126A5.868 5.868 0 004.14 23.37c.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558a5.898 5.898 0 002.126-1.384 5.86 5.86 0 001.384-2.126c.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913a5.89 5.89 0 00-1.384-2.126A5.847 5.847 0 0019.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227a3.81 3.81 0 01-.899 1.382 3.744 3.744 0 01-1.38.896c-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421a3.716 3.716 0 01-1.379-.899 3.644 3.644 0 01-.9-1.38c-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678a6.162 6.162 0 100 12.324 6.162 6.162 0 100-12.324zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405a1.441 1.441 0 01-2.88 0 1.44 1.44 0 012.88 0z\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> icon <span class=\"token operator\">===</span> <span class=\"token string\">'linkedin'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.062 2.062 0 01-2.063-2.065 2.064 2.064 0 112.063 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> icon <span class=\"token operator\">===</span> <span class=\"token string\">'pinterest'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.162-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.401.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.354-.629-2.758-1.379l-.749 2.848c-.269 1.045-1.004 2.352-1.498 3.146 1.123.345 2.306.535 3.55.535 6.607 0 11.985-5.365 11.985-11.987C23.97 5.39 18.592.026 11.985.026L12.017 0z\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> icon <span class=\"token operator\">===</span> <span class=\"token string\">'reddit'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M12 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0zm5.01 4.744c.688 0 1.25.561 1.25 1.249a1.25 1.25 0 0 1-2.498.056l-2.597-.547-.8 3.747c1.824.07 3.48.632 4.674 1.488.308-.309.73-.491 1.207-.491.968 0 1.754.786 1.754 1.754 0 .716-.435 1.333-1.01 1.614a3.111 3.111 0 0 1 .042.52c0 2.694-3.13 4.87-7.004 4.87-3.874 0-7.004-2.176-7.004-4.87 0-.183.015-.366.043-.534A1.748 1.748 0 0 1 4.028 12c0-.968.786-1.754 1.754-1.754.463 0 .898.196 1.207.49 1.207-.883 2.878-1.43 4.744-1.487l.885-4.182a.342.342 0 0 1 .14-.197.35.35 0 0 1 .238-.042l2.906.617a1.214 1.214 0 0 1 1.108-.701zM9.25 12C8.561 12 8 12.562 8 13.25c0 .687.561 1.248 1.25 1.248.687 0 1.248-.561 1.248-1.249 0-.688-.561-1.249-1.249-1.249zm5.5 0c-.687 0-1.248.561-1.248 1.25 0 .687.561 1.248 1.249 1.248.688 0 1.249-.561 1.249-1.249 0-.687-.562-1.249-1.25-1.249zm-5.466 3.99a.327.327 0 0 0-.231.094.33.33 0 0 0 0 .463c.842.842 2.484.913 2.961.913.477 0 2.105-.056 2.961-.913a.361.361 0 0 0 .029-.463.33.33 0 0 0-.464 0c-.547.533-1.684.73-2.512.73-.828 0-1.979-.196-2.512-.73a.326.326 0 0 0-.232-.095z\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> icon <span class=\"token operator\">===</span> <span class=\"token string\">'twitter'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M23.954 4.569a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.691 8.094 4.066 6.13 1.64 3.161a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.061a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.937 4.937 0 004.604 3.417 9.868 9.868 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63a9.936 9.936 0 002.46-2.548l-.047-.02z\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> icon <span class=\"token operator\">===</span> <span class=\"token string\">'youtube'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M23.495 6.205a3.007 3.007 0 00-2.088-2.088c-1.87-.501-9.396-.501-9.396-.501s-7.507-.01-9.396.501A3.007 3.007 0 00.527 6.205a31.247 31.247 0 00-.522 5.805 31.247 31.247 0 00.522 5.783 3.007 3.007 0 002.088 2.088c1.868.502 9.396.502 9.396.502s7.506 0 9.396-.502a3.007 3.007 0 002.088-2.088 31.247 31.247 0 00.5-5.783 31.247 31.247 0 00-.5-5.805zM9.609 15.601V8.408l6.264 3.602z\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n                    icon <span class=\"token operator\">===</span> <span class=\"token string\">'vimeo'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>path d<span class=\"token operator\">=</span><span class=\"token string\">\"M23.977 6.416c-.105 2.338-1.739 5.543-4.894 9.609-3.268 4.247-6.026 6.37-8.29 6.37-1.409 0-2.578-1.294-3.553-3.881L5.322 11.4C4.603 8.816 3.834 7.522 3.01 7.522c-.179 0-.806.378-1.881 1.132L0 7.197a315.065 315.065 0 003.501-3.128C5.08 2.701 6.266 1.984 7.055 1.91c1.867-.18 3.016 1.1 3.447 3.838.465 2.953.789 4.789.971 5.507.539 2.45 1.131 3.674 1.776 3.674.502 0 1.256-.796 2.265-2.385 1.004-1.589 1.54-2.797 1.612-3.628.144-1.371-.395-2.061-1.614-2.061-.574 0-1.167.121-1.777.391 1.186-3.868 3.434-5.757 6.762-5.637 2.473.06 3.628 1.664 3.493 4.797l-.013.01z\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>svg<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1807,"column":1,"offset":72958},"end":{"line":1846,"column":4,"offset":81106},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1848,"column":1,"offset":81110},"end":{"line":1848,"column":4,"offset":81113},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":1850,"column":1,"offset":81117},"end":{"line":1850,"column":10,"offset":81126},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":1852,"column":1,"offset":81130},"end":{"line":1852,"column":38,"offset":81167},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Body","position":{"start":{"line":1854,"column":4,"offset":81174},"end":{"line":1854,"column":8,"offset":81178},"indent":[]}}],"position":{"start":{"line":1854,"column":1,"offset":81171},"end":{"line":1854,"column":8,"offset":81178},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1856,"column":1,"offset":81182},"end":{"line":1856,"column":4,"offset":81185},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Helmet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-helmet'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withPrefix<span class=\"token punctuation\">,</span> attribute <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'../sass/main.scss'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'./Header'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Footer <span class=\"token keyword\">from</span> <span class=\"token string\">'./Footer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Body</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Helmet<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token operator\">?</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' | '</span> <span class=\"token operator\">+</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>meta charSet<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initialScale=1.0\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"description\"</span> content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.description'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.robots'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"robots\"</span> content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.robots'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.extra'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">meta<span class=\"token punctuation\">,</span> meta_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">let</span> key_name <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'keyName'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">return</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'relativeUrl'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                            _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.domain'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">let</span> domain <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.domain'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">let</span> rel_url <span class=\"token operator\">=</span> <span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">let</span> full_url <span class=\"token operator\">=</span> domain <span class=\"token operator\">+</span> rel_url<span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>meta key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>meta_idx<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">attribute</span><span class=\"token punctuation\">(</span>key_name<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>full_url<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n                            <span class=\"token operator\">&lt;</span>meta key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>meta_idx <span class=\"token operator\">+</span> <span class=\"token string\">'.1'</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">attribute</span><span class=\"token punctuation\">(</span>key_name<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"preconnect\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"https://fonts.gstatic.com\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>link href<span class=\"token operator\">=</span><span class=\"token string\">\"https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,400;0,700;1,400;1,700&amp;display=swap\"</span> rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.favicon'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> href<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.favicon'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token operator\">&lt;</span>body className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'palette-'</span> <span class=\"token operator\">+</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.palette'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Helmet<span class=\"token operator\">></span>\n\n                <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"page\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"site\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>Header <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>main id<span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"site-content\"</span><span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>main<span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>Footer <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1858,"column":1,"offset":81189},"end":{"line":1938,"column":4,"offset":84629},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1940,"column":1,"offset":84633},"end":{"line":1940,"column":4,"offset":84636},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":1942,"column":1,"offset":84640},"end":{"line":1942,"column":10,"offset":84649},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":1944,"column":1,"offset":84653},"end":{"line":1944,"column":38,"offset":84690},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"SectionContent","position":{"start":{"line":1946,"column":4,"offset":84697},"end":{"line":1946,"column":18,"offset":84711},"indent":[]}}],"position":{"start":{"line":1946,"column":1,"offset":84694},"end":{"line":1946,"column":18,"offset":84711},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":1948,"column":1,"offset":84715},"end":{"line":1948,"column":4,"offset":84718},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> classNames<span class=\"token punctuation\">,</span> withPrefix<span class=\"token punctuation\">,</span> markdownify <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> CtaButtons <span class=\"token keyword\">from</span> <span class=\"token string\">'./CtaButtons'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SectionContent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> section <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'section'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>section id<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'section_id'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"block block-text outer\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"outter\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>div\n                        className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inner'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token string-property property\">'grid-swap'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'image_position'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'right'</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                            <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item block-image\"</span><span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> alt<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'image_alt'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"block-header\"</span><span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span>h2 className<span class=\"token operator\">=</span><span class=\"token string\">\"block-title\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"outer\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">markdownify</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'actions'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"block-buttons\"</span><span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span>CtaButtons <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> actions<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'actions'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1950,"column":1,"offset":84722},"end":{"line":1999,"column":4,"offset":86711},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":2001,"column":1,"offset":86715},"end":{"line":2001,"column":4,"offset":86718},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":2003,"column":1,"offset":86722},"end":{"line":2003,"column":10,"offset":86731},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":2005,"column":1,"offset":86735},"end":{"line":2005,"column":38,"offset":86772},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"SectionCta","position":{"start":{"line":2007,"column":4,"offset":86779},"end":{"line":2007,"column":14,"offset":86789},"indent":[]}}],"position":{"start":{"line":2007,"column":1,"offset":86776},"end":{"line":2007,"column":14,"offset":86789},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2009,"column":1,"offset":86793},"end":{"line":2009,"column":4,"offset":86796},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> htmlToReact <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> CtaButtons <span class=\"token keyword\">from</span> <span class=\"token string\">'./CtaButtons'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SectionCta</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> section <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'section'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>section id<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'section_id'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"block block-cta outer\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"inner\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"has-gradient\"</span><span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid grid-middle grid-center\"</span><span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item block-header\"</span><span class=\"token operator\">></span>\n                                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>h2 className<span class=\"token operator\">=</span><span class=\"token string\">\"block-title\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n\n                                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"block-subtitle\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">htmlToReact</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'actions'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item block-buttons\"</span><span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span>CtaButtons <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> actions<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'actions'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":2011,"column":1,"offset":86800},"end":{"line":2050,"column":4,"offset":88373},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":2052,"column":1,"offset":88377},"end":{"line":2052,"column":4,"offset":88380},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":2054,"column":1,"offset":88384},"end":{"line":2054,"column":10,"offset":88393},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":2056,"column":1,"offset":88397},"end":{"line":2056,"column":38,"offset":88434},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"SectionDocs","position":{"start":{"line":2058,"column":4,"offset":88441},"end":{"line":2058,"column":15,"offset":88452},"indent":[]}}],"position":{"start":{"line":2058,"column":1,"offset":88438},"end":{"line":2058,"column":15,"offset":88452},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2060,"column":1,"offset":88456},"end":{"line":2060,"column":4,"offset":88459},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> classNames<span class=\"token punctuation\">,</span> htmlToReact<span class=\"token punctuation\">,</span> pathJoin<span class=\"token punctuation\">,</span> getPage<span class=\"token punctuation\">,</span> Link<span class=\"token punctuation\">,</span> withPrefix <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SectionDocs</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> section <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'section'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>section\n                id<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'section_id'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'block'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'block-grid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'outer'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token string-property property\">'has-header'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"inner\"</span><span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"block-header inner-sm\"</span><span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>h2 className<span class=\"token operator\">=</span><span class=\"token string\">\"block-title\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"block-subtitle\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">htmlToReact</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"&lt;iframe \"</span><span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>div\n                            className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'grid'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token string-property property\">'grid-col-2'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'col_number'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token string-property property\">'grid-col-3'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'col_number'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'three'</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.data.doc_sections.sections'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">doc_section<span class=\"token punctuation\">,</span> doc_section_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">let</span> doc_section_path <span class=\"token operator\">=</span> <span class=\"token function\">pathJoin</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.data.doc_sections.root_docs_path'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> doc_section<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">let</span> doc_section_page <span class=\"token operator\">=</span> <span class=\"token function\">getPage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>pageContext<span class=\"token punctuation\">.</span>pages<span class=\"token punctuation\">,</span> doc_section_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                                    <span class=\"token operator\">&lt;</span>div key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>doc_section_idx<span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item\"</span><span class=\"token operator\">></span>\n                                        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item-inside\"</span><span class=\"token operator\">></span>\n                                            <span class=\"token operator\">&lt;</span>h3 className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item-title line-left\"</span><span class=\"token operator\">></span>\n                                                <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>doc_section_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                                                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>doc_section_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'frontmatter.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n                                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n\n                                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>doc_section_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'frontmatter.excerpt'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item-content\"</span><span class=\"token operator\">></span>\n                                                    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">htmlToReact</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>doc_section_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'frontmatter.excerpt'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n                                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                                            <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item-buttons\"</span><span class=\"token operator\">></span>\n                                                <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>doc_section_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Learn More<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n                                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":2062,"column":1,"offset":88463},"end":{"line":2132,"column":4,"offset":92008},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":2134,"column":1,"offset":92012},"end":{"line":2134,"column":4,"offset":92015},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":2136,"column":1,"offset":92019},"end":{"line":2136,"column":10,"offset":92028},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":2138,"column":1,"offset":92032},"end":{"line":2138,"column":38,"offset":92069},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"SectionGrid","position":{"start":{"line":2140,"column":4,"offset":92076},"end":{"line":2140,"column":15,"offset":92087},"indent":[]}}],"position":{"start":{"line":2140,"column":1,"offset":92073},"end":{"line":2140,"column":15,"offset":92087},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2142,"column":1,"offset":92091},"end":{"line":2142,"column":4,"offset":92094},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> classNames<span class=\"token punctuation\">,</span> htmlToReact<span class=\"token punctuation\">,</span> withPrefix<span class=\"token punctuation\">,</span> Link<span class=\"token punctuation\">,</span> markdownify <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> CtaButtons <span class=\"token keyword\">from</span> <span class=\"token string\">'./CtaButtons'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SectionGrid</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> section <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'section'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>section\n                id<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'section_id'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'block'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'block-grid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'outer'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token string-property property\">'has-header'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"inner\"</span><span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"block-header inner-sm\"</span><span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>h2 className<span class=\"token operator\">=</span><span class=\"token string\">\"block-title\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n\n                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"block-subtitle\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">htmlToReact</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'subtitle'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'grid_items'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"&lt;iframe \"</span><span class=\"token operator\">></span>\n                            <span class=\"token operator\">&lt;</span>div\n                                className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'grid'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token string-property property\">'grid-col-2'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'col_number'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span>\n\n                                    <span class=\"token string-property property\">'grid-col-3'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'col_number'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'three'</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                            <span class=\"token operator\">></span>\n                                <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'grid_items'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> item_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                                    <span class=\"token operator\">&lt;</span>div key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>item_idx<span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item\"</span><span class=\"token operator\">></span>\n                                        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item-inside\"</span><span class=\"token operator\">></span>\n                                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item-image\"</span><span class=\"token operator\">></span>\n                                                    <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> alt<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'image_alt'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                                <span class=\"token operator\">&lt;</span>h3 className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item-title line-left\"</span><span class=\"token operator\">></span>\n                                                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'title_url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                                                        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'title_url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n                                                    <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n                                                        _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                                                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n                                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item-content\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">markdownify</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                                            <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'actions'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                                                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"grid-item-buttons\"</span><span class=\"token operator\">></span>\n                                                    <span class=\"token operator\">&lt;</span>CtaButtons <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> actions<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'actions'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                                                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":2144,"column":1,"offset":92098},"end":{"line":2222,"column":4,"offset":96079},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":2224,"column":1,"offset":96083},"end":{"line":2224,"column":4,"offset":96086},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":2226,"column":1,"offset":96090},"end":{"line":2226,"column":10,"offset":96099},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":2228,"column":1,"offset":96103},"end":{"line":2228,"column":38,"offset":96140},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"SectionHero","position":{"start":{"line":2230,"column":4,"offset":96147},"end":{"line":2230,"column":15,"offset":96158},"indent":[]}}],"position":{"start":{"line":2230,"column":1,"offset":96144},"end":{"line":2230,"column":15,"offset":96158},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2232,"column":1,"offset":96162},"end":{"line":2232,"column":4,"offset":96165},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> toStyleObj<span class=\"token punctuation\">,</span> withPrefix<span class=\"token punctuation\">,</span> markdownify <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> CtaButtons <span class=\"token keyword\">from</span> <span class=\"token string\">'./CtaButtons'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SectionHero</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> section <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'section'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>section id<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'section_id'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"block block-hero has-gradient outer\"</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"bg-img\"</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">toStyleObj</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background-image: url('\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"')\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"inner-sm\"</span><span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"block-header\"</span><span class=\"token operator\">></span>\n                            <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"block-title\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"&lt;iframe \"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">markdownify</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'actions'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"block-buttons\"</span><span class=\"token operator\">></span>\n                            <span class=\"token operator\">&lt;</span>CtaButtons <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> actions<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> <span class=\"token string\">'actions'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>section<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":2234,"column":1,"offset":96169},"end":{"line":2273,"column":4,"offset":97627},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":2275,"column":1,"offset":97631},"end":{"line":2275,"column":4,"offset":97634},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":2277,"column":1,"offset":97638},"end":{"line":2277,"column":10,"offset":97647},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":2279,"column":1,"offset":97651},"end":{"line":2279,"column":38,"offset":97688},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Submenu","position":{"start":{"line":2281,"column":4,"offset":97695},"end":{"line":2281,"column":11,"offset":97702},"indent":[]}}],"position":{"start":{"line":2281,"column":1,"offset":97692},"end":{"line":2281,"column":11,"offset":97702},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2283,"column":1,"offset":97706},"end":{"line":2283,"column":4,"offset":97709},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> classNames <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> ActionLink <span class=\"token keyword\">from</span> <span class=\"token string\">'./ActionLink'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Submenu</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> page <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'page'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>ul className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'menu_class'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'submenu'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">action<span class=\"token punctuation\">,</span> action_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">let</span> page_url <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">let</span> action_url <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>li\n                            key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>action_idx<span class=\"token punctuation\">}</span>\n                            className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu-item'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">current</span><span class=\"token operator\">:</span> page_url <span class=\"token operator\">===</span> action_url<span class=\"token punctuation\">,</span>\n\n                                <span class=\"token string-property property\">'menu-button'</span><span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'link'</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">></span>\n                            <span class=\"token operator\">&lt;</span>ActionLink <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> action<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>action<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":2285,"column":1,"offset":97713},"end":{"line":2323,"column":4,"offset":98906},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":2325,"column":1,"offset":98910},"end":{"line":2325,"column":4,"offset":98913},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":2327,"column":1,"offset":98917},"end":{"line":2327,"column":10,"offset":98926},"indent":[]}},{"type":"html","value":"  <summary>Click to expand!</summary>","position":{"start":{"line":2329,"column":1,"offset":98930},"end":{"line":2329,"column":38,"offset":98967},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Index.js","position":{"start":{"line":2331,"column":4,"offset":98974},"end":{"line":2331,"column":12,"offset":98982},"indent":[]}}],"position":{"start":{"line":2331,"column":1,"offset":98971},"end":{"line":2331,"column":12,"offset":98982},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2333,"column":1,"offset":98986},"end":{"line":2333,"column":4,"offset":98989},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> ActionLink <span class=\"token keyword\">from</span> <span class=\"token string\">'./ActionLink'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> CtaButtons <span class=\"token keyword\">from</span> <span class=\"token string\">'./CtaButtons'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> DocsMenu <span class=\"token keyword\">from</span> <span class=\"token string\">'./DocsMenu'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> DocsSubmenu <span class=\"token keyword\">from</span> <span class=\"token string\">'./DocsSubmenu'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Footer <span class=\"token keyword\">from</span> <span class=\"token string\">'./Footer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'./Header'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Icon <span class=\"token keyword\">from</span> <span class=\"token string\">'./Icon'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionContent <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionContent'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionCta <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionCta'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionDocs <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionDocs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionGrid <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionGrid'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionHero <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionHero'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Submenu <span class=\"token keyword\">from</span> <span class=\"token string\">'./Submenu'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'./Layout'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n    ActionLink<span class=\"token punctuation\">,</span>\n    CtaButtons<span class=\"token punctuation\">,</span>\n    DocsMenu<span class=\"token punctuation\">,</span>\n    DocsSubmenu<span class=\"token punctuation\">,</span>\n    Footer<span class=\"token punctuation\">,</span>\n    Header<span class=\"token punctuation\">,</span>\n    Icon<span class=\"token punctuation\">,</span>\n    SectionContent<span class=\"token punctuation\">,</span>\n    SectionCta<span class=\"token punctuation\">,</span>\n    SectionDocs<span class=\"token punctuation\">,</span>\n    SectionGrid<span class=\"token punctuation\">,</span>\n    SectionHero<span class=\"token punctuation\">,</span>\n    Submenu<span class=\"token punctuation\">,</span>\n    Layout\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    ActionLink<span class=\"token punctuation\">,</span>\n\n    CtaButtons<span class=\"token punctuation\">,</span>\n\n    DocsMenu<span class=\"token punctuation\">,</span>\n\n    DocsSubmenu<span class=\"token punctuation\">,</span>\n\n    Footer<span class=\"token punctuation\">,</span>\n\n    Header<span class=\"token punctuation\">,</span>\n\n    Icon<span class=\"token punctuation\">,</span>\n\n    SectionContent<span class=\"token punctuation\">,</span>\n\n    SectionCta<span class=\"token punctuation\">,</span>\n\n    SectionDocs<span class=\"token punctuation\">,</span>\n\n    SectionGrid<span class=\"token punctuation\">,</span>\n\n    SectionHero<span class=\"token punctuation\">,</span>\n\n    Submenu<span class=\"token punctuation\">,</span>\n\n    Layout\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":2335,"column":1,"offset":98993},"end":{"line":2411,"column":4,"offset":100073},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"</details>","position":{"start":{"line":2413,"column":1,"offset":100077},"end":{"line":2413,"column":11,"offset":100087},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2415,"column":1,"offset":100091},"end":{"line":2415,"column":4,"offset":100094},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2417,"column":1,"offset":100098},"end":{"line":2417,"column":4,"offset":100101},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Static Javascript","position":{"start":{"line":2419,"column":3,"offset":100107},"end":{"line":2419,"column":20,"offset":100124},"indent":[]}}],"position":{"start":{"line":2419,"column":1,"offset":100105},"end":{"line":2419,"column":20,"offset":100124},"indent":[]}},{"type":"html","value":"<details>","position":{"start":{"line":2421,"column":1,"offset":100128},"end":{"line":2421,"column":10,"offset":100137},"indent":[]}},{"type":"html","value":"  <summary>Static Javascript:!</summary>","position":{"start":{"line":2423,"column":1,"offset":100141},"end":{"line":2423,"column":41,"offset":100181},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"main.js","position":{"start":{"line":2425,"column":3,"offset":100187},"end":{"line":2425,"column":10,"offset":100194},"indent":[]}}],"position":{"start":{"line":2425,"column":1,"offset":100185},"end":{"line":2425,"column":10,"offset":100194},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onGatsbyInitialClientRender</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n\n     * Main JS file for theme behaviours\n\n     */</span>\n\n    <span class=\"token comment\">// Responsive video embeds</span>\n\n    <span class=\"token keyword\">let</span> videoEmbeds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'iframe[src*=\"youtube.com\"]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'iframe[src*=\"vimeo.com\"]'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">reframe</span><span class=\"token punctuation\">(</span>videoEmbeds<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Handle main navigation menu toggling on small screens</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">menuToggleHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu--opened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Handle docs navigation menu toggling on small screens</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">docsNavToggleHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-menu--opened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Handle submenu toggling</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">submenuToggleHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addMainNavigationHandlers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> menuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.menu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>menuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> menuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                menuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> menuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> submenuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.submenu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>submenuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> submenuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                submenuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> submenuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeMainNavigationHandlers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Remove nav related classes on page load</span>\n\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu--opened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> menuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.menu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>menuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> menuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                menuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> menuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> submenuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.submenu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>submenuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> submenuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                submenuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> submenuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addDocsNavigationHandlers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> docsNavToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-nav-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docsNavToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            docsNavToggle<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> docsNavToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> docsSubmenuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.docs-submenu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docsSubmenuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> docsSubmenuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                docsSubmenuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> submenuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeDocsNavigationHandlers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Remove docs nav related classes on page load</span>\n\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-menu--opened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> docsNavToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-nav-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docsNavToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            docsNavToggle<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> docsNavToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> docsSubmenuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.docs-submenu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docsSubmenuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> docsSubmenuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                docsSubmenuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> submenuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addPageNavLinks</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> pageToc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-nav-inside'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> pageTocContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-nav-link-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageToc <span class=\"token operator\">&amp;&amp;</span> pageTocContainer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> pageContent <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.type-docs .post-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Create in-page navigation</span>\n\n            <span class=\"token keyword\">const</span> headerLinks <span class=\"token operator\">=</span> <span class=\"token function\">getHeaderLinks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> pageContent\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>headerLinks<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                pageToc<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'has-links'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token function\">renderHeaderLinks</span><span class=\"token punctuation\">(</span>pageTocContainer<span class=\"token punctuation\">,</span> headerLinks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// Scroll to anchors</span>\n\n            <span class=\"token keyword\">let</span> scroll <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SmoothScroll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-scroll]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> hash <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">decodeURI</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hash <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">let</span> anchor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>anchor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        scroll<span class=\"token punctuation\">.</span><span class=\"token function\">animateScroll</span><span class=\"token punctuation\">(</span>anchor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// Highlight current anchor</span>\n\n            <span class=\"token keyword\">let</span> pageTocLinks <span class=\"token operator\">=</span> pageTocContainer<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTocLinks<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">let</span> spy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gumshoe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#page-nav-inside a'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">nested</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">nestedClass</span><span class=\"token operator\">:</span> <span class=\"token string\">'active-parent'</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// Add link to page content headings</span>\n\n            <span class=\"token keyword\">let</span> pageHeadings <span class=\"token operator\">=</span> <span class=\"token function\">getElementsByTagNames</span><span class=\"token punctuation\">(</span>pageContent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageHeadings<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">let</span> heading <span class=\"token operator\">=</span> pageHeadings<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> heading<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">&amp;&amp;</span> heading<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    heading<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token function\">anchorForId</span><span class=\"token punctuation\">(</span>heading<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> heading<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// Copy link url</span>\n\n            <span class=\"token keyword\">let</span> clipboard <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClipboardJS</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.hash-link'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function-variable function\">text</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">trigger</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> trigger<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removePageNavLinks</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> pageToc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-nav-inside'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> pageTocContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-nav-link-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageToc <span class=\"token operator\">&amp;&amp;</span> pageTocContainer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            pageToc<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'has-links'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pageTocContainer<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                pageTocContainer<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>pageTocContainer<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getElementsByTagNames</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">root<span class=\"token punctuation\">,</span> tagNames</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> root<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> tagName <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tagNames<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>tagName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                elements<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            elements <span class=\"token operator\">=</span> elements<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">getElementsByTagNames</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> tagNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> elements<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createLinksForHeaderElements</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elements</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">level</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> result\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> re <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^h(\\d)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> elements<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> elements<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> tagName <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> match <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>tagName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>match<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can not create links to non header element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">let</span> headerLevel <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>element<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>element<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can not create link to element without id and without text content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                element<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>textContent\n\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^\\w]+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^_</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">_$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">let</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> element<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n\n            link<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            link<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> element<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">level</span><span class=\"token operator\">:</span> headerLevel<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">textContent</span><span class=\"token operator\">:</span> element<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> element<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> link<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>headerLevel <span class=\"token operator\">></span> stack<span class=\"token punctuation\">[</span>stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                stack<span class=\"token punctuation\">[</span>stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>headerLevel <span class=\"token operator\">&lt;=</span> stack<span class=\"token punctuation\">[</span>stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>level <span class=\"token operator\">&amp;&amp;</span> stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    stack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                stack<span class=\"token punctuation\">[</span>stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getHeaderLinks</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> tagNames <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>tagNames <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> root <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>root <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> headerElements <span class=\"token operator\">=</span> <span class=\"token function\">getElementsByTagNames</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> tagNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">createLinksForHeaderElements</span><span class=\"token punctuation\">(</span>headerElements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">renderHeaderLinks</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> links</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>links<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">let</span> ulElm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> links<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> liElm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            liElm<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">renderHeaderLinks</span><span class=\"token punctuation\">(</span>liElm<span class=\"token punctuation\">,</span> links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            ulElm<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>liElm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        element<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>ulElm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">anchorForId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> anchor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        anchor<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hash-link'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        anchor<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        anchor<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">;</span>\n\n        anchor<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;span class=\"screen-reader-text\">Copy&lt;/span>'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> anchor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Syntax Highlighter</span>\n\n    <span class=\"token comment\">// Prism.highlightAll();</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span>\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span>\n\n<span class=\"token comment\">//--------------------------------New----------------------------------</span>\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span>\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span></code></pre></div>","position":{"start":{"line":2427,"column":1,"offset":100198},"end":{"line":2790,"column":4,"offset":110658},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":2792,"column":1,"offset":110662},"end":{"line":2792,"column":4,"offset":110665},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2794,"column":1,"offset":110669},"end":{"line":2794,"column":4,"offset":110672},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Page Load JS","position":{"start":{"line":2796,"column":3,"offset":110678},"end":{"line":2796,"column":15,"offset":110690},"indent":[]}}],"position":{"start":{"line":2796,"column":1,"offset":110676},"end":{"line":2796,"column":15,"offset":110690},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onGatsbyRouteUpdate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addMainNavigationHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addDocsNavigationHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addPageNavLinks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":2798,"column":1,"offset":110694},"end":{"line":2807,"column":4,"offset":110873},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":2809,"column":1,"offset":110877},"end":{"line":2809,"column":4,"offset":110880},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2811,"column":1,"offset":110884},"end":{"line":2811,"column":4,"offset":110887},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"PageUnload.js","position":{"start":{"line":2813,"column":3,"offset":110893},"end":{"line":2813,"column":16,"offset":110906},"indent":[]}}],"position":{"start":{"line":2813,"column":1,"offset":110891},"end":{"line":2813,"column":16,"offset":110906},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onGatsbyPreRouteUpdate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeMainNavigationHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeDocsNavigationHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removePageNavLinks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":2815,"column":1,"offset":110910},"end":{"line":2824,"column":4,"offset":111101},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":2826,"column":1,"offset":111105},"end":{"line":2826,"column":4,"offset":111108},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":2828,"column":1,"offset":111112},"end":{"line":2828,"column":4,"offset":111115},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Plugins.js","position":{"start":{"line":2830,"column":3,"offset":111121},"end":{"line":2830,"column":13,"offset":111131},"indent":[]}}],"position":{"start":{"line":2830,"column":1,"offset":111119},"end":{"line":2830,"column":13,"offset":111131},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> module\n        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> define <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd\n        <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> globalThis <span class=\"token operator\">?</span> globalThis <span class=\"token operator\">:</span> e <span class=\"token operator\">||</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reframe <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> t <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> e <span class=\"token operator\">+=</span> arguments<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> f <span class=\"token operator\">&lt;</span> d<span class=\"token punctuation\">;</span> f<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> o<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> i<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">===</span> s <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">=</span> <span class=\"token string\">'js-reframe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">?</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">'length'</span> <span class=\"token keyword\">in</span> e <span class=\"token operator\">?</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">;</span>\n\n                <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n                    <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>offsetWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> i <span class=\"token operator\">?</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> o <span class=\"token operator\">?</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">'relative'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>paddingTop <span class=\"token operator\">=</span> r <span class=\"token operator\">+</span> <span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> n <span class=\"token operator\">&amp;&amp;</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    f<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*! smooth-scroll v16.1.0 | (c) 2019 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/smooth-scroll */</span>\n\nwindow<span class=\"token punctuation\">.</span>Element <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token operator\">!</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>closest <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">closest</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span>\n            n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>document <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ownerDocument<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            o <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">--</span>t <span class=\"token operator\">&amp;&amp;</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> o<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>CustomEvent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            t <span class=\"token operator\">=</span> t <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">cancelable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CustomEvent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">initCustomEvent</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>bubbles<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>cancelable<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>CustomEvent <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ms'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'moz'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'webkit'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>requestAnimationFrame<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>t<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>requestAnimationFrame <span class=\"token operator\">=</span> window<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'RequestAnimationFrame'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>cancelAnimationFrame <span class=\"token operator\">=</span> window<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'CancelAnimationFrame'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'CancelRequestAnimationFrame'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        window<span class=\"token punctuation\">.</span>requestAnimationFrame <span class=\"token operator\">||</span>\n            <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">requestAnimationFrame</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    o <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    a <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            window<span class=\"token punctuation\">.</span>cancelAnimationFrame <span class=\"token operator\">||</span>\n                <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">cancelAnimationFrame</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> define <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd\n            <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token keyword\">return</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">:</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports\n            <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>SmoothScroll <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> global <span class=\"token operator\">?</span> global <span class=\"token operator\">:</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">?</span> window <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">q</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> <span class=\"token constant\">I</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">ignore</span><span class=\"token operator\">:</span> <span class=\"token string\">'[data-scroll-ignore]'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">header</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">topOnEmptyHash</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">speed</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">speedAsDuration</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">durationMax</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">durationMin</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">clip</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">easing</span><span class=\"token operator\">:</span> <span class=\"token string\">'easeInOutCubic'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">customEasing</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">updateURL</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">popstate</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">emitEvents</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">F</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                            n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    n\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">r</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'#'</span> <span class=\"token operator\">===</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>a <span class=\"token operator\">&lt;</span> o<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidCharacterError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid character: the input contains U+0000.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">127</span> <span class=\"token operator\">==</span> t <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> a <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">48</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">===</span> a <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">48</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">57</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">45</span> <span class=\"token operator\">===</span> i<span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">+=</span> <span class=\"token string\">'\\\\'</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">+=</span>\n                              <span class=\"token number\">128</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">||</span> <span class=\"token number\">45</span> <span class=\"token operator\">===</span> t <span class=\"token operator\">||</span> <span class=\"token number\">95</span> <span class=\"token operator\">===</span> t <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">48</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">65</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">97</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">122</span><span class=\"token punctuation\">)</span>\n                                  <span class=\"token operator\">?</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n                                  <span class=\"token operator\">:</span> <span class=\"token string\">'\\\\'</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">L</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>\n                    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">x</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> e <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">H</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>emitEvents <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> q<span class=\"token punctuation\">.</span>CustomEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomEvent</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">anchor</span><span class=\"token operator\">:</span> n<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">toggle</span><span class=\"token operator\">:</span> o <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    document<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">o<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">,</span>\n                a<span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">O</span><span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">C</span><span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">M</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">cancelScroll</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">cancelAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">||</span> <span class=\"token constant\">H</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scrollCancel'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">animateScroll</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancelScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">||</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        u <span class=\"token operator\">=</span> <span class=\"token string\">'[object Number]'</span> <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        t <span class=\"token operator\">=</span> u <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>i<span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> i<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>u <span class=\"token operator\">||</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>pageYOffset<span class=\"token punctuation\">;</span>\n\n                        s<span class=\"token punctuation\">.</span>header <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token constant\">O</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">O</span> <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">var</span> n<span class=\"token punctuation\">,</span>\n                            o<span class=\"token punctuation\">,</span>\n                            a<span class=\"token punctuation\">,</span>\n                            m<span class=\"token punctuation\">,</span>\n                            r<span class=\"token punctuation\">,</span>\n                            d<span class=\"token punctuation\">,</span>\n                            f<span class=\"token punctuation\">,</span>\n                            h<span class=\"token punctuation\">,</span>\n                            p <span class=\"token operator\">=</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token constant\">O</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            g <span class=\"token operator\">=</span> u\n                                <span class=\"token operator\">?</span> i\n                                <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                      <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                                      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>offsetParent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+=</span> e<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>offsetParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> t <span class=\"token operator\">-</span> n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> q<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">;</span>\n                                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> s<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">?</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> s<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span>clip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            y <span class=\"token operator\">=</span> g <span class=\"token operator\">-</span> l<span class=\"token punctuation\">,</span>\n                            v <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            w <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token constant\">S</span> <span class=\"token operator\">=</span>\n                                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>speedAsDuration <span class=\"token operator\">?</span> o<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">/</span> <span class=\"token number\">1e3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> o<span class=\"token punctuation\">.</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                o<span class=\"token punctuation\">.</span>durationMax <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">></span> o<span class=\"token punctuation\">.</span>durationMax <span class=\"token operator\">?</span> o<span class=\"token punctuation\">.</span>durationMax <span class=\"token operator\">:</span> o<span class=\"token punctuation\">.</span>durationMin <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">&lt;</span> o<span class=\"token punctuation\">.</span>durationMin <span class=\"token operator\">?</span> o<span class=\"token punctuation\">.</span>durationMin <span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token function-variable function\">E</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> n<span class=\"token punctuation\">,</span>\n                                    o<span class=\"token punctuation\">,</span>\n                                    a<span class=\"token punctuation\">,</span>\n                                    r <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>pageYOffset<span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">==</span> t <span class=\"token operator\">||</span> r <span class=\"token operator\">==</span> t <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;</span> t <span class=\"token operator\">&amp;&amp;</span> q<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> v<span class=\"token punctuation\">)</span>\n                                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                                        <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancelScroll</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        a <span class=\"token operator\">||</span>\n                                            <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            document<span class=\"token punctuation\">.</span>activeElement <span class=\"token operator\">!==</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>outline <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            q<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token constant\">H</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scrollStop'</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span> <span class=\"token operator\">=</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token function-variable function\">b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">;</span>\n\n                                m <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span>w <span class=\"token operator\">+=</span> e <span class=\"token operator\">-</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span>\n                                        l <span class=\"token operator\">+</span>\n                                        y <span class=\"token operator\">*</span>\n                                            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> r <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token constant\">S</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> w <span class=\"token operator\">/</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInQuad'</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeOutQuad'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInOutQuad'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInCubic'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeOutCubic'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInOutCubic'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInQuart'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeOutQuart'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInOutQuart'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInQuint'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeOutQuint'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInOutQuint'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            t<span class=\"token punctuation\">.</span>customEasing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">customEasing</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            o <span class=\"token operator\">||</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    q<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token constant\">E</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token number\">0</span> <span class=\"token operator\">===</span> q<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token operator\">&amp;&amp;</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">(</span>h <span class=\"token operator\">=</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            u <span class=\"token operator\">||</span>\n                                <span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>pushState <span class=\"token operator\">&amp;&amp;</span>\n                                    h<span class=\"token punctuation\">.</span>updateURL <span class=\"token operator\">&amp;&amp;</span>\n                                    history<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span>\n                                        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">smoothScroll</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">anchor</span><span class=\"token operator\">:</span> f<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                                        document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n\n                                        f <span class=\"token operator\">===</span> document<span class=\"token punctuation\">.</span>documentElement <span class=\"token operator\">?</span> <span class=\"token string\">'#top'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> f<span class=\"token punctuation\">.</span>id\n                                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token string\">'matchMedia'</span> <span class=\"token keyword\">in</span> q <span class=\"token operator\">&amp;&amp;</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-reduced-motion)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches\n                                <span class=\"token operator\">?</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">H</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scrollStart'</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancelScroll</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">t</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>defaultPrevented <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">.</span>button <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>metaKey <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>ctrlKey <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>shiftKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token string\">'closest'</span> <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">.</span>target <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token string\">'a'</span> <span class=\"token operator\">===</span> a<span class=\"token punctuation\">.</span>tagName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>ignore<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                        a<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">===</span> q<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">&amp;&amp;</span>\n                        a<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">===</span> q<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">#</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span>\n                            n <span class=\"token operator\">=</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span> <span class=\"token operator\">===</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>topOnEmptyHash<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                            t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t <span class=\"token operator\">||</span> <span class=\"token string\">'#top'</span> <span class=\"token operator\">!==</span> n <span class=\"token operator\">?</span> t <span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                            <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>replaceState <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>updateURL <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        history<span class=\"token punctuation\">.</span><span class=\"token function\">replaceState</span><span class=\"token punctuation\">(</span>\n                                            <span class=\"token punctuation\">{</span>\n                                                <span class=\"token literal-property property\">smoothScroll</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                                <span class=\"token literal-property property\">anchor</span><span class=\"token operator\">:</span> t <span class=\"token operator\">||</span> q<span class=\"token punctuation\">.</span>pageYOffset\n                                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                                            document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n\n                                            t <span class=\"token operator\">||</span> q<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href\n                                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">animateScroll</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> history<span class=\"token punctuation\">.</span>state <span class=\"token operator\">&amp;&amp;</span> history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>smoothScroll <span class=\"token operator\">&amp;&amp;</span> history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>smoothScroll <span class=\"token operator\">===</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">animateScroll</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">updateURL</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">destroy</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token constant\">A</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'popstate'</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancelScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token constant\">O</span> <span class=\"token operator\">=</span> a <span class=\"token operator\">=</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">'querySelector'</span> <span class=\"token keyword\">in</span> document <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'addEventListener'</span> <span class=\"token keyword\">in</span> q <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'requestAnimationFrame'</span> <span class=\"token keyword\">in</span> q <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'closest'</span> <span class=\"token keyword\">in</span> q<span class=\"token punctuation\">.</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">throw</span> <span class=\"token string\">'Smooth Scroll: This browser does not support the required JavaScript methods and browser APIs.'</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">(</span><span class=\"token constant\">I</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token constant\">O</span> <span class=\"token operator\">=</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>header <span class=\"token operator\">?</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>updateURL <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>popstate <span class=\"token operator\">&amp;&amp;</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'popstate'</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">M</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*! gumshoejs v5.1.1 | (c) 2019 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/gumshoe */</span>\n\n<span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>closest <span class=\"token operator\">||</span>\n    <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">=</span> <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>msMatchesSelector <span class=\"token operator\">||</span> <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>webkitMatchesSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">closest</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n            e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>CustomEvent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e <span class=\"token operator\">=</span> e <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">cancelable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CustomEvent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">initCustomEvent</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>bubbles<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>cancelable<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>CustomEvent <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> define <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd\n            <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token keyword\">return</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">:</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports\n            <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>Gumshoe <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> global <span class=\"token operator\">?</span> global <span class=\"token operator\">:</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">?</span> window <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">navClass</span><span class=\"token operator\">:</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">contentClass</span><span class=\"token operator\">:</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">nested</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">nestedClass</span><span class=\"token operator\">:</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">reflow</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">events</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomEvent</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">cancelable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>offsetParent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> t<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">+=</span> t<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>offsetParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> e <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> e <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">s</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                t <span class=\"token operator\">&amp;&amp;</span>\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">c</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">?</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> o <span class=\"token operator\">?</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> c<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">r</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    t<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">+</span> t<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token operator\">>=</span>\n                    Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>\n                        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight\n                    <span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">i</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> o <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> o<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">l</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nested<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nestedClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">l</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>nav<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    o <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>navClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>contentClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">l</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gumshoeDeactivate'</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">.</span>nav<span class=\"token punctuation\">,</span>\n\n                            <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>\n\n                            <span class=\"token literal-property property\">settings</span><span class=\"token operator\">:</span> e\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">u</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nested<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nestedClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">u</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">o<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> r<span class=\"token punctuation\">,</span>\n                l<span class=\"token punctuation\">,</span>\n                f<span class=\"token punctuation\">,</span>\n                d<span class=\"token punctuation\">,</span>\n                m<span class=\"token punctuation\">,</span>\n                v <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setup</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        e <span class=\"token operator\">&amp;&amp;</span> l<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">nav</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> e <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token function\">s</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">detect</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    t\n                        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>content <span class=\"token operator\">===</span> f<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n                          <span class=\"token punctuation\">(</span><span class=\"token function\">a</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                          <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                  <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>nav<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                  o <span class=\"token operator\">&amp;&amp;</span>\n                                      <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>navClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>contentClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      <span class=\"token function\">u</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gumshoeActivate'</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                          <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">.</span>nav<span class=\"token punctuation\">,</span>\n\n                                          <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>\n\n                                          <span class=\"token literal-property property\">settings</span><span class=\"token operator\">:</span> e\n                                      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                              <span class=\"token punctuation\">}</span>\n                          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                          <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">:</span> f <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">a</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">p</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    d <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAnimationFrame</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>detect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">h</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    d <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAnimationFrame</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token function\">s</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            v<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">destroy</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                f <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    m<span class=\"token punctuation\">.</span>reflow <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                                t<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        t\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> c <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                v<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                v<span class=\"token punctuation\">.</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                m<span class=\"token punctuation\">.</span>reflow <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                v\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*!\n\n * clipboard.js v2.0.4\n\n * https://zenorocha.github.io/clipboard.js\n\n *\n\n * Licensed MIT © Zeno Rocha\n\n */</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> module\n        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> define <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd\n        <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports\n        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">.</span>ClipboardJS <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>ClipboardJS <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">l</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">exports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>l <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>m <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">d</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                r<span class=\"token punctuation\">.</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">get</span><span class=\"token operator\">:</span> n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">r</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span>\n                    Symbol<span class=\"token punctuation\">.</span>toStringTag <span class=\"token operator\">&amp;&amp;</span>\n                    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'Module'</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token string\">'__esModule'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">t</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token operator\">&amp;</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> e <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>__esModule<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> e\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">2</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">)</span>\n                        r<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>\n                            n<span class=\"token punctuation\">,</span>\n\n                            o<span class=\"token punctuation\">,</span>\n\n                            <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span>\n                    t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>__esModule\n                        <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>s <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span>\n                    <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'symbol'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol<span class=\"token punctuation\">.</span>iterator\n                        <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">!==</span> <span class=\"token class-name\">Symbol</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">?</span> <span class=\"token string\">'symbol'</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>configurable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span> <span class=\"token keyword\">in</span> o <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>writable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                a <span class=\"token operator\">=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                c <span class=\"token operator\">=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                u <span class=\"token operator\">=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>__esModule <span class=\"token operator\">?</span> t <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> t <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot call a class as a function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>t<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReferenceError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this hasn't been initialised - super() hasn't been called\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'object'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> t <span class=\"token operator\">:</span> e<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">resolveOptions</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">listenClick</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Super expression must either be null or a function, not '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">constructor</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">writable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span>setPrototypeOf <span class=\"token operator\">?</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>\n                        o<span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">[</span>\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'resolveOptions'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">=</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>action <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>action <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>defaultAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>target <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>target <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>defaultTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>text <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>text <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>defaultText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container <span class=\"token operator\">=</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">===</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>container <span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'listenClick'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listener <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'onClick'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>delegateTarget <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">a<span class=\"token punctuation\">.</span>default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                                            <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">target</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">trigger</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">emitter</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span>\n                                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'defaultAction'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">return</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">'action'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'defaultTarget'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">'target'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'defaultText'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">return</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'destroy'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">[</span>\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'isSupported'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cut'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                        e <span class=\"token operator\">=</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span>\n                                        n <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span>queryCommandSupported<span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                                        e<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                            n <span class=\"token operator\">=</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">queryCommandSupported</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        n\n                                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    o\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token string\">'data-clipboard-'</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> o<span class=\"token punctuation\">,</span>\n                r <span class=\"token operator\">=</span>\n                    <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'symbol'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol<span class=\"token punctuation\">.</span>iterator\n                        <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">!==</span> <span class=\"token class-name\">Symbol</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">?</span> <span class=\"token string\">'symbol'</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>configurable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span> <span class=\"token keyword\">in</span> o <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>writable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                a <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> o<span class=\"token punctuation\">.</span>__esModule <span class=\"token operator\">?</span> o <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> o <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> u <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot call a class as a function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolveOptions</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'resolveOptions'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'initSelection'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'selectFake'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n                                    e <span class=\"token operator\">=</span> <span class=\"token string\">'rtl'</span> <span class=\"token operator\">==</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dir'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">fakeHandlerCallback</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">removeFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>fontSize <span class=\"token operator\">=</span> <span class=\"token string\">'12pt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>margin <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">[</span>e <span class=\"token operator\">?</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'-9999px'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">;</span>\n\n                                <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'removeFake'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandler <span class=\"token operator\">&amp;&amp;</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'selectTarget'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'copyText'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                                    e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    e <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleResult</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'handleResult'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">?</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">,</span>\n\n                                    <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText<span class=\"token punctuation\">,</span>\n\n                                    <span class=\"token literal-property property\">trigger</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">,</span>\n\n                                    <span class=\"token literal-property property\">clearSelection</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearSelection</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'clearSelection'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeAllRanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'destroy'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'action'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token string\">'copy'</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'copy'</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'cut'</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"action\" value, use either \"copy\" or \"cut\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action<span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'target'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>t <span class=\"token operator\">||</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">!==</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">===</span> t <span class=\"token operator\">?</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">:</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">1</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">)</span>\n                                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"target\" value, use a valid Element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disabled'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'cut'</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disabled'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n                                            <span class=\"token string\">'Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes'</span>\n                                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_target <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_target<span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    e\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> u<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            t<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> e<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'INPUT'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeName <span class=\"token operator\">||</span> <span class=\"token string\">'TEXTAREA'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    n <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">setSelectionRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'contenteditable'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        r <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    r<span class=\"token punctuation\">.</span><span class=\"token function\">selectNodeContents</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">removeAllRanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">addRange</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function-variable function\">on</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">fn</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ctx</span><span class=\"token operator\">:</span> n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">once</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        o<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>_ <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">emit</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> o <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">;</span> o<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                        n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">off</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        o <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                        r <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fn <span class=\"token operator\">!==</span> e <span class=\"token operator\">&amp;&amp;</span> o<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span>_ <span class=\"token operator\">!==</span> e <span class=\"token operator\">&amp;&amp;</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">delete</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                h <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            t<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Missing required arguments'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Second argument must be a String'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Third argument must be a Function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token punctuation\">(</span>s <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>l <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token function-variable function\">destroy</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                l<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">nodeList</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>c <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>u <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token function-variable function\">destroy</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'First argument must be a String, HTMLElement, HTMLCollection, or NodeList'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">node</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">nodeList</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'[object NodeList]'</span> <span class=\"token operator\">===</span> e <span class=\"token operator\">||</span> <span class=\"token string\">'[object HTMLCollection]'</span> <span class=\"token operator\">===</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'length'</span> <span class=\"token keyword\">in</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">string</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">||</span> t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">fn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string\">'[object Function]'</span> <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">i</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>delegateTarget <span class=\"token operator\">=</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>delegateTarget <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">{</span>\n                        <span class=\"token function-variable function\">destroy</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            t<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>addEventListener\n                    <span class=\"token operator\">?</span> <span class=\"token function\">i</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span>\n                    <span class=\"token operator\">:</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> n\n                    <span class=\"token operator\">?</span> <span class=\"token function\">i</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span>\n                    <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                          <span class=\"token keyword\">return</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> Element <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n\n                n<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>matchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>mozMatchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>msMatchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>oMatchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>webkitMatchesSelector<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            t<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">9</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n\n                    t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":2832,"column":1,"offset":111135},"end":{"line":4118,"column":4,"offset":161594},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":4120,"column":1,"offset":161598},"end":{"line":4120,"column":4,"offset":161601},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":4122,"column":1,"offset":161605},"end":{"line":4122,"column":4,"offset":161608},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Prism.js","position":{"start":{"line":4124,"column":3,"offset":161614},"end":{"line":4124,"column":11,"offset":161622},"indent":[]}}],"position":{"start":{"line":4124,"column":1,"offset":161612},"end":{"line":4124,"column":11,"offset":161622},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n\n      <span class=\"token comment\">/* PrismJS 1.16.0\n\n&lt;https://prismjs.com/download.html#themes=prism&amp;languages=markup+css+clike+javascript&amp;plugins=toolbar+copy-to-clipboard> \\_/\n\nvar \\_self = 'undefined' != typeof window ? window : 'undefined' != typeof WorkerGlobalScope &amp;&amp; self instanceof WorkerGlobalScope ? self : {},\n\nPrism = (function (g) {\n\nvar c = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n\na = 0,\n\nC = {\n\nmanual: g.Prism &amp;&amp; g.Prism.manual,\n\ndisableWorkerMessageHandler: g.Prism &amp;&amp; g.Prism.disableWorkerMessageHandler,\n\nutil: {\n\nencode: function (e) {\n\nreturn e instanceof M\n\n? new M(e.type, C.util.encode(e.content), e.alias)\n\n: Array.isArray(e)\n\n? e.map(C.util.encode)\n\n: e\n\n.replace(/&amp;/g, '&amp;amp;')\n\n.replace(/&lt;/g, '&amp;lt;')\n\n.replace(/\\u00a0/g, ' ');\n\n},\n\ntype: function (e) {\n\nreturn Object.prototype.toString.call(e).slice(8, -1);\n\n},\n\nobjId: function (e) {\n\nreturn e.**id || Object.defineProperty(e, '**id', { value: ++a }), e.\\_\\_id;\n\n},\n\nclone: function n(e, t) {\n\nvar r,\n\na,\n\ni = C.util.type(e);\n\nswitch (((t = t || {}), i)) {\n\ncase 'Object':\n\nif (((a = C.util.objId(e)), t[a])) return t[a];\n\nfor (var l in ((r = {}), (t[a] = r), e)) e.hasOwnProperty(l) &amp;&amp; (r[l] = n(e[l], t));\n\nreturn r;\n\ncase 'Array':\n\nreturn (\n\n(a = C.util.objId(e)),\n\nt[a]\n\n? t[a]\n\n: ((r = []),\n\n(t[a] = r),\n\ne.forEach(function (e, a) {\n\nr[a] = n(e, t);\n\n}),\n\nr)\n\n);\n\ndefault:\n\nreturn e;\n\n}\n\n}\n\n},\n\nlanguages: {\n\nextend: function (e, a) {\n\nvar n = C.util.clone(C.languages[e]);\n\nfor (var t in a) n[t] = a[t];\n\nreturn n;\n\n},\n\ninsertBefore: function (n, e, a, t) {\n\nvar r = [t = t || C.languages](n),\n\ni = {};\n\nfor (var l in r)\n\nif (r.hasOwnProperty(l)) {\n\nif (l == e) for (var o in a) a.hasOwnProperty(o) &amp;&amp; (i[o] = a[o]);\n\na.hasOwnProperty(l) || (i[l] = r[l]);\n\n}\n\nvar s = t[n];\n\nreturn (\n\n(t[n] = i),\n\nC.languages.DFS(C.languages, function (e, a) {\n\na === s &amp;&amp; e != n &amp;&amp; (this[e] = i);\n\n}),\n\ni\n\n);\n\n},\n\nDFS: function e(a, n, t, r) {\n\nr = r || {};\n\nvar i = C.util.objId;\n\nfor (var l in a)\n\nif (a.hasOwnProperty(l)) {\n\nn.call(a, l, a[l], t || l);\n\nvar o = a[l],\n\ns = C.util.type(o);\n\n'Object' !== s || r[i(o)] ? 'Array' !== s || r[i(o)] || ((r[i(o)] = !0), e(o, n, l, r)) : ((r[i(o)] = !0), e(o, n, null, r));\n\n}\n\n}\n\n},\n\nplugins: {},\n\nhighlightAll: function (e, a) {\n\nC.highlightAllUnder(document, e, a);\n\n},\n\nhighlightAllUnder: function (e, a, n) {\n\nvar t = {\n\ncallback: n,\n\nselector: 'code[class_=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\n};\n\nC.hooks.run('before-highlightall', t);\n\nfor (var r, i = t.elements || e.querySelectorAll(t.selector), l = 0; (r = i[l++]); ) C.highlightElement(r, !0 === a, t.callback);\n\n},\n\nhighlightElement: function (e, a, n) {\n\nfor (var t, r = 'none', i = e; i &amp;&amp; !c.test(i.className); ) i = i.parentNode;\n\ni &amp;&amp; ((r = (i.className.match(c) || [, 'none'])[1].toLowerCase()), (t = C.languages[r])),\n\n(e.className = e.className.replace(c, '').replace(/\\s+/g, ' ') + ' language-' + r),\n\ne.parentNode &amp;&amp;\n\n((i = e.parentNode), /pre/i.test(i.nodeName) &amp;&amp; (i.className = i.className.replace(c, '').replace(/\\s+/g, ' ') + ' language-' + r));\n\nvar l = { element: e, language: r, grammar: t, code: e.textContent },\n\no = function (e) {\n\n(l.highlightedCode = e),\n\nC.hooks.run('before-insert', l),\n\n(l.element.innerHTML = l.highlightedCode),\n\nC.hooks.run('after-highlight', l),\n\nC.hooks.run('complete', l),\n\nn &amp;&amp; n.call(l.element);\n\n};\n\nif ((C.hooks.run('before-sanity-check', l), l.code))\n\nif ((C.hooks.run('before-highlight', l), l.grammar))\n\nif (a &amp;&amp; g.Worker) {\n\nvar s = new Worker(C.filename);\n\n(s.onmessage = function (e) {\n\no(e.data);\n\n}),\n\ns.postMessage(\n\nJSON.stringify({\n\nlanguage: l.language,\n\ncode: l.code,\n\nimmediateClose: !0\n\n})\n\n);\n\n} else o(C.highlight(l.code, l.grammar, l.language));\n\nelse o(C.util.encode(l.code));\n\nelse C.hooks.run('complete', l);\n\n},\n\nhighlight: function (e, a, n) {\n\nvar t = { code: e, grammar: a, language: n };\n\nreturn (\n\nC.hooks.run('before-tokenize', t),\n\n(t.tokens = C.tokenize(t.code, t.grammar)),\n\nC.hooks.run('after-tokenize', t),\n\nM.stringify(C.util.encode(t.tokens), t.language)\n\n);\n\n},\n\nmatchGrammar: function (e, a, n, t, r, i, l) {\n\nfor (var o in n)\n\nif (n.hasOwnProperty(o) &amp;&amp; n[o]) {\n\nif (o == l) return;\n\nvar s = n[o];\n\ns = 'Array' === C.util.type(s) ? s : [s];\n\nfor (var g = 0; g &lt; s.length; ++g) {\n\nvar c = s[g],\n\nu = c.inside,\n\nh = !!c.lookbehind,\n\nf = !!c.greedy,\n\nd = 0,\n\nm = c.alias;\n\nif (f &amp;&amp; !c.pattern.global) {\n\nvar p = c.pattern.toString().match[/[imuy]\\_$/](0);\n\nc.pattern = RegExp(c.pattern.source, p + 'g');\n\n}\n\nc = c.pattern || c;\n\nfor (var y = t, v = r; y &lt; a.length; v += a[y].length, ++y) {\n\nvar k = a[y];\n\nif (a.length > e.length) return;\n\nif (!(k instanceof M)) {\n\nif (f &amp;&amp; y != a.length - 1) {\n\nif (((c.lastIndex = v), !(x = c.exec(e)))) break;\n\nfor (\n\nvar b = x.index + (h ? x[1].length : 0), w = x.index + x[0].length, A = y, P = v, O = a.length;\n\nA &lt; O &amp;&amp; (P &lt; w || (!a[A].type &amp;&amp; !a[A - 1].greedy));\n\n++A\n\n)\n\n(P += a[A].length) &lt;= b &amp;&amp; (++y, (v = P));\n\nif (a[y] instanceof M) continue;\n\n(N = A - y), (k = e.slice(v, P)), (x.index -= v);\n\n} else {\n\nc.lastIndex = 0;\n\nvar x = c.exec(k),\n\nN = 1;\n\n}\n\nif (x) {\n\nh &amp;&amp; (d = x[1] ? x[1].length : 0);\n\nw = (b = x.index + d) + (x = x[0].slice(d)).length;\n\nvar j = k.slice(0, b),\n\nS = k.slice(w),\n\nE = [y, N];\n\nj &amp;&amp; (++y, (v += j.length), E.push(j));\n\nvar \\* = new M(o, u ? C.tokenize(x, u) : x, m, x, f);\n\nif (\n\n(E.push(\\*),\n\nS &amp;&amp; E.push(S),\n\nArray.prototype.splice.apply(a, E),\n\n1 != N &amp;&amp; C.matchGrammar(e, a, n, y, v, !0, o),\n\ni)\n\n)\n\nbreak;\n\n} else if (i) break;\n\n}\n\n}\n\n}\n\n}\n\n},\n\ntokenize: function (e, a) {\n\nvar n = [e],\n\nt = a.rest;\n\nif (t) {\n\nfor (var r in t) a[r] = t[r];\n\ndelete a.rest;\n\n}\n\nreturn C.matchGrammar(e, n, a, 0, 0, !1), n;\n\n},\n\nhooks: {\n\nall: {},\n\nadd: function (e, a) {\n\nvar n = C.hooks.all;\n\n(n[e] = n[e] || []), n[e].push(a);\n\n},\n\nrun: function (e, a) {\n\nvar n = C.hooks.all[e];\n\nif (n &amp;&amp; n.length) for (var t, r = 0; (t = n[r++]); ) t(a);\n\n}\n\n},\n\nToken: M\n\n};\n\nfunction M(e, a, n, t, r) {\n\n(this.type = e), (this.content = a), (this.alias = n), (this.length = 0 | (t || '').length), (this.greedy = !!r);\n\n}\n\nif (\n\n((g.Prism = C),\n\n(M.stringify = function (e, a) {\n\nif ('string' == typeof e) return e;\n\nif (Array.isArray(e))\n\nreturn e\n\n.map(function (e) {\n\nreturn M.stringify(e, a);\n\n})\n\n.join('');\n\nvar n = {\n\ntype: e.type,\n\ncontent: M.stringify(e.content, a),\n\ntag: 'span',\n\nclasses: ['token', e.type],\n\nattributes: {},\n\nlanguage: a\n\n};\n\nif (e.alias) {\n\nvar t = Array.isArray(e.alias) ? e.alias : [e.alias];\n\nArray.prototype.push.apply(n.classes, t);\n\n}\n\nC.hooks.run('wrap', n);\n\nvar r = Object.keys(n.attributes)\n\n.map(function (e) {\n\nreturn e + '=\"' + (n.attributes[e] || '').replace(/\"/g, '&amp;quot;') + '\"';\n\n})\n\n.join(' ');\n\nreturn '&lt;' + n.tag + ' class=\"' + n.classes.join(' ') + '\"' + (r ? ' ' + r : '') + '>' + n.content + '&lt;/' + n.tag + '>';\n\n}),\n\n!g.document)\n\n)\n\nreturn (\n\ng.addEventListener &amp;&amp;\n\n(C.disableWorkerMessageHandler ||\n\ng.addEventListener(\n\n'message',\n\nfunction (e) {\n\nvar a = JSON.parse(e.data),\n\nn = a.language,\n\nt = a.code,\n\nr = a.immediateClose;\n\ng.postMessage(C.highlight(t, C.languages[n], n)), r &amp;&amp; g.close();\n\n},\n\n!1\n\n)),\n\nC\n\n);\n\nvar e = document.currentScript || [].slice.call(document.getElementsByTagName('script')).pop();\n\nreturn (\n\ne &amp;&amp;\n\n((C.filename = e.src),\n\nC.manual ||\n\ne.hasAttribute('data-manual') ||\n\n('loading' !== document.readyState\n\n? window.requestAnimationFrame\n\n? window.requestAnimationFrame(C.highlightAll)\n\n: window.setTimeout(C.highlightAll, 16)\n\n: document.addEventListener('DOMContentLoaded', C.highlightAll))),\n\nC\n\n);\n\n})(\\_self);\n\n'undefined' != typeof module &amp;&amp; module.exports &amp;&amp; (module.exports = Prism), 'undefined' != typeof global &amp;&amp; (global.Prism = Prism);\n\n(Prism.languages.markup = {\n\ncomment: /&lt;!--[\\s\\S]_?-->/,\n\nprolog: /&lt;\\?[\\s\\S]+?\\?>/,\n\ndoctype: /&lt;!DOCTYPE[\\s\\S]+?>/i,\n\ncdata: /&lt;!\\[CDATA\\[[\\s\\S]\\_?]]>/i,\n\ntag: {\n\npattern: /&lt;\\/?(?!\\d)[^\\s>\\/=$&lt;%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']\\_'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s\\*\\/?>/i,\n\ngreedy: !0,\n\ninside: {\n\ntag: {\n\npattern: /^&lt;\\/?[^\\s>\\/]+/i,\n\ninside: { punctuation: /^&lt;\\/?/, namespace: /^[^\\s>\\/:]+:/ }\n\n},\n\n'attr-value': {\n\npattern: /=\\s\\*(?:\"[^\"]_\"|'[^']_'|[^\\s'\">=]+)/i,\n\ninside: {\n\npunctuation: [/^=/, { pattern: /^[\\s\\*](\"')|[\"']$/, lookbehind: !0 }]\n\n                }\n\n            },\n\n            punctuation: /\\/?>/,\n\n            'attr-name': {\n\n                pattern: /[^\\s>\\/]+/,\n\n                inside: { namespace: /^[^\\s>\\/:]+:/ }\n\n            }\n\n        }\n\n    },\n\n    entity: /&amp;#?[\\da-z]{1,8};/i\n\n}),\n\n    (Prism.languages.markup.tag.inside['attr-value'].inside.entity = Prism.languages.markup.entity),\n\n    Prism.hooks.add('wrap', function (a) {\n\n        'entity' === a.type &amp;&amp; (a.attributes.title = a.content.replace(/&amp;amp;/, '&amp;'));\n\n    }),\n\n    Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\n        value: function (a, e) {\n\n            var s = {};\n\n            (s['language-' + e] = {\n\n                pattern: /(^&lt;!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\nlookbehind: !0,\n\ninside: Prism.languages[e]\n\n}),\n\n(s.cdata = /^&lt;!\\[CDATA\\[|\\]\\]>$/i);\n\nvar n = {\n\n'included-cdata': { pattern: /&lt;!\\[CDATA\\[[\\s\\S]\\*?\\]\\]>/i, inside: s }\n\n};\n\nn['language-' + e] = { pattern: /[\\s\\S]+/, inside: Prism.languages[e] };\n\nvar i = {};\n\n(i[a] = {\n\npattern: RegExp('(&lt;**[\\\\s\\\\S]_?>)(?:&lt;!\\\\[CDATA\\\\[[\\\\s\\\\S]_?\\\\]\\\\]>\\\\s*|[\\\\s\\\\S])*?(?=&lt;\\\\/**>)'.replace(/\\*\\*/</span>g<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> n\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cdata'</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>html <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>mathml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>svg <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])\\_\\1</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/\\*[\\s\\S]\\_?\\*\\/</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">atrule</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">@[\\w-]+[\\s\\S]_?(?:;|(?=\\s_\\{))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">rule</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">@[\\w-]+</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url\\\\((?:'</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">'|[^\\n\\r()]\\_)\\\\)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^url</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\(|\\)$</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">selector</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[^{}\\\\s](?:[^{};\"\\']|'</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">')\\_?(?=\\\\s\\*\\\\{)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">property</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[-\\_a-z\\xA0-\\uFFFF][-\\w\\xa0-\\uffff]_(?=\\s_:)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">!important\\b</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[-a-z0-9]+(?=\\()</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[(){};:,]</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>atrule<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">.</span>rest <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">;</span>\n\ne <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addInlined</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ns<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'inside'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string\">'attr-value'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'style-attr'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'attr-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s\\*style</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span>inside <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*=\\s*['\"]|['\"]\\s\\*$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'attr-value'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">.+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'language-css'</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span>tag\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>clike <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\\\])\\/\\*[\\s\\S]\\*?(?:\\*\\/|$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\\\:])\\/\\/.*</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string-property property\">'class-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[.\\\\]</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">boolean</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:true|false)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\w+(?=\\()</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">operator</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">--?|\\+\\+?|!=?=?|&lt;=?|>=?|==?=?|&amp;&amp;?|\\|\\|?|\\?|\\*|\\/|~|\\^|%</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[{}[\\];(),.:]</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clike'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token string-property property\">'class-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n        Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>clike<span class=\"token punctuation\">[</span><span class=\"token string\">'class-name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">{</span>\n\n            <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^$\\w\\xA0-\\uFFFF])[\\_$A-Z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_(?=\\.(?:prototype|constructor))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|})\\s\\_)(?:catch|finally)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^.])\\b(?:as|async(?=\\s\\*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:(?:0[xX](&lt;?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?>)+|0[bB](&lt;?:[01](?:_[01])?>)+|0[oO](&lt;?:[0-7](?:_[0-7])?>)+)n?|(?:\\d(?:\\*\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:\\_\\d)?)_|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_(?=\\s_(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">operator</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">-[-=]?|\\+[+=]?|!=?=?|&lt;&lt;?=?|>>?>?=?|=(?:==?|>)?|&amp;[&amp;=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript<span class=\"token punctuation\">[</span><span class=\"token string\">'class-name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'keyword'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">regex</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|[^$\\w\\xa0-\\uffff.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s\\*($|[\\r\\n,.;})\\]]))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token string-property property\">'function-variable'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n                <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))_\\)|[\\_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_)\\s*=>))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'function'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">parameter</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(function(?:\\s+[\\_$A-Za-z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_)?\\s_\\(\\s\\*)(?!\\s)(?:[^()]|\\([^()]_\\))+?(?=\\s_\\))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\_$a-z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_(?=\\s_=>)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[\\_$A-Za-z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_\\s_)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">constant</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b[A-Z](?:[A-Z_]|\\dx?)\\_\\b</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'template-string'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]_})_})+}|[^\\\\`])\\_`</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">interpolation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\${(?:[^{}]|{(?:[^{}]|{[^}]_})_})+}</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'interpolation-punctuation'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\${|}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'punctuation'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">rest</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\s\\S]+</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup <span class=\"token operator\">&amp;&amp;</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addInlined</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'javascript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>js <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> self <span class=\"token operator\">&amp;&amp;</span> self<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> self<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nPrism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">registerButton</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span>\n\n<span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> n\n\n<span class=\"token operator\">?</span> <span class=\"token function-variable function\">n</span>\n\n<span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> n<span class=\"token punctuation\">.</span>onClick\n\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nn<span class=\"token punctuation\">.</span><span class=\"token function\">onClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> n<span class=\"token punctuation\">.</span>url\n\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nt <span class=\"token keyword\">in</span> i <span class=\"token operator\">?</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'There is a button with the key \"'</span> <span class=\"token operator\">+</span> t <span class=\"token operator\">+</span> <span class=\"token string\">'\" registered already.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">hook</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">pre</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code-toolbar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ne<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code-toolbar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\no<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toolbar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-toolbar-order'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-toolbar-order'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> i<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nn<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toolbar-item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">pre</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-label'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n<span class=\"token punctuation\">,</span>\n\na<span class=\"token punctuation\">,</span>\n\no <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-label'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\na <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'template#'</span> <span class=\"token operator\">+</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\na\n\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-url'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nn\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> self <span class=\"token operator\">&amp;&amp;</span> self<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> self<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>ClipboardJS <span class=\"token operator\">||</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\nr <span class=\"token operator\">||</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> require <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clipboard'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'head'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>ClipboardJS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\nPrism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar<span class=\"token punctuation\">.</span><span class=\"token function\">registerButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy-to-clipboard'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Copy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">?</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">text</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\no<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Copied'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\no<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Press Ctrl+C to copy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nt<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Copy'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5e3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Copy to Clipboard plugin loaded before Toolbar plugin.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">/</span>\\_ PrismJS <span class=\"token number\">1.24</span><span class=\"token number\">.1</span>\n\n<span class=\"token operator\">&lt;</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>prismjs<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>html#themes<span class=\"token operator\">=</span>prism<span class=\"token operator\">&amp;</span>languages<span class=\"token operator\">=</span>markup<span class=\"token operator\">+</span>css<span class=\"token operator\">+</span>clike<span class=\"token operator\">+</span>javascript<span class=\"token operator\">></span> \\_<span class=\"token operator\">/</span>\n\n<span class=\"token keyword\">var</span> \\_self <span class=\"token operator\">=</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">?</span> window <span class=\"token operator\">:</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> WorkerGlobalScope <span class=\"token operator\">&amp;&amp;</span> self <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WorkerGlobalScope</span> <span class=\"token operator\">?</span> self <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\nPrism <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">u</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\blang(?:uage)?-([\\w-]+)\\b</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\ne <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">M</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">manual</span><span class=\"token operator\">:</span> u<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> u<span class=\"token punctuation\">.</span>Prism<span class=\"token punctuation\">.</span>manual<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">disableWorkerMessageHandler</span><span class=\"token operator\">:</span> u<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> u<span class=\"token punctuation\">.</span>Prism<span class=\"token punctuation\">.</span>disableWorkerMessageHandler<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">util</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">encode</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> n <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">W</span>\n\n<span class=\"token operator\">?</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">?</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> n\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;amp;'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;lt;'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\u00a0</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">type</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">objId</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token operator\">**</span>id <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">'**id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token operator\">++</span>n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>\\<span class=\"token operator\">*</span>\\<span class=\"token operator\">*</span>id<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">clone</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> r <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">'Object'</span><span class=\"token operator\">:</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">objId</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">'Array'</span><span class=\"token operator\">:</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">objId</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nr<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">?</span> r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\na<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\na<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\n<span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">getLanguage</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> e <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">currentScript</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> document<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'currentScript'</span> <span class=\"token keyword\">in</span> document<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span>currentScript<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">at [^(\\r\\n]_\\((._):.+:.+\\)$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token keyword\">in</span> t<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">==</span> n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span>\n\n                            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token function-variable function\">isActive</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token string\">'no-'</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">;</span> e<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                            <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">;</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n                            e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>t<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">languages</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token literal-property property\">plain</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">plaintext</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">txt</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                    <span class=\"token function-variable function\">extend</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token function-variable function\">insertBefore</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> r <span class=\"token operator\">||</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                            i <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> l <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">)</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">==</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">)</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                n<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n                            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token constant\">DFS</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                n <span class=\"token operator\">===</span> s <span class=\"token operator\">&amp;&amp;</span> e <span class=\"token operator\">!=</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            i\n\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token function-variable function\">DFS</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        a <span class=\"token operator\">=</span> a <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>objId<span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> l <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">)</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                <span class=\"token function\">t</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">||</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                                    s <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token string\">'Object'</span> <span class=\"token operator\">!==</span> s <span class=\"token operator\">||</span> a<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Array'</span> <span class=\"token operator\">!==</span> s <span class=\"token operator\">||</span> a<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">highlightAll</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlightAllUnder</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">highlightAllUnder</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token literal-property property\">callback</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">selector</span><span class=\"token operator\">:</span> <span class=\"token string\">'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'</span>\n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-highlightall'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>elements <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-all-elements-highlight'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlightElement</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> n<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">highlightElement</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">getLanguage</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        a <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                    e<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' language-'</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">;</span>\n\n                    i <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'pre'</span> <span class=\"token operator\">===</span> i<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' language-'</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> r<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">grammar</span><span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>textContent <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>highlightedCode <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-insert'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> l<span class=\"token punctuation\">.</span>highlightedCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after-highlight'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">t</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n\n                        <span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-sanity-check'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'pre'</span> <span class=\"token operator\">===</span> i<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>i<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token operator\">!</span>l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">)</span>\n\n                        <span class=\"token keyword\">return</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">t</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-highlight'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>grammar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&amp;&amp;</span> u<span class=\"token punctuation\">.</span>Worker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                            <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                s<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> l<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">immediateClose</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>grammar<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">else</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">highlight</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">grammar</span><span class=\"token operator\">:</span> n<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> t <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n                        <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-tokenize'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>tokens <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">tokenize</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>grammar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after-tokenize'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token constant\">W</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>tokens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">tokenize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>rest<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token keyword\">in</span> t<span class=\"token punctuation\">)</span> n<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">delete</span> n<span class=\"token punctuation\">.</span>rest<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n                        <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> l</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">)</span>\n\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> r<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                    <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                                    s <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> s <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> u <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> u <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>u<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&amp;&amp;</span> l<span class=\"token punctuation\">.</span>cause <span class=\"token operator\">==</span> o <span class=\"token operator\">+</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> u<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                                        <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                                            g <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">,</span>\n\n                                            f <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span>lookbehind<span class=\"token punctuation\">,</span>\n\n                                            h <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span>greedy<span class=\"token punctuation\">,</span>\n\n                                            d <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">;</span>\n\n                                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">.</span>global<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                            <span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[imsuy]*$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nc<span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">=</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">,</span> p <span class=\"token operator\">+</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> v <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">||</span> c<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> m <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>tail <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">>=</span> l<span class=\"token punctuation\">.</span>reach<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">+=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>b <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> k<span class=\"token punctuation\">,</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> <span class=\"token function\">z</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> w <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">A</span> <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">P</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">+=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token constant\">P</span> <span class=\"token operator\">&lt;=</span> w<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">+=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">-=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">=</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>value <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> <span class=\"token constant\">E</span> <span class=\"token operator\">=</span> m<span class=\"token punctuation\">;</span> <span class=\"token constant\">E</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>tail <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">A</span> <span class=\"token operator\">||</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token constant\">E</span> <span class=\"token operator\">=</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span>\n\nx<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">+=</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nx<span class=\"token operator\">--</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">.</span>index <span class=\"token operator\">-=</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> <span class=\"token function\">z</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> w <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">S</span> <span class=\"token operator\">=</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">O</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">L</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>w <span class=\"token operator\">+</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">N</span> <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\nl <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">N</span> <span class=\"token operator\">></span> l<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">=</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">;</span>\n\n<span class=\"token constant\">O</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> <span class=\"token constant\">O</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+=</span> <span class=\"token constant\">O</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">q</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> g <span class=\"token operator\">?</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">tokenize</span><span class=\"token punctuation\">(</span><span class=\"token constant\">S</span><span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> \\_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cause</span><span class=\"token operator\">:</span> o <span class=\"token operator\">+</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> u<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">reach</span><span class=\"token operator\">:</span> <span class=\"token constant\">N</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">e</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">&amp;&amp;</span>_<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">></span> l<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">=</span> \\_<span class=\"token punctuation\">.</span>reach<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\nt <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">hooks</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">all</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">add</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">run</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>a<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">Token</span><span class=\"token operator\">:</span> <span class=\"token constant\">W</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>alias <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ne<span class=\"token punctuation\">.</span>lastIndex <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;&amp;</span> r <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">prev</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">prev</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">,</span>\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">prev</span><span class=\"token operator\">:</span> n<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> r <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>length<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">q</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;</span> t <span class=\"token operator\">&amp;&amp;</span> r <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> r <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token constant\">W</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">stringify</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nr <span class=\"token operator\">+=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nr\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> <span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">classes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> t <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\ni <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">;</span>\n\ni <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> a<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wrap'</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">)</span> l <span class=\"token operator\">+=</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> o <span class=\"token operator\">+</span> <span class=\"token string\">'=\"'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;quot;'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token string\">'&lt;'</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>tag <span class=\"token operator\">+</span> <span class=\"token string\">' class=\"'</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"'</span> <span class=\"token operator\">+</span> l <span class=\"token operator\">+</span> <span class=\"token string\">'>'</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>content <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/'</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>tag <span class=\"token operator\">+</span> <span class=\"token string\">'>'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token operator\">!</span>u<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\nu<span class=\"token punctuation\">.</span>addEventListener <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>disableWorkerMessageHandler <span class=\"token operator\">||</span>\n\nu<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nt <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">,</span>\n\nr <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span>\n\na <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>immediateClose<span class=\"token punctuation\">;</span>\n\nu<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">&amp;&amp;</span> u<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token operator\">!</span><span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">M</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">currentScript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>manual <span class=\"token operator\">||</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlightAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>filename <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-manual'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>manual <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>manual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">;</span>\n\n<span class=\"token string\">'loading'</span> <span class=\"token operator\">===</span> a <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'interactive'</span> <span class=\"token operator\">===</span> a <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>defer<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">?</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>requestAnimationFrame\n\n<span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>\\_self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> module <span class=\"token operator\">&amp;&amp;</span> module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> global <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!--[\\s\\S]*?--></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">prolog</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;\\?[\\s\\S]+?\\?></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">doctype</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]_\"|'[^']_')+(?:\\[(?:[^&lt;\"'\\]]|\"[^\"]_\"|'[^']_'|&lt;(?!!--)|&lt;!--(?:[^-]|-(?!->))*-->)_\\]\\s_)?></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'internal-subset'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^[^\\[]\\*\\[](\\s\\S)+(?=\\]>$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"[^\"]_\"|'[^']_'</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;!|>$|[[\\]]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'doctype-tag'</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^DOCTYPE</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^\\s&lt;>'\"]+</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">cdata</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!\\[CDATA\\[[\\s\\S]\\*?\\]\\]></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;\\/?(?!\\d)[^\\s>\\/=$&lt;%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']_'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s_\\/?></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;\\/?[^\\s>\\/]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;\\/?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">namespace</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[^\\s>\\/:]+:</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'special-attr'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'attr-value'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">=\\s*(?:\"[^\"]*\"|'[^']\\*'|[^\\s'\">=]+)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^=</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'attr-equals'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"|'</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/?></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'attr-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^\\s>\\/]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">namespace</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[^\\s>\\/:]+:</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">entity</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;[\\da-z]{1,8};</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'named-entity'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;#x?[\\da-f]{1,8};</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">[</span><span class=\"token string\">'attr-value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">.</span>entity <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>doctype<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">[</span><span class=\"token string\">'internal-subset'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>inside <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wrap'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string\">'entity'</span> <span class=\"token operator\">===</span> a<span class=\"token punctuation\">.</span>type <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;amp;</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">,</span> <span class=\"token string\">'addInlined'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span><span class=\"token string\">'language-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^&lt;!\\[CDATA\\[](\\s\\S)+?(?=\\]\\]>$)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>cdata <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;!\\[CDATA\\[|\\]\\]>$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'included-cdata'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!\\[CDATA\\[[\\s\\S]\\*?\\]\\]></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> s <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nt<span class=\"token punctuation\">[</span><span class=\"token string\">'language-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\s\\S]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'(&lt;**[^>]_>)(?:&lt;!\\\\[CDATA\\\\[(?:[^\\\\]]|\\\\](?!]>))_\\\\]\\\\]>|(?!&lt;!\\\\[CDATA\\\\[)[^])\\*?(?=&lt;/**>)'</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\_\\_</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string\">'i'</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> t\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cdata'</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">,</span> <span class=\"token string\">'addAttribute'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">[</span><span class=\"token string\">'special-attr'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(^|[\"\\'\\\\s])(?:'</span> <span class=\"token operator\">+</span> a <span class=\"token operator\">+</span> <span class=\"token string\">')\\\\s*=\\\\s*(?:\"[^\"]_\"|\\'[^\\']_\\'|[^\\\\s\\'\">=]+(?=[\\\\s>]))'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'attr-name'</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[^\\s=]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'attr-value'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">=[\\s\\S]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">'language-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span>\n\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^=</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'attr-equals'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"|'</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">]</span>\n\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>html <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>mathml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>svg <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>ssml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>atom <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>rss <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/\\*[\\s\\S]*?\\*\\/</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">atrule</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                <span class=\"token literal-property property\">rule</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^@[\\w-]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token string-property property\">'selector-function-argument'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'selector'</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\w-])(?:and|not|only|or)(?![\\w-])</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\burl\\\\((?:'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">'|(?:[^\\\\\\\\\\r\\n()\"\\']|\\\\\\\\[^])*)\\\\)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^url</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\(|\\)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">'$'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'url'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">selector</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">')*(?=\\\\s*\\\\{)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">property</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">!important\\b</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^-a-z0-9])[-a-z0-9]+(?=\\()</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[(){};:,]</span><span class=\"token regex-delimiter\">/</span></span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>atrule<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">.</span>rest <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">;</span>\n\n    t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addInlined</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>clike <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\\\:])\\/\\/.\\*</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])\\*\\1</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'class-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[.\\\\]</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">boolean</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:true|false)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b\\w+(?=\\()</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d\\*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">operator</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[&lt;>]=?|[!=]=?=?|--?|\\+\\+?|&amp;&amp;?|\\|\\|?|[?*/~^%]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[{}[\\];(),.:]</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clike'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'class-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>clike<span class=\"token punctuation\">[</span><span class=\"token string\">'class-name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^$\\w\\xa0-\\uffff])(?!\\s)[\\_$A-Z\\xA0-\\uFFFF][&lt;?:(?!\\s]($\\w\\xA0-\\uFFFF)>)\\_(?=\\.(?:prototype|constructor))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|\\})\\s\\_)catch\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s\\*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:(?:0[xX](&lt;?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?>)+|0[bB](&lt;?:[01](?:_[01])?>)+|0[oO](&lt;?:[0-7](?:_[0-7])?>)+)n?|(?:\\d(?:\\*\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:\\_\\d)?)_|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">operator</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">--|\\+\\+|\\*\\*=?|=>|&amp;&amp;=?|\\|\\|=?|[!=]==|&lt;&lt;=?|>>>?=?|[-+*/%&amp;|^!=&lt;>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript<span class=\"token punctuation\">[</span><span class=\"token string\">'class-name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'keyword'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">regex</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|[^$\\w\\xa0-\\uffff.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))_\\*\\/)_(?:$|[\\r\\n,.;:})\\]]|\\/\\/))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                <span class=\"token string-property property\">'regex-source'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\/)[\\s\\S]+(?=\\/[a-z]*$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'language-regex'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>regex <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'regex-delimiter'</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\/|\\/$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token string-property property\">'regex-flags'</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[a-z]+$</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'function-variable'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">#?(?!\\s)[\\_$a-zA-Z\\xA0-\\uFFFF][&lt;?:(?!\\s]($\\w\\xA0-\\uFFFF)>)_(?=\\s_[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]_\\))_\\)|(?!\\s)[\\_$a-zA-Z\\xA0-\\uFFFF][&lt;?:(?!\\s]($\\w\\xA0-\\uFFFF)>)_)\\s_=>))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'function'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">parameter</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(function(?:\\s+(?!\\s)[\\_$a-zA-Z\\xA0-\\uFFFF][&lt;?:(?!\\s]($\\w\\xA0-\\uFFFF)>)_)?\\s_\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s\\*\\))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^$\\w\\xa0-\\uffff])(?!\\s)[\\_$a-z\\xA0-\\uFFFF][&lt;?:(?!\\s]($\\w\\xA0-\\uFFFF)>)_(?=\\s_=>)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[\\_$a-zA-Z\\xA0-\\uFFFF][&lt;?:(?!\\s]($\\w\\xA0-\\uFFFF)>)_\\s_)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">constant</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b[A-Z](?:[A-Z_]|\\dx?)\\*\\b</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">hashbang</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^#!.\\_</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'comment'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'template-string'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]_\\})_\\})+\\}|(?!\\$\\{)[^\\\\`])\\_`</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'template-punctuation'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^`|`$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'string'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">interpolation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'interpolation-punctuation'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\$\\{|\\}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'punctuation'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">rest</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\s\\S]+</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addInlined</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'javascript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string\">'javascript'</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>js <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":4126,"column":1,"offset":161626},"end":{"line":6414,"column":4,"offset":205109},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"main.js","position":{"start":{"line":6416,"column":3,"offset":205115},"end":{"line":6416,"column":10,"offset":205122},"indent":[]}}],"position":{"start":{"line":6416,"column":1,"offset":205113},"end":{"line":6416,"column":10,"offset":205122},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onGatsbyInitialClientRender</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n\n     * Main JS file for theme behaviours\n\n     */</span>\n\n    <span class=\"token comment\">// Responsive video embeds</span>\n\n    <span class=\"token keyword\">let</span> videoEmbeds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'iframe[src*=\"youtube.com\"]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'iframe[src*=\"vimeo.com\"]'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">reframe</span><span class=\"token punctuation\">(</span>videoEmbeds<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Handle main navigation menu toggling on small screens</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">menuToggleHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu--opened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Handle docs navigation menu toggling on small screens</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">docsNavToggleHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-menu--opened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Handle submenu toggling</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">submenuToggleHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addMainNavigationHandlers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> menuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.menu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>menuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> menuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                menuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> menuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> submenuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.submenu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>submenuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> submenuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                submenuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> submenuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeMainNavigationHandlers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Remove nav related classes on page load</span>\n\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu--opened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> menuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.menu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>menuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> menuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                menuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> menuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> submenuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.submenu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>submenuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> submenuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                submenuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> submenuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addDocsNavigationHandlers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> docsNavToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-nav-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docsNavToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            docsNavToggle<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> docsNavToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> docsSubmenuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.docs-submenu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docsSubmenuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> docsSubmenuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                docsSubmenuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> submenuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeDocsNavigationHandlers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Remove docs nav related classes on page load</span>\n\n        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-menu--opened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> docsNavToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'docs-nav-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docsNavToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            docsNavToggle<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> docsNavToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> docsSubmenuToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.docs-submenu-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>docsSubmenuToggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> docsSubmenuToggle<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                docsSubmenuToggle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> submenuToggleHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addPageNavLinks</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> pageToc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-nav-inside'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> pageTocContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-nav-link-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageToc <span class=\"token operator\">&amp;&amp;</span> pageTocContainer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> pageContent <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.type-docs .post-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Create in-page navigation</span>\n\n            <span class=\"token keyword\">const</span> headerLinks <span class=\"token operator\">=</span> <span class=\"token function\">getHeaderLinks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> pageContent\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>headerLinks<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                pageToc<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'has-links'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token function\">renderHeaderLinks</span><span class=\"token punctuation\">(</span>pageTocContainer<span class=\"token punctuation\">,</span> headerLinks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// Scroll to anchors</span>\n\n            <span class=\"token keyword\">let</span> scroll <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SmoothScroll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-scroll]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> hash <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">decodeURI</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hash <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">let</span> anchor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>anchor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        scroll<span class=\"token punctuation\">.</span><span class=\"token function\">animateScroll</span><span class=\"token punctuation\">(</span>anchor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// Highlight current anchor</span>\n\n            <span class=\"token keyword\">let</span> pageTocLinks <span class=\"token operator\">=</span> pageTocContainer<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageTocLinks<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">let</span> spy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gumshoe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#page-nav-inside a'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">nested</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">nestedClass</span><span class=\"token operator\">:</span> <span class=\"token string\">'active-parent'</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// Add link to page content headings</span>\n\n            <span class=\"token keyword\">let</span> pageHeadings <span class=\"token operator\">=</span> <span class=\"token function\">getElementsByTagNames</span><span class=\"token punctuation\">(</span>pageContent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pageHeadings<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">let</span> heading <span class=\"token operator\">=</span> pageHeadings<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> heading<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">&amp;&amp;</span> heading<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    heading<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token function\">anchorForId</span><span class=\"token punctuation\">(</span>heading<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> heading<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// Copy link url</span>\n\n            <span class=\"token keyword\">let</span> clipboard <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClipboardJS</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.hash-link'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function-variable function\">text</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">trigger</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> trigger<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removePageNavLinks</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> pageToc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-nav-inside'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> pageTocContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-nav-link-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageToc <span class=\"token operator\">&amp;&amp;</span> pageTocContainer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            pageToc<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'has-links'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pageTocContainer<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                pageTocContainer<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>pageTocContainer<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getElementsByTagNames</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">root<span class=\"token punctuation\">,</span> tagNames</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> root<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> tagName <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tagNames<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>tagName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                elements<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            elements <span class=\"token operator\">=</span> elements<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">getElementsByTagNames</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> tagNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> elements<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createLinksForHeaderElements</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elements</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">level</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> result\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> re <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^h(\\d)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> elements<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> element <span class=\"token operator\">=</span> elements<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> tagName <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> match <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>tagName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>match<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can not create links to non header element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">let</span> headerLevel <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>element<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>element<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can not create link to element without id and without text content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                element<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>textContent\n\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^\\w]+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^_</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">_$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">let</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> element<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n\n            link<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            link<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> element<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">level</span><span class=\"token operator\">:</span> headerLevel<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">textContent</span><span class=\"token operator\">:</span> element<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> element<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> link<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>headerLevel <span class=\"token operator\">></span> stack<span class=\"token punctuation\">[</span>stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                stack<span class=\"token punctuation\">[</span>stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>headerLevel <span class=\"token operator\">&lt;=</span> stack<span class=\"token punctuation\">[</span>stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>level <span class=\"token operator\">&amp;&amp;</span> stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    stack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                stack<span class=\"token punctuation\">[</span>stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getHeaderLinks</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> tagNames <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>tagNames <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> root <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>root <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> headerElements <span class=\"token operator\">=</span> <span class=\"token function\">getElementsByTagNames</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> tagNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">createLinksForHeaderElements</span><span class=\"token punctuation\">(</span>headerElements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">renderHeaderLinks</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> links</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>links<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">let</span> ulElm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> links<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> liElm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            liElm<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">renderHeaderLinks</span><span class=\"token punctuation\">(</span>liElm<span class=\"token punctuation\">,</span> links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            ulElm<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>liElm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        element<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>ulElm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">anchorForId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> anchor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        anchor<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hash-link'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        anchor<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        anchor<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">;</span>\n\n        anchor<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;span class=\"screen-reader-text\">Copy&lt;/span>'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> anchor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Syntax Highlighter</span>\n\n    <span class=\"token comment\">// Prism.highlightAll();</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span>\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span>\n\n<span class=\"token comment\">//--------------------------------New----------------------------------</span>\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span>\n\n<span class=\"token comment\">//-----------------------------------------------------------------------</span></code></pre></div>","position":{"start":{"line":6418,"column":1,"offset":205126},"end":{"line":6782,"column":4,"offset":215588},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":6784,"column":1,"offset":215592},"end":{"line":6784,"column":4,"offset":215595},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":6786,"column":1,"offset":215599},"end":{"line":6786,"column":4,"offset":215602},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Page Load JS","position":{"start":{"line":6788,"column":3,"offset":215608},"end":{"line":6788,"column":15,"offset":215620},"indent":[]}}],"position":{"start":{"line":6788,"column":1,"offset":215606},"end":{"line":6788,"column":15,"offset":215620},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onGatsbyRouteUpdate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addMainNavigationHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addDocsNavigationHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addPageNavLinks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":6790,"column":1,"offset":215624},"end":{"line":6799,"column":4,"offset":215803},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":6801,"column":1,"offset":215807},"end":{"line":6801,"column":4,"offset":215810},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":6803,"column":1,"offset":215814},"end":{"line":6803,"column":4,"offset":215817},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"PageUnload.js","position":{"start":{"line":6805,"column":3,"offset":215823},"end":{"line":6805,"column":16,"offset":215836},"indent":[]}}],"position":{"start":{"line":6805,"column":1,"offset":215821},"end":{"line":6805,"column":16,"offset":215836},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onGatsbyPreRouteUpdate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeMainNavigationHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeDocsNavigationHandlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removePageNavLinks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":6807,"column":1,"offset":215840},"end":{"line":6816,"column":4,"offset":216031},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":6818,"column":1,"offset":216035},"end":{"line":6818,"column":4,"offset":216038},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":6820,"column":1,"offset":216042},"end":{"line":6820,"column":4,"offset":216045},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Plugins.js","position":{"start":{"line":6822,"column":3,"offset":216051},"end":{"line":6822,"column":13,"offset":216061},"indent":[]}}],"position":{"start":{"line":6822,"column":1,"offset":216049},"end":{"line":6822,"column":13,"offset":216061},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> module\n        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> define <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd\n        <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> globalThis <span class=\"token operator\">?</span> globalThis <span class=\"token operator\">:</span> e <span class=\"token operator\">||</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reframe <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> t <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> e <span class=\"token operator\">+=</span> arguments<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> f <span class=\"token operator\">&lt;</span> d<span class=\"token punctuation\">;</span> f<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> o<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> i<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">===</span> s <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">=</span> <span class=\"token string\">'js-reframe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">?</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">'length'</span> <span class=\"token keyword\">in</span> e <span class=\"token operator\">?</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">;</span>\n\n                <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n                    <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>offsetWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> i <span class=\"token operator\">?</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> o <span class=\"token operator\">?</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">'relative'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>paddingTop <span class=\"token operator\">=</span> r <span class=\"token operator\">+</span> <span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> n <span class=\"token operator\">&amp;&amp;</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    f<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*! smooth-scroll v16.1.0 | (c) 2019 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/smooth-scroll */</span>\n\nwindow<span class=\"token punctuation\">.</span>Element <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token operator\">!</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>closest <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">closest</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span>\n            n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>document <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ownerDocument<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            o <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">--</span>t <span class=\"token operator\">&amp;&amp;</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> o<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>CustomEvent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            t <span class=\"token operator\">=</span> t <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">cancelable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CustomEvent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">initCustomEvent</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>bubbles<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>cancelable<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>CustomEvent <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ms'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'moz'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'webkit'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>requestAnimationFrame<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>t<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>requestAnimationFrame <span class=\"token operator\">=</span> window<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'RequestAnimationFrame'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>cancelAnimationFrame <span class=\"token operator\">=</span> window<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'CancelAnimationFrame'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'CancelRequestAnimationFrame'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        window<span class=\"token punctuation\">.</span>requestAnimationFrame <span class=\"token operator\">||</span>\n            <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">requestAnimationFrame</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    o <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    a <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            window<span class=\"token punctuation\">.</span>cancelAnimationFrame <span class=\"token operator\">||</span>\n                <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">cancelAnimationFrame</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> define <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd\n            <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token keyword\">return</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">:</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports\n            <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>SmoothScroll <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> global <span class=\"token operator\">?</span> global <span class=\"token operator\">:</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">?</span> window <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">q</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> <span class=\"token constant\">I</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">ignore</span><span class=\"token operator\">:</span> <span class=\"token string\">'[data-scroll-ignore]'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">header</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">topOnEmptyHash</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">speed</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">speedAsDuration</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">durationMax</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">durationMin</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">clip</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">easing</span><span class=\"token operator\">:</span> <span class=\"token string\">'easeInOutCubic'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">customEasing</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">updateURL</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">popstate</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">emitEvents</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">F</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                            n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    n\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">r</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'#'</span> <span class=\"token operator\">===</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>a <span class=\"token operator\">&lt;</span> o<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidCharacterError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid character: the input contains U+0000.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">127</span> <span class=\"token operator\">==</span> t <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> a <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">48</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">===</span> a <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">48</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">57</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">45</span> <span class=\"token operator\">===</span> i<span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">+=</span> <span class=\"token string\">'\\\\'</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">+=</span>\n                              <span class=\"token number\">128</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">||</span> <span class=\"token number\">45</span> <span class=\"token operator\">===</span> t <span class=\"token operator\">||</span> <span class=\"token number\">95</span> <span class=\"token operator\">===</span> t <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">48</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">65</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">97</span> <span class=\"token operator\">&lt;=</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&lt;=</span> <span class=\"token number\">122</span><span class=\"token punctuation\">)</span>\n                                  <span class=\"token operator\">?</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n                                  <span class=\"token operator\">:</span> <span class=\"token string\">'\\\\'</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">L</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>\n                    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">,</span>\n\n                    document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">x</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> e <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">H</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>emitEvents <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> q<span class=\"token punctuation\">.</span>CustomEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomEvent</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">anchor</span><span class=\"token operator\">:</span> n<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">toggle</span><span class=\"token operator\">:</span> o <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    document<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">o<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">,</span>\n                a<span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">O</span><span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">C</span><span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">M</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">cancelScroll</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">cancelAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">||</span> <span class=\"token constant\">H</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scrollCancel'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">animateScroll</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancelScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">||</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        u <span class=\"token operator\">=</span> <span class=\"token string\">'[object Number]'</span> <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        t <span class=\"token operator\">=</span> u <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>i<span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> i<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>u <span class=\"token operator\">||</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>pageYOffset<span class=\"token punctuation\">;</span>\n\n                        s<span class=\"token punctuation\">.</span>header <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token constant\">O</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">O</span> <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">var</span> n<span class=\"token punctuation\">,</span>\n                            o<span class=\"token punctuation\">,</span>\n                            a<span class=\"token punctuation\">,</span>\n                            m<span class=\"token punctuation\">,</span>\n                            r<span class=\"token punctuation\">,</span>\n                            d<span class=\"token punctuation\">,</span>\n                            f<span class=\"token punctuation\">,</span>\n                            h<span class=\"token punctuation\">,</span>\n                            p <span class=\"token operator\">=</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token constant\">O</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            g <span class=\"token operator\">=</span> u\n                                <span class=\"token operator\">?</span> i\n                                <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                      <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                                      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>offsetParent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+=</span> e<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>offsetParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> t <span class=\"token operator\">-</span> n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> q<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">;</span>\n                                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> s<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">?</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> s<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span>clip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            y <span class=\"token operator\">=</span> g <span class=\"token operator\">-</span> l<span class=\"token punctuation\">,</span>\n                            v <span class=\"token operator\">=</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            w <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token constant\">S</span> <span class=\"token operator\">=</span>\n                                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>speedAsDuration <span class=\"token operator\">?</span> o<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">/</span> <span class=\"token number\">1e3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> o<span class=\"token punctuation\">.</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                o<span class=\"token punctuation\">.</span>durationMax <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">></span> o<span class=\"token punctuation\">.</span>durationMax <span class=\"token operator\">?</span> o<span class=\"token punctuation\">.</span>durationMax <span class=\"token operator\">:</span> o<span class=\"token punctuation\">.</span>durationMin <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">&lt;</span> o<span class=\"token punctuation\">.</span>durationMin <span class=\"token operator\">?</span> o<span class=\"token punctuation\">.</span>durationMin <span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token function-variable function\">E</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> n<span class=\"token punctuation\">,</span>\n                                    o<span class=\"token punctuation\">,</span>\n                                    a<span class=\"token punctuation\">,</span>\n                                    r <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>pageYOffset<span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">==</span> t <span class=\"token operator\">||</span> r <span class=\"token operator\">==</span> t <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;</span> t <span class=\"token operator\">&amp;&amp;</span> q<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> v<span class=\"token punctuation\">)</span>\n                                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                                        <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancelScroll</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        a <span class=\"token operator\">||</span>\n                                            <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            document<span class=\"token punctuation\">.</span>activeElement <span class=\"token operator\">!==</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>outline <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            q<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token constant\">H</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scrollStop'</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span> <span class=\"token operator\">=</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token function-variable function\">b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">;</span>\n\n                                m <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span>w <span class=\"token operator\">+=</span> e <span class=\"token operator\">-</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span>\n                                        l <span class=\"token operator\">+</span>\n                                        y <span class=\"token operator\">*</span>\n                                            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> r <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token constant\">S</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> w <span class=\"token operator\">/</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInQuad'</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeOutQuad'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInOutQuad'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInCubic'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeOutCubic'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInOutCubic'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInQuart'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeOutQuart'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInOutQuart'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInQuint'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeOutQuint'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            <span class=\"token string\">'easeInOutQuint'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>easing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token operator\">--</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            t<span class=\"token punctuation\">.</span>customEasing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">customEasing</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                            o <span class=\"token operator\">||</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    q<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token constant\">E</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token number\">0</span> <span class=\"token operator\">===</span> q<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token operator\">&amp;&amp;</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">(</span>h <span class=\"token operator\">=</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            u <span class=\"token operator\">||</span>\n                                <span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>pushState <span class=\"token operator\">&amp;&amp;</span>\n                                    h<span class=\"token punctuation\">.</span>updateURL <span class=\"token operator\">&amp;&amp;</span>\n                                    history<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span>\n                                        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">smoothScroll</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">anchor</span><span class=\"token operator\">:</span> f<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                                        document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n\n                                        f <span class=\"token operator\">===</span> document<span class=\"token punctuation\">.</span>documentElement <span class=\"token operator\">?</span> <span class=\"token string\">'#top'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> f<span class=\"token punctuation\">.</span>id\n                                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token string\">'matchMedia'</span> <span class=\"token keyword\">in</span> q <span class=\"token operator\">&amp;&amp;</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-reduced-motion)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches\n                                <span class=\"token operator\">?</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">H</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scrollStart'</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancelScroll</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">t</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>defaultPrevented <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">.</span>button <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>metaKey <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>ctrlKey <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>shiftKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token string\">'closest'</span> <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">.</span>target <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token string\">'a'</span> <span class=\"token operator\">===</span> a<span class=\"token punctuation\">.</span>tagName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>ignore<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                        a<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">===</span> q<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">&amp;&amp;</span>\n                        a<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">===</span> q<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">#</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span>\n                            n <span class=\"token operator\">=</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span> <span class=\"token operator\">===</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>topOnEmptyHash<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                            t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t <span class=\"token operator\">||</span> <span class=\"token string\">'#top'</span> <span class=\"token operator\">!==</span> n <span class=\"token operator\">?</span> t <span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                            <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>replaceState <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>updateURL <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        history<span class=\"token punctuation\">.</span><span class=\"token function\">replaceState</span><span class=\"token punctuation\">(</span>\n                                            <span class=\"token punctuation\">{</span>\n                                                <span class=\"token literal-property property\">smoothScroll</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                                <span class=\"token literal-property property\">anchor</span><span class=\"token operator\">:</span> t <span class=\"token operator\">||</span> q<span class=\"token punctuation\">.</span>pageYOffset\n                                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                                            document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n\n                                            t <span class=\"token operator\">||</span> q<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href\n                                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">animateScroll</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> history<span class=\"token punctuation\">.</span>state <span class=\"token operator\">&amp;&amp;</span> history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>smoothScroll <span class=\"token operator\">&amp;&amp;</span> history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>smoothScroll <span class=\"token operator\">===</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">animateScroll</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">updateURL</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">destroy</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token constant\">A</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'popstate'</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancelScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token constant\">O</span> <span class=\"token operator\">=</span> a <span class=\"token operator\">=</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">'querySelector'</span> <span class=\"token keyword\">in</span> document <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'addEventListener'</span> <span class=\"token keyword\">in</span> q <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'requestAnimationFrame'</span> <span class=\"token keyword\">in</span> q <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'closest'</span> <span class=\"token keyword\">in</span> q<span class=\"token punctuation\">.</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">throw</span> <span class=\"token string\">'Smooth Scroll: This browser does not support the required JavaScript methods and browser APIs.'</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">(</span><span class=\"token constant\">I</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token constant\">O</span> <span class=\"token operator\">=</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>header <span class=\"token operator\">?</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>updateURL <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>popstate <span class=\"token operator\">&amp;&amp;</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'popstate'</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token constant\">M</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*! gumshoejs v5.1.1 | (c) 2019 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/gumshoe */</span>\n\n<span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>closest <span class=\"token operator\">||</span>\n    <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">=</span> <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>msMatchesSelector <span class=\"token operator\">||</span> <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>webkitMatchesSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">closest</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n            e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>CustomEvent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e <span class=\"token operator\">=</span> e <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">cancelable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CustomEvent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">initCustomEvent</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>bubbles<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>cancelable<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>CustomEvent <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> define <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd\n            <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token keyword\">return</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">:</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports\n            <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>Gumshoe <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> global <span class=\"token operator\">?</span> global <span class=\"token operator\">:</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">?</span> window <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">navClass</span><span class=\"token operator\">:</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">contentClass</span><span class=\"token operator\">:</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">nested</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">nestedClass</span><span class=\"token operator\">:</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">reflow</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">events</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomEvent</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">cancelable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>offsetParent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> t<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">+=</span> t<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>offsetParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> e <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> e <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">s</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                t <span class=\"token operator\">&amp;&amp;</span>\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">c</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">?</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> o <span class=\"token operator\">?</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> c<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">r</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    t<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">+</span> t<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token operator\">>=</span>\n                    Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>\n                        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">,</span>\n\n                        document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight\n                    <span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">i</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> o <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> o<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">l</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nested<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nestedClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">l</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>nav<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    o <span class=\"token operator\">&amp;&amp;</span>\n                        <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>navClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>contentClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">l</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gumshoeDeactivate'</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">.</span>nav<span class=\"token punctuation\">,</span>\n\n                            <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>\n\n                            <span class=\"token literal-property property\">settings</span><span class=\"token operator\">:</span> e\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">u</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nested<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nestedClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">u</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">o<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> r<span class=\"token punctuation\">,</span>\n                l<span class=\"token punctuation\">,</span>\n                f<span class=\"token punctuation\">,</span>\n                d<span class=\"token punctuation\">,</span>\n                m<span class=\"token punctuation\">,</span>\n                v <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setup</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        e <span class=\"token operator\">&amp;&amp;</span> l<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">nav</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> e <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token function\">s</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">detect</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    t\n                        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>content <span class=\"token operator\">===</span> f<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n                          <span class=\"token punctuation\">(</span><span class=\"token function\">a</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                          <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                  <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>nav<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                  o <span class=\"token operator\">&amp;&amp;</span>\n                                      <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>navClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>contentClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      <span class=\"token function\">u</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gumshoeActivate'</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                          <span class=\"token literal-property property\">link</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">.</span>nav<span class=\"token punctuation\">,</span>\n\n                                          <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>\n\n                                          <span class=\"token literal-property property\">settings</span><span class=\"token operator\">:</span> e\n                                      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                              <span class=\"token punctuation\">}</span>\n                          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                          <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">:</span> f <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">a</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">p</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    d <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAnimationFrame</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>detect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">h</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    d <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">cancelAnimationFrame</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token function\">s</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            v<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">destroy</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                f <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    m<span class=\"token punctuation\">.</span>reflow <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>l <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                                t<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        t\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> c <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                v<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                v<span class=\"token punctuation\">.</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                m<span class=\"token punctuation\">.</span>reflow <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                v\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*!\n\n * clipboard.js v2.0.4\n\n * https://zenorocha.github.io/clipboard.js\n\n *\n\n * Licensed MIT © Zeno Rocha\n\n */</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> module\n        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> define <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd\n        <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports\n        <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">.</span>ClipboardJS <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>ClipboardJS <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">l</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">exports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>l <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>m <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">d</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                r<span class=\"token punctuation\">.</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">get</span><span class=\"token operator\">:</span> n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">r</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span>\n                    Symbol<span class=\"token punctuation\">.</span>toStringTag <span class=\"token operator\">&amp;&amp;</span>\n                    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'Module'</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token string\">'__esModule'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">t</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token operator\">&amp;</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> e <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>__esModule<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> e\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">2</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">)</span>\n                        r<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>\n                            n<span class=\"token punctuation\">,</span>\n\n                            o<span class=\"token punctuation\">,</span>\n\n                            <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span>\n                    t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>__esModule\n                        <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>s <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span>\n                    <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'symbol'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol<span class=\"token punctuation\">.</span>iterator\n                        <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">!==</span> <span class=\"token class-name\">Symbol</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">?</span> <span class=\"token string\">'symbol'</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>configurable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span> <span class=\"token keyword\">in</span> o <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>writable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                a <span class=\"token operator\">=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                c <span class=\"token operator\">=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                u <span class=\"token operator\">=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>__esModule <span class=\"token operator\">?</span> t <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> t <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot call a class as a function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>t<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReferenceError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this hasn't been initialised - super() hasn't been called\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'object'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> t <span class=\"token operator\">:</span> e<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">resolveOptions</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">listenClick</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Super expression must either be null or a function, not '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">constructor</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">writable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span>setPrototypeOf <span class=\"token operator\">?</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>\n                        o<span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">[</span>\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'resolveOptions'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">=</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>action <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>action <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>defaultAction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>target <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>target <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>defaultTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>text <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>text <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>defaultText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container <span class=\"token operator\">=</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">===</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>container <span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'listenClick'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listener <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'onClick'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>delegateTarget <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">a<span class=\"token punctuation\">.</span>default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                                            <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">target</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">trigger</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                                            <span class=\"token literal-property property\">emitter</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span>\n                                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'defaultAction'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">return</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">'action'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'defaultTarget'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">'target'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'defaultText'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">return</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'destroy'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">[</span>\n                            <span class=\"token punctuation\">{</span>\n                                <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'isSupported'</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cut'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                        e <span class=\"token operator\">=</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span>\n                                        n <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span>queryCommandSupported<span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                                        e<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                            n <span class=\"token operator\">=</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">queryCommandSupported</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        n\n                                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    o\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token string\">'data-clipboard-'</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> o<span class=\"token punctuation\">,</span>\n                r <span class=\"token operator\">=</span>\n                    <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'symbol'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol<span class=\"token punctuation\">.</span>iterator\n                        <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">return</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">!==</span> <span class=\"token class-name\">Symbol</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">?</span> <span class=\"token string\">'symbol'</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">;</span>\n                          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>configurable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span> <span class=\"token keyword\">in</span> o <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>writable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">return</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                a <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> o<span class=\"token punctuation\">.</span>__esModule <span class=\"token operator\">?</span> o <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> o <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">var</span> u <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot call a class as a function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolveOptions</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'resolveOptions'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'initSelection'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'selectFake'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n                                    e <span class=\"token operator\">=</span> <span class=\"token string\">'rtl'</span> <span class=\"token operator\">==</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dir'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">fakeHandlerCallback</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                        <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">removeFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>fontSize <span class=\"token operator\">=</span> <span class=\"token string\">'12pt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>margin <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">[</span>e <span class=\"token operator\">?</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'-9999px'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">;</span>\n\n                                <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'removeFake'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandler <span class=\"token operator\">&amp;&amp;</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'selectTarget'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'copyText'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                                    e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    e <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleResult</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'handleResult'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">?</span> <span class=\"token string\">'success'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token literal-property property\">action</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">,</span>\n\n                                    <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText<span class=\"token punctuation\">,</span>\n\n                                    <span class=\"token literal-property property\">trigger</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">,</span>\n\n                                    <span class=\"token literal-property property\">clearSelection</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearSelection</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'clearSelection'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeAllRanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'destroy'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'action'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token string\">'copy'</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'copy'</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'cut'</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"action\" value, use either \"copy\" or \"cut\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action<span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'target'</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>t <span class=\"token operator\">||</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">!==</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">===</span> t <span class=\"token operator\">?</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">:</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">1</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">)</span>\n                                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"target\" value, use a valid Element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disabled'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'cut'</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disabled'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n                                            <span class=\"token string\">'Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes'</span>\n                                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_target <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_target<span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    e\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> u<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            t<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> e<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'INPUT'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeName <span class=\"token operator\">||</span> <span class=\"token string\">'TEXTAREA'</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    n <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">setSelectionRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readonly'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'contenteditable'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        r <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    r<span class=\"token punctuation\">.</span><span class=\"token function\">selectNodeContents</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">removeAllRanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">addRange</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function-variable function\">on</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">fn</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ctx</span><span class=\"token operator\">:</span> n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">once</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        o<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>_ <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">emit</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> o <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">;</span> o<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                        n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">off</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        o <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                        r <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fn <span class=\"token operator\">!==</span> e <span class=\"token operator\">&amp;&amp;</span> o<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span>_ <span class=\"token operator\">!==</span> e <span class=\"token operator\">&amp;&amp;</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">delete</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                h <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            t<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Missing required arguments'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Second argument must be a String'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Third argument must be a Function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token punctuation\">(</span>s <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>f <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>l <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token function-variable function\">destroy</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                l<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">nodeList</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>c <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span>u <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token function-variable function\">destroy</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                    t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'First argument must be a String, HTMLElement, HTMLCollection, or NodeList'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">var</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">node</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">nodeList</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'[object NodeList]'</span> <span class=\"token operator\">===</span> e <span class=\"token operator\">||</span> <span class=\"token string\">'[object HTMLCollection]'</span> <span class=\"token operator\">===</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'length'</span> <span class=\"token keyword\">in</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">string</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">||</span> t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">fn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string\">'[object Function]'</span> <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">function</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">i</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>delegateTarget <span class=\"token operator\">=</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>delegateTarget <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">{</span>\n                        <span class=\"token function-variable function\">destroy</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                            t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            t<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>addEventListener\n                    <span class=\"token operator\">?</span> <span class=\"token function\">i</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span>\n                    <span class=\"token operator\">:</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> n\n                    <span class=\"token operator\">?</span> <span class=\"token function\">i</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span>\n                    <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                          <span class=\"token keyword\">return</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> Element <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n\n                n<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>matchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>mozMatchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>msMatchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>oMatchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>webkitMatchesSelector<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            t<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">9</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n\n                    t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":6824,"column":1,"offset":216065},"end":{"line":8110,"column":4,"offset":266524},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":8112,"column":1,"offset":266528},"end":{"line":8112,"column":4,"offset":266531},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":8114,"column":1,"offset":266535},"end":{"line":8114,"column":4,"offset":266538},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Prism.js","position":{"start":{"line":8116,"column":3,"offset":266544},"end":{"line":8116,"column":11,"offset":266552},"indent":[]}}],"position":{"start":{"line":8116,"column":1,"offset":266542},"end":{"line":8116,"column":11,"offset":266552},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n\n<span class=\"token keyword\">var</span> \\_self <span class=\"token operator\">=</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">?</span> window <span class=\"token operator\">:</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> WorkerGlobalScope <span class=\"token operator\">&amp;&amp;</span> self <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WorkerGlobalScope</span> <span class=\"token operator\">?</span> self <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\nPrism <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">g</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\blang(?:uage)?-([\\w-]+)\\b</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\na <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">manual</span><span class=\"token operator\">:</span> g<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> g<span class=\"token punctuation\">.</span>Prism<span class=\"token punctuation\">.</span>manual<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">disableWorkerMessageHandler</span><span class=\"token operator\">:</span> g<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> g<span class=\"token punctuation\">.</span>Prism<span class=\"token punctuation\">.</span>disableWorkerMessageHandler<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">util</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">encode</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">M</span>\n\n<span class=\"token operator\">?</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">M</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">?</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> e\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;amp;'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;lt;'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\u00a0</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">type</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">objId</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token operator\">**</span>id <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">'**id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token operator\">++</span>a <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>\\_\\_id<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">clone</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r<span class=\"token punctuation\">,</span>\n\na<span class=\"token punctuation\">,</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">'Object'</span><span class=\"token operator\">:</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">objId</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> l <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">'Array'</span><span class=\"token operator\">:</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">objId</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nt<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">?</span> t<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nr<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nr<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\n<span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">languages</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">extend</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">)</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">insertBefore</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t <span class=\"token operator\">||</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> l <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">==</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\na<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token constant\">DFS</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\na <span class=\"token operator\">===</span> s <span class=\"token operator\">&amp;&amp;</span> e <span class=\"token operator\">!=</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ni\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">DFS</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nr <span class=\"token operator\">=</span> r <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>objId<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> l <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">n</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">||</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\ns <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token string\">'Object'</span> <span class=\"token operator\">!==</span> s <span class=\"token operator\">||</span> r<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Array'</span> <span class=\"token operator\">!==</span> s <span class=\"token operator\">||</span> r<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">highlightAll</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlightAllUnder</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">highlightAllUnder</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">callback</span><span class=\"token operator\">:</span> n<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">selector</span><span class=\"token operator\">:</span> <span class=\"token string\">'code[class_=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-highlightall'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>elements <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span>l<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlightElement</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> a<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">highlightElement</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> i <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\ni <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' language-'</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span>parentNode <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">pre</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' language-'</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> r<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">grammar</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>textContent <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>highlightedCode <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-insert'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> l<span class=\"token punctuation\">.</span>highlightedCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after-highlight'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nn <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">n</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-sanity-check'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-highlight'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>grammar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;&amp;</span> g<span class=\"token punctuation\">.</span>Worker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ns<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> l<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">immediateClose</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>grammar<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">else</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">else</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">highlight</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">grammar</span><span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-tokenize'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>tokens <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">tokenize</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>grammar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after-tokenize'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>tokens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">matchGrammar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> l</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">==</span> l<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\ns <span class=\"token operator\">=</span> <span class=\"token string\">'Array'</span> <span class=\"token operator\">===</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> s <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> g <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>g<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\nu <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">,</span>\n\nh <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span>lookbehind<span class=\"token punctuation\">,</span>\n\nf <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span>greedy<span class=\"token punctuation\">,</span>\n\nd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\nm <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">.</span>global<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[imuy]_$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nc<span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">=</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">,</span> p <span class=\"token operator\">+</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\nc <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">||</span> c<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> t<span class=\"token punctuation\">,</span> v <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> v <span class=\"token operator\">+=</span> a<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span>y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> e<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>k <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">M</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">!=</span> a<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>lastIndex <span class=\"token operator\">=</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">?</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">,</span> <span class=\"token constant\">P</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">,</span> <span class=\"token constant\">O</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n<span class=\"token constant\">A</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">O</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">&lt;</span> w <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span><span class=\"token constant\">A</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>greedy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">++</span><span class=\"token constant\">A</span>\n\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">+=</span> a<span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> b <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">=</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">M</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token constant\">N</span> <span class=\"token operator\">=</span> <span class=\"token constant\">A</span> <span class=\"token operator\">-</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>index <span class=\"token operator\">-=</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\nc<span class=\"token punctuation\">.</span>lastIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">N</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nw <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> d<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">S</span> <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">E</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">,</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nj <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">+=</span> j<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token operator\">*</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">M</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> u <span class=\"token operator\">?</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">tokenize</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> x<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token constant\">E</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">S</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token constant\">S</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">N</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchGrammar</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ni<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">tokenize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\nt <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>rest<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token keyword\">in</span> t<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">delete</span> a<span class=\"token punctuation\">.</span>rest<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">matchGrammar</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">hooks</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">all</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">add</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">run</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&amp;&amp;</span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>r<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">Token</span><span class=\"token operator\">:</span> <span class=\"token constant\">M</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>alias <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>greedy <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">=</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">stringify</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> e\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> <span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">classes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> a\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> e<span class=\"token punctuation\">.</span>alias <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wrap'</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> e <span class=\"token operator\">+</span> <span class=\"token string\">'=\"'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;quot;'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token string\">'&lt;'</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">.</span>tag <span class=\"token operator\">+</span> <span class=\"token string\">' class=\"'</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">?</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> r <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'>'</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">.</span>content <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/'</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">.</span>tag <span class=\"token operator\">+</span> <span class=\"token string\">'>'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token operator\">!</span>g<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\ng<span class=\"token punctuation\">.</span>addEventListener <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>disableWorkerMessageHandler <span class=\"token operator\">||</span>\n\ng<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nn <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">,</span>\n\nt <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span>\n\nr <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>immediateClose<span class=\"token punctuation\">;</span>\n\ng<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">&amp;&amp;</span> g<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token operator\">!</span><span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">C</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>currentScript <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\ne <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>filename <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>manual <span class=\"token operator\">||</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-manual'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token string\">'loading'</span> <span class=\"token operator\">!==</span> document<span class=\"token punctuation\">.</span>readyState\n\n<span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>requestAnimationFrame\n\n<span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>highlightAll<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>highlightAll<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>highlightAll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">C</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>\\_self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> module <span class=\"token operator\">&amp;&amp;</span> module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> global <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!--[\\s\\S]_?--></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">prolog</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;\\?[\\s\\S]+?\\?></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">doctype</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!DOCTYPE[\\s\\S]+?></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">cdata</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!\\[CDATA\\[[\\s\\S]_?]]></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;\\/?(?!\\d)[^\\s>\\/=$&lt;%]+(?:\\s(?:\\s_[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]_\"|'[^']_'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;\\/?[^\\s>\\/]+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;\\/?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">namespace</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[^\\s>\\/:]+:</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'attr-value'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">=\\s*(?:\"[^\"]_\"|'[^']_'|[^\\s'\">=]+)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^=</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\s*)[\"']|[\"']$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\n                <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/?></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token string-property property\">'attr-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^\\s>\\/]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">namespace</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[^\\s>\\/:]+:</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">entity</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;#?[\\da-z]{1,8};</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">[</span><span class=\"token string\">'attr-value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">.</span>entity <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    Prism<span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wrap'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token string\">'entity'</span> <span class=\"token operator\">===</span> a<span class=\"token punctuation\">.</span>type <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;amp;</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">,</span> <span class=\"token string\">'addInlined'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token string\">'language-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n                <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^&lt;!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>cdata <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;!\\[CDATA\\[|\\]\\]>$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'included-cdata'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!\\[CDATA\\[[\\s\\S]*?\\]\\]></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> s <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nn<span class=\"token punctuation\">[</span><span class=\"token string\">'language-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\s\\S]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(&lt;**[\\\\s\\\\S]_?>)(?:&lt;!\\\\[CDATA\\\\[[\\\\s\\\\S]_?\\\\]\\\\]>\\\\s*|[\\\\s\\\\S])*?(?=&lt;\\\\/**>)'</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/**/</span>g<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> n\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cdata'</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>html <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>mathml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>svg <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])_\\1</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/\\*[\\s\\S]_?\\*\\/</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">atrule</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">@[\\w-]+[\\s\\S]_?(?:;|(?=\\s_\\{))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">rule</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">@[\\w-]+</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url\\\\((?:'</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">'|[^\\n\\r()]_)\\\\)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^url</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\(|\\)$</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">selector</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[^{}\\\\s](?:[^{};\"\\']|'</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">')_?(?=\\\\s*\\\\{)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">property</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[-\\_a-z\\xA0-\\uFFFF][-\\w\\xa0-\\uffff]*(?=\\s*:)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">!important\\b</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[-a-z0-9]+(?=\\()</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[(){};:,]</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>atrule<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">.</span>rest <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">;</span>\n\ne <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addInlined</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ns<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'inside'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string\">'attr-value'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'style-attr'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'attr-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*style</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span>inside <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*=\\s*['\"]|['\"]\\s*$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'attr-value'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">.+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'language-css'</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span>tag\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>clike <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\\\:])\\/\\/.*</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string-property property\">'class-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[.\\\\]</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">boolean</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:true|false)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\w+(?=\\()</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">operator</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">--?|\\+\\+?|!=?=?|&lt;=?|>=?|==?=?|&amp;&amp;?|\\|\\|?|\\?|\\*|\\/|~|\\^|%</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[{}[\\];(),.:]</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clike'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token string-property property\">'class-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n        Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>clike<span class=\"token punctuation\">[</span><span class=\"token string\">'class-name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">{</span>\n\n            <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^$\\w\\xA0-\\uFFFF])[\\_$A-Z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_(?=\\.(?:prototype|constructor))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|})\\s_)(?:catch|finally)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:(?:0[xX](&lt;?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?>)+|0[bB](&lt;?:[01](?:_[01])?>)+|0[oO](&lt;?:[0-7](?:_[0-7])?>)+)n?|(?:\\d(?:*\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:*\\d)?)+\\.?(?:\\d(?:\\_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_(?=\\s_(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">operator</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">-[-=]?|\\+[+=]?|!=?=?|&lt;&lt;?=?|>>?>?=?|=(?:==?|>)?|&amp;[&amp;=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript<span class=\"token punctuation\">[</span><span class=\"token string\">'class-name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'keyword'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">regex</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|[^$\\w\\xa0-\\uffff.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token string-property property\">'function-variable'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n                <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))_\\)|[\\_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_)\\s*=>))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'function'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">parameter</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(function(?:\\s+[\\_$A-Za-z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]_\\))+?(?=\\s_\\))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\_$a-z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_(?=\\s_=>)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[\\_$A-Za-z\\xA0-\\uFFFF][$\\w\\xa0-\\uffff]_\\s_)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">constant</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b[A-Z](?:[A-Z_]|\\dx?)_\\b</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'template-string'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]_})_})+}|[^\\\\`])_`</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">interpolation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\${(?:[^{}]|{(?:[^{}]|{[^}]_})_})+}</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'interpolation-punctuation'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\${|}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'punctuation'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">rest</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\s\\S]+</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup <span class=\"token operator\">&amp;&amp;</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addInlined</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'javascript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>js <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> self <span class=\"token operator\">&amp;&amp;</span> self<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> self<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nPrism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">registerButton</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span>\n\n<span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> n\n\n<span class=\"token operator\">?</span> <span class=\"token function-variable function\">n</span>\n\n<span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'function'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> n<span class=\"token punctuation\">.</span>onClick\n\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nn<span class=\"token punctuation\">.</span><span class=\"token function\">onClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> n<span class=\"token punctuation\">.</span>url\n\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nt <span class=\"token keyword\">in</span> i <span class=\"token operator\">?</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'There is a button with the key \"'</span> <span class=\"token operator\">+</span> t <span class=\"token operator\">+</span> <span class=\"token string\">'\" registered already.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">hook</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">pre</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code-toolbar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ne<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code-toolbar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\no<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toolbar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-toolbar-order'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-toolbar-order'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> i<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nn<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toolbar-item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">pre</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-label'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n<span class=\"token punctuation\">,</span>\n\na<span class=\"token punctuation\">,</span>\n\no <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-label'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\na <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'template#'</span> <span class=\"token operator\">+</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\na\n\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-url'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nn\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> self <span class=\"token operator\">&amp;&amp;</span> self<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> self<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>ClipboardJS <span class=\"token operator\">||</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\nr <span class=\"token operator\">||</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> require <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clipboard'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'head'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>ClipboardJS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\nPrism<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>toolbar<span class=\"token punctuation\">.</span><span class=\"token function\">registerButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy-to-clipboard'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Copy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">?</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">text</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\no<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Copied'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\no<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Press Ctrl+C to copy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nt<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Copy'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5e3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Copy to Clipboard plugin loaded before Toolbar plugin.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">/</span>_ PrismJS <span class=\"token number\">1.24</span><span class=\"token number\">.1</span>\n\n<span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>prismjs<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>download<span class=\"token punctuation\">.</span>html#themes<span class=\"token operator\">=</span>prism<span class=\"token operator\">&amp;</span>languages<span class=\"token operator\">=</span>markup<span class=\"token operator\">+</span>css<span class=\"token operator\">+</span>clike<span class=\"token operator\">+</span>javascript _<span class=\"token operator\">/</span>\n\n<span class=\"token keyword\">var</span> \\_self <span class=\"token operator\">=</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">?</span> window <span class=\"token operator\">:</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> WorkerGlobalScope <span class=\"token operator\">&amp;&amp;</span> self <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WorkerGlobalScope</span> <span class=\"token operator\">?</span> self <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\nPrism <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">u</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\blang(?:uage)?-([\\w-]+)\\b</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\ne <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">M</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">manual</span><span class=\"token operator\">:</span> u<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> u<span class=\"token punctuation\">.</span>Prism<span class=\"token punctuation\">.</span>manual<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">disableWorkerMessageHandler</span><span class=\"token operator\">:</span> u<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">&amp;&amp;</span> u<span class=\"token punctuation\">.</span>Prism<span class=\"token punctuation\">.</span>disableWorkerMessageHandler<span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">util</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">encode</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> n <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">W</span>\n\n<span class=\"token operator\">?</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">?</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> n\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;amp;'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;lt;'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\u00a0</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">type</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">objId</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token operator\">**</span>id <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">'**id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token operator\">++</span>n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token operator\">**</span>id<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">clone</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> r <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">'Object'</span><span class=\"token operator\">:</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">objId</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">'Array'</span><span class=\"token operator\">:</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">objId</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nr<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">?</span> r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\na<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\na<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\n<span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">getLanguage</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> e <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">currentScript</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> document<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'currentScript'</span> <span class=\"token keyword\">in</span> document<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span>currentScript<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">at [^(\\r\\n]_\\((._):.+:.+\\)$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token keyword\">in</span> t<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">==</span> n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span>\n\n                            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token function-variable function\">isActive</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token string\">'no-'</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">;</span> e<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                            <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">;</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n                            e <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>t<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">languages</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token literal-property property\">plain</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">plaintext</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">txt</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                    <span class=\"token function-variable function\">extend</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token function-variable function\">insertBefore</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> r <span class=\"token operator\">||</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                            i <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> l <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">)</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">==</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">)</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                n<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span>\n\n                        <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n                            <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token constant\">DFS</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                n <span class=\"token operator\">===</span> s <span class=\"token operator\">&amp;&amp;</span> e <span class=\"token operator\">!=</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            i\n\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token function-variable function\">DFS</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        a <span class=\"token operator\">=</span> a <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>objId<span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> l <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">)</span>\n\n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                <span class=\"token function\">t</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">||</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                                    s <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                <span class=\"token string\">'Object'</span> <span class=\"token operator\">!==</span> s <span class=\"token operator\">||</span> a<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Array'</span> <span class=\"token operator\">!==</span> s <span class=\"token operator\">||</span> a<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">highlightAll</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlightAllUnder</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">highlightAllUnder</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token literal-property property\">callback</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span>\n\n                        <span class=\"token literal-property property\">selector</span><span class=\"token operator\">:</span> <span class=\"token string\">'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'</span>\n\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-highlightall'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>elements <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-all-elements-highlight'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlightElement</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> n<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">highlightElement</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">getLanguage</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        a <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                    e<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' language-'</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">;</span>\n\n                    i <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'pre'</span> <span class=\"token operator\">===</span> i<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' language-'</span> <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> r<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">grammar</span><span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>textContent <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>highlightedCode <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-insert'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> l<span class=\"token punctuation\">.</span>highlightedCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after-highlight'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                            t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">t</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n\n                        <span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-sanity-check'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'pre'</span> <span class=\"token operator\">===</span> i<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>i<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token operator\">!</span>l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">)</span>\n\n                        <span class=\"token keyword\">return</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">t</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-highlight'</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>grammar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&amp;&amp;</span> u<span class=\"token punctuation\">.</span>Worker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                            <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                                s<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> l<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">immediateClose</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>grammar<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">else</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">highlight</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">grammar</span><span class=\"token operator\">:</span> n<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> t <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n                        <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before-tokenize'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>tokens <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">tokenize</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>grammar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after-tokenize'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token constant\">W</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>tokens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">)</span>\n\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">tokenize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>rest<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token keyword\">in</span> t<span class=\"token punctuation\">)</span> n<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">delete</span> n<span class=\"token punctuation\">.</span>rest<span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n                        <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> l</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">)</span>\n\n                                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> r<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                    <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> r<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                                    s <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> s <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> u <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> u <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>u<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&amp;&amp;</span> l<span class=\"token punctuation\">.</span>cause <span class=\"token operator\">==</span> o <span class=\"token operator\">+</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> u<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n                                        <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                                            g <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">,</span>\n\n                                            f <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span>lookbehind<span class=\"token punctuation\">,</span>\n\n                                            h <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span>greedy<span class=\"token punctuation\">,</span>\n\n                                            d <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">;</span>\n\n                                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>c<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">.</span>global<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                                            <span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[imsuy]*$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nc<span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">=</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">,</span> p <span class=\"token operator\">+</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> v <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">||</span> c<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> m <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>tail <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">>=</span> l<span class=\"token punctuation\">.</span>reach<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">+=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>b <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> k<span class=\"token punctuation\">,</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> <span class=\"token function\">z</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> w <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">A</span> <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">P</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">+=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token constant\">P</span> <span class=\"token operator\">&lt;=</span> w<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">+=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">-=</span> m<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">=</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>value <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> <span class=\"token constant\">E</span> <span class=\"token operator\">=</span> m<span class=\"token punctuation\">;</span> <span class=\"token constant\">E</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>tail <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">A</span> <span class=\"token operator\">||</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token constant\">E</span> <span class=\"token operator\">=</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span>\n\nx<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">P</span> <span class=\"token operator\">+=</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nx<span class=\"token operator\">--</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">.</span>index <span class=\"token operator\">-=</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> <span class=\"token function\">z</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> w <span class=\"token operator\">=</span> k<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">S</span> <span class=\"token operator\">=</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">O</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">L</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>w <span class=\"token operator\">+</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">N</span> <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\nl <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">N</span> <span class=\"token operator\">></span> l<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">=</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">;</span>\n\n<span class=\"token constant\">O</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> <span class=\"token constant\">O</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+=</span> <span class=\"token constant\">O</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">q</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> g <span class=\"token operator\">?</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">tokenize</span><span class=\"token punctuation\">(</span><span class=\"token constant\">S</span><span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> <span class=\"token constant\">S</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">=</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> <span class=\"token constant\">L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> _ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cause</span><span class=\"token operator\">:</span> o <span class=\"token operator\">+</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> u<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">reach</span><span class=\"token operator\">:</span> <span class=\"token constant\">N</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">e</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">&amp;&amp;</span> _<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">></span> l<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span>reach <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span>reach<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\nt <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">hooks</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">all</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">add</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token function-variable function\">run</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>a<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">Token</span><span class=\"token operator\">:</span> <span class=\"token constant\">W</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>alias <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ne<span class=\"token punctuation\">.</span>lastIndex <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;&amp;</span> r <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>index <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">prev</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">prev</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">I</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">,</span>\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> t<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">prev</span><span class=\"token operator\">:</span> n<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> r <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>length<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">q</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;</span> t <span class=\"token operator\">&amp;&amp;</span> r <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> r <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token constant\">W</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">stringify</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\ne<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nr <span class=\"token operator\">+=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nr\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> <span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">classes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">language</span><span class=\"token operator\">:</span> t <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\ni <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">;</span>\n\ni <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> a<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wrap'</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">)</span> l <span class=\"token operator\">+=</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> o <span class=\"token operator\">+</span> <span class=\"token string\">'=\"'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;quot;'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token string\">'&lt;'</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>tag <span class=\"token operator\">+</span> <span class=\"token string\">' class=\"'</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"'</span> <span class=\"token operator\">+</span> l <span class=\"token operator\">+</span> <span class=\"token string\">'>'</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>content <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/'</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">.</span>tag <span class=\"token operator\">+</span> <span class=\"token string\">'>'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token operator\">!</span>u<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\nu<span class=\"token punctuation\">.</span>addEventListener <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>disableWorkerMessageHandler <span class=\"token operator\">||</span>\n\nu<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nt <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">,</span>\n\nr <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span>\n\na <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>immediateClose<span class=\"token punctuation\">;</span>\n\nu<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">&amp;&amp;</span> u<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token operator\">!</span><span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token constant\">M</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">currentScript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>manual <span class=\"token operator\">||</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">.</span><span class=\"token function\">highlightAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>filename <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-manual'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>manual <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token constant\">M</span><span class=\"token punctuation\">.</span>manual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">;</span>\n\n<span class=\"token string\">'loading'</span> <span class=\"token operator\">===</span> a <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'interactive'</span> <span class=\"token operator\">===</span> a <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>defer<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">?</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>requestAnimationFrame\n\n<span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>_self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> module <span class=\"token operator\">&amp;&amp;</span> module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> global <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">.</span>Prism <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!--[\\s\\S]*?--></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">prolog</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;\\?[\\s\\S]+?\\?></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">doctype</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^&lt;\"'\\]]|\"[^\"]*\"|'[^']*'|&lt;(?!!--)|&lt;!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'internal-subset'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"[^\"]*\"|'[^']*'</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;!|>$|[[\\]]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'doctype-tag'</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^DOCTYPE</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^\\s&lt;>'\"]+</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">cdata</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!\\[CDATA\\[[\\s\\S]*?\\]\\]></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;\\/?(?!\\d)[^\\s>\\/=$&lt;%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;\\/?[^\\s>\\/]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;\\/?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">namespace</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[^\\s>\\/:]+:</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'special-attr'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'attr-value'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^=</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'attr-equals'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"|'</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/?></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'attr-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^\\s>\\/]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">namespace</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[^\\s>\\/:]+:</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">entity</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;[\\da-z]{1,8};</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'named-entity'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;#x?[\\da-f]{1,8};</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">[</span><span class=\"token string\">'attr-value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">.</span>entity <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>doctype<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">[</span><span class=\"token string\">'internal-subset'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>inside <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>hooks<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wrap'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string\">'entity'</span> <span class=\"token operator\">===</span> a<span class=\"token punctuation\">.</span>type <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&amp;amp;</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">,</span> <span class=\"token string\">'addInlined'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token string\">'language-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^&lt;!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>cdata <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^&lt;!\\[CDATA\\[|\\]\\]>$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'included-cdata'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&lt;!\\[CDATA\\[[\\s\\S]*?\\]\\]></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> s <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nt<span class=\"token punctuation\">[</span><span class=\"token string\">'language-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\s\\S]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'(&lt;**[^>]*>)(?:&lt;!\\\\[CDATA\\\\[(?:[^\\\\]]|\\\\](?!\\]>))*\\\\]\\\\]>|(?!&lt;!\\\\[CDATA\\\\[)[^])\\*?(?=&lt;/**>)'</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\_\\_</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string\">'i'</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> t\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cdata'</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">,</span> <span class=\"token string\">'addAttribute'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">[</span><span class=\"token string\">'special-attr'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(^|[\"\\'\\\\s])(?:'</span> <span class=\"token operator\">+</span> a <span class=\"token operator\">+</span> <span class=\"token string\">')\\\\s*=\\\\s*(?:\"[^\"]*\"|\\'[^\\']*\\'|[^\\\\s\\'\">=]+(?=[\\\\s>]))'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'attr-name'</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[^\\s=]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'attr-value'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">=[\\s\\S]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">'language-'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                                <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span>\n\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                            <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^=</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'attr-equals'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"|'</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">]</span>\n\n                        <span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">}</span>\n\n                <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>html <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>mathml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>svg <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string\">'markup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>ssml <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>atom <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>rss <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/\\*[\\s\\S]*?\\*\\/</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">atrule</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                <span class=\"token literal-property property\">rule</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^@[\\w-]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token string-property property\">'selector-function-argument'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'selector'</span>\n\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\w-])(?:and|not|only|or)(?![\\w-])</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\burl\\\\((?:'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">'|(?:[^\\\\\\\\\\r\\n()\"\\']|\\\\\\\\[^])*)\\\\)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^url</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\(|\\)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'^'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">'$'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'url'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">selector</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token function\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|'</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>source <span class=\"token operator\">+</span> <span class=\"token string\">')*(?=\\\\s*\\\\{)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">property</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">!important\\b</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^-a-z0-9])[-a-z0-9]+(?=\\()</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[(){};:,]</span><span class=\"token regex-delimiter\">/</span></span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>atrule<span class=\"token punctuation\">.</span>inside<span class=\"token punctuation\">.</span>rest <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">;</span>\n\n    t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addInlined</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>clike <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\\\:])\\/\\/.*</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'class-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[.\\\\]</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">boolean</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:true|false)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b\\w+(?=\\()</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">operator</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[&lt;>]=?|[!=]=?=?|--?|\\+\\+?|&amp;&amp;?|\\|\\|?|[?*/~^%]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">punctuation</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[{}[\\];(),.:]</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clike'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token string-property property\">'class-name'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>clike<span class=\"token punctuation\">[</span><span class=\"token string\">'class-name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^$\\w\\xa0-\\uffff])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])_(?=\\.(?:prototype|constructor))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">keyword</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|\\})\\s_)catch\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token keyword\">function</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">number</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b(?:(?:0[xX](&lt;?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?>)+|0[bB](&lt;?:[01](?:_[01])?>)+|0[oO](&lt;?:[0-7](?:_[0-7])?>)+)n?|(?:\\d(?:*\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:*\\d)?)+\\.?(?:\\d(?:\\_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">operator</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">--|\\+\\+|\\*\\*=?|=>|&amp;&amp;=?|\\|\\|=?|[!=]==|&lt;&lt;=?|>>>?=?|[-+*/%&amp;|^!=&lt;>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript<span class=\"token punctuation\">[</span><span class=\"token string\">'class-name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pattern <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'keyword'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">regex</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|[^$\\w\\xa0-\\uffff.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))_\\*\\/)_(?:$|[\\r\\n,.;:})\\]]|\\/\\/))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                <span class=\"token string-property property\">'regex-source'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(\\/)[\\s\\S]+(?=\\/[a-z]*$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'language-regex'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>regex <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'regex-delimiter'</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\/|\\/$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token string-property property\">'regex-flags'</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[a-z]+$</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'function-variable'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">#?(?!\\s)[\\_$a-zA-Z\\xA0-\\uFFFF](&lt;?:(?!\\s)[$\\w\\xA0-\\uFFFF]>)_(?=\\s_[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]_\\))_\\)|(?!\\s)[\\_$a-zA-Z\\xA0-\\uFFFF](&lt;?:(?!\\s)[$\\w\\xA0-\\uFFFF]>)_)\\s_=>))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'function'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">parameter</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(function(?:\\s+(?!\\s)[\\_$a-zA-Z\\xA0-\\uFFFF](&lt;?:(?!\\s)[$\\w\\xA0-\\uFFFF]>)_)?\\s_\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^$\\w\\xa0-\\uffff])(?!\\s)[\\_$a-z\\xA0-\\uFFFF](&lt;?:(?!\\s)[$\\w\\xA0-\\uFFFF]>)*(?=\\s*=>)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]_\\))+(?=\\s_\\)\\s*=>)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span>\n\n<span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[\\_$a-zA-Z\\xA0-\\uFFFF](&lt;?:(?!\\s)[$\\w\\xA0-\\uFFFF]>)*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]_\\))+(?=\\s_\\)\\s*\\{)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">constant</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b[A-Z](?:[A-Z_]|\\dx?)*\\b</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">hashbang</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^#!._</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'comment'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string-property property\">'template-string'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]_\\})_\\})+\\}|(?!\\$\\{)[^\\\\`])_`</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">greedy</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'template-punctuation'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^`|`$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'string'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">interpolation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n                    <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">lookbehind</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">inside</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'interpolation-punctuation'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pattern</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\$\\{|\\}$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'punctuation'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">rest</span><span class=\"token operator\">:</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token literal-property property\">string</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\s\\S]+</span><span class=\"token regex-delimiter\">/</span></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup <span class=\"token operator\">&amp;&amp;</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addInlined</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'javascript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\nPrism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>markup<span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span>\n\n<span class=\"token string\">'on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)'</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token string\">'javascript'</span>\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">(</span>Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>js <span class=\"token operator\">=</span> Prism<span class=\"token punctuation\">.</span>languages<span class=\"token punctuation\">.</span>javascript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":8118,"column":1,"offset":266556},"end":{"line":10401,"column":4,"offset":309831},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;details></code></pre></div>","position":{"start":{"line":10403,"column":1,"offset":309835},"end":{"line":10407,"column":4,"offset":309858},"indent":[1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10409,"column":1,"offset":309862},"end":{"line":10410,"column":5,"offset":309872},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":10412,"column":1,"offset":309876},"end":{"line":10412,"column":4,"offset":309879},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10414,"column":1,"offset":309883},"end":{"line":10414,"column":4,"offset":309886},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10416,"column":1,"offset":309890},"end":{"line":10416,"column":4,"offset":309893},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10418,"column":1,"offset":309897},"end":{"line":10418,"column":4,"offset":309900},"indent":[]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10420,"column":1,"offset":309904},"end":{"line":10421,"column":5,"offset":309914},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Plugins","position":{"start":{"line":10423,"column":3,"offset":309920},"end":{"line":10423,"column":10,"offset":309927},"indent":[]}}],"position":{"start":{"line":10423,"column":1,"offset":309918},"end":{"line":10423,"column":10,"offset":309927},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── ./plugins\n\n        ├── ./plugins/gatsby-remark-page-creator\n\n        │   └──  ./plugins/gatsby-remark-page-creator/gatsby-node.js\n\n        │\n\n        └── ./plugins/gatsby-source-data\n\n            └──  ./plugins/gatsby-source-data/gatsby-node.js</code></pre></div>","position":{"start":{"line":10425,"column":1,"offset":309931},"end":{"line":10439,"column":4,"offset":310203},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10441,"column":1,"offset":310207},"end":{"line":10442,"column":5,"offset":310217},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":10444,"column":1,"offset":310221},"end":{"line":10444,"column":4,"offset":310224},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10446,"column":1,"offset":310228},"end":{"line":10446,"column":4,"offset":310231},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10448,"column":1,"offset":310235},"end":{"line":10448,"column":4,"offset":310238},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10450,"column":1,"offset":310242},"end":{"line":10450,"column":4,"offset":310245},"indent":[]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10452,"column":1,"offset":310249},"end":{"line":10453,"column":5,"offset":310259},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Components","position":{"start":{"line":10455,"column":3,"offset":310265},"end":{"line":10455,"column":13,"offset":310275},"indent":[]}}],"position":{"start":{"line":10455,"column":1,"offset":310263},"end":{"line":10455,"column":13,"offset":310275},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Index.js","position":{"start":{"line":10457,"column":5,"offset":310283},"end":{"line":10457,"column":13,"offset":310291},"indent":[]}}],"position":{"start":{"line":10457,"column":1,"offset":310279},"end":{"line":10457,"column":13,"offset":310291},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> ActionLink <span class=\"token keyword\">from</span> <span class=\"token string\">'./ActionLink'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> CtaButtons <span class=\"token keyword\">from</span> <span class=\"token string\">'./CtaButtons'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> DocsMenu <span class=\"token keyword\">from</span> <span class=\"token string\">'./DocsMenu'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> DocsSubmenu <span class=\"token keyword\">from</span> <span class=\"token string\">'./DocsSubmenu'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Footer <span class=\"token keyword\">from</span> <span class=\"token string\">'./Footer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'./Header'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Icon <span class=\"token keyword\">from</span> <span class=\"token string\">'./Icon'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionContent <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionContent'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionCta <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionCta'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionDocs <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionDocs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionGrid <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionGrid'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SectionHero <span class=\"token keyword\">from</span> <span class=\"token string\">'./SectionHero'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Submenu <span class=\"token keyword\">from</span> <span class=\"token string\">'./Submenu'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'./Layout'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> addScript <span class=\"token keyword\">from</span> <span class=\"token string\">'./../hooks/addScript'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n    ActionLink<span class=\"token punctuation\">,</span>\n    CtaButtons<span class=\"token punctuation\">,</span>\n    DocsMenu<span class=\"token punctuation\">,</span>\n    DocsSubmenu<span class=\"token punctuation\">,</span>\n    Footer<span class=\"token punctuation\">,</span>\n    Header<span class=\"token punctuation\">,</span>\n    Icon<span class=\"token punctuation\">,</span>\n    SectionContent<span class=\"token punctuation\">,</span>\n    SectionCta<span class=\"token punctuation\">,</span>\n    SectionDocs<span class=\"token punctuation\">,</span>\n    SectionGrid<span class=\"token punctuation\">,</span>\n    SectionHero<span class=\"token punctuation\">,</span>\n    Submenu<span class=\"token punctuation\">,</span>\n    Layout\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    ActionLink<span class=\"token punctuation\">,</span>\n\n    CtaButtons<span class=\"token punctuation\">,</span>\n\n    DocsMenu<span class=\"token punctuation\">,</span>\n\n    DocsSubmenu<span class=\"token punctuation\">,</span>\n\n    Footer<span class=\"token punctuation\">,</span>\n\n    Header<span class=\"token punctuation\">,</span>\n\n    Icon<span class=\"token punctuation\">,</span>\n\n    SectionContent<span class=\"token punctuation\">,</span>\n\n    SectionCta<span class=\"token punctuation\">,</span>\n\n    SectionDocs<span class=\"token punctuation\">,</span>\n\n    SectionGrid<span class=\"token punctuation\">,</span>\n\n    SectionHero<span class=\"token punctuation\">,</span>\n\n    Submenu<span class=\"token punctuation\">,</span>\n\n    Layout\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":10459,"column":1,"offset":310295},"end":{"line":10537,"column":4,"offset":311424},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Layout.js","position":{"start":{"line":10539,"column":5,"offset":311432},"end":{"line":10539,"column":14,"offset":311441},"indent":[]}}],"position":{"start":{"line":10539,"column":1,"offset":311428},"end":{"line":10539,"column":14,"offset":311441},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Helmet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-helmet'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withPrefix<span class=\"token punctuation\">,</span> attribute <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../utils'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'../sass/main.scss'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'./Header'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Footer <span class=\"token keyword\">from</span> <span class=\"token string\">'./Footer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> addScript <span class=\"token keyword\">from</span> <span class=\"token string\">'./../hooks/addScript'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Script</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">importScript</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./../hooks/addScript.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Body</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"https://cdn.jsdelivr.net/npm/@algolia/algoliasearch-netlify-frontend@1/dist/algoliasearchNetlify.css\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                <span class=\"token operator\">&lt;</span>Helmet<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token operator\">?</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token operator\">:</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' | '</span> <span class=\"token operator\">+</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>meta charSet<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initialScale=1.0\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"description\"</span> content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.description'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.robots'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"robots\"</span> content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.robots'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.frontmatter.seo.extra'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">meta<span class=\"token punctuation\">,</span> meta_idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">let</span> key_name <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'keyName'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">return</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'relativeUrl'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n                            _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.domain'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                                    <span class=\"token keyword\">let</span> domain <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.domain'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">let</span> rel_url <span class=\"token operator\">=</span> <span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">let</span> full_url <span class=\"token operator\">=</span> domain <span class=\"token operator\">+</span> rel_url<span class=\"token punctuation\">;</span>\n\n                                    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>meta key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>meta_idx<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">attribute</span><span class=\"token punctuation\">(</span>key_name<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>full_url<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n                            <span class=\"token operator\">&lt;</span>meta key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>meta_idx <span class=\"token operator\">+</span> <span class=\"token string\">'.1'</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">attribute</span><span class=\"token punctuation\">(</span>key_name<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> content<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"preconnect\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"https://fonts.gstatic.com\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>link href<span class=\"token operator\">=</span><span class=\"token string\">\"https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,400;0,700;1,400;1,700&amp;display=swap\"</span> rel<span class=\"token operator\">=</span><span class=\"token string\">\"stylesheet\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token punctuation\">{</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.favicon'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> href<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.favicon'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n                    <span class=\"token operator\">&lt;</span>body className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'palette-'</span> <span class=\"token operator\">+</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">,</span> <span class=\"token string\">'pageContext.site.siteMetadata.palette'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Helmet<span class=\"token operator\">></span>\n\n                <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"page\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"site\"</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>Header <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>main id<span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"site-content\"</span><span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>main<span class=\"token operator\">></span>\n\n                    <span class=\"token operator\">&lt;</span>Footer <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":10541,"column":1,"offset":311445},"end":{"line":10629,"column":4,"offset":315169},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ActionLink.js","position":{"start":{"line":10631,"column":5,"offset":315177},"end":{"line":10631,"column":18,"offset":315190},"indent":[]}}],"position":{"start":{"line":10631,"column":1,"offset":315173},"end":{"line":10631,"column":18,"offset":315190},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10633,"column":1,"offset":315194},"end":{"line":10635,"column":4,"offset":315208},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"CtaButtons.js","position":{"start":{"line":10637,"column":5,"offset":315216},"end":{"line":10637,"column":18,"offset":315229},"indent":[]}}],"position":{"start":{"line":10637,"column":1,"offset":315212},"end":{"line":10637,"column":18,"offset":315229},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10639,"column":1,"offset":315233},"end":{"line":10641,"column":4,"offset":315247},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"DocsMenu.js","position":{"start":{"line":10643,"column":5,"offset":315255},"end":{"line":10643,"column":16,"offset":315266},"indent":[]}}],"position":{"start":{"line":10643,"column":1,"offset":315251},"end":{"line":10643,"column":16,"offset":315266},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10645,"column":1,"offset":315270},"end":{"line":10647,"column":4,"offset":315284},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"DocsSubmenu.js","position":{"start":{"line":10649,"column":5,"offset":315292},"end":{"line":10649,"column":19,"offset":315306},"indent":[]}}],"position":{"start":{"line":10649,"column":1,"offset":315288},"end":{"line":10649,"column":19,"offset":315306},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10651,"column":1,"offset":315310},"end":{"line":10653,"column":4,"offset":315324},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Footer.js","position":{"start":{"line":10655,"column":5,"offset":315332},"end":{"line":10655,"column":14,"offset":315341},"indent":[]}}],"position":{"start":{"line":10655,"column":1,"offset":315328},"end":{"line":10655,"column":14,"offset":315341},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10657,"column":1,"offset":315345},"end":{"line":10659,"column":4,"offset":315359},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Header.js","position":{"start":{"line":10661,"column":5,"offset":315367},"end":{"line":10661,"column":14,"offset":315376},"indent":[]}}],"position":{"start":{"line":10661,"column":1,"offset":315363},"end":{"line":10661,"column":14,"offset":315376},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10663,"column":1,"offset":315380},"end":{"line":10665,"column":4,"offset":315394},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Icon.js","position":{"start":{"line":10667,"column":5,"offset":315402},"end":{"line":10667,"column":12,"offset":315409},"indent":[]}}],"position":{"start":{"line":10667,"column":1,"offset":315398},"end":{"line":10667,"column":12,"offset":315409},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10669,"column":1,"offset":315413},"end":{"line":10671,"column":4,"offset":315427},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"SectionContent.js","position":{"start":{"line":10673,"column":5,"offset":315435},"end":{"line":10673,"column":22,"offset":315452},"indent":[]}}],"position":{"start":{"line":10673,"column":1,"offset":315431},"end":{"line":10673,"column":22,"offset":315452},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10675,"column":1,"offset":315456},"end":{"line":10677,"column":4,"offset":315470},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"SectionCta.js","position":{"start":{"line":10679,"column":5,"offset":315478},"end":{"line":10679,"column":18,"offset":315491},"indent":[]}}],"position":{"start":{"line":10679,"column":1,"offset":315474},"end":{"line":10679,"column":18,"offset":315491},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10681,"column":1,"offset":315495},"end":{"line":10683,"column":4,"offset":315509},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"SectionDocs.js","position":{"start":{"line":10685,"column":5,"offset":315517},"end":{"line":10685,"column":19,"offset":315531},"indent":[]}}],"position":{"start":{"line":10685,"column":1,"offset":315513},"end":{"line":10685,"column":19,"offset":315531},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10687,"column":1,"offset":315535},"end":{"line":10689,"column":4,"offset":315549},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"SectionGrid.js","position":{"start":{"line":10691,"column":5,"offset":315557},"end":{"line":10691,"column":19,"offset":315571},"indent":[]}}],"position":{"start":{"line":10691,"column":1,"offset":315553},"end":{"line":10691,"column":19,"offset":315571},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10693,"column":1,"offset":315575},"end":{"line":10695,"column":4,"offset":315589},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"SectionHero.js","position":{"start":{"line":10697,"column":5,"offset":315597},"end":{"line":10697,"column":19,"offset":315611},"indent":[]}}],"position":{"start":{"line":10697,"column":1,"offset":315593},"end":{"line":10697,"column":19,"offset":315611},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10699,"column":1,"offset":315615},"end":{"line":10701,"column":4,"offset":315629},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Submenu.js","position":{"start":{"line":10703,"column":5,"offset":315637},"end":{"line":10703,"column":15,"offset":315647},"indent":[]}}],"position":{"start":{"line":10703,"column":1,"offset":315633},"end":{"line":10703,"column":15,"offset":315647},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":10705,"column":1,"offset":315651},"end":{"line":10707,"column":4,"offset":315665},"indent":[1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10709,"column":1,"offset":315669},"end":{"line":10710,"column":5,"offset":315679},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":10712,"column":1,"offset":315683},"end":{"line":10712,"column":4,"offset":315686},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10714,"column":1,"offset":315690},"end":{"line":10714,"column":4,"offset":315693},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10716,"column":1,"offset":315697},"end":{"line":10716,"column":4,"offset":315700},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10718,"column":1,"offset":315704},"end":{"line":10718,"column":4,"offset":315707},"indent":[]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10720,"column":1,"offset":315711},"end":{"line":10721,"column":5,"offset":315721},"indent":[1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10723,"column":1,"offset":315725},"end":{"line":10724,"column":5,"offset":315735},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":10726,"column":1,"offset":315739},"end":{"line":10726,"column":4,"offset":315742},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10728,"column":1,"offset":315746},"end":{"line":10728,"column":4,"offset":315749},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10730,"column":1,"offset":315753},"end":{"line":10730,"column":4,"offset":315756},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10732,"column":1,"offset":315760},"end":{"line":10732,"column":4,"offset":315763},"indent":[]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10734,"column":1,"offset":315767},"end":{"line":10735,"column":5,"offset":315777},"indent":[1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10737,"column":1,"offset":315781},"end":{"line":10738,"column":5,"offset":315791},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":10740,"column":1,"offset":315795},"end":{"line":10740,"column":4,"offset":315798},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10742,"column":1,"offset":315802},"end":{"line":10742,"column":4,"offset":315805},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10744,"column":1,"offset":315809},"end":{"line":10744,"column":4,"offset":315812},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":10746,"column":1,"offset":315816},"end":{"line":10746,"column":4,"offset":315819},"indent":[]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":10748,"column":1,"offset":315823},"end":{"line":10749,"column":5,"offset":315833},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── ./functions\n\n│   └── ./functions/deploy-succeeded.js\n\n├── ./gatsby-browser.js\n\n├── ./gatsby-config.js\n\n├── ./gatsby-node.js\n\n├── ./gatsby-ssr.js\n\n├── ./googled2b1865dedd985a4.html\n\n├── ./lambda\n\n    └── ./lambda/deploy-succeeded.js</code></pre></div>","position":{"start":{"line":10751,"column":1,"offset":315837},"end":{"line":10771,"column":4,"offset":316102},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Gatsby Browser","position":{"start":{"line":10773,"column":4,"offset":316109},"end":{"line":10773,"column":18,"offset":316123},"indent":[]}}],"position":{"start":{"line":10773,"column":1,"offset":316106},"end":{"line":10773,"column":18,"offset":316123},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">/**\n\n * Implement Gatsby's Browser APIs in this file.\n\n *\n\n * See: https://www.gatsbyjs.org/docs/browser-apis/\n\n */</span>\n\n<span class=\"token comment\">// onPreRouteUpdate() and onRouteUpdate() are called before onInitialClientRender,</span>\n\n<span class=\"token comment\">// use initialized flag to ensure that window.onGatsbyPreRouteUpdate() and</span>\n\n<span class=\"token comment\">// window.onGatsbyRouteUpdate() will not be called before</span>\n\n<span class=\"token comment\">// window.onGatsbyInitialClientRender() has run</span>\n\n<span class=\"token keyword\">let</span> initialized <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onInitialClientRender</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    initialized <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'onGatsbyInitialClientRender'</span> <span class=\"token keyword\">in</span> window <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>onGatsbyInitialClientRender <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        window<span class=\"token punctuation\">.</span><span class=\"token function\">onGatsbyInitialClientRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'onGatsbyRouteUpdate'</span> <span class=\"token keyword\">in</span> window <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>onGatsbyRouteUpdate <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        window<span class=\"token punctuation\">.</span><span class=\"token function\">onGatsbyRouteUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onRouteUpdate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>initialized <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'onGatsbyRouteUpdate'</span> <span class=\"token keyword\">in</span> window <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>onGatsbyRouteUpdate <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        window<span class=\"token punctuation\">.</span><span class=\"token function\">onGatsbyRouteUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onPreRouteUpdate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>initialized <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'onGatsbyPreRouteUpdate'</span> <span class=\"token keyword\">in</span> window <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>onGatsbyPreRouteUpdate <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        window<span class=\"token punctuation\">.</span><span class=\"token function\">onGatsbyPreRouteUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":10775,"column":1,"offset":316127},"end":{"line":10820,"column":4,"offset":317358},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":10822,"column":1,"offset":317362},"end":{"line":10822,"column":4,"offset":317365},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Gatsby-config","position":{"start":{"line":10824,"column":4,"offset":317372},"end":{"line":10824,"column":17,"offset":317385},"indent":[]}}],"position":{"start":{"line":10824,"column":1,"offset":317369},"end":{"line":10824,"column":17,"offset":317385},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">const</span> siteMetadata <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./site-metadata.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">pathPrefix</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">siteMetadata</span><span class=\"token operator\">:</span> siteMetadata<span class=\"token punctuation\">,</span>\n\n    <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-plugin-react-helmet</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-data</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-transformer-remark</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-filesystem</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">pages</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/src/pages</span><span class=\"token template-punctuation string\">`</span></span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-plugin-sass</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-remark-page-creator</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">@stackbit/gatsby-plugin-menus</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">sourceUrlPath</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">fields.url</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">pageContextProperty</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">menus</span><span class=\"token template-punctuation string\">`</span></span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":10826,"column":1,"offset":317389},"end":{"line":10875,"column":4,"offset":318290},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":10877,"column":1,"offset":318294},"end":{"line":10877,"column":4,"offset":318297},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Gatsby-node","position":{"start":{"line":10879,"column":4,"offset":318304},"end":{"line":10879,"column":15,"offset":318315},"indent":[]}}],"position":{"start":{"line":10879,"column":1,"offset":318301},"end":{"line":10879,"column":15,"offset":318315},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.org/docs/node-apis/","children":[{"type":"text","value":"Gatsby Node","position":{"start":{"line":10881,"column":5,"offset":318323},"end":{"line":10881,"column":16,"offset":318334},"indent":[]}}],"position":{"start":{"line":10881,"column":4,"offset":318322},"end":{"line":10881,"column":59,"offset":318377},"indent":[]}}],"position":{"start":{"line":10881,"column":1,"offset":318319},"end":{"line":10881,"column":59,"offset":318377},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">/**\n\n * Implement Gatsby's Node APIs in this file.\n\n *\n\n * See: https://www.gatsbyjs.org/docs/node-apis/\n\n */</span></code></pre></div>","position":{"start":{"line":10883,"column":1,"offset":318381},"end":{"line":10894,"column":4,"offset":318514},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Gatsby Node APIs","position":{"start":{"line":10896,"column":3,"offset":318520},"end":{"line":10896,"column":19,"offset":318536},"indent":[]}}],"position":{"start":{"line":10896,"column":1,"offset":318518},"end":{"line":10896,"column":19,"offset":318536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Gatsby gives plugins and site builders many APIs for building your site. Code in the file ","position":{"start":{"line":10898,"column":1,"offset":318540},"end":{"line":10898,"column":91,"offset":318630},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-node.js</code>","position":{"start":{"line":10898,"column":91,"offset":318630},"end":{"line":10898,"column":107,"offset":318646},"indent":[]}},{"type":"text","value":" is run once in the process of building your site. You can use its APIs to create pages dynamically, add data into GraphQL, or respond to events during the build lifecycle. To use the ","position":{"start":{"line":10898,"column":107,"offset":318646},"end":{"line":10898,"column":291,"offset":318830},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/","children":[{"type":"text","value":"Gatsby Node APIs","position":{"start":{"line":10898,"column":292,"offset":318831},"end":{"line":10898,"column":308,"offset":318847},"indent":[]}}],"position":{"start":{"line":10898,"column":291,"offset":318830},"end":{"line":10898,"column":376,"offset":318915},"indent":[]}},{"type":"text","value":", create a file named ","position":{"start":{"line":10898,"column":376,"offset":318915},"end":{"line":10898,"column":398,"offset":318937},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-node.js</code>","position":{"start":{"line":10898,"column":398,"offset":318937},"end":{"line":10898,"column":414,"offset":318953},"indent":[]}},{"type":"text","value":" in the root of your site. Export any of the APIs you wish to use in this file.","position":{"start":{"line":10898,"column":414,"offset":318953},"end":{"line":10898,"column":493,"offset":319032},"indent":[]}}],"position":{"start":{"line":10898,"column":1,"offset":318540},"end":{"line":10898,"column":493,"offset":319032},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Every Gatsby Node API gets passed a ","position":{"start":{"line":10900,"column":1,"offset":319036},"end":{"line":10900,"column":37,"offset":319072},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/node-api-helpers/","children":[{"type":"text","value":"set of helper functions","position":{"start":{"line":10900,"column":38,"offset":319073},"end":{"line":10900,"column":61,"offset":319096},"indent":[]}}],"position":{"start":{"line":10900,"column":37,"offset":319072},"end":{"line":10900,"column":134,"offset":319169},"indent":[]}},{"type":"text","value":". These let you access several methods like reporting, or perform actions like creating new pages.","position":{"start":{"line":10900,"column":134,"offset":319169},"end":{"line":10900,"column":232,"offset":319267},"indent":[]}}],"position":{"start":{"line":10900,"column":1,"offset":319036},"end":{"line":10900,"column":232,"offset":319267},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An example gatsby-node.js file that implements two APIs, ","position":{"start":{"line":10902,"column":1,"offset":319271},"end":{"line":10902,"column":58,"offset":319328},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">onPostBuild</code>","position":{"start":{"line":10902,"column":58,"offset":319328},"end":{"line":10902,"column":71,"offset":319341},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":10902,"column":71,"offset":319341},"end":{"line":10902,"column":77,"offset":319347},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createPages</code>","position":{"start":{"line":10902,"column":77,"offset":319347},"end":{"line":10902,"column":90,"offset":319360},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":10902,"column":90,"offset":319360},"end":{"line":10902,"column":91,"offset":319361},"indent":[]}}],"position":{"start":{"line":10902,"column":1,"offset":319271},"end":{"line":10902,"column":91,"offset":319361},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"gatsby-node.js","position":{"start":{"line":10904,"column":3,"offset":319367},"end":{"line":10904,"column":17,"offset":319381},"indent":[]}}],"position":{"start":{"line":10904,"column":3,"offset":319367},"end":{"line":10904,"column":17,"offset":319381},"indent":[]}}],"position":{"start":{"line":10904,"column":1,"offset":319365},"end":{"line":10904,"column":17,"offset":319381},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n\nCopygatsby<span class=\"token operator\">-</span>node<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span> copy code to clipboard<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nconst path =  require(</span><span class=\"token template-punctuation string\">`</span></span>path<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">)\n\n// Log out information after a build is done\n\nexports.onPostBuild  =  ({ reporter })  =>  {\n\n reporter.info(</span><span class=\"token template-punctuation string\">`</span></span>Your Gatsby site has been built<span class=\"token operator\">!</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">)\n\n}\n\n// Create blog pages dynamically\n\nexports.createPages  =  async  ({ graphql, actions })  =>  {\n\n  const  { createPage }  = actions\n\n  const blogPostTemplate = path.resolve(</span><span class=\"token template-punctuation string\">`</span></span>src<span class=\"token operator\">/</span>templates<span class=\"token operator\">/</span>blog<span class=\"token operator\">-</span>post<span class=\"token punctuation\">.</span>js<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">)\n\n  const result =  await  graphql(</span><span class=\"token template-punctuation string\">`</span></span>\n\n query <span class=\"token punctuation\">{</span>\n\n allSamplePages <span class=\"token punctuation\">{</span>\n\n edges <span class=\"token punctuation\">{</span>\n\n node <span class=\"token punctuation\">{</span>\n\n slug\n\n title\n\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token punctuation\">}</span>\n\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">)\n\n result.data.allSamplePages.edges.forEach(edge  =>  {\n\n  createPage({\n\n path:  </span><span class=\"token template-punctuation string\">`</span></span>$<span class=\"token punctuation\">{</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">,</span>\n\n <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> blogPostTemplate<span class=\"token punctuation\">,</span>\n\n <span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">{</span>\n\n <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":10906,"column":1,"offset":319385},"end":{"line":10973,"column":4,"offset":320206},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#async-vs-sync-work","children":[],"position":{"start":{"line":10975,"column":4,"offset":320213},"end":{"line":10975,"column":92,"offset":320301},"indent":[]}},{"type":"text","value":"Async vs. sync work","position":{"start":{"line":10975,"column":92,"offset":320301},"end":{"line":10975,"column":111,"offset":320320},"indent":[]}}],"position":{"start":{"line":10975,"column":1,"offset":320210},"end":{"line":10975,"column":111,"offset":320320},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If your plugin performs async operations (disk I/O, database access, calling remote APIs, etc.) you must either return a promise (explicitly using ","position":{"start":{"line":10977,"column":1,"offset":320324},"end":{"line":10977,"column":148,"offset":320471},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Promise</code>","position":{"start":{"line":10977,"column":148,"offset":320471},"end":{"line":10977,"column":157,"offset":320480},"indent":[]}},{"type":"text","value":" API or implicitly using ","position":{"start":{"line":10977,"column":157,"offset":320480},"end":{"line":10977,"column":182,"offset":320505},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">async</code>","position":{"start":{"line":10977,"column":182,"offset":320505},"end":{"line":10977,"column":189,"offset":320512},"indent":[]}},{"type":"text","value":"/","position":{"start":{"line":10977,"column":189,"offset":320512},"end":{"line":10977,"column":190,"offset":320513},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">await</code>","position":{"start":{"line":10977,"column":190,"offset":320513},"end":{"line":10977,"column":197,"offset":320520},"indent":[]}},{"type":"text","value":" syntax) or use the callback passed to the 3rd argument. Gatsby needs to know when plugins are finished as some APIs, to work correctly, require previous APIs to be complete first. See ","position":{"start":{"line":10977,"column":197,"offset":320520},"end":{"line":10977,"column":382,"offset":320705},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/debugging-async-lifecycles/","children":[{"type":"text","value":"Debugging Async Lifecycles","position":{"start":{"line":10977,"column":383,"offset":320706},"end":{"line":10977,"column":409,"offset":320732},"indent":[]}}],"position":{"start":{"line":10977,"column":382,"offset":320705},"end":{"line":10977,"column":469,"offset":320792},"indent":[]}},{"type":"text","value":" for more info.","position":{"start":{"line":10977,"column":469,"offset":320792},"end":{"line":10977,"column":484,"offset":320807},"indent":[]}}],"position":{"start":{"line":10977,"column":1,"offset":320324},"end":{"line":10977,"column":484,"offset":320807},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// Async/await","position":{"start":{"line":10979,"column":1,"offset":320811},"end":{"line":10979,"column":15,"offset":320825},"indent":[]}}],"position":{"start":{"line":10979,"column":1,"offset":320811},"end":{"line":10979,"column":15,"offset":320825},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do async work</span>\n\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchExternalData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Promise API</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// do async work</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Callback API</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> pluginOptions<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do async work</span>\n\n    <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":10981,"column":1,"offset":320829},"end":{"line":11004,"column":4,"offset":321203},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If your plugin does not do async work, you can return directly.","position":{"start":{"line":11006,"column":1,"offset":321207},"end":{"line":11006,"column":64,"offset":321270},"indent":[]}}],"position":{"start":{"line":11006,"column":1,"offset":321207},"end":{"line":11006,"column":64,"offset":321270},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"APIs","position":{"start":{"line":11008,"column":4,"offset":321277},"end":{"line":11008,"column":8,"offset":321281},"indent":[]}}],"position":{"start":{"line":11008,"column":1,"offset":321274},"end":{"line":11008,"column":8,"offset":321281},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11010,"column":1,"offset":321285},"end":{"line":11010,"column":4,"offset":321288},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#createPages","children":[{"type":"html","value":"<code class=\"language-text\">createPages</code>","position":{"start":{"line":11012,"column":2,"offset":321293},"end":{"line":11012,"column":15,"offset":321306},"indent":[]}}],"position":{"start":{"line":11012,"column":1,"offset":321292},"end":{"line":11012,"column":95,"offset":321386},"indent":[]}}],"position":{"start":{"line":11012,"column":1,"offset":321292},"end":{"line":11012,"column":95,"offset":321386},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create pages dynamically. This extension point is called only after the initial sourcing and transformation of nodes plus creation of the GraphQL schema are complete so you can query your data in order to create pages.","position":{"start":{"line":11014,"column":1,"offset":321390},"end":{"line":11014,"column":219,"offset":321608},"indent":[]}}],"position":{"start":{"line":11014,"column":1,"offset":321390},"end":{"line":11014,"column":219,"offset":321608},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can also fetch data from remote or local sources to create pages.","position":{"start":{"line":11016,"column":1,"offset":321612},"end":{"line":11016,"column":70,"offset":321681},"indent":[]}}],"position":{"start":{"line":11016,"column":1,"offset":321612},"end":{"line":11016,"column":70,"offset":321681},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See also ","position":{"start":{"line":11018,"column":1,"offset":321685},"end":{"line":11018,"column":10,"offset":321694},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#createPage","children":[{"type":"text","value":"the documentation for the action ","position":{"start":{"line":11018,"column":11,"offset":321695},"end":{"line":11018,"column":44,"offset":321728},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createPage</code>","position":{"start":{"line":11018,"column":44,"offset":321728},"end":{"line":11018,"column":56,"offset":321740},"indent":[]}}],"position":{"start":{"line":11018,"column":10,"offset":321694},"end":{"line":11018,"column":108,"offset":321792},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11018,"column":108,"offset":321792},"end":{"line":11018,"column":109,"offset":321793},"indent":[]}}],"position":{"start":{"line":11018,"column":1,"offset":321685},"end":{"line":11018,"column":109,"offset":321793},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11020,"column":6,"offset":321802},"end":{"line":11020,"column":16,"offset":321812},"indent":[]}}],"position":{"start":{"line":11020,"column":1,"offset":321797},"end":{"line":11020,"column":16,"offset":321812},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11022,"column":5,"offset":321820},"end":{"line":11022,"column":10,"offset":321825},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11024,"column":5,"offset":321833},"end":{"line":11024,"column":24,"offset":321852},"indent":[]}}],"position":{"start":{"line":11024,"column":5,"offset":321833},"end":{"line":11024,"column":24,"offset":321852},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See the ","position":{"start":{"line":11026,"column":5,"offset":321860},"end":{"line":11026,"column":13,"offset":321868},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/node-api-helpers","children":[{"type":"text","value":"documentation for ","position":{"start":{"line":11026,"column":14,"offset":321869},"end":{"line":11026,"column":32,"offset":321887},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Node API Helpers</code>","position":{"start":{"line":11026,"column":32,"offset":321887},"end":{"line":11026,"column":50,"offset":321905},"indent":[]}},{"type":"text","value":" for more details","position":{"start":{"line":11026,"column":50,"offset":321905},"end":{"line":11026,"column":67,"offset":321922},"indent":[]}}],"position":{"start":{"line":11026,"column":13,"offset":321868},"end":{"line":11026,"column":116,"offset":321971},"indent":[]}}],"position":{"start":{"line":11026,"column":5,"offset":321860},"end":{"line":11026,"column":116,"offset":321971},"indent":[]}}],"position":{"start":{"line":11022,"column":1,"offset":321816},"end":{"line":11027,"column":1,"offset":321973},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11028,"column":5,"offset":321979},"end":{"line":11028,"column":11,"offset":321985},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `actions` Actions\n\n    See the [list of documented actions](https://www.gatsbyjs.com/docs/actions)</code></pre></div>","position":{"start":{"line":11030,"column":5,"offset":321993},"end":{"line":11032,"column":88,"offset":322109},"indent":[1,5]}}],"position":{"start":{"line":11028,"column":1,"offset":321975},"end":{"line":11033,"column":1,"offset":322111},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11034,"column":5,"offset":322117},"end":{"line":11034,"column":11,"offset":322123},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">        `createPage` function\n\n        [Documentation for this action](https://www.gatsbyjs.com/docs/actions/#createPage)</code></pre></div>","position":{"start":{"line":11036,"column":5,"offset":322131},"end":{"line":11038,"column":99,"offset":322266},"indent":[1,5]}}],"position":{"start":{"line":11034,"column":1,"offset":322113},"end":{"line":11039,"column":1,"offset":322268},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11040,"column":5,"offset":322274},"end":{"line":11040,"column":11,"offset":322280},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `graphql` function\n\n    : Query GraphQL API. See [examples here](https://www.gatsbyjs.com/docs/creating-and-modifying-pages/#creating-pages-in-gatsby-nodejs)</code></pre></div>","position":{"start":{"line":11042,"column":5,"offset":322288},"end":{"line":11044,"column":146,"offset":322463},"indent":[1,5]}}],"position":{"start":{"line":11040,"column":1,"offset":322270},"end":{"line":11045,"column":1,"offset":322465},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11046,"column":5,"offset":322471},"end":{"line":11046,"column":11,"offset":322477},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `reporter` GatsbyReporter\n\n    Log issues. See [GatsbyReporter documentation](https://www.gatsbyjs.com/docs/node-api-helpers/#GatsbyReporter) for more details</code></pre></div>","position":{"start":{"line":11048,"column":5,"offset":322485},"end":{"line":11050,"column":140,"offset":322661},"indent":[1,5]}}],"position":{"start":{"line":11046,"column":1,"offset":322467},"end":{"line":11050,"column":140,"offset":322661},"indent":[1,1,1,1]}}],"position":{"start":{"line":11022,"column":1,"offset":321816},"end":{"line":11050,"column":140,"offset":322661},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Return value","position":{"start":{"line":11052,"column":6,"offset":322670},"end":{"line":11052,"column":18,"offset":322682},"indent":[]}}],"position":{"start":{"line":11052,"column":1,"offset":322665},"end":{"line":11052,"column":18,"offset":322682},"indent":[]}},{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11054,"column":1,"offset":322686},"end":{"line":11054,"column":6,"offset":322691},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Promise","position":{"start":{"line":11056,"column":1,"offset":322695},"end":{"line":11056,"column":8,"offset":322702},"indent":[]}},{"type":"html","value":"<void>","position":{"start":{"line":11056,"column":8,"offset":322702},"end":{"line":11056,"column":14,"offset":322708},"indent":[]}}],"position":{"start":{"line":11056,"column":1,"offset":322695},"end":{"line":11056,"column":14,"offset":322708},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"No return value required, but the caller will ","position":{"start":{"line":11058,"column":1,"offset":322712},"end":{"line":11058,"column":47,"offset":322758},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">await</code>","position":{"start":{"line":11058,"column":47,"offset":322758},"end":{"line":11058,"column":54,"offset":322765},"indent":[]}},{"type":"text","value":" any promise that's returned","position":{"start":{"line":11058,"column":54,"offset":322765},"end":{"line":11058,"column":82,"offset":322793},"indent":[]}}],"position":{"start":{"line":11058,"column":1,"offset":322712},"end":{"line":11058,"column":82,"offset":322793},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11060,"column":6,"offset":322802},"end":{"line":11060,"column":13,"offset":322809},"indent":[]}}],"position":{"start":{"line":11060,"column":1,"offset":322797},"end":{"line":11060,"column":13,"offset":322809},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">path</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> blogPostTemplate <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">src/templates/blog-post.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Query for markdown nodes to use in creating pages.</span>\n\n    <span class=\"token comment\">// You can query for whatever data you want to create pages for e.g.</span>\n\n    <span class=\"token comment\">// products, portfolio items, landing pages, etc.</span>\n\n    <span class=\"token comment\">// Variables can be added as the second function parameter</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n            query loadPagesQuery($limit: Int!) {\n                allMarkdownRemark(limit: $limit) {\n                    edges {\n                        node {\n                            frontmatter {\n                                slug\n                            }\n                        }\n                    }\n                }\n            }\n        </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">limit</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// Create blog post pages.</span>\n\n        result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">edge</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// Path for this page --- required</span>\n\n                <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>slug<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> blogPostTemplate<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token comment\">// Add optional context data to be inserted</span>\n                    <span class=\"token comment\">// as props into the page component.</span>\n                    <span class=\"token comment\">//</span>\n                    <span class=\"token comment\">// The context data can also be used as</span>\n                    <span class=\"token comment\">// arguments to the page GraphQL query.</span>\n                    <span class=\"token comment\">//</span>\n                    <span class=\"token comment\">// The page \"path\" is always available as a GraphQL</span>\n                    <span class=\"token comment\">// argument.</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11062,"column":1,"offset":322813},"end":{"line":11124,"column":4,"offset":324598},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11126,"column":1,"offset":324602},"end":{"line":11126,"column":4,"offset":324605},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11128,"column":1,"offset":324609},"end":{"line":11128,"column":4,"offset":324612},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#createPagesStatefully","children":[{"type":"html","value":"<code class=\"language-text\">createPagesStatefully</code>","position":{"start":{"line":11130,"column":2,"offset":324617},"end":{"line":11130,"column":25,"offset":324640},"indent":[]}}],"position":{"start":{"line":11130,"column":1,"offset":324616},"end":{"line":11130,"column":115,"offset":324730},"indent":[]}}],"position":{"start":{"line":11130,"column":1,"offset":324616},"end":{"line":11130,"column":115,"offset":324730},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Like ","position":{"start":{"line":11132,"column":1,"offset":324734},"end":{"line":11132,"column":6,"offset":324739},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createPages</code>","position":{"start":{"line":11132,"column":6,"offset":324739},"end":{"line":11132,"column":19,"offset":324752},"indent":[]}},{"type":"text","value":" but for plugins who want to manage creating and removing pages themselves in response to changes in data ","position":{"start":{"line":11132,"column":19,"offset":324752},"end":{"line":11132,"column":125,"offset":324858},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":11132,"column":126,"offset":324859},"end":{"line":11132,"column":129,"offset":324862},"indent":[]}}],"position":{"start":{"line":11132,"column":125,"offset":324858},"end":{"line":11132,"column":130,"offset":324863},"indent":[]}},{"type":"text","value":" managed by Gatsby. Plugins implementing ","position":{"start":{"line":11132,"column":130,"offset":324863},"end":{"line":11132,"column":171,"offset":324904},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createPages</code>","position":{"start":{"line":11132,"column":171,"offset":324904},"end":{"line":11132,"column":184,"offset":324917},"indent":[]}},{"type":"text","value":" will get called regularly to recompute page information as Gatsby's data changes but those implementing ","position":{"start":{"line":11132,"column":184,"offset":324917},"end":{"line":11132,"column":289,"offset":325022},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createPagesStatefully</code>","position":{"start":{"line":11132,"column":289,"offset":325022},"end":{"line":11132,"column":312,"offset":325045},"indent":[]}},{"type":"text","value":" will not.","position":{"start":{"line":11132,"column":312,"offset":325045},"end":{"line":11132,"column":322,"offset":325055},"indent":[]}}],"position":{"start":{"line":11132,"column":1,"offset":324734},"end":{"line":11132,"column":322,"offset":325055},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An example of a plugin that uses this extension point is the plugin ","position":{"start":{"line":11134,"column":1,"offset":325059},"end":{"line":11134,"column":69,"offset":325127},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-page-creator","children":[{"type":"text","value":"gatsby-plugin-page-creator","position":{"start":{"line":11134,"column":70,"offset":325128},"end":{"line":11134,"column":96,"offset":325154},"indent":[]}}],"position":{"start":{"line":11134,"column":69,"offset":325127},"end":{"line":11134,"column":181,"offset":325239},"indent":[]}},{"type":"text","value":" which monitors the ","position":{"start":{"line":11134,"column":181,"offset":325239},"end":{"line":11134,"column":201,"offset":325259},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">src/pages</code>","position":{"start":{"line":11134,"column":201,"offset":325259},"end":{"line":11134,"column":212,"offset":325270},"indent":[]}},{"type":"text","value":" directory for the adding and removal of JS pages. As its source of truth, files in the pages directory, is not known by Gatsby, it needs to keep its own state about its world to know when to add and remove pages.","position":{"start":{"line":11134,"column":212,"offset":325270},"end":{"line":11134,"column":425,"offset":325483},"indent":[]}}],"position":{"start":{"line":11134,"column":1,"offset":325059},"end":{"line":11134,"column":425,"offset":325483},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11136,"column":1,"offset":325487},"end":{"line":11136,"column":4,"offset":325490},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11138,"column":1,"offset":325494},"end":{"line":11138,"column":4,"offset":325497},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#createResolvers","children":[{"type":"html","value":"<code class=\"language-text\">createResolvers</code>","position":{"start":{"line":11140,"column":2,"offset":325502},"end":{"line":11140,"column":19,"offset":325519},"indent":[]}}],"position":{"start":{"line":11140,"column":1,"offset":325501},"end":{"line":11140,"column":103,"offset":325603},"indent":[]}}],"position":{"start":{"line":11140,"column":1,"offset":325501},"end":{"line":11140,"column":103,"offset":325603},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/schema.js#L985-L990","children":[{"type":"text","value":"Source","position":{"start":{"line":11142,"column":2,"offset":325608},"end":{"line":11142,"column":8,"offset":325614},"indent":[]}}],"position":{"start":{"line":11142,"column":1,"offset":325607},"end":{"line":11142,"column":104,"offset":325710},"indent":[]}}],"position":{"start":{"line":11142,"column":1,"offset":325607},"end":{"line":11142,"column":104,"offset":325710},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add custom field resolvers to the GraphQL schema.","position":{"start":{"line":11144,"column":1,"offset":325714},"end":{"line":11144,"column":50,"offset":325763},"indent":[]}}],"position":{"start":{"line":11144,"column":1,"offset":325714},"end":{"line":11144,"column":50,"offset":325763},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Allows adding new fields to types by providing field configs, or adding resolver functions to existing fields.","position":{"start":{"line":11146,"column":1,"offset":325767},"end":{"line":11146,"column":111,"offset":325877},"indent":[]}}],"position":{"start":{"line":11146,"column":1,"offset":325767},"end":{"line":11146,"column":111,"offset":325877},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Things to note:","position":{"start":{"line":11148,"column":1,"offset":325881},"end":{"line":11148,"column":16,"offset":325896},"indent":[]}}],"position":{"start":{"line":11148,"column":1,"offset":325881},"end":{"line":11148,"column":16,"offset":325896},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Overriding field types is disallowed, instead use the ","position":{"start":{"line":11150,"column":5,"offset":325904},"end":{"line":11150,"column":59,"offset":325958},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createTypes</code>","position":{"start":{"line":11150,"column":59,"offset":325958},"end":{"line":11150,"column":72,"offset":325971},"indent":[]}},{"type":"text","value":" action. In case of types added from third-party schemas, where this is not possible, overriding field types is allowed.","position":{"start":{"line":11150,"column":72,"offset":325971},"end":{"line":11150,"column":192,"offset":326091},"indent":[]}}],"position":{"start":{"line":11150,"column":5,"offset":325904},"end":{"line":11150,"column":192,"offset":326091},"indent":[]}}],"position":{"start":{"line":11150,"column":1,"offset":325900},"end":{"line":11151,"column":1,"offset":326093},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"New fields will not be available on ","position":{"start":{"line":11152,"column":5,"offset":326099},"end":{"line":11152,"column":41,"offset":326135},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">filter</code>","position":{"start":{"line":11152,"column":41,"offset":326135},"end":{"line":11152,"column":49,"offset":326143},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":11152,"column":49,"offset":326143},"end":{"line":11152,"column":54,"offset":326148},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sort</code>","position":{"start":{"line":11152,"column":54,"offset":326148},"end":{"line":11152,"column":60,"offset":326154},"indent":[]}},{"type":"text","value":" input types. Extend types defined with ","position":{"start":{"line":11152,"column":60,"offset":326154},"end":{"line":11152,"column":100,"offset":326194},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createTypes</code>","position":{"start":{"line":11152,"column":100,"offset":326194},"end":{"line":11152,"column":113,"offset":326207},"indent":[]}},{"type":"text","value":" if you need this.","position":{"start":{"line":11152,"column":113,"offset":326207},"end":{"line":11152,"column":131,"offset":326225},"indent":[]}}],"position":{"start":{"line":11152,"column":5,"offset":326099},"end":{"line":11152,"column":131,"offset":326225},"indent":[]}}],"position":{"start":{"line":11152,"column":1,"offset":326095},"end":{"line":11153,"column":1,"offset":326227},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In field configs, types can be referenced as strings.","position":{"start":{"line":11154,"column":5,"offset":326233},"end":{"line":11154,"column":58,"offset":326286},"indent":[]}}],"position":{"start":{"line":11154,"column":5,"offset":326233},"end":{"line":11154,"column":58,"offset":326286},"indent":[]}}],"position":{"start":{"line":11154,"column":1,"offset":326229},"end":{"line":11155,"column":1,"offset":326288},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When extending a field with an existing field resolver, the original resolver function is available from ","position":{"start":{"line":11156,"column":5,"offset":326294},"end":{"line":11156,"column":110,"offset":326399},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">info.originalResolver</code>","position":{"start":{"line":11156,"column":110,"offset":326399},"end":{"line":11156,"column":133,"offset":326422},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11156,"column":133,"offset":326422},"end":{"line":11156,"column":134,"offset":326423},"indent":[]}}],"position":{"start":{"line":11156,"column":5,"offset":326294},"end":{"line":11156,"column":134,"offset":326423},"indent":[]}}],"position":{"start":{"line":11156,"column":1,"offset":326290},"end":{"line":11157,"column":1,"offset":326425},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":11158,"column":5,"offset":326431},"end":{"line":11158,"column":9,"offset":326435},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createResolvers</code>","position":{"start":{"line":11158,"column":9,"offset":326435},"end":{"line":11158,"column":26,"offset":326452},"indent":[]}},{"type":"text","value":" API is called as the last step in schema generation. Thus, an intermediate schema is made available on the ","position":{"start":{"line":11158,"column":26,"offset":326452},"end":{"line":11158,"column":134,"offset":326560},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">intermediateSchema</code>","position":{"start":{"line":11158,"column":134,"offset":326560},"end":{"line":11158,"column":154,"offset":326580},"indent":[]}},{"type":"text","value":" property. In resolver functions themselves, it is recommended to access the final built schema from ","position":{"start":{"line":11158,"column":154,"offset":326580},"end":{"line":11158,"column":255,"offset":326681},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">info.schema</code>","position":{"start":{"line":11158,"column":255,"offset":326681},"end":{"line":11158,"column":268,"offset":326694},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11158,"column":268,"offset":326694},"end":{"line":11158,"column":269,"offset":326695},"indent":[]}}],"position":{"start":{"line":11158,"column":5,"offset":326431},"end":{"line":11158,"column":269,"offset":326695},"indent":[]}}],"position":{"start":{"line":11158,"column":1,"offset":326427},"end":{"line":11159,"column":1,"offset":326697},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Gatsby's data layer, including all internal query capabilities, is exposed on ","position":{"start":{"line":11160,"column":5,"offset":326703},"end":{"line":11160,"column":83,"offset":326781},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/node-model/","children":[{"type":"html","value":"<code class=\"language-text\">context.nodeModel</code>","position":{"start":{"line":11160,"column":84,"offset":326782},"end":{"line":11160,"column":103,"offset":326801},"indent":[]}}],"position":{"start":{"line":11160,"column":83,"offset":326781},"end":{"line":11160,"column":147,"offset":326845},"indent":[]}},{"type":"text","value":". The node store can be queried directly with ","position":{"start":{"line":11160,"column":147,"offset":326845},"end":{"line":11160,"column":193,"offset":326891},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">getAllNodes</code>","position":{"start":{"line":11160,"column":193,"offset":326891},"end":{"line":11160,"column":206,"offset":326904},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":11160,"column":206,"offset":326904},"end":{"line":11160,"column":208,"offset":326906},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">getNodeById</code>","position":{"start":{"line":11160,"column":208,"offset":326906},"end":{"line":11160,"column":221,"offset":326919},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":11160,"column":221,"offset":326919},"end":{"line":11160,"column":226,"offset":326924},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">getNodesByIds</code>","position":{"start":{"line":11160,"column":226,"offset":326924},"end":{"line":11160,"column":241,"offset":326939},"indent":[]}},{"type":"text","value":", while more advanced queries can be composed with ","position":{"start":{"line":11160,"column":241,"offset":326939},"end":{"line":11160,"column":292,"offset":326990},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">runQuery</code>","position":{"start":{"line":11160,"column":292,"offset":326990},"end":{"line":11160,"column":302,"offset":327000},"indent":[]}},{"type":"text","value":". Note that ","position":{"start":{"line":11160,"column":302,"offset":327000},"end":{"line":11160,"column":314,"offset":327012},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">runQuery</code>","position":{"start":{"line":11160,"column":314,"offset":327012},"end":{"line":11160,"column":324,"offset":327022},"indent":[]}},{"type":"text","value":" will call field resolvers before querying, so e.g. foreign-key fields will be expanded to full nodes. The other methods on ","position":{"start":{"line":11160,"column":324,"offset":327022},"end":{"line":11160,"column":448,"offset":327146},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nodeModel</code>","position":{"start":{"line":11160,"column":448,"offset":327146},"end":{"line":11160,"column":459,"offset":327157},"indent":[]}},{"type":"text","value":" don't do this.","position":{"start":{"line":11160,"column":459,"offset":327157},"end":{"line":11160,"column":474,"offset":327172},"indent":[]}}],"position":{"start":{"line":11160,"column":5,"offset":326703},"end":{"line":11160,"column":474,"offset":327172},"indent":[]}}],"position":{"start":{"line":11160,"column":1,"offset":326699},"end":{"line":11161,"column":1,"offset":327174},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It is possible to add fields to the root ","position":{"start":{"line":11162,"column":5,"offset":327180},"end":{"line":11162,"column":46,"offset":327221},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":11162,"column":46,"offset":327221},"end":{"line":11162,"column":53,"offset":327228},"indent":[]}},{"type":"text","value":" type.","position":{"start":{"line":11162,"column":53,"offset":327228},"end":{"line":11162,"column":59,"offset":327234},"indent":[]}}],"position":{"start":{"line":11162,"column":5,"offset":327180},"end":{"line":11162,"column":59,"offset":327234},"indent":[]}}],"position":{"start":{"line":11162,"column":1,"offset":327176},"end":{"line":11163,"column":1,"offset":327236},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When using the first resolver argument (","position":{"start":{"line":11164,"column":5,"offset":327242},"end":{"line":11164,"column":45,"offset":327282},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">source</code>","position":{"start":{"line":11164,"column":45,"offset":327282},"end":{"line":11164,"column":53,"offset":327290},"indent":[]}},{"type":"text","value":" in the example below, often also called ","position":{"start":{"line":11164,"column":53,"offset":327290},"end":{"line":11164,"column":94,"offset":327331},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">parent</code>","position":{"start":{"line":11164,"column":94,"offset":327331},"end":{"line":11164,"column":102,"offset":327339},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":11164,"column":102,"offset":327339},"end":{"line":11164,"column":106,"offset":327343},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">root</code>","position":{"start":{"line":11164,"column":106,"offset":327343},"end":{"line":11164,"column":112,"offset":327349},"indent":[]}},{"type":"text","value":"), take care of the fact that field resolvers can be called more than once in a query, e.g. when the field is present both in the input filter and in the selection set. This means that foreign-key fields on ","position":{"start":{"line":11164,"column":112,"offset":327349},"end":{"line":11164,"column":319,"offset":327556},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">source</code>","position":{"start":{"line":11164,"column":319,"offset":327556},"end":{"line":11164,"column":327,"offset":327564},"indent":[]}},{"type":"text","value":" can be either resolved or not-resolved.","position":{"start":{"line":11164,"column":327,"offset":327564},"end":{"line":11164,"column":367,"offset":327604},"indent":[]}}],"position":{"start":{"line":11164,"column":5,"offset":327242},"end":{"line":11164,"column":367,"offset":327604},"indent":[]}}],"position":{"start":{"line":11164,"column":1,"offset":327238},"end":{"line":11164,"column":367,"offset":327604},"indent":[]}}],"position":{"start":{"line":11150,"column":1,"offset":325900},"end":{"line":11164,"column":367,"offset":327604},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For fuller examples, see ","position":{"start":{"line":11166,"column":1,"offset":327608},"end":{"line":11166,"column":26,"offset":327633},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-type-definitions","children":[{"type":"html","value":"<code class=\"language-text\">using-type-definitions</code>","position":{"start":{"line":11166,"column":27,"offset":327634},"end":{"line":11166,"column":51,"offset":327658},"indent":[]}}],"position":{"start":{"line":11166,"column":26,"offset":327633},"end":{"line":11166,"column":132,"offset":327739},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11166,"column":132,"offset":327739},"end":{"line":11166,"column":133,"offset":327740},"indent":[]}}],"position":{"start":{"line":11166,"column":1,"offset":327608},"end":{"line":11166,"column":133,"offset":327740},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11168,"column":6,"offset":327749},"end":{"line":11168,"column":16,"offset":327759},"indent":[]}}],"position":{"start":{"line":11168,"column":1,"offset":327744},"end":{"line":11168,"column":16,"offset":327759},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11170,"column":5,"offset":327767},"end":{"line":11170,"column":10,"offset":327772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11172,"column":5,"offset":327780},"end":{"line":11172,"column":24,"offset":327799},"indent":[]}}],"position":{"start":{"line":11172,"column":5,"offset":327780},"end":{"line":11172,"column":24,"offset":327799},"indent":[]}}],"position":{"start":{"line":11170,"column":1,"offset":327763},"end":{"line":11173,"column":1,"offset":327801},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11174,"column":5,"offset":327807},"end":{"line":11174,"column":11,"offset":327813},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `intermediateSchema` GraphQLSchema\n\n    Current GraphQL schema</code></pre></div>","position":{"start":{"line":11176,"column":5,"offset":327821},"end":{"line":11178,"column":35,"offset":327901},"indent":[1,5]}}],"position":{"start":{"line":11174,"column":1,"offset":327803},"end":{"line":11179,"column":1,"offset":327903},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11180,"column":5,"offset":327909},"end":{"line":11180,"column":11,"offset":327915},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `createResolvers` function\n\n    Add custom resolvers to GraphQL field configs</code></pre></div>","position":{"start":{"line":11182,"column":5,"offset":327923},"end":{"line":11184,"column":58,"offset":328018},"indent":[1,5]}}],"position":{"start":{"line":11180,"column":1,"offset":327905},"end":{"line":11185,"column":1,"offset":328020},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11186,"column":5,"offset":328026},"end":{"line":11186,"column":10,"offset":328031},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">$1</code>","position":{"start":{"line":11188,"column":5,"offset":328039},"end":{"line":11188,"column":9,"offset":328043},"indent":[]}},{"type":"text","value":" object","position":{"start":{"line":11188,"column":9,"offset":328043},"end":{"line":11188,"column":16,"offset":328050},"indent":[]}}],"position":{"start":{"line":11188,"column":5,"offset":328039},"end":{"line":11188,"column":16,"offset":328050},"indent":[]}}],"position":{"start":{"line":11186,"column":1,"offset":328022},"end":{"line":11189,"column":1,"offset":328052},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11190,"column":5,"offset":328058},"end":{"line":11190,"column":11,"offset":328064},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `resolvers` object\n\n    An object map of GraphQL type names to custom resolver functions</code></pre></div>","position":{"start":{"line":11192,"column":5,"offset":328072},"end":{"line":11194,"column":77,"offset":328178},"indent":[1,5]}}],"position":{"start":{"line":11190,"column":1,"offset":328054},"end":{"line":11195,"column":1,"offset":328180},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11196,"column":5,"offset":328186},"end":{"line":11196,"column":11,"offset":328192},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `options` object\n\n    Optional createResolvers options</code></pre></div>","position":{"start":{"line":11198,"column":5,"offset":328200},"end":{"line":11200,"column":45,"offset":328272},"indent":[1,5]}}],"position":{"start":{"line":11196,"column":1,"offset":328182},"end":{"line":11201,"column":1,"offset":328274},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11202,"column":5,"offset":328280},"end":{"line":11202,"column":11,"offset":328286},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">        `ignoreNonexistentTypes` object\n\n        Silences the warning when trying to add resolvers for types that don't exist. Useful for optional extensions.</code></pre></div>","position":{"start":{"line":11204,"column":5,"offset":328294},"end":{"line":11206,"column":126,"offset":328466},"indent":[1,5]}}],"position":{"start":{"line":11202,"column":1,"offset":328276},"end":{"line":11206,"column":126,"offset":328466},"indent":[1,1,1,1]}}],"position":{"start":{"line":11170,"column":1,"offset":327763},"end":{"line":11206,"column":126,"offset":328466},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11208,"column":6,"offset":328475},"end":{"line":11208,"column":13,"offset":328482},"indent":[]}}],"position":{"start":{"line":11208,"column":1,"offset":328470},"end":{"line":11208,"column":13,"offset":328482},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createResolvers</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> createResolvers <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">Author</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">fullName</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function-variable function\">resolve</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">source<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> info</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> source<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">+</span> source<span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">Query</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">allRecentPosts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">BlogPost</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">resolve</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">source<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> info</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>nodeModel<span class=\"token punctuation\">.</span><span class=\"token function\">getAllNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">BlogPost</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">const</span> recentPosts <span class=\"token operator\">=</span> posts<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> post<span class=\"token punctuation\">.</span>publishedAt <span class=\"token operator\">></span> Date<span class=\"token punctuation\">.</span><span class=\"token constant\">UTC</span><span class=\"token punctuation\">(</span><span class=\"token number\">2018</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">return</span> recentPosts<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">createResolvers</span><span class=\"token punctuation\">(</span>resolvers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11210,"column":1,"offset":328486},"end":{"line":11239,"column":4,"offset":329276},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11241,"column":1,"offset":329280},"end":{"line":11241,"column":4,"offset":329283},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11243,"column":1,"offset":329287},"end":{"line":11243,"column":4,"offset":329290},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#createSchemaCustomization","children":[{"type":"html","value":"<code class=\"language-text\">createSchemaCustomization</code>","position":{"start":{"line":11245,"column":2,"offset":329295},"end":{"line":11245,"column":29,"offset":329322},"indent":[]}}],"position":{"start":{"line":11245,"column":1,"offset":329294},"end":{"line":11245,"column":123,"offset":329416},"indent":[]}}],"position":{"start":{"line":11245,"column":1,"offset":329294},"end":{"line":11245,"column":123,"offset":329416},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Customize Gatsby's GraphQL schema by creating type definitions, field extensions or adding third-party schemas.","position":{"start":{"line":11247,"column":1,"offset":329420},"end":{"line":11247,"column":112,"offset":329531},"indent":[]}}],"position":{"start":{"line":11247,"column":1,"offset":329420},"end":{"line":11247,"column":112,"offset":329531},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":11249,"column":1,"offset":329535},"end":{"line":11249,"column":5,"offset":329539},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#createTypes","children":[{"type":"html","value":"<code class=\"language-text\">createTypes</code>","position":{"start":{"line":11249,"column":6,"offset":329540},"end":{"line":11249,"column":19,"offset":329553},"indent":[]}}],"position":{"start":{"line":11249,"column":5,"offset":329539},"end":{"line":11249,"column":72,"offset":329606},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":11249,"column":72,"offset":329606},"end":{"line":11249,"column":74,"offset":329608},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#createFieldExtension","children":[{"type":"html","value":"<code class=\"language-text\">createFieldExtension</code>","position":{"start":{"line":11249,"column":75,"offset":329609},"end":{"line":11249,"column":97,"offset":329631},"indent":[]}}],"position":{"start":{"line":11249,"column":74,"offset":329608},"end":{"line":11249,"column":159,"offset":329693},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":11249,"column":159,"offset":329693},"end":{"line":11249,"column":164,"offset":329698},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#addThirdPartySchema","children":[{"type":"html","value":"<code class=\"language-text\">addThirdPartySchema</code>","position":{"start":{"line":11249,"column":165,"offset":329699},"end":{"line":11249,"column":186,"offset":329720},"indent":[]}}],"position":{"start":{"line":11249,"column":164,"offset":329698},"end":{"line":11249,"column":247,"offset":329781},"indent":[]}},{"type":"text","value":" actions are only available in this API. For details on their usage please refer to the actions documentation.","position":{"start":{"line":11249,"column":247,"offset":329781},"end":{"line":11249,"column":357,"offset":329891},"indent":[]}}],"position":{"start":{"line":11249,"column":1,"offset":329535},"end":{"line":11249,"column":357,"offset":329891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This API runs immediately before schema generation. For modifications of the generated schema, e.g. to customize added third-party types, use the ","position":{"start":{"line":11251,"column":1,"offset":329895},"end":{"line":11251,"column":147,"offset":330041},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/node-apis/#createResolvers","children":[{"type":"html","value":"<code class=\"language-text\">createResolvers</code>","position":{"start":{"line":11251,"column":148,"offset":330042},"end":{"line":11251,"column":165,"offset":330059},"indent":[]}}],"position":{"start":{"line":11251,"column":147,"offset":330041},"end":{"line":11251,"column":224,"offset":330118},"indent":[]}},{"type":"text","value":" API.","position":{"start":{"line":11251,"column":224,"offset":330118},"end":{"line":11251,"column":229,"offset":330123},"indent":[]}}],"position":{"start":{"line":11251,"column":1,"offset":329895},"end":{"line":11251,"column":229,"offset":330123},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11253,"column":6,"offset":330132},"end":{"line":11253,"column":16,"offset":330142},"indent":[]}}],"position":{"start":{"line":11253,"column":1,"offset":330127},"end":{"line":11253,"column":16,"offset":330142},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11255,"column":5,"offset":330150},"end":{"line":11255,"column":10,"offset":330155},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11257,"column":5,"offset":330163},"end":{"line":11257,"column":24,"offset":330182},"indent":[]}}],"position":{"start":{"line":11257,"column":5,"offset":330163},"end":{"line":11257,"column":24,"offset":330182},"indent":[]}}],"position":{"start":{"line":11255,"column":1,"offset":330146},"end":{"line":11258,"column":1,"offset":330184},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11259,"column":5,"offset":330190},"end":{"line":11259,"column":11,"offset":330196},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `actions` object</code></pre></div>","position":{"start":{"line":11261,"column":5,"offset":330204},"end":{"line":11261,"column":29,"offset":330228},"indent":[]}}],"position":{"start":{"line":11259,"column":1,"offset":330186},"end":{"line":11262,"column":1,"offset":330230},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11263,"column":5,"offset":330236},"end":{"line":11263,"column":11,"offset":330242},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">        `createTypes` object</code></pre></div>","position":{"start":{"line":11265,"column":5,"offset":330250},"end":{"line":11265,"column":37,"offset":330282},"indent":[]}}],"position":{"start":{"line":11263,"column":1,"offset":330232},"end":{"line":11266,"column":1,"offset":330284},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11267,"column":5,"offset":330290},"end":{"line":11267,"column":11,"offset":330296},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">        `createFieldExtension` object</code></pre></div>","position":{"start":{"line":11269,"column":5,"offset":330304},"end":{"line":11269,"column":46,"offset":330345},"indent":[]}}],"position":{"start":{"line":11267,"column":1,"offset":330286},"end":{"line":11270,"column":1,"offset":330347},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11271,"column":5,"offset":330353},"end":{"line":11271,"column":11,"offset":330359},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">        `addThirdPartySchema` object</code></pre></div>","position":{"start":{"line":11273,"column":5,"offset":330367},"end":{"line":11273,"column":45,"offset":330407},"indent":[]}}],"position":{"start":{"line":11271,"column":1,"offset":330349},"end":{"line":11273,"column":45,"offset":330407},"indent":[1,1]}}],"position":{"start":{"line":11255,"column":1,"offset":330146},"end":{"line":11273,"column":45,"offset":330407},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11275,"column":6,"offset":330416},"end":{"line":11275,"column":13,"offset":330423},"indent":[]}}],"position":{"start":{"line":11275,"column":1,"offset":330411},"end":{"line":11275,"column":13,"offset":330423},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createSchemaCustomization</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createTypes<span class=\"token punctuation\">,</span> createFieldExtension <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">createFieldExtension</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'shout'</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token function-variable function\">extend</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">source<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> info</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">.</span>fieldName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\n    type MarkdownRemark implements Node @dontInfer {\n\n      frontmatter: Frontmatter\n\n    }\n\n    type Frontmatter {\n\n      title: String!\n\n      tagline: String @shout\n\n      date: Date @dateformat\n\n      image: File @fileByRelativePath\n\n    }\n\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">createTypes</span><span class=\"token punctuation\">(</span>typeDefs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11277,"column":1,"offset":330427},"end":{"line":11316,"column":4,"offset":331128},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11318,"column":1,"offset":331132},"end":{"line":11318,"column":4,"offset":331135},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11320,"column":1,"offset":331139},"end":{"line":11320,"column":4,"offset":331142},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onCreateBabelConfig","children":[{"type":"html","value":"<code class=\"language-text\">onCreateBabelConfig</code>","position":{"start":{"line":11322,"column":2,"offset":331147},"end":{"line":11322,"column":23,"offset":331168},"indent":[]}}],"position":{"start":{"line":11322,"column":1,"offset":331146},"end":{"line":11322,"column":111,"offset":331256},"indent":[]}}],"position":{"start":{"line":11322,"column":1,"offset":331146},"end":{"line":11322,"column":111,"offset":331256},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let plugins extend/mutate the site's Babel configuration by calling ","position":{"start":{"line":11324,"column":1,"offset":331260},"end":{"line":11324,"column":69,"offset":331328},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#setBabelPlugin","children":[{"type":"html","value":"<code class=\"language-text\">setBabelPlugin</code>","position":{"start":{"line":11324,"column":70,"offset":331329},"end":{"line":11324,"column":86,"offset":331345},"indent":[]}}],"position":{"start":{"line":11324,"column":69,"offset":331328},"end":{"line":11324,"column":142,"offset":331401},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":11324,"column":142,"offset":331401},"end":{"line":11324,"column":146,"offset":331405},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#setBabelPreset","children":[{"type":"html","value":"<code class=\"language-text\">setBabelPreset</code>","position":{"start":{"line":11324,"column":147,"offset":331406},"end":{"line":11324,"column":163,"offset":331422},"indent":[]}}],"position":{"start":{"line":11324,"column":146,"offset":331405},"end":{"line":11324,"column":219,"offset":331478},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11324,"column":219,"offset":331478},"end":{"line":11324,"column":220,"offset":331479},"indent":[]}}],"position":{"start":{"line":11324,"column":1,"offset":331260},"end":{"line":11324,"column":220,"offset":331479},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11326,"column":6,"offset":331488},"end":{"line":11326,"column":16,"offset":331498},"indent":[]}}],"position":{"start":{"line":11326,"column":1,"offset":331483},"end":{"line":11326,"column":16,"offset":331498},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11328,"column":5,"offset":331506},"end":{"line":11328,"column":10,"offset":331511},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11330,"column":5,"offset":331519},"end":{"line":11330,"column":24,"offset":331538},"indent":[]}}],"position":{"start":{"line":11330,"column":5,"offset":331519},"end":{"line":11330,"column":24,"offset":331538},"indent":[]}}],"position":{"start":{"line":11328,"column":1,"offset":331502},"end":{"line":11331,"column":1,"offset":331540},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11332,"column":5,"offset":331546},"end":{"line":11332,"column":11,"offset":331552},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `stage` string\n\n    The current build stage. One of 'develop', 'develop-html', 'build-javascript', or 'build-html'</code></pre></div>","position":{"start":{"line":11334,"column":5,"offset":331560},"end":{"line":11336,"column":107,"offset":331692},"indent":[1,5]}}],"position":{"start":{"line":11332,"column":1,"offset":331542},"end":{"line":11337,"column":1,"offset":331694},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11338,"column":5,"offset":331700},"end":{"line":11338,"column":11,"offset":331706},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `actions` object</code></pre></div>","position":{"start":{"line":11340,"column":5,"offset":331714},"end":{"line":11340,"column":29,"offset":331738},"indent":[]}}],"position":{"start":{"line":11338,"column":1,"offset":331696},"end":{"line":11341,"column":1,"offset":331740},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11342,"column":5,"offset":331746},"end":{"line":11342,"column":10,"offset":331751},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">options</code>","position":{"start":{"line":11344,"column":5,"offset":331759},"end":{"line":11344,"column":14,"offset":331768},"indent":[]}},{"type":"text","value":" object","position":{"start":{"line":11344,"column":14,"offset":331768},"end":{"line":11344,"column":21,"offset":331775},"indent":[]}}],"position":{"start":{"line":11344,"column":5,"offset":331759},"end":{"line":11344,"column":21,"offset":331775},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Babel configuration","position":{"start":{"line":11346,"column":5,"offset":331783},"end":{"line":11346,"column":28,"offset":331806},"indent":[]}}],"position":{"start":{"line":11346,"column":5,"offset":331783},"end":{"line":11346,"column":28,"offset":331806},"indent":[]}}],"position":{"start":{"line":11342,"column":1,"offset":331742},"end":{"line":11346,"column":28,"offset":331806},"indent":[1,1,1,1]}}],"position":{"start":{"line":11328,"column":1,"offset":331502},"end":{"line":11346,"column":28,"offset":331806},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11348,"column":6,"offset":331815},"end":{"line":11348,"column":13,"offset":331822},"indent":[]}}],"position":{"start":{"line":11348,"column":1,"offset":331810},"end":{"line":11348,"column":13,"offset":331822},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateBabelConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    actions<span class=\"token punctuation\">.</span><span class=\"token function\">setBabelPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">babel-plugin-that-i-like</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11350,"column":1,"offset":331826},"end":{"line":11359,"column":4,"offset":331999},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11361,"column":1,"offset":332003},"end":{"line":11361,"column":4,"offset":332006},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11363,"column":1,"offset":332010},"end":{"line":11363,"column":4,"offset":332013},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onCreateDevServer","children":[{"type":"html","value":"<code class=\"language-text\">onCreateDevServer</code>","position":{"start":{"line":11365,"column":2,"offset":332018},"end":{"line":11365,"column":21,"offset":332037},"indent":[]}}],"position":{"start":{"line":11365,"column":1,"offset":332017},"end":{"line":11365,"column":107,"offset":332123},"indent":[]}}],"position":{"start":{"line":11365,"column":1,"offset":332017},"end":{"line":11365,"column":107,"offset":332123},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run when the ","position":{"start":{"line":11367,"column":1,"offset":332127},"end":{"line":11367,"column":14,"offset":332140},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby develop</code>","position":{"start":{"line":11367,"column":14,"offset":332140},"end":{"line":11367,"column":30,"offset":332156},"indent":[]}},{"type":"text","value":" server is started. It can be used for adding proxies and Express middleware to the server.","position":{"start":{"line":11367,"column":30,"offset":332156},"end":{"line":11367,"column":121,"offset":332247},"indent":[]}}],"position":{"start":{"line":11367,"column":1,"offset":332127},"end":{"line":11367,"column":121,"offset":332247},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11369,"column":6,"offset":332256},"end":{"line":11369,"column":16,"offset":332266},"indent":[]}}],"position":{"start":{"line":11369,"column":1,"offset":332251},"end":{"line":11369,"column":16,"offset":332266},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11371,"column":5,"offset":332274},"end":{"line":11371,"column":10,"offset":332279},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11373,"column":5,"offset":332287},"end":{"line":11373,"column":24,"offset":332306},"indent":[]}}],"position":{"start":{"line":11373,"column":5,"offset":332287},"end":{"line":11373,"column":24,"offset":332306},"indent":[]}}],"position":{"start":{"line":11371,"column":1,"offset":332270},"end":{"line":11374,"column":1,"offset":332308},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11375,"column":5,"offset":332314},"end":{"line":11375,"column":11,"offset":332320},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `app` Express\n\n    The [Express app](https://expressjs.com/en/4x/api.html#app) used to run the dev server</code></pre></div>","position":{"start":{"line":11377,"column":5,"offset":332328},"end":{"line":11379,"column":99,"offset":332451},"indent":[1,5]}}],"position":{"start":{"line":11375,"column":1,"offset":332310},"end":{"line":11379,"column":99,"offset":332451},"indent":[1,1,1,1]}}],"position":{"start":{"line":11371,"column":1,"offset":332270},"end":{"line":11379,"column":99,"offset":332451},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11381,"column":6,"offset":332460},"end":{"line":11381,"column":13,"offset":332467},"indent":[]}}],"position":{"start":{"line":11381,"column":1,"offset":332455},"end":{"line":11381,"column":13,"offset":332467},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateDevServer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> app <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/hello'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11383,"column":1,"offset":332471},"end":{"line":11390,"column":4,"offset":332621},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11392,"column":1,"offset":332625},"end":{"line":11392,"column":4,"offset":332628},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11394,"column":1,"offset":332632},"end":{"line":11394,"column":4,"offset":332635},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onCreateNode","children":[{"type":"html","value":"<code class=\"language-text\">onCreateNode</code>","position":{"start":{"line":11396,"column":2,"offset":332640},"end":{"line":11396,"column":16,"offset":332654},"indent":[]}}],"position":{"start":{"line":11396,"column":1,"offset":332639},"end":{"line":11396,"column":97,"offset":332735},"indent":[]}}],"position":{"start":{"line":11396,"column":1,"offset":332639},"end":{"line":11396,"column":97,"offset":332735},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/redux/actions/public.js#L907-L912","children":[{"type":"text","value":"Source","position":{"start":{"line":11398,"column":2,"offset":332740},"end":{"line":11398,"column":8,"offset":332746},"indent":[]}}],"position":{"start":{"line":11398,"column":1,"offset":332739},"end":{"line":11398,"column":111,"offset":332849},"indent":[]}}],"position":{"start":{"line":11398,"column":1,"offset":332739},"end":{"line":11398,"column":111,"offset":332849},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Called when a new node is created. Plugins wishing to extend or transform nodes created by other plugins should implement this API.","position":{"start":{"line":11400,"column":1,"offset":332853},"end":{"line":11400,"column":132,"offset":332984},"indent":[]}}],"position":{"start":{"line":11400,"column":1,"offset":332853},"end":{"line":11400,"column":132,"offset":332984},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See also the documentation for ","position":{"start":{"line":11402,"column":1,"offset":332988},"end":{"line":11402,"column":32,"offset":333019},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#createNode","children":[{"type":"html","value":"<code class=\"language-text\">createNode</code>","position":{"start":{"line":11402,"column":33,"offset":333020},"end":{"line":11402,"column":45,"offset":333032},"indent":[]}}],"position":{"start":{"line":11402,"column":32,"offset":333019},"end":{"line":11402,"column":97,"offset":333084},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":11402,"column":97,"offset":333084},"end":{"line":11402,"column":102,"offset":333089},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#createNodeField","children":[{"type":"html","value":"<code class=\"language-text\">createNodeField</code>","position":{"start":{"line":11402,"column":103,"offset":333090},"end":{"line":11402,"column":120,"offset":333107},"indent":[]}}],"position":{"start":{"line":11402,"column":102,"offset":333089},"end":{"line":11402,"column":177,"offset":333164},"indent":[]}}],"position":{"start":{"line":11402,"column":1,"offset":332988},"end":{"line":11402,"column":177,"offset":333164},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":11404,"column":1,"offset":333168},"end":{"line":11404,"column":5,"offset":333172},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/how-to/plugins-and-themes/creating-a-source-plugin/","children":[{"type":"text","value":"Creating a Source Plugin","position":{"start":{"line":11404,"column":6,"offset":333173},"end":{"line":11404,"column":30,"offset":333197},"indent":[]}}],"position":{"start":{"line":11404,"column":5,"offset":333172},"end":{"line":11404,"column":114,"offset":333281},"indent":[]}},{"type":"text","value":" tutorial demonstrates a way a plugin or site might use this API.","position":{"start":{"line":11404,"column":114,"offset":333281},"end":{"line":11404,"column":179,"offset":333346},"indent":[]}}],"position":{"start":{"line":11404,"column":1,"offset":333168},"end":{"line":11404,"column":179,"offset":333346},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11406,"column":6,"offset":333355},"end":{"line":11406,"column":13,"offset":333362},"indent":[]}}],"position":{"start":{"line":11406,"column":1,"offset":333350},"end":{"line":11406,"column":13,"offset":333362},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNode<span class=\"token punctuation\">,</span> createNodeField <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Transform the new node here and create a new node or</span>\n\n    <span class=\"token comment\">// create a new node field.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11408,"column":1,"offset":333366},"end":{"line":11417,"column":4,"offset":333585},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11419,"column":1,"offset":333589},"end":{"line":11419,"column":4,"offset":333592},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11421,"column":1,"offset":333596},"end":{"line":11421,"column":4,"offset":333599},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onCreatePage","children":[{"type":"html","value":"<code class=\"language-text\">onCreatePage</code>","position":{"start":{"line":11423,"column":2,"offset":333604},"end":{"line":11423,"column":16,"offset":333618},"indent":[]}}],"position":{"start":{"line":11423,"column":1,"offset":333603},"end":{"line":11423,"column":97,"offset":333699},"indent":[]}}],"position":{"start":{"line":11423,"column":1,"offset":333603},"end":{"line":11423,"column":97,"offset":333699},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Called when a new page is created. This extension API is useful for programmatically manipulating pages created by other plugins e.g. if you want paths without trailing slashes.","position":{"start":{"line":11425,"column":1,"offset":333703},"end":{"line":11425,"column":178,"offset":333880},"indent":[]}}],"position":{"start":{"line":11425,"column":1,"offset":333703},"end":{"line":11425,"column":178,"offset":333880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There is a mechanism in Gatsby to prevent calling onCreatePage for pages created by the same gatsby-node.js to avoid infinite loops/callback.","position":{"start":{"line":11427,"column":1,"offset":333884},"end":{"line":11427,"column":142,"offset":334025},"indent":[]}}],"position":{"start":{"line":11427,"column":1,"offset":333884},"end":{"line":11427,"column":142,"offset":334025},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See the guide ","position":{"start":{"line":11429,"column":1,"offset":334029},"end":{"line":11429,"column":15,"offset":334043},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/creating-and-modifying-pages/","children":[{"type":"text","value":"Creating and Modifying Pages","position":{"start":{"line":11429,"column":16,"offset":334044},"end":{"line":11429,"column":44,"offset":334072},"indent":[]}}],"position":{"start":{"line":11429,"column":15,"offset":334043},"end":{"line":11429,"column":106,"offset":334134},"indent":[]}},{"type":"text","value":" for more on this API.","position":{"start":{"line":11429,"column":106,"offset":334134},"end":{"line":11429,"column":128,"offset":334156},"indent":[]}}],"position":{"start":{"line":11429,"column":1,"offset":334029},"end":{"line":11429,"column":128,"offset":334156},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11431,"column":1,"offset":334160},"end":{"line":11431,"column":4,"offset":334163},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11433,"column":1,"offset":334167},"end":{"line":11433,"column":4,"offset":334170},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onCreateWebpackConfig","children":[{"type":"html","value":"<code class=\"language-text\">onCreateWebpackConfig</code>","position":{"start":{"line":11435,"column":2,"offset":334175},"end":{"line":11435,"column":25,"offset":334198},"indent":[]}}],"position":{"start":{"line":11435,"column":1,"offset":334174},"end":{"line":11435,"column":115,"offset":334288},"indent":[]}}],"position":{"start":{"line":11435,"column":1,"offset":334174},"end":{"line":11435,"column":115,"offset":334288},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/utils/webpack.config.js#L886-L894","children":[{"type":"text","value":"Source","position":{"start":{"line":11437,"column":2,"offset":334293},"end":{"line":11437,"column":8,"offset":334299},"indent":[]}}],"position":{"start":{"line":11437,"column":1,"offset":334292},"end":{"line":11437,"column":111,"offset":334402},"indent":[]}}],"position":{"start":{"line":11437,"column":1,"offset":334292},"end":{"line":11437,"column":111,"offset":334402},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let plugins extend/mutate the site's webpack configuration.","position":{"start":{"line":11439,"column":1,"offset":334406},"end":{"line":11439,"column":60,"offset":334465},"indent":[]}}],"position":{"start":{"line":11439,"column":1,"offset":334406},"end":{"line":11439,"column":60,"offset":334465},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See also the documentation for ","position":{"start":{"line":11441,"column":1,"offset":334469},"end":{"line":11441,"column":32,"offset":334500},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#setWebpackConfig","children":[{"type":"html","value":"<code class=\"language-text\">setWebpackConfig</code>","position":{"start":{"line":11441,"column":33,"offset":334501},"end":{"line":11441,"column":51,"offset":334519},"indent":[]}}],"position":{"start":{"line":11441,"column":32,"offset":334500},"end":{"line":11441,"column":109,"offset":334577},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11441,"column":109,"offset":334577},"end":{"line":11441,"column":110,"offset":334578},"indent":[]}}],"position":{"start":{"line":11441,"column":1,"offset":334469},"end":{"line":11441,"column":110,"offset":334578},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11443,"column":6,"offset":334587},"end":{"line":11443,"column":16,"offset":334597},"indent":[]}}],"position":{"start":{"line":11443,"column":1,"offset":334582},"end":{"line":11443,"column":16,"offset":334597},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11445,"column":5,"offset":334605},"end":{"line":11445,"column":10,"offset":334610},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11447,"column":5,"offset":334618},"end":{"line":11447,"column":24,"offset":334637},"indent":[]}}],"position":{"start":{"line":11447,"column":5,"offset":334618},"end":{"line":11447,"column":24,"offset":334637},"indent":[]}}],"position":{"start":{"line":11445,"column":1,"offset":334601},"end":{"line":11448,"column":1,"offset":334639},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11449,"column":5,"offset":334645},"end":{"line":11449,"column":11,"offset":334651},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `stage` string\n\n    The current build stage. One of 'develop', 'develop-html', 'build-javascript', or 'build-html'</code></pre></div>","position":{"start":{"line":11451,"column":5,"offset":334659},"end":{"line":11453,"column":107,"offset":334791},"indent":[1,5]}}],"position":{"start":{"line":11449,"column":1,"offset":334641},"end":{"line":11454,"column":1,"offset":334793},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11455,"column":5,"offset":334799},"end":{"line":11455,"column":11,"offset":334805},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `getConfig` function\n\n    Returns the current webpack config</code></pre></div>","position":{"start":{"line":11457,"column":5,"offset":334813},"end":{"line":11459,"column":47,"offset":334891},"indent":[1,5]}}],"position":{"start":{"line":11455,"column":1,"offset":334795},"end":{"line":11460,"column":1,"offset":334893},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11461,"column":5,"offset":334899},"end":{"line":11461,"column":11,"offset":334905},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `rules` object\n\n    A set of preconfigured webpack config rules</code></pre></div>","position":{"start":{"line":11463,"column":5,"offset":334913},"end":{"line":11465,"column":56,"offset":334994},"indent":[1,5]}}],"position":{"start":{"line":11461,"column":1,"offset":334895},"end":{"line":11466,"column":1,"offset":334996},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11467,"column":5,"offset":335002},"end":{"line":11467,"column":11,"offset":335008},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `loaders` object\n\n    A set of preconfigured webpack config loaders</code></pre></div>","position":{"start":{"line":11469,"column":5,"offset":335016},"end":{"line":11471,"column":58,"offset":335101},"indent":[1,5]}}],"position":{"start":{"line":11467,"column":1,"offset":334998},"end":{"line":11472,"column":1,"offset":335103},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11473,"column":5,"offset":335109},"end":{"line":11473,"column":11,"offset":335115},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `plugins` object\n\n    A set of preconfigured webpack config plugins</code></pre></div>","position":{"start":{"line":11475,"column":5,"offset":335123},"end":{"line":11477,"column":58,"offset":335208},"indent":[1,5]}}],"position":{"start":{"line":11473,"column":1,"offset":335105},"end":{"line":11478,"column":1,"offset":335210},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11479,"column":5,"offset":335216},"end":{"line":11479,"column":11,"offset":335222},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `actions` object</code></pre></div>","position":{"start":{"line":11481,"column":5,"offset":335230},"end":{"line":11481,"column":29,"offset":335254},"indent":[]}}],"position":{"start":{"line":11479,"column":1,"offset":335212},"end":{"line":11481,"column":29,"offset":335254},"indent":[1,1]}}],"position":{"start":{"line":11445,"column":1,"offset":334601},"end":{"line":11481,"column":29,"offset":335254},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11483,"column":6,"offset":335263},"end":{"line":11483,"column":13,"offset":335270},"indent":[]}}],"position":{"start":{"line":11483,"column":1,"offset":335258},"end":{"line":11483,"column":13,"offset":335270},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateWebpackConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> stage<span class=\"token punctuation\">,</span> getConfig<span class=\"token punctuation\">,</span> rules<span class=\"token punctuation\">,</span> loaders<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    actions<span class=\"token punctuation\">.</span><span class=\"token function\">setWebpackConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token string\">'my-css'</span><span class=\"token punctuation\">,</span>\n\n                    <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>loaders<span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loaders<span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11485,"column":1,"offset":335274},"end":{"line":11500,"column":4,"offset":335622},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11502,"column":1,"offset":335626},"end":{"line":11502,"column":4,"offset":335629},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11504,"column":1,"offset":335633},"end":{"line":11504,"column":4,"offset":335636},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onPluginInit","children":[{"type":"html","value":"<code class=\"language-text\">onPluginInit</code>","position":{"start":{"line":11506,"column":2,"offset":335641},"end":{"line":11506,"column":16,"offset":335655},"indent":[]}}],"position":{"start":{"line":11506,"column":1,"offset":335640},"end":{"line":11506,"column":97,"offset":335736},"indent":[]}}],"position":{"start":{"line":11506,"column":1,"offset":335640},"end":{"line":11506,"column":97,"offset":335736},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Lifecycle executed in each process (one time per process). Used to store actions etc for later use.","position":{"start":{"line":11508,"column":1,"offset":335740},"end":{"line":11508,"column":100,"offset":335839},"indent":[]}}],"position":{"start":{"line":11508,"column":1,"offset":335740},"end":{"line":11508,"column":100,"offset":335839},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11510,"column":6,"offset":335848},"end":{"line":11510,"column":13,"offset":335855},"indent":[]}}],"position":{"start":{"line":11510,"column":1,"offset":335843},"end":{"line":11510,"column":13,"offset":335855},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">let</span> createJobV2<span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onPluginInit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// store job creation action to use it later</span>\n\n    createJobV2 <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">.</span>createJobV2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11512,"column":1,"offset":335859},"end":{"line":11521,"column":4,"offset":336032},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11523,"column":1,"offset":336036},"end":{"line":11523,"column":4,"offset":336039},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11525,"column":1,"offset":336043},"end":{"line":11525,"column":4,"offset":336046},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onPostBootstrap","children":[{"type":"html","value":"<code class=\"language-text\">onPostBootstrap</code>","position":{"start":{"line":11527,"column":2,"offset":336051},"end":{"line":11527,"column":19,"offset":336068},"indent":[]}}],"position":{"start":{"line":11527,"column":1,"offset":336050},"end":{"line":11527,"column":103,"offset":336152},"indent":[]}}],"position":{"start":{"line":11527,"column":1,"offset":336050},"end":{"line":11527,"column":103,"offset":336152},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Called at the end of the bootstrap process after all other extension APIs have been called.","position":{"start":{"line":11529,"column":1,"offset":336156},"end":{"line":11529,"column":92,"offset":336247},"indent":[]}}],"position":{"start":{"line":11529,"column":1,"offset":336156},"end":{"line":11529,"column":92,"offset":336247},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11531,"column":1,"offset":336251},"end":{"line":11531,"column":4,"offset":336254},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11533,"column":1,"offset":336258},"end":{"line":11533,"column":4,"offset":336261},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onPostBuild","children":[{"type":"html","value":"<code class=\"language-text\">onPostBuild</code>","position":{"start":{"line":11535,"column":2,"offset":336266},"end":{"line":11535,"column":15,"offset":336279},"indent":[]}}],"position":{"start":{"line":11535,"column":1,"offset":336265},"end":{"line":11535,"column":95,"offset":336359},"indent":[]}}],"position":{"start":{"line":11535,"column":1,"offset":336265},"end":{"line":11535,"column":95,"offset":336359},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The last extension point called after all other parts of the build process are complete.","position":{"start":{"line":11537,"column":1,"offset":336363},"end":{"line":11537,"column":89,"offset":336451},"indent":[]}}],"position":{"start":{"line":11537,"column":1,"offset":336363},"end":{"line":11537,"column":89,"offset":336451},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11539,"column":1,"offset":336455},"end":{"line":11539,"column":4,"offset":336458},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11541,"column":1,"offset":336462},"end":{"line":11541,"column":4,"offset":336465},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onPreBootstrap","children":[{"type":"html","value":"<code class=\"language-text\">onPreBootstrap</code>","position":{"start":{"line":11543,"column":2,"offset":336470},"end":{"line":11543,"column":18,"offset":336486},"indent":[]}}],"position":{"start":{"line":11543,"column":1,"offset":336469},"end":{"line":11543,"column":101,"offset":336569},"indent":[]}}],"position":{"start":{"line":11543,"column":1,"offset":336469},"end":{"line":11543,"column":101,"offset":336569},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Called once Gatsby has initialized itself and is ready to bootstrap your site.","position":{"start":{"line":11545,"column":1,"offset":336573},"end":{"line":11545,"column":79,"offset":336651},"indent":[]}}],"position":{"start":{"line":11545,"column":1,"offset":336573},"end":{"line":11545,"column":79,"offset":336651},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11547,"column":1,"offset":336655},"end":{"line":11547,"column":4,"offset":336658},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11549,"column":1,"offset":336662},"end":{"line":11549,"column":4,"offset":336665},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onPreBuild","children":[{"type":"html","value":"<code class=\"language-text\">onPreBuild</code>","position":{"start":{"line":11551,"column":2,"offset":336670},"end":{"line":11551,"column":14,"offset":336682},"indent":[]}}],"position":{"start":{"line":11551,"column":1,"offset":336669},"end":{"line":11551,"column":93,"offset":336761},"indent":[]}}],"position":{"start":{"line":11551,"column":1,"offset":336669},"end":{"line":11551,"column":93,"offset":336761},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first extension point called during the build process. Called after the bootstrap has completed but before the build steps start.","position":{"start":{"line":11553,"column":1,"offset":336765},"end":{"line":11553,"column":134,"offset":336898},"indent":[]}}],"position":{"start":{"line":11553,"column":1,"offset":336765},"end":{"line":11553,"column":134,"offset":336898},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11555,"column":1,"offset":336902},"end":{"line":11555,"column":4,"offset":336905},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11557,"column":1,"offset":336909},"end":{"line":11557,"column":4,"offset":336912},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onPreExtractQueries","children":[{"type":"html","value":"<code class=\"language-text\">onPreExtractQueries</code>","position":{"start":{"line":11559,"column":2,"offset":336917},"end":{"line":11559,"column":23,"offset":336938},"indent":[]}}],"position":{"start":{"line":11559,"column":1,"offset":336916},"end":{"line":11559,"column":111,"offset":337026},"indent":[]}}],"position":{"start":{"line":11559,"column":1,"offset":336916},"end":{"line":11559,"column":111,"offset":337026},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run before GraphQL queries/fragments are extracted from JavaScript files. Useful for plugins to add more JavaScript files with queries/fragments e.g. from node_modules.","position":{"start":{"line":11561,"column":1,"offset":337030},"end":{"line":11561,"column":169,"offset":337198},"indent":[]}}],"position":{"start":{"line":11561,"column":1,"offset":337030},"end":{"line":11561,"column":169,"offset":337198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See gatsby-transformer-sharp and gatsby-source-contentful for examples.","position":{"start":{"line":11563,"column":1,"offset":337202},"end":{"line":11563,"column":72,"offset":337273},"indent":[]}}],"position":{"start":{"line":11563,"column":1,"offset":337202},"end":{"line":11563,"column":72,"offset":337273},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11565,"column":1,"offset":337277},"end":{"line":11565,"column":4,"offset":337280},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11567,"column":1,"offset":337284},"end":{"line":11567,"column":4,"offset":337287},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#onPreInit","children":[{"type":"html","value":"<code class=\"language-text\">onPreInit</code>","position":{"start":{"line":11569,"column":2,"offset":337292},"end":{"line":11569,"column":13,"offset":337303},"indent":[]}}],"position":{"start":{"line":11569,"column":1,"offset":337291},"end":{"line":11569,"column":91,"offset":337381},"indent":[]}}],"position":{"start":{"line":11569,"column":1,"offset":337291},"end":{"line":11569,"column":91,"offset":337381},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first API called during Gatsby execution, runs as soon as plugins are loaded, before cache initialization and bootstrap preparation.","position":{"start":{"line":11571,"column":1,"offset":337385},"end":{"line":11571,"column":137,"offset":337521},"indent":[]}}],"position":{"start":{"line":11571,"column":1,"offset":337385},"end":{"line":11571,"column":137,"offset":337521},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11573,"column":1,"offset":337525},"end":{"line":11573,"column":4,"offset":337528},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11575,"column":1,"offset":337532},"end":{"line":11575,"column":4,"offset":337535},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#pluginOptionsSchema","children":[{"type":"html","value":"<code class=\"language-text\">pluginOptionsSchema</code>","position":{"start":{"line":11577,"column":2,"offset":337540},"end":{"line":11577,"column":23,"offset":337561},"indent":[]}}],"position":{"start":{"line":11577,"column":1,"offset":337539},"end":{"line":11577,"column":111,"offset":337649},"indent":[]}}],"position":{"start":{"line":11577,"column":1,"offset":337539},"end":{"line":11577,"column":111,"offset":337649},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run during the bootstrap phase. Plugins can use this to define a schema for their options using ","position":{"start":{"line":11579,"column":1,"offset":337653},"end":{"line":11579,"column":97,"offset":337749},"indent":[]}},{"type":"link","title":null,"url":"https://joi.dev/","children":[{"type":"text","value":"Joi","position":{"start":{"line":11579,"column":98,"offset":337750},"end":{"line":11579,"column":101,"offset":337753},"indent":[]}}],"position":{"start":{"line":11579,"column":97,"offset":337749},"end":{"line":11579,"column":120,"offset":337772},"indent":[]}},{"type":"text","value":" to validate the options users pass to the plugin.","position":{"start":{"line":11579,"column":120,"offset":337772},"end":{"line":11579,"column":170,"offset":337822},"indent":[]}}],"position":{"start":{"line":11579,"column":1,"offset":337653},"end":{"line":11579,"column":170,"offset":337822},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11581,"column":6,"offset":337831},"end":{"line":11581,"column":16,"offset":337841},"indent":[]}}],"position":{"start":{"line":11581,"column":1,"offset":337826},"end":{"line":11581,"column":16,"offset":337841},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11583,"column":5,"offset":337849},"end":{"line":11583,"column":10,"offset":337854},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11585,"column":5,"offset":337862},"end":{"line":11585,"column":24,"offset":337881},"indent":[]}}],"position":{"start":{"line":11585,"column":5,"offset":337862},"end":{"line":11585,"column":24,"offset":337881},"indent":[]}}],"position":{"start":{"line":11583,"column":1,"offset":337845},"end":{"line":11586,"column":1,"offset":337883},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11587,"column":5,"offset":337889},"end":{"line":11587,"column":11,"offset":337895},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `Joi` Joi\n\n    The instance of [Joi](https://joi.dev/) to define the schema</code></pre></div>","position":{"start":{"line":11589,"column":5,"offset":337903},"end":{"line":11591,"column":73,"offset":337996},"indent":[1,5]}}],"position":{"start":{"line":11587,"column":1,"offset":337885},"end":{"line":11591,"column":73,"offset":337996},"indent":[1,1,1,1]}}],"position":{"start":{"line":11583,"column":1,"offset":337845},"end":{"line":11591,"column":73,"offset":337996},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11593,"column":6,"offset":338005},"end":{"line":11593,"column":13,"offset":338012},"indent":[]}}],"position":{"start":{"line":11593,"column":1,"offset":338000},"end":{"line":11593,"column":13,"offset":338012},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">pluginOptionsSchema</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> Joi <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Joi<span class=\"token punctuation\">.</span><span class=\"token function\">object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Validate that the anonymize option is defined by the user and is a boolean</span>\n\n        <span class=\"token literal-property property\">anonymize</span><span class=\"token operator\">:</span> Joi<span class=\"token punctuation\">.</span><span class=\"token function\">boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">required</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11595,"column":1,"offset":338016},"end":{"line":11604,"column":4,"offset":338248},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11606,"column":1,"offset":338252},"end":{"line":11606,"column":4,"offset":338255},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11608,"column":1,"offset":338259},"end":{"line":11608,"column":4,"offset":338262},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#preprocessSource","children":[{"type":"html","value":"<code class=\"language-text\">preprocessSource</code>","position":{"start":{"line":11610,"column":2,"offset":338267},"end":{"line":11610,"column":20,"offset":338285},"indent":[]}}],"position":{"start":{"line":11610,"column":1,"offset":338266},"end":{"line":11610,"column":105,"offset":338370},"indent":[]}}],"position":{"start":{"line":11610,"column":1,"offset":338266},"end":{"line":11610,"column":105,"offset":338370},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ask compile-to-js plugins to process source to JavaScript so the query runner can extract out GraphQL queries for running.","position":{"start":{"line":11612,"column":1,"offset":338374},"end":{"line":11612,"column":123,"offset":338496},"indent":[]}}],"position":{"start":{"line":11612,"column":1,"offset":338374},"end":{"line":11612,"column":123,"offset":338496},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11614,"column":1,"offset":338500},"end":{"line":11614,"column":4,"offset":338503},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11616,"column":1,"offset":338507},"end":{"line":11616,"column":4,"offset":338510},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#resolvableExtensions","children":[{"type":"html","value":"<code class=\"language-text\">resolvableExtensions</code>","position":{"start":{"line":11618,"column":2,"offset":338515},"end":{"line":11618,"column":24,"offset":338537},"indent":[]}}],"position":{"start":{"line":11618,"column":1,"offset":338514},"end":{"line":11618,"column":113,"offset":338626},"indent":[]}}],"position":{"start":{"line":11618,"column":1,"offset":338514},"end":{"line":11618,"column":113,"offset":338626},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Lets plugins implementing support for other compile-to-js add to the list of \"resolvable\" file extensions. Gatsby supports ","position":{"start":{"line":11620,"column":1,"offset":338630},"end":{"line":11620,"column":124,"offset":338753},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">.js</code>","position":{"start":{"line":11620,"column":124,"offset":338753},"end":{"line":11620,"column":129,"offset":338758},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":11620,"column":129,"offset":338758},"end":{"line":11620,"column":134,"offset":338763},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">.jsx</code>","position":{"start":{"line":11620,"column":134,"offset":338763},"end":{"line":11620,"column":140,"offset":338769},"indent":[]}},{"type":"text","value":" by default.","position":{"start":{"line":11620,"column":140,"offset":338769},"end":{"line":11620,"column":152,"offset":338781},"indent":[]}}],"position":{"start":{"line":11620,"column":1,"offset":338630},"end":{"line":11620,"column":152,"offset":338781},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Return value","position":{"start":{"line":11622,"column":6,"offset":338790},"end":{"line":11622,"column":18,"offset":338802},"indent":[]}}],"position":{"start":{"line":11622,"column":1,"offset":338785},"end":{"line":11622,"column":18,"offset":338802},"indent":[]}},{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11624,"column":1,"offset":338806},"end":{"line":11624,"column":6,"offset":338811},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"string[]","position":{"start":{"line":11626,"column":1,"offset":338815},"end":{"line":11626,"column":9,"offset":338823},"indent":[]}}],"position":{"start":{"line":11626,"column":1,"offset":338815},"end":{"line":11626,"column":9,"offset":338823},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"array of extensions","position":{"start":{"line":11628,"column":1,"offset":338827},"end":{"line":11628,"column":20,"offset":338846},"indent":[]}}],"position":{"start":{"line":11628,"column":1,"offset":338827},"end":{"line":11628,"column":20,"offset":338846},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":11630,"column":1,"offset":338850},"end":{"line":11630,"column":4,"offset":338853},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11632,"column":1,"offset":338857},"end":{"line":11632,"column":4,"offset":338860},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#setFieldsOnGraphQLNodeType","children":[{"type":"html","value":"<code class=\"language-text\">setFieldsOnGraphQLNodeType</code>","position":{"start":{"line":11634,"column":2,"offset":338865},"end":{"line":11634,"column":30,"offset":338893},"indent":[]}}],"position":{"start":{"line":11634,"column":1,"offset":338864},"end":{"line":11634,"column":125,"offset":338988},"indent":[]}}],"position":{"start":{"line":11634,"column":1,"offset":338864},"end":{"line":11634,"column":125,"offset":338988},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/schema/schema.js#L767-L777","children":[{"type":"text","value":"Source","position":{"start":{"line":11636,"column":2,"offset":338993},"end":{"line":11636,"column":8,"offset":338999},"indent":[]}}],"position":{"start":{"line":11636,"column":1,"offset":338992},"end":{"line":11636,"column":104,"offset":339095},"indent":[]}}],"position":{"start":{"line":11636,"column":1,"offset":338992},"end":{"line":11636,"column":104,"offset":339095},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Called during the creation of the GraphQL schema. Allows plugins to add new fields to the types created from data nodes. It will be called separately for each type.","position":{"start":{"line":11638,"column":1,"offset":339099},"end":{"line":11638,"column":165,"offset":339263},"indent":[]}}],"position":{"start":{"line":11638,"column":1,"offset":339099},"end":{"line":11638,"column":165,"offset":339263},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function should return an object in the shape of ","position":{"start":{"line":11640,"column":1,"offset":339267},"end":{"line":11640,"column":55,"offset":339321},"indent":[]}},{"type":"link","title":null,"url":"https://graphql.org/graphql-js/type/#graphqlobjecttype","children":[{"type":"text","value":"GraphQLFieldConfigMap","position":{"start":{"line":11640,"column":56,"offset":339322},"end":{"line":11640,"column":77,"offset":339343},"indent":[]}}],"position":{"start":{"line":11640,"column":55,"offset":339321},"end":{"line":11640,"column":134,"offset":339400},"indent":[]}},{"type":"text","value":" which will be appended to fields inferred by Gatsby from data nodes.","position":{"start":{"line":11640,"column":134,"offset":339400},"end":{"line":11640,"column":203,"offset":339469},"indent":[]}}],"position":{"start":{"line":11640,"column":1,"offset":339267},"end":{"line":11640,"column":203,"offset":339469},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Note:","position":{"start":{"line":11642,"column":2,"offset":339474},"end":{"line":11642,"column":7,"offset":339479},"indent":[]}}],"position":{"start":{"line":11642,"column":1,"offset":339473},"end":{"line":11642,"column":8,"offset":339480},"indent":[]}},{"type":"text","value":" Import GraphQL types from ","position":{"start":{"line":11642,"column":8,"offset":339480},"end":{"line":11642,"column":35,"offset":339507},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby/graphql</code>","position":{"start":{"line":11642,"column":35,"offset":339507},"end":{"line":11642,"column":51,"offset":339523},"indent":[]}},{"type":"text","value":" and don't add the ","position":{"start":{"line":11642,"column":51,"offset":339523},"end":{"line":11642,"column":70,"offset":339542},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">graphql</code>","position":{"start":{"line":11642,"column":70,"offset":339542},"end":{"line":11642,"column":79,"offset":339551},"indent":[]}},{"type":"text","value":" package to your project/plugin dependencies to avoid ","position":{"start":{"line":11642,"column":79,"offset":339551},"end":{"line":11642,"column":133,"offset":339605},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Schema must contain unique named types but contains multiple types named</code>","position":{"start":{"line":11642,"column":133,"offset":339605},"end":{"line":11642,"column":207,"offset":339679},"indent":[]}},{"type":"text","value":" errors. ","position":{"start":{"line":11642,"column":207,"offset":339679},"end":{"line":11642,"column":216,"offset":339688},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby/graphql</code>","position":{"start":{"line":11642,"column":216,"offset":339688},"end":{"line":11642,"column":232,"offset":339704},"indent":[]}},{"type":"text","value":" exports all builtin GraphQL types as well as the ","position":{"start":{"line":11642,"column":232,"offset":339704},"end":{"line":11642,"column":282,"offset":339754},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">GraphQLJSON</code>","position":{"start":{"line":11642,"column":282,"offset":339754},"end":{"line":11642,"column":295,"offset":339767},"indent":[]}},{"type":"text","value":" type.","position":{"start":{"line":11642,"column":295,"offset":339767},"end":{"line":11642,"column":301,"offset":339773},"indent":[]}}],"position":{"start":{"line":11642,"column":1,"offset":339473},"end":{"line":11642,"column":301,"offset":339773},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Many transformer plugins use this to add fields that take arguments.","position":{"start":{"line":11644,"column":1,"offset":339777},"end":{"line":11644,"column":69,"offset":339845},"indent":[]}}],"position":{"start":{"line":11644,"column":1,"offset":339777},"end":{"line":11644,"column":69,"offset":339845},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/plugins/gatsby-transformer-remark/","children":[{"type":"html","value":"<code class=\"language-text\">gatsby-transformer-remark</code>","position":{"start":{"line":11646,"column":6,"offset":339854},"end":{"line":11646,"column":33,"offset":339881},"indent":[]}}],"position":{"start":{"line":11646,"column":5,"offset":339853},"end":{"line":11646,"column":95,"offset":339943},"indent":[]}},{"type":"text","value":" adds an \"excerpt\" field where the user when writing their query can specify how many characters to prune the markdown source to.","position":{"start":{"line":11646,"column":95,"offset":339943},"end":{"line":11646,"column":224,"offset":340072},"indent":[]}}],"position":{"start":{"line":11646,"column":5,"offset":339853},"end":{"line":11646,"column":224,"offset":340072},"indent":[]}}],"position":{"start":{"line":11646,"column":1,"offset":339849},"end":{"line":11647,"column":1,"offset":340074},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/plugins/gatsby-transformer-sharp/","children":[{"type":"html","value":"<code class=\"language-text\">gatsby-transformer-sharp</code>","position":{"start":{"line":11648,"column":6,"offset":340081},"end":{"line":11648,"column":32,"offset":340107},"indent":[]}}],"position":{"start":{"line":11648,"column":5,"offset":340080},"end":{"line":11648,"column":93,"offset":340168},"indent":[]}},{"type":"text","value":" exposes many image transformation options as GraphQL fields.","position":{"start":{"line":11648,"column":93,"offset":340168},"end":{"line":11648,"column":154,"offset":340229},"indent":[]}}],"position":{"start":{"line":11648,"column":5,"offset":340080},"end":{"line":11648,"column":154,"offset":340229},"indent":[]}}],"position":{"start":{"line":11648,"column":1,"offset":340076},"end":{"line":11648,"column":154,"offset":340229},"indent":[]}}],"position":{"start":{"line":11646,"column":1,"offset":339849},"end":{"line":11648,"column":154,"offset":340229},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11650,"column":6,"offset":340238},"end":{"line":11650,"column":16,"offset":340248},"indent":[]}}],"position":{"start":{"line":11650,"column":1,"offset":340233},"end":{"line":11650,"column":16,"offset":340248},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11652,"column":5,"offset":340256},"end":{"line":11652,"column":10,"offset":340261},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11654,"column":5,"offset":340269},"end":{"line":11654,"column":24,"offset":340288},"indent":[]}}],"position":{"start":{"line":11654,"column":5,"offset":340269},"end":{"line":11654,"column":24,"offset":340288},"indent":[]}}],"position":{"start":{"line":11652,"column":1,"offset":340252},"end":{"line":11655,"column":1,"offset":340290},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11656,"column":5,"offset":340296},"end":{"line":11656,"column":11,"offset":340302},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `type` object\n\n    Object containing `name` and `nodes`</code></pre></div>","position":{"start":{"line":11658,"column":5,"offset":340310},"end":{"line":11660,"column":49,"offset":340383},"indent":[1,5]}}],"position":{"start":{"line":11656,"column":1,"offset":340292},"end":{"line":11660,"column":49,"offset":340383},"indent":[1,1,1,1]}}],"position":{"start":{"line":11652,"column":1,"offset":340252},"end":{"line":11660,"column":49,"offset":340383},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11662,"column":6,"offset":340392},"end":{"line":11662,"column":13,"offset":340399},"indent":[]}}],"position":{"start":{"line":11662,"column":1,"offset":340387},"end":{"line":11662,"column":13,"offset":340399},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GraphQLString <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby/graphql'</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setFieldsOnGraphQLNodeType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">File</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">newField</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> GraphQLString<span class=\"token punctuation\">,</span>\n\n                <span class=\"token literal-property property\">args</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">myArgument</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> GraphQLString\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token function-variable function\">resolve</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">source<span class=\"token punctuation\">,</span> fieldArgs</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Id of this node is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>source<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.\n\n                  Field was called with argument: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>fieldArgs<span class=\"token punctuation\">.</span>myArgument<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// by default return empty object</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11664,"column":1,"offset":340403},"end":{"line":11693,"column":4,"offset":341096},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11695,"column":1,"offset":341100},"end":{"line":11695,"column":4,"offset":341103},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11697,"column":1,"offset":341107},"end":{"line":11697,"column":4,"offset":341110},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#sourceNodes","children":[{"type":"html","value":"<code class=\"language-text\">sourceNodes</code>","position":{"start":{"line":11699,"column":2,"offset":341115},"end":{"line":11699,"column":15,"offset":341128},"indent":[]}}],"position":{"start":{"line":11699,"column":1,"offset":341114},"end":{"line":11699,"column":95,"offset":341208},"indent":[]}}],"position":{"start":{"line":11699,"column":1,"offset":341114},"end":{"line":11699,"column":95,"offset":341208},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Extension point to tell plugins to source nodes. This API is called during the Gatsby bootstrap sequence. Source plugins use this hook to create nodes. This API is called exactly once per plugin (and once for your site's ","position":{"start":{"line":11701,"column":1,"offset":341212},"end":{"line":11701,"column":222,"offset":341433},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-config.js</code>","position":{"start":{"line":11701,"column":222,"offset":341433},"end":{"line":11701,"column":240,"offset":341451},"indent":[]}},{"type":"text","value":" file). If you define this hook in ","position":{"start":{"line":11701,"column":240,"offset":341451},"end":{"line":11701,"column":275,"offset":341486},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-node.js</code>","position":{"start":{"line":11701,"column":275,"offset":341486},"end":{"line":11701,"column":291,"offset":341502},"indent":[]}},{"type":"text","value":" it will be called exactly once after all of your source plugins have finished creating nodes.","position":{"start":{"line":11701,"column":291,"offset":341502},"end":{"line":11701,"column":385,"offset":341596},"indent":[]}}],"position":{"start":{"line":11701,"column":1,"offset":341212},"end":{"line":11701,"column":385,"offset":341596},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":11703,"column":1,"offset":341600},"end":{"line":11703,"column":5,"offset":341604},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/how-to/plugins-and-themes/creating-a-source-plugin/","children":[{"type":"text","value":"Creating a Source Plugin","position":{"start":{"line":11703,"column":6,"offset":341605},"end":{"line":11703,"column":30,"offset":341629},"indent":[]}}],"position":{"start":{"line":11703,"column":5,"offset":341604},"end":{"line":11703,"column":114,"offset":341713},"indent":[]}},{"type":"text","value":" tutorial demonstrates a way a plugin or site might use this API.","position":{"start":{"line":11703,"column":114,"offset":341713},"end":{"line":11703,"column":179,"offset":341778},"indent":[]}}],"position":{"start":{"line":11703,"column":1,"offset":341600},"end":{"line":11703,"column":179,"offset":341778},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See also the documentation for ","position":{"start":{"line":11705,"column":1,"offset":341782},"end":{"line":11705,"column":32,"offset":341813},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/actions/#createNode","children":[{"type":"html","value":"<code class=\"language-text\">createNode</code>","position":{"start":{"line":11705,"column":33,"offset":341814},"end":{"line":11705,"column":45,"offset":341826},"indent":[]}}],"position":{"start":{"line":11705,"column":32,"offset":341813},"end":{"line":11705,"column":97,"offset":341878},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11705,"column":97,"offset":341878},"end":{"line":11705,"column":98,"offset":341879},"indent":[]}}],"position":{"start":{"line":11705,"column":1,"offset":341782},"end":{"line":11705,"column":98,"offset":341879},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11707,"column":6,"offset":341888},"end":{"line":11707,"column":13,"offset":341895},"indent":[]}}],"position":{"start":{"line":11707,"column":1,"offset":341883},"end":{"line":11707,"column":13,"offset":341895},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sourceNodes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions<span class=\"token punctuation\">,</span> createNodeId<span class=\"token punctuation\">,</span> createContentDigest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNode <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Data can come from anywhere, but for now create it manually</span>\n\n    <span class=\"token keyword\">const</span> myData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The foo field of my node</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">bar</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Baz</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> nodeContent <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>myData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> nodeMeta <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token function\">createNodeId</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">my-data-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>myData<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">parent</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token literal-property property\">internal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">MyNodeType</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">mediaType</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">text/html</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> nodeContent<span class=\"token punctuation\">,</span>\n\n            <span class=\"token literal-property property\">contentDigest</span><span class=\"token operator\">:</span> <span class=\"token function\">createContentDigest</span><span class=\"token punctuation\">(</span>myData<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> myData<span class=\"token punctuation\">,</span> nodeMeta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">createNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11709,"column":1,"offset":341899},"end":{"line":11748,"column":4,"offset":342688},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11750,"column":1,"offset":342692},"end":{"line":11750,"column":4,"offset":342695},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11752,"column":1,"offset":342699},"end":{"line":11752,"column":4,"offset":342702},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-node/#unstable_shouldOnCreateNode","children":[{"type":"html","value":"<code class=\"language-text\">unstable_shouldOnCreateNode</code>","position":{"start":{"line":11754,"column":2,"offset":342707},"end":{"line":11754,"column":31,"offset":342736},"indent":[]}}],"position":{"start":{"line":11754,"column":1,"offset":342706},"end":{"line":11754,"column":127,"offset":342832},"indent":[]}}],"position":{"start":{"line":11754,"column":1,"offset":342706},"end":{"line":11754,"column":127,"offset":342832},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Called before scheduling a ","position":{"start":{"line":11756,"column":4,"offset":342839},"end":{"line":11756,"column":31,"offset":342866},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">onCreateNode</code>","position":{"start":{"line":11756,"column":31,"offset":342866},"end":{"line":11756,"column":45,"offset":342880},"indent":[]}},{"type":"text","value":" callback for a plugin. If it returns falsy then Gatsby will not schedule the ","position":{"start":{"line":11756,"column":45,"offset":342880},"end":{"line":11756,"column":123,"offset":342958},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">onCreateNode</code>","position":{"start":{"line":11756,"column":123,"offset":342958},"end":{"line":11756,"column":137,"offset":342972},"indent":[]}},{"type":"text","value":" callback for this node for this plugin. Note: this API does not receive the regular ","position":{"start":{"line":11756,"column":137,"offset":342972},"end":{"line":11756,"column":222,"offset":343057},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">api</code>","position":{"start":{"line":11756,"column":222,"offset":343057},"end":{"line":11756,"column":227,"offset":343062},"indent":[]}},{"type":"text","value":" that other callbacks get as first arg","position":{"start":{"line":11756,"column":227,"offset":343062},"end":{"line":11756,"column":265,"offset":343100},"indent":[]}}],"position":{"start":{"line":11756,"column":1,"offset":342836},"end":{"line":11756,"column":265,"offset":343100},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Gatsby-ssr","position":{"start":{"line":11758,"column":4,"offset":343107},"end":{"line":11758,"column":14,"offset":343117},"indent":[]}}],"position":{"start":{"line":11758,"column":1,"offset":343104},"end":{"line":11758,"column":14,"offset":343117},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">/**\n\n * Implement Gatsby's SSR (Server Side Rendering) APIs in this file.\n\n *\n\n * See: https://www.gatsbyjs.org/docs/ssr-apis/\n\n */</span>\n\n<span class=\"token keyword\">const</span> React <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> withPrefix <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/utils/withPrefix'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onRenderBody</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> setHeadComponents<span class=\"token punctuation\">,</span> setPostBodyComponents <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setHeadComponents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setPostBodyComponents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">'js/plugins.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n            <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">'js/main.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n            <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">'js/page-load.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n            <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withPrefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">'js/page-unload.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":11760,"column":1,"offset":343121},"end":{"line":11791,"column":4,"offset":343826},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Gatsby Server Rendering APIs","position":{"start":{"line":11793,"column":3,"offset":343832},"end":{"line":11793,"column":31,"offset":343860},"indent":[]}}],"position":{"start":{"line":11793,"column":1,"offset":343830},"end":{"line":11793,"column":31,"offset":343860},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The file ","position":{"start":{"line":11795,"column":1,"offset":343864},"end":{"line":11795,"column":10,"offset":343873},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-ssr.js</code>","position":{"start":{"line":11795,"column":10,"offset":343873},"end":{"line":11795,"column":25,"offset":343888},"indent":[]}},{"type":"text","value":" lets you alter the content of static HTML files as they are being Server-Side Rendered (SSR) by Gatsby and Node.js. To use the ","position":{"start":{"line":11795,"column":25,"offset":343888},"end":{"line":11795,"column":153,"offset":344016},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/","children":[{"type":"text","value":"Gatsby SSR APIs","position":{"start":{"line":11795,"column":154,"offset":344017},"end":{"line":11795,"column":169,"offset":344032},"indent":[]}}],"position":{"start":{"line":11795,"column":153,"offset":344016},"end":{"line":11795,"column":236,"offset":344099},"indent":[]}},{"type":"text","value":", create a file called ","position":{"start":{"line":11795,"column":236,"offset":344099},"end":{"line":11795,"column":259,"offset":344122},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-ssr.js</code>","position":{"start":{"line":11795,"column":259,"offset":344122},"end":{"line":11795,"column":274,"offset":344137},"indent":[]}},{"type":"text","value":" in the root of your site. Export any of the APIs you wish to use in this file.","position":{"start":{"line":11795,"column":274,"offset":344137},"end":{"line":11795,"column":353,"offset":344216},"indent":[]}}],"position":{"start":{"line":11795,"column":1,"offset":343864},"end":{"line":11795,"column":353,"offset":344216},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The APIs ","position":{"start":{"line":11797,"column":1,"offset":344220},"end":{"line":11797,"column":10,"offset":344229},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wrapPageElement</code>","position":{"start":{"line":11797,"column":10,"offset":344229},"end":{"line":11797,"column":27,"offset":344246},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":11797,"column":27,"offset":344246},"end":{"line":11797,"column":32,"offset":344251},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">wrapRootElement</code>","position":{"start":{"line":11797,"column":32,"offset":344251},"end":{"line":11797,"column":49,"offset":344268},"indent":[]}},{"type":"text","value":" exist in both the SSR and ","position":{"start":{"line":11797,"column":49,"offset":344268},"end":{"line":11797,"column":76,"offset":344295},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-browser","children":[{"type":"text","value":"browser APIs","position":{"start":{"line":11797,"column":77,"offset":344296},"end":{"line":11797,"column":89,"offset":344308},"indent":[]}}],"position":{"start":{"line":11797,"column":76,"offset":344295},"end":{"line":11797,"column":159,"offset":344378},"indent":[]}},{"type":"text","value":". You generally should implement the same components in both ","position":{"start":{"line":11797,"column":159,"offset":344378},"end":{"line":11797,"column":220,"offset":344439},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-ssr.js</code>","position":{"start":{"line":11797,"column":220,"offset":344439},"end":{"line":11797,"column":235,"offset":344454},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":11797,"column":235,"offset":344454},"end":{"line":11797,"column":240,"offset":344459},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-browser.js</code>","position":{"start":{"line":11797,"column":240,"offset":344459},"end":{"line":11797,"column":259,"offset":344478},"indent":[]}},{"type":"text","value":" so that pages generated through SSR with Node.js are the same after being ","position":{"start":{"line":11797,"column":259,"offset":344478},"end":{"line":11797,"column":334,"offset":344553},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/glossary#hydration","children":[{"type":"text","value":"hydrated","position":{"start":{"line":11797,"column":335,"offset":344554},"end":{"line":11797,"column":343,"offset":344562},"indent":[]}}],"position":{"start":{"line":11797,"column":334,"offset":344553},"end":{"line":11797,"column":394,"offset":344613},"indent":[]}},{"type":"text","value":" in the browser.","position":{"start":{"line":11797,"column":394,"offset":344613},"end":{"line":11797,"column":410,"offset":344629},"indent":[]}}],"position":{"start":{"line":11797,"column":1,"offset":344220},"end":{"line":11797,"column":410,"offset":344629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"gatsby-ssr.js","position":{"start":{"line":11799,"column":1,"offset":344633},"end":{"line":11799,"column":14,"offset":344646},"indent":[]}}],"position":{"start":{"line":11799,"column":1,"offset":344633},"end":{"line":11799,"column":14,"offset":344646},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Copygatsby-ssr.js: copy code to clipboard`","position":{"start":{"line":11801,"column":1,"offset":344650},"end":{"line":11801,"column":43,"offset":344692},"indent":[]}}],"position":{"start":{"line":11801,"column":1,"offset":344650},"end":{"line":11801,"column":43,"offset":344692},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"const React = require(\"react\")","position":{"start":{"line":11803,"column":1,"offset":344696},"end":{"line":11803,"column":31,"offset":344726},"indent":[]}}],"position":{"start":{"line":11803,"column":1,"offset":344696},"end":{"line":11803,"column":31,"offset":344726},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"const Layout = require(\"./src/components/layout\")","position":{"start":{"line":11805,"column":1,"offset":344730},"end":{"line":11805,"column":50,"offset":344779},"indent":[]}}],"position":{"start":{"line":11805,"column":1,"offset":344730},"end":{"line":11805,"column":50,"offset":344779},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// Adds a class name to the body element","position":{"start":{"line":11807,"column":1,"offset":344783},"end":{"line":11807,"column":41,"offset":344823},"indent":[]}}],"position":{"start":{"line":11807,"column":1,"offset":344783},"end":{"line":11807,"column":41,"offset":344823},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"exports.onRenderBody = ({ setBodyAttributes }, pluginOptions) => {","position":{"start":{"line":11809,"column":1,"offset":344827},"end":{"line":11809,"column":67,"offset":344893},"indent":[]}}],"position":{"start":{"line":11809,"column":1,"offset":344827},"end":{"line":11809,"column":67,"offset":344893},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"setBodyAttributes({","position":{"start":{"line":11811,"column":1,"offset":344897},"end":{"line":11811,"column":20,"offset":344916},"indent":[]}}],"position":{"start":{"line":11811,"column":1,"offset":344897},"end":{"line":11811,"column":20,"offset":344916},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"className: \"my-body-class\",","position":{"start":{"line":11813,"column":1,"offset":344920},"end":{"line":11813,"column":28,"offset":344947},"indent":[]}}],"position":{"start":{"line":11813,"column":1,"offset":344920},"end":{"line":11813,"column":28,"offset":344947},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"})","position":{"start":{"line":11815,"column":1,"offset":344951},"end":{"line":11815,"column":3,"offset":344953},"indent":[]}}],"position":{"start":{"line":11815,"column":1,"offset":344951},"end":{"line":11815,"column":3,"offset":344953},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":11817,"column":1,"offset":344957},"end":{"line":11817,"column":2,"offset":344958},"indent":[]}}],"position":{"start":{"line":11817,"column":1,"offset":344957},"end":{"line":11817,"column":2,"offset":344958},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// Wraps every page in a component","position":{"start":{"line":11819,"column":1,"offset":344962},"end":{"line":11819,"column":35,"offset":344996},"indent":[]}}],"position":{"start":{"line":11819,"column":1,"offset":344962},"end":{"line":11819,"column":35,"offset":344996},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"exports.wrapPageElement = ({ element, props }) => {","position":{"start":{"line":11821,"column":1,"offset":345000},"end":{"line":11821,"column":52,"offset":345051},"indent":[]}}],"position":{"start":{"line":11821,"column":1,"offset":345000},"end":{"line":11821,"column":52,"offset":345051},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"return <Layout {...props}>{element}","position":{"start":{"line":11823,"column":1,"offset":345055},"end":{"line":11823,"column":36,"offset":345090},"indent":[]}},{"type":"html","value":"</Layout>","position":{"start":{"line":11823,"column":36,"offset":345090},"end":{"line":11823,"column":45,"offset":345099},"indent":[]}}],"position":{"start":{"line":11823,"column":1,"offset":345055},"end":{"line":11823,"column":45,"offset":345099},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":11825,"column":1,"offset":345103},"end":{"line":11825,"column":2,"offset":345104},"indent":[]}}],"position":{"start":{"line":11825,"column":1,"offset":345103},"end":{"line":11825,"column":2,"offset":345104},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":11827,"column":1,"offset":345108},"end":{"line":11827,"column":2,"offset":345109},"indent":[]}}],"position":{"start":{"line":11827,"column":1,"offset":345108},"end":{"line":11827,"column":2,"offset":345109},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#usage","children":[],"position":{"start":{"line":11829,"column":4,"offset":345116},"end":{"line":11829,"column":78,"offset":345190},"indent":[]}},{"type":"text","value":"Usage","position":{"start":{"line":11829,"column":78,"offset":345190},"end":{"line":11829,"column":83,"offset":345195},"indent":[]}}],"position":{"start":{"line":11829,"column":1,"offset":345113},"end":{"line":11829,"column":83,"offset":345195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Implement any of these APIs by exporting them from a file named ","position":{"start":{"line":11831,"column":1,"offset":345199},"end":{"line":11831,"column":65,"offset":345263},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-ssr.js</code>","position":{"start":{"line":11831,"column":65,"offset":345263},"end":{"line":11831,"column":80,"offset":345278},"indent":[]}},{"type":"text","value":" in the root of your project.","position":{"start":{"line":11831,"column":80,"offset":345278},"end":{"line":11831,"column":109,"offset":345307},"indent":[]}}],"position":{"start":{"line":11831,"column":1,"offset":345199},"end":{"line":11831,"column":109,"offset":345307},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"APIs","position":{"start":{"line":11833,"column":4,"offset":345314},"end":{"line":11833,"column":8,"offset":345318},"indent":[]}}],"position":{"start":{"line":11833,"column":1,"offset":345311},"end":{"line":11833,"column":8,"offset":345318},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11835,"column":1,"offset":345322},"end":{"line":11835,"column":4,"offset":345325},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#onPreRenderHTML","children":[{"type":"html","value":"<code class=\"language-text\">onPreRenderHTML</code>","position":{"start":{"line":11837,"column":2,"offset":345330},"end":{"line":11837,"column":19,"offset":345347},"indent":[]}}],"position":{"start":{"line":11837,"column":1,"offset":345329},"end":{"line":11837,"column":102,"offset":345430},"indent":[]}},{"type":"text","value":" Function","position":{"start":{"line":11837,"column":102,"offset":345430},"end":{"line":11837,"column":111,"offset":345439},"indent":[]}}],"position":{"start":{"line":11837,"column":1,"offset":345329},"end":{"line":11837,"column":111,"offset":345439},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Source","position":{"start":{"line":11839,"column":1,"offset":345443},"end":{"line":11839,"column":7,"offset":345449},"indent":[]}}],"position":{"start":{"line":11839,"column":1,"offset":345443},"end":{"line":11839,"column":7,"offset":345449},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/develop-static-entry.js#L93-L101","children":[{"type":"text","value":"1","position":{"start":{"line":11841,"column":2,"offset":345454},"end":{"line":11841,"column":3,"offset":345455},"indent":[]}}],"position":{"start":{"line":11841,"column":1,"offset":345453},"end":{"line":11841,"column":111,"offset":345563},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/ssr-develop-static-entry.js#L317-L325","children":[{"type":"text","value":"2","position":{"start":{"line":11841,"column":112,"offset":345564},"end":{"line":11841,"column":113,"offset":345565},"indent":[]}}],"position":{"start":{"line":11841,"column":111,"offset":345563},"end":{"line":11841,"column":226,"offset":345678},"indent":[]}}],"position":{"start":{"line":11841,"column":1,"offset":345453},"end":{"line":11841,"column":226,"offset":345678},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(apiCallbackContext: object, pluginOptions: pluginOptions) => undefined","position":{"start":{"line":11843,"column":1,"offset":345682},"end":{"line":11843,"column":72,"offset":345753},"indent":[]}}],"position":{"start":{"line":11843,"column":1,"offset":345682},"end":{"line":11843,"column":72,"offset":345753},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Called after every page Gatsby server renders while building HTML so you can replace head components to be rendered in your ","position":{"start":{"line":11845,"column":1,"offset":345757},"end":{"line":11845,"column":125,"offset":345881},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">html.js</code>","position":{"start":{"line":11845,"column":125,"offset":345881},"end":{"line":11845,"column":134,"offset":345890},"indent":[]}},{"type":"text","value":". This is useful if you need to reorder scripts or styles added by other plugins.","position":{"start":{"line":11845,"column":134,"offset":345890},"end":{"line":11845,"column":215,"offset":345971},"indent":[]}}],"position":{"start":{"line":11845,"column":1,"offset":345757},"end":{"line":11845,"column":215,"offset":345971},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11847,"column":6,"offset":345980},"end":{"line":11847,"column":16,"offset":345990},"indent":[]}}],"position":{"start":{"line":11847,"column":1,"offset":345975},"end":{"line":11847,"column":16,"offset":345990},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11849,"column":5,"offset":345998},"end":{"line":11849,"column":10,"offset":346003},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11851,"column":5,"offset":346011},"end":{"line":11851,"column":24,"offset":346030},"indent":[]}}],"position":{"start":{"line":11851,"column":5,"offset":346011},"end":{"line":11851,"column":24,"offset":346030},"indent":[]}}],"position":{"start":{"line":11849,"column":1,"offset":345994},"end":{"line":11852,"column":1,"offset":346032},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11853,"column":5,"offset":346038},"end":{"line":11853,"column":11,"offset":346044},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `pathname` string\n\n    The pathname of the page currently being rendered.</code></pre></div>","position":{"start":{"line":11855,"column":5,"offset":346052},"end":{"line":11857,"column":63,"offset":346143},"indent":[1,5]}}],"position":{"start":{"line":11853,"column":1,"offset":346034},"end":{"line":11858,"column":1,"offset":346145},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11859,"column":5,"offset":346151},"end":{"line":11859,"column":11,"offset":346157},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `getHeadComponents` ReactNode[]\n\n    Returns the current `headComponents` array.</code></pre></div>","position":{"start":{"line":11861,"column":5,"offset":346165},"end":{"line":11863,"column":56,"offset":346263},"indent":[1,5]}}],"position":{"start":{"line":11859,"column":1,"offset":346147},"end":{"line":11864,"column":1,"offset":346265},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11865,"column":5,"offset":346271},"end":{"line":11865,"column":11,"offset":346277},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `replaceHeadComponents` function\n\n    Takes an array of components as its first argument which replace the `headComponents` array which is passed to the `html.js` component. **WARNING** if multiple plugins implement this API it's the last plugin that \"wins\".</code></pre></div>","position":{"start":{"line":11867,"column":5,"offset":346285},"end":{"line":11869,"column":233,"offset":346561},"indent":[1,5]}}],"position":{"start":{"line":11865,"column":1,"offset":346267},"end":{"line":11870,"column":1,"offset":346563},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11871,"column":5,"offset":346569},"end":{"line":11871,"column":11,"offset":346575},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `getPreBodyComponents` ReactNode[]\n\n    Returns the current `preBodyComponents` array.</code></pre></div>","position":{"start":{"line":11873,"column":5,"offset":346583},"end":{"line":11875,"column":59,"offset":346687},"indent":[1,5]}}],"position":{"start":{"line":11871,"column":1,"offset":346565},"end":{"line":11876,"column":1,"offset":346689},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11877,"column":5,"offset":346695},"end":{"line":11877,"column":11,"offset":346701},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `replacePreBodyComponents` function\n\n    Takes an array of components as its first argument which replace the `preBodyComponents` array which is passed to the `html.js` component. **WARNING** if multiple plugins implement this API it's the last plugin that \"wins\".</code></pre></div>","position":{"start":{"line":11879,"column":5,"offset":346709},"end":{"line":11881,"column":236,"offset":346991},"indent":[1,5]}}],"position":{"start":{"line":11877,"column":1,"offset":346691},"end":{"line":11882,"column":1,"offset":346993},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11883,"column":5,"offset":346999},"end":{"line":11883,"column":11,"offset":347005},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `getPostBodyComponents` ReactNode[]\n\n    Returns the current `postBodyComponents` array.</code></pre></div>","position":{"start":{"line":11885,"column":5,"offset":347013},"end":{"line":11887,"column":60,"offset":347119},"indent":[1,5]}}],"position":{"start":{"line":11883,"column":1,"offset":346995},"end":{"line":11888,"column":1,"offset":347121},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11889,"column":5,"offset":347127},"end":{"line":11889,"column":11,"offset":347133},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `replacePostBodyComponents` function\n\n    Takes an array of components as its first argument which replace the `postBodyComponents` array which is passed to the `html.js` component. **WARNING** if multiple plugins implement this API it's the last plugin that \"wins\".</code></pre></div>","position":{"start":{"line":11891,"column":5,"offset":347141},"end":{"line":11893,"column":237,"offset":347425},"indent":[1,5]}}],"position":{"start":{"line":11889,"column":1,"offset":347123},"end":{"line":11894,"column":1,"offset":347427},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11895,"column":5,"offset":347433},"end":{"line":11895,"column":10,"offset":347438},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">pluginOptions</code>","position":{"start":{"line":11897,"column":5,"offset":347446},"end":{"line":11897,"column":20,"offset":347461},"indent":[]}},{"type":"text","value":" object","position":{"start":{"line":11897,"column":20,"offset":347461},"end":{"line":11897,"column":27,"offset":347468},"indent":[]}}],"position":{"start":{"line":11897,"column":5,"offset":347446},"end":{"line":11897,"column":27,"offset":347468},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Object containing options defined in ","position":{"start":{"line":11899,"column":5,"offset":347476},"end":{"line":11899,"column":42,"offset":347513},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-config.js</code>","position":{"start":{"line":11899,"column":42,"offset":347513},"end":{"line":11899,"column":60,"offset":347531},"indent":[]}}],"position":{"start":{"line":11899,"column":5,"offset":347476},"end":{"line":11899,"column":60,"offset":347531},"indent":[]}}],"position":{"start":{"line":11895,"column":1,"offset":347429},"end":{"line":11899,"column":60,"offset":347531},"indent":[1,1,1,1]}}],"position":{"start":{"line":11849,"column":1,"offset":345994},"end":{"line":11899,"column":60,"offset":347531},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":11901,"column":6,"offset":347540},"end":{"line":11901,"column":13,"offset":347547},"indent":[]}}],"position":{"start":{"line":11901,"column":1,"offset":347535},"end":{"line":11901,"column":13,"offset":347547},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// Move Typography.js styles to the top of the head section so they're loaded first.\n\nexports.onPreRenderHTML = ({ getHeadComponents, replaceHeadComponents }) => {\n\n  const headComponents = getHeadComponents()\n\n  headComponents.sort((x, y) => {\n\n    if (x.key === 'TypographyStyle') {\n\n      return -1\n\n    } else if (y.key === 'TypographyStyle') {\n\n      return 1\n\n    }\n\n    return 0\n\n  })\n\n  replaceHeadComponents(headComponents)\n\n}</code></pre></div>","position":{"start":{"line":11903,"column":1,"offset":347551},"end":{"line":11931,"column":4,"offset":348024},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":11933,"column":1,"offset":348028},"end":{"line":11933,"column":4,"offset":348031},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":11935,"column":1,"offset":348035},"end":{"line":11935,"column":4,"offset":348038},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#onRenderBody","children":[{"type":"html","value":"<code class=\"language-text\">onRenderBody</code>","position":{"start":{"line":11937,"column":2,"offset":348043},"end":{"line":11937,"column":16,"offset":348057},"indent":[]}}],"position":{"start":{"line":11937,"column":1,"offset":348042},"end":{"line":11937,"column":96,"offset":348137},"indent":[]}},{"type":"text","value":" Function","position":{"start":{"line":11937,"column":96,"offset":348137},"end":{"line":11937,"column":105,"offset":348146},"indent":[]}}],"position":{"start":{"line":11937,"column":1,"offset":348042},"end":{"line":11937,"column":105,"offset":348146},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Source","position":{"start":{"line":11939,"column":1,"offset":348150},"end":{"line":11939,"column":7,"offset":348156},"indent":[]}}],"position":{"start":{"line":11939,"column":1,"offset":348150},"end":{"line":11939,"column":7,"offset":348156},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/develop-static-entry.js#L83-L91","children":[{"type":"text","value":"1","position":{"start":{"line":11941,"column":2,"offset":348161},"end":{"line":11941,"column":3,"offset":348162},"indent":[]}}],"position":{"start":{"line":11941,"column":1,"offset":348160},"end":{"line":11941,"column":110,"offset":348269},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/ssr-develop-static-entry.js#L307-L315","children":[{"type":"text","value":"2","position":{"start":{"line":11941,"column":111,"offset":348270},"end":{"line":11941,"column":112,"offset":348271},"indent":[]}}],"position":{"start":{"line":11941,"column":110,"offset":348269},"end":{"line":11941,"column":225,"offset":348384},"indent":[]}}],"position":{"start":{"line":11941,"column":1,"offset":348160},"end":{"line":11941,"column":225,"offset":348384},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(apiCallbackContext: object, pluginOptions: pluginOptions) => undefined","position":{"start":{"line":11943,"column":1,"offset":348388},"end":{"line":11943,"column":72,"offset":348459},"indent":[]}}],"position":{"start":{"line":11943,"column":1,"offset":348388},"end":{"line":11943,"column":72,"offset":348459},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Called after every page Gatsby server renders while building HTML so you can set head and body components to be rendered in your ","position":{"start":{"line":11945,"column":1,"offset":348463},"end":{"line":11945,"column":130,"offset":348592},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">html.js</code>","position":{"start":{"line":11945,"column":130,"offset":348592},"end":{"line":11945,"column":139,"offset":348601},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11945,"column":139,"offset":348601},"end":{"line":11945,"column":140,"offset":348602},"indent":[]}}],"position":{"start":{"line":11945,"column":1,"offset":348463},"end":{"line":11945,"column":140,"offset":348602},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Gatsby does a two-pass render for HTML. It loops through your pages first rendering only the body and then takes the result body HTML string and passes it as the ","position":{"start":{"line":11947,"column":1,"offset":348606},"end":{"line":11947,"column":163,"offset":348768},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">body</code>","position":{"start":{"line":11947,"column":163,"offset":348768},"end":{"line":11947,"column":169,"offset":348774},"indent":[]}},{"type":"text","value":" prop to your ","position":{"start":{"line":11947,"column":169,"offset":348774},"end":{"line":11947,"column":183,"offset":348788},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">html.js</code>","position":{"start":{"line":11947,"column":183,"offset":348788},"end":{"line":11947,"column":192,"offset":348797},"indent":[]}},{"type":"text","value":" to complete the render.","position":{"start":{"line":11947,"column":192,"offset":348797},"end":{"line":11947,"column":216,"offset":348821},"indent":[]}}],"position":{"start":{"line":11947,"column":1,"offset":348606},"end":{"line":11947,"column":216,"offset":348821},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's often handy to be able to send custom components to your ","position":{"start":{"line":11949,"column":1,"offset":348825},"end":{"line":11949,"column":63,"offset":348887},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">html.js</code>","position":{"start":{"line":11949,"column":63,"offset":348887},"end":{"line":11949,"column":72,"offset":348896},"indent":[]}},{"type":"text","value":". For example, it's a very common pattern for React.js libraries that support server rendering to pull out data generated during the render to add to your HTML.","position":{"start":{"line":11949,"column":72,"offset":348896},"end":{"line":11949,"column":232,"offset":349056},"indent":[]}}],"position":{"start":{"line":11949,"column":1,"offset":348825},"end":{"line":11949,"column":232,"offset":349056},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using this API over ","position":{"start":{"line":11951,"column":1,"offset":349060},"end":{"line":11951,"column":21,"offset":349080},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#replaceRenderer","children":[{"type":"html","value":"<code class=\"language-text\">replaceRenderer</code>","position":{"start":{"line":11951,"column":22,"offset":349081},"end":{"line":11951,"column":39,"offset":349098},"indent":[]}}],"position":{"start":{"line":11951,"column":21,"offset":349080},"end":{"line":11951,"column":122,"offset":349181},"indent":[]}},{"type":"text","value":" is preferable as multiple plugins can implement this API where only one plugin can take over server rendering. However, if your plugin requires taking over server rendering then that's the one to use","position":{"start":{"line":11951,"column":122,"offset":349181},"end":{"line":11951,"column":322,"offset":349381},"indent":[]}}],"position":{"start":{"line":11951,"column":1,"offset":349060},"end":{"line":11951,"column":322,"offset":349381},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11953,"column":6,"offset":349390},"end":{"line":11953,"column":16,"offset":349400},"indent":[]}}],"position":{"start":{"line":11953,"column":1,"offset":349385},"end":{"line":11953,"column":16,"offset":349400},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":11955,"column":5,"offset":349408},"end":{"line":11955,"column":10,"offset":349413},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":11957,"column":5,"offset":349421},"end":{"line":11957,"column":24,"offset":349440},"indent":[]}}],"position":{"start":{"line":11957,"column":5,"offset":349421},"end":{"line":11957,"column":24,"offset":349440},"indent":[]}}],"position":{"start":{"line":11955,"column":1,"offset":349404},"end":{"line":11958,"column":1,"offset":349442},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11959,"column":5,"offset":349448},"end":{"line":11959,"column":11,"offset":349454},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `pathname` string\n\n    The pathname of the page currently being rendered.</code></pre></div>","position":{"start":{"line":11961,"column":5,"offset":349462},"end":{"line":11963,"column":63,"offset":349553},"indent":[1,5]}}],"position":{"start":{"line":11959,"column":1,"offset":349444},"end":{"line":11964,"column":1,"offset":349555},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11965,"column":5,"offset":349561},"end":{"line":11965,"column":11,"offset":349567},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setHeadComponents` function\n\n    Takes an array of components as its first argument which are added to the `headComponents` array which is passed to the `html.js` component.</code></pre></div>","position":{"start":{"line":11967,"column":5,"offset":349575},"end":{"line":11969,"column":153,"offset":349767},"indent":[1,5]}}],"position":{"start":{"line":11965,"column":1,"offset":349557},"end":{"line":11970,"column":1,"offset":349769},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11971,"column":5,"offset":349775},"end":{"line":11971,"column":11,"offset":349781},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setHtmlAttributes` function\n\n    Takes an object of props which will spread into the `&lt;html>` component.</code></pre></div>","position":{"start":{"line":11973,"column":5,"offset":349789},"end":{"line":11975,"column":84,"offset":349912},"indent":[1,5]}}],"position":{"start":{"line":11971,"column":1,"offset":349771},"end":{"line":11976,"column":1,"offset":349914},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11977,"column":5,"offset":349920},"end":{"line":11977,"column":11,"offset":349926},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setBodyAttributes` function\n\n    Takes an object of props which will spread into the `&lt;body>` component.</code></pre></div>","position":{"start":{"line":11979,"column":5,"offset":349934},"end":{"line":11981,"column":84,"offset":350057},"indent":[1,5]}}],"position":{"start":{"line":11977,"column":1,"offset":349916},"end":{"line":11982,"column":1,"offset":350059},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11983,"column":5,"offset":350065},"end":{"line":11983,"column":11,"offset":350071},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setPreBodyComponents` function\n\n    Takes an array of components as its first argument which are added to the `preBodyComponents` array which is passed to the `html.js` component.</code></pre></div>","position":{"start":{"line":11985,"column":5,"offset":350079},"end":{"line":11987,"column":156,"offset":350277},"indent":[1,5]}}],"position":{"start":{"line":11983,"column":1,"offset":350061},"end":{"line":11988,"column":1,"offset":350279},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11989,"column":5,"offset":350285},"end":{"line":11989,"column":11,"offset":350291},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setPostBodyComponents` function\n\n    Takes an array of components as its first argument which are added to the `postBodyComponents` array which is passed to the `html.js` component.</code></pre></div>","position":{"start":{"line":11991,"column":5,"offset":350299},"end":{"line":11993,"column":157,"offset":350499},"indent":[1,5]}}],"position":{"start":{"line":11989,"column":1,"offset":350281},"end":{"line":11994,"column":1,"offset":350501},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":11995,"column":5,"offset":350507},"end":{"line":11995,"column":11,"offset":350513},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setBodyProps` function\n\n    Takes an object of data which is merged with other body props and passed to `html.js` as `bodyProps`.</code></pre></div>","position":{"start":{"line":11997,"column":5,"offset":350521},"end":{"line":11999,"column":114,"offset":350669},"indent":[1,5]}}],"position":{"start":{"line":11995,"column":1,"offset":350503},"end":{"line":12000,"column":1,"offset":350671},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":12001,"column":5,"offset":350677},"end":{"line":12001,"column":10,"offset":350682},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">pluginOptions</code>","position":{"start":{"line":12003,"column":5,"offset":350690},"end":{"line":12003,"column":20,"offset":350705},"indent":[]}},{"type":"text","value":" object","position":{"start":{"line":12003,"column":20,"offset":350705},"end":{"line":12003,"column":27,"offset":350712},"indent":[]}}],"position":{"start":{"line":12003,"column":5,"offset":350690},"end":{"line":12003,"column":27,"offset":350712},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Object containing options defined in ","position":{"start":{"line":12005,"column":5,"offset":350720},"end":{"line":12005,"column":42,"offset":350757},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-config.js</code>","position":{"start":{"line":12005,"column":42,"offset":350757},"end":{"line":12005,"column":60,"offset":350775},"indent":[]}}],"position":{"start":{"line":12005,"column":5,"offset":350720},"end":{"line":12005,"column":60,"offset":350775},"indent":[]}}],"position":{"start":{"line":12001,"column":1,"offset":350673},"end":{"line":12005,"column":60,"offset":350775},"indent":[1,1,1,1]}}],"position":{"start":{"line":11955,"column":1,"offset":349404},"end":{"line":12005,"column":60,"offset":350775},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":12007,"column":6,"offset":350784},"end":{"line":12007,"column":13,"offset":350791},"indent":[]}}],"position":{"start":{"line":12007,"column":1,"offset":350779},"end":{"line":12007,"column":13,"offset":350791},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// Import React so that you can use JSX in HeadComponents\n\nconst React = require(\"react\")\n\nconst HtmlAttributes = {\n\n  lang: \"en\"\n\n}\n\nconst HeadComponents = [\n\n  &lt;script key=\"my-script\" src=\"https://gatsby.dev/my-script\" />\n\n]\n\nconst BodyAttributes = {\n\n  \"data-theme\": \"dark\"\n\n}\n\nexports.onRenderBody = ({\n\n  setHeadComponents,\n\n  setHtmlAttributes,\n\n  setBodyAttributes\n\n}, pluginOptions) => {\n\n  setHtmlAttributes(HtmlAttributes)\n\n  setHeadComponents(HeadComponents)\n\n  setBodyAttributes(BodyAttributes)\n\n}</code></pre></div>","position":{"start":{"line":12009,"column":1,"offset":350795},"end":{"line":12051,"column":4,"offset":351356},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":12053,"column":1,"offset":351360},"end":{"line":12053,"column":4,"offset":351363},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12055,"column":1,"offset":351367},"end":{"line":12055,"column":4,"offset":351370},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#replaceRenderer","children":[{"type":"html","value":"<code class=\"language-text\">replaceRenderer</code>","position":{"start":{"line":12057,"column":2,"offset":351375},"end":{"line":12057,"column":19,"offset":351392},"indent":[]}}],"position":{"start":{"line":12057,"column":1,"offset":351374},"end":{"line":12057,"column":102,"offset":351475},"indent":[]}},{"type":"text","value":" Function","position":{"start":{"line":12057,"column":102,"offset":351475},"end":{"line":12057,"column":111,"offset":351484},"indent":[]}}],"position":{"start":{"line":12057,"column":1,"offset":351374},"end":{"line":12057,"column":111,"offset":351484},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/ssr-develop-static-entry.js#L284-L295","children":[{"type":"text","value":"Source","position":{"start":{"line":12059,"column":2,"offset":351489},"end":{"line":12059,"column":8,"offset":351495},"indent":[]}}],"position":{"start":{"line":12059,"column":1,"offset":351488},"end":{"line":12059,"column":121,"offset":351608},"indent":[]}}],"position":{"start":{"line":12059,"column":1,"offset":351488},"end":{"line":12059,"column":121,"offset":351608},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(apiCallbackContext: object, pluginOptions: pluginOptions) => undefined","position":{"start":{"line":12061,"column":1,"offset":351612},"end":{"line":12061,"column":72,"offset":351683},"indent":[]}}],"position":{"start":{"line":12061,"column":1,"offset":351612},"end":{"line":12061,"column":72,"offset":351683},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Replace the default server renderer. This is useful for integration with Redux, css-in-js libraries, etc. that need custom setups for server rendering.","position":{"start":{"line":12063,"column":1,"offset":351687},"end":{"line":12063,"column":152,"offset":351838},"indent":[]}}],"position":{"start":{"line":12063,"column":1,"offset":351687},"end":{"line":12063,"column":152,"offset":351838},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":12065,"column":6,"offset":351847},"end":{"line":12065,"column":16,"offset":351857},"indent":[]}}],"position":{"start":{"line":12065,"column":1,"offset":351842},"end":{"line":12065,"column":16,"offset":351857},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":12067,"column":5,"offset":351865},"end":{"line":12067,"column":10,"offset":351870},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":12069,"column":5,"offset":351878},"end":{"line":12069,"column":24,"offset":351897},"indent":[]}}],"position":{"start":{"line":12069,"column":5,"offset":351878},"end":{"line":12069,"column":24,"offset":351897},"indent":[]}}],"position":{"start":{"line":12067,"column":1,"offset":351861},"end":{"line":12070,"column":1,"offset":351899},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12071,"column":5,"offset":351905},"end":{"line":12071,"column":11,"offset":351911},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `pathname` string\n\n    The pathname of the page currently being rendered.</code></pre></div>","position":{"start":{"line":12073,"column":5,"offset":351919},"end":{"line":12075,"column":63,"offset":352010},"indent":[1,5]}}],"position":{"start":{"line":12071,"column":1,"offset":351901},"end":{"line":12076,"column":1,"offset":352012},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12077,"column":5,"offset":352018},"end":{"line":12077,"column":11,"offset":352024},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `bodyComponent` ReactNode\n\n    The React element to be rendered as the page body</code></pre></div>","position":{"start":{"line":12079,"column":5,"offset":352032},"end":{"line":12081,"column":62,"offset":352130},"indent":[1,5]}}],"position":{"start":{"line":12077,"column":1,"offset":352014},"end":{"line":12082,"column":1,"offset":352132},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12083,"column":5,"offset":352138},"end":{"line":12083,"column":11,"offset":352144},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `replaceBodyHTMLString` function\n\n    Call this with the HTML string you render. **WARNING** if multiple plugins implement this API it's the last plugin that \"wins\". TODO implement an automated warning against this.</code></pre></div>","position":{"start":{"line":12085,"column":5,"offset":352152},"end":{"line":12087,"column":190,"offset":352385},"indent":[1,5]}}],"position":{"start":{"line":12083,"column":1,"offset":352134},"end":{"line":12088,"column":1,"offset":352387},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12089,"column":5,"offset":352393},"end":{"line":12089,"column":11,"offset":352399},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setHeadComponents` function\n\n    Takes an array of components as its first argument which are added to the `headComponents` array which is passed to the `html.js` component.</code></pre></div>","position":{"start":{"line":12091,"column":5,"offset":352407},"end":{"line":12093,"column":153,"offset":352599},"indent":[1,5]}}],"position":{"start":{"line":12089,"column":1,"offset":352389},"end":{"line":12094,"column":1,"offset":352601},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12095,"column":5,"offset":352607},"end":{"line":12095,"column":11,"offset":352613},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setHtmlAttributes` function\n\n    Takes an object of props which will spread into the `&lt;html>` component.</code></pre></div>","position":{"start":{"line":12097,"column":5,"offset":352621},"end":{"line":12099,"column":84,"offset":352744},"indent":[1,5]}}],"position":{"start":{"line":12095,"column":1,"offset":352603},"end":{"line":12100,"column":1,"offset":352746},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12101,"column":5,"offset":352752},"end":{"line":12101,"column":11,"offset":352758},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setBodyAttributes` function\n\n    Takes an object of props which will spread into the `&lt;body>` component.</code></pre></div>","position":{"start":{"line":12103,"column":5,"offset":352766},"end":{"line":12105,"column":84,"offset":352889},"indent":[1,5]}}],"position":{"start":{"line":12101,"column":1,"offset":352748},"end":{"line":12106,"column":1,"offset":352891},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12107,"column":5,"offset":352897},"end":{"line":12107,"column":11,"offset":352903},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setPreBodyComponents` function\n\n    Takes an array of components as its first argument which are added to the `preBodyComponents` array which is passed to the `html.js` component.</code></pre></div>","position":{"start":{"line":12109,"column":5,"offset":352911},"end":{"line":12111,"column":156,"offset":353109},"indent":[1,5]}}],"position":{"start":{"line":12107,"column":1,"offset":352893},"end":{"line":12112,"column":1,"offset":353111},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12113,"column":5,"offset":353117},"end":{"line":12113,"column":11,"offset":353123},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setPostBodyComponents` function\n\n    Takes an array of components as its first argument which are added to the `postBodyComponents` array which is passed to the `html.js` component.</code></pre></div>","position":{"start":{"line":12115,"column":5,"offset":353131},"end":{"line":12117,"column":157,"offset":353331},"indent":[1,5]}}],"position":{"start":{"line":12113,"column":1,"offset":353113},"end":{"line":12118,"column":1,"offset":353333},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12119,"column":5,"offset":353339},"end":{"line":12119,"column":11,"offset":353345},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `setBodyProps` function\n\n    Takes an object of data which is merged with other body props and passed to `html.js` as `bodyProps`.</code></pre></div>","position":{"start":{"line":12121,"column":5,"offset":353353},"end":{"line":12123,"column":114,"offset":353501},"indent":[1,5]}}],"position":{"start":{"line":12119,"column":1,"offset":353335},"end":{"line":12124,"column":1,"offset":353503},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":12125,"column":5,"offset":353509},"end":{"line":12125,"column":10,"offset":353514},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">pluginOptions</code>","position":{"start":{"line":12127,"column":5,"offset":353522},"end":{"line":12127,"column":20,"offset":353537},"indent":[]}},{"type":"text","value":" object","position":{"start":{"line":12127,"column":20,"offset":353537},"end":{"line":12127,"column":27,"offset":353544},"indent":[]}}],"position":{"start":{"line":12127,"column":5,"offset":353522},"end":{"line":12127,"column":27,"offset":353544},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Object containing options defined in ","position":{"start":{"line":12129,"column":5,"offset":353552},"end":{"line":12129,"column":42,"offset":353589},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-config.js</code>","position":{"start":{"line":12129,"column":42,"offset":353589},"end":{"line":12129,"column":60,"offset":353607},"indent":[]}}],"position":{"start":{"line":12129,"column":5,"offset":353552},"end":{"line":12129,"column":60,"offset":353607},"indent":[]}}],"position":{"start":{"line":12125,"column":1,"offset":353505},"end":{"line":12129,"column":60,"offset":353607},"indent":[1,1,1,1]}}],"position":{"start":{"line":12067,"column":1,"offset":351861},"end":{"line":12129,"column":60,"offset":353607},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":12131,"column":6,"offset":353616},"end":{"line":12131,"column":13,"offset":353623},"indent":[]}}],"position":{"start":{"line":12131,"column":1,"offset":353611},"end":{"line":12131,"column":13,"offset":353623},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// From gatsby-plugin-glamor\n\nconst { renderToString } = require(\"react-dom/server\")\n\nconst inline = require(\"glamor-inline\")\n\nexports.replaceRenderer = ({ bodyComponent, replaceBodyHTMLString }) => {\n\n  const bodyHTML = renderToString(bodyComponent)\n\n  const inlinedHTML = inline(bodyHTML)\n\n  replaceBodyHTMLString(inlinedHTML)\n\n}</code></pre></div>","position":{"start":{"line":12133,"column":1,"offset":353627},"end":{"line":12151,"column":4,"offset":353986},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":12153,"column":1,"offset":353990},"end":{"line":12153,"column":4,"offset":353993},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12155,"column":1,"offset":353997},"end":{"line":12155,"column":4,"offset":354000},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#wrapPageElement","children":[{"type":"html","value":"<code class=\"language-text\">wrapPageElement</code>","position":{"start":{"line":12157,"column":2,"offset":354005},"end":{"line":12157,"column":19,"offset":354022},"indent":[]}}],"position":{"start":{"line":12157,"column":1,"offset":354004},"end":{"line":12157,"column":102,"offset":354105},"indent":[]}},{"type":"text","value":" Function","position":{"start":{"line":12157,"column":102,"offset":354105},"end":{"line":12157,"column":111,"offset":354114},"indent":[]}}],"position":{"start":{"line":12157,"column":1,"offset":354004},"end":{"line":12157,"column":111,"offset":354114},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/ssr-develop-static-entry.js#L252-L259","children":[{"type":"text","value":"Source","position":{"start":{"line":12159,"column":2,"offset":354119},"end":{"line":12159,"column":8,"offset":354125},"indent":[]}}],"position":{"start":{"line":12159,"column":1,"offset":354118},"end":{"line":12159,"column":121,"offset":354238},"indent":[]}}],"position":{"start":{"line":12159,"column":1,"offset":354118},"end":{"line":12159,"column":121,"offset":354238},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(apiCallbackContext: object, pluginOptions: pluginOptions) => ReactNode","position":{"start":{"line":12161,"column":1,"offset":354242},"end":{"line":12161,"column":72,"offset":354313},"indent":[]}}],"position":{"start":{"line":12161,"column":1,"offset":354242},"end":{"line":12161,"column":72,"offset":354313},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Allow a plugin to wrap the page element.","position":{"start":{"line":12163,"column":1,"offset":354317},"end":{"line":12163,"column":41,"offset":354357},"indent":[]}}],"position":{"start":{"line":12163,"column":1,"offset":354317},"end":{"line":12163,"column":41,"offset":354357},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is useful for setting wrapper components around pages that won't get unmounted on page changes. For setting Provider components, use ","position":{"start":{"line":12165,"column":1,"offset":354361},"end":{"line":12165,"column":139,"offset":354499},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#wrapRootElement","children":[{"type":"text","value":"wrapRootElement","position":{"start":{"line":12165,"column":140,"offset":354500},"end":{"line":12165,"column":155,"offset":354515},"indent":[]}}],"position":{"start":{"line":12165,"column":139,"offset":354499},"end":{"line":12165,"column":238,"offset":354598},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":12165,"column":238,"offset":354598},"end":{"line":12165,"column":239,"offset":354599},"indent":[]}}],"position":{"start":{"line":12165,"column":1,"offset":354361},"end":{"line":12165,"column":239,"offset":354599},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Note:","position":{"start":{"line":12167,"column":2,"offset":354604},"end":{"line":12167,"column":7,"offset":354609},"indent":[]}}],"position":{"start":{"line":12167,"column":1,"offset":354603},"end":{"line":12167,"column":8,"offset":354610},"indent":[]}},{"type":"text","value":" There is an equivalent hook in Gatsby's ","position":{"start":{"line":12167,"column":8,"offset":354610},"end":{"line":12167,"column":49,"offset":354651},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/browser-apis/#wrapPageElement","children":[{"type":"text","value":"Browser API","position":{"start":{"line":12167,"column":50,"offset":354652},"end":{"line":12167,"column":61,"offset":354663},"indent":[]}}],"position":{"start":{"line":12167,"column":49,"offset":354651},"end":{"line":12167,"column":123,"offset":354725},"indent":[]}},{"type":"text","value":". It is recommended to use both APIs together. For example usage, check out ","position":{"start":{"line":12167,"column":123,"offset":354725},"end":{"line":12167,"column":199,"offset":354801},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-i18n","children":[{"type":"text","value":"Using i18n","position":{"start":{"line":12167,"column":200,"offset":354802},"end":{"line":12167,"column":210,"offset":354812},"indent":[]}}],"position":{"start":{"line":12167,"column":199,"offset":354801},"end":{"line":12167,"column":279,"offset":354881},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":12167,"column":279,"offset":354881},"end":{"line":12167,"column":280,"offset":354882},"indent":[]}}],"position":{"start":{"line":12167,"column":1,"offset":354603},"end":{"line":12167,"column":280,"offset":354882},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":12169,"column":6,"offset":354891},"end":{"line":12169,"column":16,"offset":354901},"indent":[]}}],"position":{"start":{"line":12169,"column":1,"offset":354886},"end":{"line":12169,"column":16,"offset":354901},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":12171,"column":5,"offset":354909},"end":{"line":12171,"column":10,"offset":354914},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":12173,"column":5,"offset":354922},"end":{"line":12173,"column":24,"offset":354941},"indent":[]}}],"position":{"start":{"line":12173,"column":5,"offset":354922},"end":{"line":12173,"column":24,"offset":354941},"indent":[]}}],"position":{"start":{"line":12171,"column":1,"offset":354905},"end":{"line":12174,"column":1,"offset":354943},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12175,"column":5,"offset":354949},"end":{"line":12175,"column":11,"offset":354955},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `element` ReactNode\n\n    The \"Page\" React Element built by Gatsby.</code></pre></div>","position":{"start":{"line":12177,"column":5,"offset":354963},"end":{"line":12179,"column":54,"offset":355047},"indent":[1,5]}}],"position":{"start":{"line":12175,"column":1,"offset":354945},"end":{"line":12180,"column":1,"offset":355049},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12181,"column":5,"offset":355055},"end":{"line":12181,"column":11,"offset":355061},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `props` object\n\n    Props object used by page.</code></pre></div>","position":{"start":{"line":12183,"column":5,"offset":355069},"end":{"line":12185,"column":39,"offset":355133},"indent":[1,5]}}],"position":{"start":{"line":12181,"column":1,"offset":355051},"end":{"line":12186,"column":1,"offset":355135},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":12187,"column":5,"offset":355141},"end":{"line":12187,"column":10,"offset":355146},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">pluginOptions</code>","position":{"start":{"line":12189,"column":5,"offset":355154},"end":{"line":12189,"column":20,"offset":355169},"indent":[]}},{"type":"text","value":" object","position":{"start":{"line":12189,"column":20,"offset":355169},"end":{"line":12189,"column":27,"offset":355176},"indent":[]}}],"position":{"start":{"line":12189,"column":5,"offset":355154},"end":{"line":12189,"column":27,"offset":355176},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Object containing options defined in ","position":{"start":{"line":12191,"column":5,"offset":355184},"end":{"line":12191,"column":42,"offset":355221},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-config.js</code>","position":{"start":{"line":12191,"column":42,"offset":355221},"end":{"line":12191,"column":60,"offset":355239},"indent":[]}}],"position":{"start":{"line":12191,"column":5,"offset":355184},"end":{"line":12191,"column":60,"offset":355239},"indent":[]}}],"position":{"start":{"line":12187,"column":1,"offset":355137},"end":{"line":12191,"column":60,"offset":355239},"indent":[1,1,1,1]}}],"position":{"start":{"line":12171,"column":1,"offset":354905},"end":{"line":12191,"column":60,"offset":355239},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Return value","position":{"start":{"line":12193,"column":6,"offset":355248},"end":{"line":12193,"column":18,"offset":355260},"indent":[]}}],"position":{"start":{"line":12193,"column":1,"offset":355243},"end":{"line":12193,"column":18,"offset":355260},"indent":[]}},{"type":"heading","depth":5,"children":[],"position":{"start":{"line":12195,"column":1,"offset":355264},"end":{"line":12195,"column":6,"offset":355269},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ReactNode","position":{"start":{"line":12197,"column":1,"offset":355273},"end":{"line":12197,"column":10,"offset":355282},"indent":[]}}],"position":{"start":{"line":12197,"column":1,"offset":355273},"end":{"line":12197,"column":10,"offset":355282},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Wrapped element","position":{"start":{"line":12199,"column":1,"offset":355286},"end":{"line":12199,"column":16,"offset":355301},"indent":[]}}],"position":{"start":{"line":12199,"column":1,"offset":355286},"end":{"line":12199,"column":16,"offset":355301},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":12201,"column":6,"offset":355310},"end":{"line":12201,"column":13,"offset":355317},"indent":[]}}],"position":{"start":{"line":12201,"column":1,"offset":355305},"end":{"line":12201,"column":13,"offset":355317},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const React = require(\"react\")\n\nconst Layout = require(\"./src/components/layout\").default\n\nexports.wrapPageElement = ({ element, props }) => {\n\n  // props provide same data to Layout as Page element will get\n\n  // including location, data, etc - you don't need to pass it\n\n  return &lt;Layout {...props}>{element}&lt;/Layout>\n\n}</code></pre></div>","position":{"start":{"line":12203,"column":1,"offset":355321},"end":{"line":12219,"column":4,"offset":355669},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":12221,"column":1,"offset":355673},"end":{"line":12221,"column":4,"offset":355676},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12223,"column":1,"offset":355680},"end":{"line":12223,"column":4,"offset":355683},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#wrapRootElement","children":[{"type":"html","value":"<code class=\"language-text\">wrapRootElement</code>","position":{"start":{"line":12225,"column":2,"offset":355688},"end":{"line":12225,"column":19,"offset":355705},"indent":[]}}],"position":{"start":{"line":12225,"column":1,"offset":355687},"end":{"line":12225,"column":102,"offset":355788},"indent":[]}},{"type":"text","value":" Function","position":{"start":{"line":12225,"column":102,"offset":355788},"end":{"line":12225,"column":111,"offset":355797},"indent":[]}}],"position":{"start":{"line":12225,"column":1,"offset":355687},"end":{"line":12225,"column":111,"offset":355797},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/cache-dir/ssr-develop-static-entry.js#L274-L281","children":[{"type":"text","value":"Source","position":{"start":{"line":12227,"column":2,"offset":355802},"end":{"line":12227,"column":8,"offset":355808},"indent":[]}}],"position":{"start":{"line":12227,"column":1,"offset":355801},"end":{"line":12227,"column":121,"offset":355921},"indent":[]}}],"position":{"start":{"line":12227,"column":1,"offset":355801},"end":{"line":12227,"column":121,"offset":355921},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(apiCallbackContext: object, pluginOptions: pluginOptions) => ReactNode","position":{"start":{"line":12229,"column":1,"offset":355925},"end":{"line":12229,"column":72,"offset":355996},"indent":[]}}],"position":{"start":{"line":12229,"column":1,"offset":355925},"end":{"line":12229,"column":72,"offset":355996},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Allow a plugin to wrap the root element.","position":{"start":{"line":12231,"column":1,"offset":356000},"end":{"line":12231,"column":41,"offset":356040},"indent":[]}}],"position":{"start":{"line":12231,"column":1,"offset":356000},"end":{"line":12231,"column":41,"offset":356040},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is useful to set up any Provider components that will wrap your application. For setting persistent UI elements around pages use ","position":{"start":{"line":12233,"column":1,"offset":356044},"end":{"line":12233,"column":135,"offset":356178},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/#wrapPageElement","children":[{"type":"text","value":"wrapPageElement","position":{"start":{"line":12233,"column":136,"offset":356179},"end":{"line":12233,"column":151,"offset":356194},"indent":[]}}],"position":{"start":{"line":12233,"column":135,"offset":356178},"end":{"line":12233,"column":234,"offset":356277},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":12233,"column":234,"offset":356277},"end":{"line":12233,"column":235,"offset":356278},"indent":[]}}],"position":{"start":{"line":12233,"column":1,"offset":356044},"end":{"line":12233,"column":235,"offset":356278},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Note:","position":{"start":{"line":12235,"column":2,"offset":356283},"end":{"line":12235,"column":7,"offset":356288},"indent":[]}}],"position":{"start":{"line":12235,"column":1,"offset":356282},"end":{"line":12235,"column":8,"offset":356289},"indent":[]}},{"type":"text","value":" There is an equivalent hook in Gatsby's ","position":{"start":{"line":12235,"column":8,"offset":356289},"end":{"line":12235,"column":49,"offset":356330},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.com/docs/browser-apis/#wrapRootElement","children":[{"type":"text","value":"Browser API","position":{"start":{"line":12235,"column":50,"offset":356331},"end":{"line":12235,"column":61,"offset":356342},"indent":[]}}],"position":{"start":{"line":12235,"column":49,"offset":356330},"end":{"line":12235,"column":123,"offset":356404},"indent":[]}},{"type":"text","value":". It is recommended to use both APIs together. For example usage, check out ","position":{"start":{"line":12235,"column":123,"offset":356404},"end":{"line":12235,"column":199,"offset":356480},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-redux","children":[{"type":"text","value":"Using redux","position":{"start":{"line":12235,"column":200,"offset":356481},"end":{"line":12235,"column":211,"offset":356492},"indent":[]}}],"position":{"start":{"line":12235,"column":199,"offset":356480},"end":{"line":12235,"column":281,"offset":356562},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":12235,"column":281,"offset":356562},"end":{"line":12235,"column":282,"offset":356563},"indent":[]}}],"position":{"start":{"line":12235,"column":1,"offset":356282},"end":{"line":12235,"column":282,"offset":356563},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":12237,"column":6,"offset":356572},"end":{"line":12237,"column":16,"offset":356582},"indent":[]}}],"position":{"start":{"line":12237,"column":1,"offset":356567},"end":{"line":12237,"column":16,"offset":356582},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":12239,"column":5,"offset":356590},"end":{"line":12239,"column":10,"offset":356595},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"destructured object","position":{"start":{"line":12241,"column":5,"offset":356603},"end":{"line":12241,"column":24,"offset":356622},"indent":[]}}],"position":{"start":{"line":12241,"column":5,"offset":356603},"end":{"line":12241,"column":24,"offset":356622},"indent":[]}}],"position":{"start":{"line":12239,"column":1,"offset":356586},"end":{"line":12242,"column":1,"offset":356624},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":6,"children":[],"position":{"start":{"line":12243,"column":5,"offset":356630},"end":{"line":12243,"column":11,"offset":356636},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    `element` ReactNode\n\n    The \"Root\" React Element built by Gatsby.</code></pre></div>","position":{"start":{"line":12245,"column":5,"offset":356644},"end":{"line":12247,"column":54,"offset":356728},"indent":[1,5]}}],"position":{"start":{"line":12243,"column":1,"offset":356626},"end":{"line":12248,"column":1,"offset":356730},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"heading","depth":5,"children":[],"position":{"start":{"line":12249,"column":5,"offset":356736},"end":{"line":12249,"column":10,"offset":356741},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">pluginOptions</code>","position":{"start":{"line":12251,"column":5,"offset":356749},"end":{"line":12251,"column":20,"offset":356764},"indent":[]}},{"type":"text","value":" object","position":{"start":{"line":12251,"column":20,"offset":356764},"end":{"line":12251,"column":27,"offset":356771},"indent":[]}}],"position":{"start":{"line":12251,"column":5,"offset":356749},"end":{"line":12251,"column":27,"offset":356771},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Object containing options defined in ","position":{"start":{"line":12253,"column":5,"offset":356779},"end":{"line":12253,"column":42,"offset":356816},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gatsby-config.js</code>","position":{"start":{"line":12253,"column":42,"offset":356816},"end":{"line":12253,"column":60,"offset":356834},"indent":[]}}],"position":{"start":{"line":12253,"column":5,"offset":356779},"end":{"line":12253,"column":60,"offset":356834},"indent":[]}}],"position":{"start":{"line":12249,"column":1,"offset":356732},"end":{"line":12253,"column":60,"offset":356834},"indent":[1,1,1,1]}}],"position":{"start":{"line":12239,"column":1,"offset":356586},"end":{"line":12253,"column":60,"offset":356834},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Return value","position":{"start":{"line":12255,"column":6,"offset":356843},"end":{"line":12255,"column":18,"offset":356855},"indent":[]}}],"position":{"start":{"line":12255,"column":1,"offset":356838},"end":{"line":12255,"column":18,"offset":356855},"indent":[]}},{"type":"heading","depth":5,"children":[],"position":{"start":{"line":12257,"column":1,"offset":356859},"end":{"line":12257,"column":6,"offset":356864},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ReactNode","position":{"start":{"line":12259,"column":1,"offset":356868},"end":{"line":12259,"column":10,"offset":356877},"indent":[]}}],"position":{"start":{"line":12259,"column":1,"offset":356868},"end":{"line":12259,"column":10,"offset":356877},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Wrapped element","position":{"start":{"line":12261,"column":1,"offset":356881},"end":{"line":12261,"column":16,"offset":356896},"indent":[]}}],"position":{"start":{"line":12261,"column":1,"offset":356881},"end":{"line":12261,"column":16,"offset":356896},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Example","position":{"start":{"line":12263,"column":6,"offset":356905},"end":{"line":12263,"column":13,"offset":356912},"indent":[]}}],"position":{"start":{"line":12263,"column":1,"offset":356900},"end":{"line":12263,"column":13,"offset":356912},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const React = require(\"react\")\n\nconst { Provider } = require(\"react-redux\")\n\nconst createStore = require(\"./src/state/createStore\")\n\nconst store = createStore()\n\nexports.wrapRootElement = ({ element }) => {\n\n  return (\n\n    &lt;Provider store={store}>\n\n      {element}\n\n    &lt;/Provider>\n\n  )\n\n}</code></pre></div>","position":{"start":{"line":12265,"column":1,"offset":356916},"end":{"line":12289,"column":4,"offset":357240},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":12291,"column":1,"offset":357244},"end":{"line":12291,"column":4,"offset":357247},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12293,"column":1,"offset":357251},"end":{"line":12293,"column":4,"offset":357254},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12295,"column":1,"offset":357258},"end":{"line":12297,"column":4,"offset":357272},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12299,"column":1,"offset":357276},"end":{"line":12299,"column":4,"offset":357279},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12301,"column":1,"offset":357283},"end":{"line":12303,"column":4,"offset":357297},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12305,"column":1,"offset":357301},"end":{"line":12305,"column":4,"offset":357304},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12307,"column":1,"offset":357308},"end":{"line":12309,"column":4,"offset":357322},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12311,"column":1,"offset":357326},"end":{"line":12311,"column":4,"offset":357329},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12313,"column":1,"offset":357333},"end":{"line":12315,"column":4,"offset":357347},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12317,"column":1,"offset":357351},"end":{"line":12317,"column":4,"offset":357354},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12319,"column":1,"offset":357358},"end":{"line":12321,"column":4,"offset":357372},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12323,"column":1,"offset":357376},"end":{"line":12323,"column":4,"offset":357379},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12325,"column":1,"offset":357383},"end":{"line":12327,"column":4,"offset":357397},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12329,"column":1,"offset":357401},"end":{"line":12329,"column":4,"offset":357404},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12331,"column":1,"offset":357408},"end":{"line":12333,"column":4,"offset":357422},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12335,"column":1,"offset":357426},"end":{"line":12335,"column":4,"offset":357429},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12337,"column":1,"offset":357433},"end":{"line":12339,"column":4,"offset":357447},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12341,"column":1,"offset":357451},"end":{"line":12341,"column":4,"offset":357454},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12343,"column":1,"offset":357458},"end":{"line":12345,"column":4,"offset":357472},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12347,"column":1,"offset":357476},"end":{"line":12347,"column":4,"offset":357479},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12349,"column":1,"offset":357483},"end":{"line":12351,"column":4,"offset":357497},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12353,"column":1,"offset":357501},"end":{"line":12353,"column":4,"offset":357504},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12355,"column":1,"offset":357508},"end":{"line":12357,"column":4,"offset":357522},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12359,"column":1,"offset":357526},"end":{"line":12359,"column":4,"offset":357529},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12361,"column":1,"offset":357533},"end":{"line":12363,"column":4,"offset":357547},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12365,"column":1,"offset":357551},"end":{"line":12365,"column":4,"offset":357554},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12367,"column":1,"offset":357558},"end":{"line":12369,"column":4,"offset":357572},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12371,"column":1,"offset":357576},"end":{"line":12371,"column":4,"offset":357579},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12373,"column":1,"offset":357583},"end":{"line":12375,"column":4,"offset":357597},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12377,"column":1,"offset":357601},"end":{"line":12377,"column":4,"offset":357604},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12379,"column":1,"offset":357608},"end":{"line":12381,"column":4,"offset":357622},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12383,"column":1,"offset":357626},"end":{"line":12383,"column":4,"offset":357629},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12385,"column":1,"offset":357633},"end":{"line":12387,"column":4,"offset":357647},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12389,"column":1,"offset":357651},"end":{"line":12389,"column":4,"offset":357654},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12391,"column":1,"offset":357658},"end":{"line":12393,"column":4,"offset":357672},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12395,"column":1,"offset":357676},"end":{"line":12395,"column":4,"offset":357679},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12397,"column":1,"offset":357683},"end":{"line":12399,"column":4,"offset":357697},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12401,"column":1,"offset":357701},"end":{"line":12401,"column":4,"offset":357704},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12403,"column":1,"offset":357708},"end":{"line":12405,"column":4,"offset":357722},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12407,"column":1,"offset":357726},"end":{"line":12407,"column":4,"offset":357729},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12409,"column":1,"offset":357733},"end":{"line":12411,"column":4,"offset":357747},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12413,"column":1,"offset":357751},"end":{"line":12413,"column":4,"offset":357754},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12415,"column":1,"offset":357758},"end":{"line":12417,"column":4,"offset":357772},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12419,"column":1,"offset":357776},"end":{"line":12419,"column":4,"offset":357779},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12421,"column":1,"offset":357783},"end":{"line":12423,"column":4,"offset":357797},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12425,"column":1,"offset":357801},"end":{"line":12425,"column":4,"offset":357804},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12427,"column":1,"offset":357808},"end":{"line":12429,"column":4,"offset":357822},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12431,"column":1,"offset":357826},"end":{"line":12431,"column":4,"offset":357829},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12433,"column":1,"offset":357833},"end":{"line":12435,"column":4,"offset":357847},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12437,"column":1,"offset":357851},"end":{"line":12437,"column":4,"offset":357854},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12439,"column":1,"offset":357858},"end":{"line":12441,"column":4,"offset":357872},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12443,"column":1,"offset":357876},"end":{"line":12443,"column":4,"offset":357879},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12445,"column":1,"offset":357883},"end":{"line":12447,"column":4,"offset":357897},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12449,"column":1,"offset":357901},"end":{"line":12449,"column":4,"offset":357904},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12451,"column":1,"offset":357908},"end":{"line":12453,"column":4,"offset":357922},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12455,"column":1,"offset":357926},"end":{"line":12455,"column":4,"offset":357929},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12457,"column":1,"offset":357933},"end":{"line":12459,"column":4,"offset":357947},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12461,"column":1,"offset":357951},"end":{"line":12461,"column":4,"offset":357954},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12463,"column":1,"offset":357958},"end":{"line":12465,"column":4,"offset":357972},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12467,"column":1,"offset":357976},"end":{"line":12467,"column":4,"offset":357979},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12469,"column":1,"offset":357983},"end":{"line":12471,"column":4,"offset":357997},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12473,"column":1,"offset":358001},"end":{"line":12473,"column":4,"offset":358004},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12475,"column":1,"offset":358008},"end":{"line":12477,"column":4,"offset":358022},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12479,"column":1,"offset":358026},"end":{"line":12479,"column":4,"offset":358029},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12481,"column":1,"offset":358033},"end":{"line":12483,"column":4,"offset":358047},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12485,"column":1,"offset":358051},"end":{"line":12485,"column":4,"offset":358054},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12487,"column":1,"offset":358058},"end":{"line":12489,"column":4,"offset":358072},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12491,"column":1,"offset":358076},"end":{"line":12491,"column":4,"offset":358079},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12493,"column":1,"offset":358083},"end":{"line":12495,"column":4,"offset":358097},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12497,"column":1,"offset":358101},"end":{"line":12497,"column":4,"offset":358104},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12499,"column":1,"offset":358108},"end":{"line":12501,"column":4,"offset":358122},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12503,"column":1,"offset":358126},"end":{"line":12503,"column":4,"offset":358129},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12505,"column":1,"offset":358133},"end":{"line":12507,"column":4,"offset":358147},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12509,"column":1,"offset":358151},"end":{"line":12509,"column":4,"offset":358154},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12511,"column":1,"offset":358158},"end":{"line":12513,"column":4,"offset":358172},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12515,"column":1,"offset":358176},"end":{"line":12515,"column":4,"offset":358179},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12517,"column":1,"offset":358183},"end":{"line":12519,"column":4,"offset":358197},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12521,"column":1,"offset":358201},"end":{"line":12521,"column":4,"offset":358204},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12523,"column":1,"offset":358208},"end":{"line":12525,"column":4,"offset":358222},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12527,"column":1,"offset":358226},"end":{"line":12527,"column":4,"offset":358229},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12529,"column":1,"offset":358233},"end":{"line":12531,"column":4,"offset":358247},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12533,"column":1,"offset":358251},"end":{"line":12533,"column":4,"offset":358254},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12535,"column":1,"offset":358258},"end":{"line":12537,"column":4,"offset":358272},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12539,"column":1,"offset":358276},"end":{"line":12539,"column":4,"offset":358279},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12541,"column":1,"offset":358283},"end":{"line":12543,"column":4,"offset":358297},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12545,"column":1,"offset":358301},"end":{"line":12545,"column":4,"offset":358304},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12547,"column":1,"offset":358308},"end":{"line":12549,"column":4,"offset":358322},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12551,"column":1,"offset":358326},"end":{"line":12551,"column":4,"offset":358329},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12553,"column":1,"offset":358333},"end":{"line":12555,"column":4,"offset":358347},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12557,"column":1,"offset":358351},"end":{"line":12557,"column":4,"offset":358354},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12559,"column":1,"offset":358358},"end":{"line":12561,"column":4,"offset":358372},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12563,"column":1,"offset":358376},"end":{"line":12563,"column":4,"offset":358379},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12565,"column":1,"offset":358383},"end":{"line":12567,"column":4,"offset":358397},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12569,"column":1,"offset":358401},"end":{"line":12569,"column":4,"offset":358404},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12571,"column":1,"offset":358408},"end":{"line":12573,"column":4,"offset":358422},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12575,"column":1,"offset":358426},"end":{"line":12575,"column":4,"offset":358429},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12577,"column":1,"offset":358433},"end":{"line":12579,"column":4,"offset":358447},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12581,"column":1,"offset":358451},"end":{"line":12581,"column":4,"offset":358454},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12583,"column":1,"offset":358458},"end":{"line":12585,"column":4,"offset":358472},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12587,"column":1,"offset":358476},"end":{"line":12587,"column":4,"offset":358479},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12589,"column":1,"offset":358483},"end":{"line":12591,"column":4,"offset":358497},"indent":[1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12593,"column":1,"offset":358501},"end":{"line":12593,"column":4,"offset":358504},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span></code></pre></div>","position":{"start":{"line":12595,"column":1,"offset":358508},"end":{"line":12597,"column":4,"offset":358522},"indent":[1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":12598,"column":1,"offset":358524}}}}