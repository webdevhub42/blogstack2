{"expireTime":9007200911206577000,"key":"transformer-remark-markdown-ast-053247fa48f7e6c0bb0ccc1d577434b3-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/median-of-two-sorted-arrays/description/","children":[{"type":"text","value":"4. Median of Two Sorted Arrays","position":{"start":{"line":3,"column":5,"offset":6},"end":{"line":3,"column":35,"offset":36},"indent":[]}}],"position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":108,"offset":109},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":108,"offset":109},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":5,"column":5,"offset":115},"end":{"line":5,"column":13,"offset":123},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":111},"end":{"line":5,"column":13,"offset":123},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two sorted arrays nums1 and nums2 of size m and n respectively.","position":{"start":{"line":7,"column":1,"offset":125},"end":{"line":7,"column":74,"offset":198},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":125},"end":{"line":7,"column":74,"offset":198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).","position":{"start":{"line":9,"column":1,"offset":200},"end":{"line":9,"column":98,"offset":297},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":200},"end":{"line":9,"column":98,"offset":297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":11,"column":1,"offset":299},"end":{"line":11,"column":11,"offset":309},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":299},"end":{"line":11,"column":11,"offset":309},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nums1 = [1, 3]\nnums2 = [2]\n\nThe median is 2.0</code></pre></div>","position":{"start":{"line":13,"column":1,"offset":311},"end":{"line":18,"column":4,"offset":364},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":20,"column":1,"offset":366},"end":{"line":20,"column":11,"offset":376},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":366},"end":{"line":20,"column":11,"offset":376},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nums1 = [1, 2]\nnums2 = [3, 4]\n\nThe median is (2 + 3)/2 = 2.5</code></pre></div>","position":{"start":{"line":22,"column":1,"offset":378},"end":{"line":27,"column":4,"offset":446},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":29,"column":5,"offset":452},"end":{"line":29,"column":14,"offset":461},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":448},"end":{"line":29,"column":14,"offset":461},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"O(log (m+n)) means half of the sequence is ruled out on each loop. So obviously we need binary search.","position":{"start":{"line":31,"column":1,"offset":463},"end":{"line":31,"column":103,"offset":565},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":463},"end":{"line":31,"column":103,"offset":565},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To do it on two sorted arrays, we need a formula to guide division.","position":{"start":{"line":33,"column":1,"offset":567},"end":{"line":33,"column":68,"offset":634},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":567},"end":{"line":33,"column":68,"offset":634},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let ","position":{"start":{"line":35,"column":1,"offset":636},"end":{"line":35,"column":5,"offset":640},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums3</code>","position":{"start":{"line":35,"column":5,"offset":640},"end":{"line":35,"column":12,"offset":647},"indent":[]}},{"type":"text","value":" be the sorted array combining all the items in ","position":{"start":{"line":35,"column":12,"offset":647},"end":{"line":35,"column":60,"offset":695},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1</code>","position":{"start":{"line":35,"column":60,"offset":695},"end":{"line":35,"column":67,"offset":702},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":35,"column":67,"offset":702},"end":{"line":35,"column":72,"offset":707},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums2</code>","position":{"start":{"line":35,"column":72,"offset":707},"end":{"line":35,"column":79,"offset":714},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":35,"column":79,"offset":714},"end":{"line":35,"column":80,"offset":715},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":636},"end":{"line":35,"column":80,"offset":715},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If ","position":{"start":{"line":37,"column":1,"offset":717},"end":{"line":37,"column":4,"offset":720},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums2[j-1] &lt;= nums1[i] &lt;= nums2[j]</code>","position":{"start":{"line":37,"column":4,"offset":720},"end":{"line":37,"column":40,"offset":756},"indent":[]}},{"type":"text","value":", then we know ","position":{"start":{"line":37,"column":40,"offset":756},"end":{"line":37,"column":55,"offset":771},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[i]</code>","position":{"start":{"line":37,"column":55,"offset":771},"end":{"line":37,"column":65,"offset":781},"indent":[]}},{"type":"text","value":" is at ","position":{"start":{"line":37,"column":65,"offset":781},"end":{"line":37,"column":72,"offset":788},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">num3[i+j]</code>","position":{"start":{"line":37,"column":72,"offset":788},"end":{"line":37,"column":83,"offset":799},"indent":[]}},{"type":"text","value":". Same goes ","position":{"start":{"line":37,"column":83,"offset":799},"end":{"line":37,"column":95,"offset":811},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[i-1] &lt;= nums2[j] &lt;= nums1[i]</code>","position":{"start":{"line":37,"column":95,"offset":811},"end":{"line":37,"column":131,"offset":847},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":37,"column":131,"offset":847},"end":{"line":37,"column":132,"offset":848},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":717},"end":{"line":37,"column":132,"offset":848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let ","position":{"start":{"line":39,"column":1,"offset":850},"end":{"line":39,"column":5,"offset":854},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">k</code>","position":{"start":{"line":39,"column":5,"offset":854},"end":{"line":39,"column":8,"offset":857},"indent":[]}},{"type":"text","value":" be ","position":{"start":{"line":39,"column":8,"offset":857},"end":{"line":39,"column":12,"offset":861},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">⌊(m+n-1)/2⌋</code>","position":{"start":{"line":39,"column":12,"offset":861},"end":{"line":39,"column":25,"offset":874},"indent":[]}},{"type":"text","value":". We need to find ","position":{"start":{"line":39,"column":25,"offset":874},"end":{"line":39,"column":43,"offset":892},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums3[k]</code>","position":{"start":{"line":39,"column":43,"offset":892},"end":{"line":39,"column":53,"offset":902},"indent":[]}},{"type":"text","value":" (and also ","position":{"start":{"line":39,"column":53,"offset":902},"end":{"line":39,"column":64,"offset":913},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums3[k+1]</code>","position":{"start":{"line":39,"column":64,"offset":913},"end":{"line":39,"column":76,"offset":925},"indent":[]}},{"type":"text","value":" if m+n is even).","position":{"start":{"line":39,"column":76,"offset":925},"end":{"line":39,"column":93,"offset":942},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":850},"end":{"line":39,"column":93,"offset":942},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let ","position":{"start":{"line":41,"column":1,"offset":944},"end":{"line":41,"column":5,"offset":948},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">i + j = k</code>","position":{"start":{"line":41,"column":5,"offset":948},"end":{"line":41,"column":16,"offset":959},"indent":[]}},{"type":"text","value":", if we find ","position":{"start":{"line":41,"column":16,"offset":959},"end":{"line":41,"column":29,"offset":972},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums2[j-1] &lt;= nums1[i] &lt;= nums2[j]</code>","position":{"start":{"line":41,"column":29,"offset":972},"end":{"line":41,"column":65,"offset":1008},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":41,"column":65,"offset":1008},"end":{"line":41,"column":69,"offset":1012},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[i-1] &lt;= nums2[j] &lt;= nums1[i]</code>","position":{"start":{"line":41,"column":69,"offset":1012},"end":{"line":41,"column":105,"offset":1048},"indent":[]}},{"type":"text","value":", then we got ","position":{"start":{"line":41,"column":105,"offset":1048},"end":{"line":41,"column":119,"offset":1062},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">k</code>","position":{"start":{"line":41,"column":119,"offset":1062},"end":{"line":41,"column":122,"offset":1065},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":41,"column":122,"offset":1065},"end":{"line":41,"column":123,"offset":1066},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":944},"end":{"line":41,"column":123,"offset":1066},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Otherwise, if ","position":{"start":{"line":43,"column":1,"offset":1068},"end":{"line":43,"column":15,"offset":1082},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[i] &lt;= nums2[j]</code>","position":{"start":{"line":43,"column":15,"offset":1082},"end":{"line":43,"column":37,"offset":1104},"indent":[]}},{"type":"text","value":" then we know ","position":{"start":{"line":43,"column":37,"offset":1104},"end":{"line":43,"column":51,"offset":1118},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[i] &lt; nums2[j-1]</code>","position":{"start":{"line":43,"column":51,"offset":1118},"end":{"line":43,"column":74,"offset":1141},"indent":[]}},{"type":"text","value":" (because we did not find ","position":{"start":{"line":43,"column":74,"offset":1141},"end":{"line":43,"column":100,"offset":1167},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">k</code>","position":{"start":{"line":43,"column":100,"offset":1167},"end":{"line":43,"column":103,"offset":1170},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":43,"column":103,"offset":1170},"end":{"line":43,"column":105,"offset":1172},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1068},"end":{"line":43,"column":105,"offset":1172},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"There are ","position":{"start":{"line":45,"column":3,"offset":1176},"end":{"line":45,"column":13,"offset":1186},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":45,"column":13,"offset":1186},"end":{"line":45,"column":16,"offset":1189},"indent":[]}},{"type":"text","value":" items before ","position":{"start":{"line":45,"column":16,"offset":1189},"end":{"line":45,"column":30,"offset":1203},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[i]</code>","position":{"start":{"line":45,"column":30,"offset":1203},"end":{"line":45,"column":40,"offset":1213},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":45,"column":40,"offset":1213},"end":{"line":45,"column":46,"offset":1219},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">j-1</code>","position":{"start":{"line":45,"column":46,"offset":1219},"end":{"line":45,"column":51,"offset":1224},"indent":[]}},{"type":"text","value":" items brefor ","position":{"start":{"line":45,"column":51,"offset":1224},"end":{"line":45,"column":65,"offset":1238},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums2[j-1]</code>","position":{"start":{"line":45,"column":65,"offset":1238},"end":{"line":45,"column":77,"offset":1250},"indent":[]}},{"type":"text","value":", which means ","position":{"start":{"line":45,"column":77,"offset":1250},"end":{"line":45,"column":91,"offset":1264},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[0...i]</code>","position":{"start":{"line":45,"column":91,"offset":1264},"end":{"line":45,"column":105,"offset":1278},"indent":[]}},{"type":"text","value":" are before ","position":{"start":{"line":45,"column":105,"offset":1278},"end":{"line":45,"column":117,"offset":1290},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums3[i+j-1]</code>","position":{"start":{"line":45,"column":117,"offset":1290},"end":{"line":45,"column":131,"offset":1304},"indent":[]}},{"type":"text","value":". So we now know ","position":{"start":{"line":45,"column":131,"offset":1304},"end":{"line":45,"column":148,"offset":1321},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[0...i] &lt; nums3[k]</code>","position":{"start":{"line":45,"column":148,"offset":1321},"end":{"line":45,"column":173,"offset":1346},"indent":[]}},{"type":"text","value":". They can be safely discarded.","position":{"start":{"line":45,"column":173,"offset":1346},"end":{"line":45,"column":204,"offset":1377},"indent":[]}}],"position":{"start":{"line":45,"column":3,"offset":1176},"end":{"line":45,"column":204,"offset":1377},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1174},"end":{"line":45,"column":204,"offset":1377},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[],"position":{"start":{"line":46,"column":1,"offset":1378},"end":{"line":46,"column":3,"offset":1380},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We Also have ","position":{"start":{"line":47,"column":3,"offset":1383},"end":{"line":47,"column":16,"offset":1396},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[i] &lt; nums2[j]</code>","position":{"start":{"line":47,"column":16,"offset":1396},"end":{"line":47,"column":37,"offset":1417},"indent":[]}},{"type":"text","value":", which means ","position":{"start":{"line":47,"column":37,"offset":1417},"end":{"line":47,"column":51,"offset":1431},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums2[j...n)</code>","position":{"start":{"line":47,"column":51,"offset":1431},"end":{"line":47,"column":65,"offset":1445},"indent":[]}},{"type":"text","value":" are after ","position":{"start":{"line":47,"column":65,"offset":1445},"end":{"line":47,"column":76,"offset":1456},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums3[i+j]</code>","position":{"start":{"line":47,"column":76,"offset":1456},"end":{"line":47,"column":88,"offset":1468},"indent":[]}},{"type":"text","value":". So ","position":{"start":{"line":47,"column":88,"offset":1468},"end":{"line":47,"column":93,"offset":1473},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums2[j...n) > nums3[k]</code>","position":{"start":{"line":47,"column":93,"offset":1473},"end":{"line":47,"column":118,"offset":1498},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":47,"column":118,"offset":1498},"end":{"line":47,"column":119,"offset":1499},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":1383},"end":{"line":47,"column":119,"offset":1499},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1381},"end":{"line":47,"column":119,"offset":1499},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1174},"end":{"line":47,"column":119,"offset":1499},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Same goes ","position":{"start":{"line":49,"column":1,"offset":1501},"end":{"line":49,"column":11,"offset":1511},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">nums1[i-1] &lt;= nums2[j] &lt;= nums1[i]</code>","position":{"start":{"line":49,"column":11,"offset":1511},"end":{"line":49,"column":47,"offset":1547},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":49,"column":47,"offset":1547},"end":{"line":49,"column":48,"offset":1548},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1501},"end":{"line":49,"column":48,"offset":1548},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number}\n */</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">findMedianSortedArrays</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">nums1<span class=\"token punctuation\">,</span> nums2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> nums2<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> nums2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token function\">_find</span><span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">,</span> nums2<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">_find</span><span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">,</span> nums2<span class=\"token punctuation\">,</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">_find</span><span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">,</span> nums2<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">_find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums1<span class=\"token punctuation\">,</span> nums2<span class=\"token punctuation\">,</span> k</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> nums2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// So that the `i` below is always smalller than k,</span>\n        <span class=\"token comment\">// which makes `j` always non-negative</span>\n        <span class=\"token punctuation\">[</span>nums1<span class=\"token punctuation\">,</span> nums2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>nums2<span class=\"token punctuation\">,</span> nums1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> s1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> s2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> e1 <span class=\"token operator\">=</span> nums1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> e2 <span class=\"token operator\">=</span> nums2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>s1 <span class=\"token operator\">&lt;</span> e1 <span class=\"token operator\">||</span> s2 <span class=\"token operator\">&lt;</span> e2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> i <span class=\"token operator\">=</span> s1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e1 <span class=\"token operator\">-</span> s1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> j <span class=\"token operator\">=</span> k <span class=\"token operator\">-</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> ni <span class=\"token operator\">=</span> i <span class=\"token operator\">>=</span> e1 <span class=\"token operator\">?</span> <span class=\"token number\">Infinity</span> <span class=\"token operator\">:</span> nums1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> nj <span class=\"token operator\">=</span> j <span class=\"token operator\">>=</span> e2 <span class=\"token operator\">?</span> <span class=\"token number\">Infinity</span> <span class=\"token operator\">:</span> nums2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> ni_1 <span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">Infinity</span> <span class=\"token operator\">:</span> nums1<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> nj_1 <span class=\"token operator\">=</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">Infinity</span> <span class=\"token operator\">:</span> nums2<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nj_1 <span class=\"token operator\">&lt;=</span> ni <span class=\"token operator\">&amp;&amp;</span> ni <span class=\"token operator\">&lt;=</span> nj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> ni<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ni_1 <span class=\"token operator\">&lt;=</span> nj <span class=\"token operator\">&amp;&amp;</span> nj <span class=\"token operator\">&lt;=</span> ni<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> nj<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ni <span class=\"token operator\">&lt;=</span> nj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            s1 <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            e2 <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            s2 <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            e1 <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":51,"column":1,"offset":1550},"end":{"line":104,"column":4,"offset":2860},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":106,"column":1,"offset":2862},"end":{"line":106,"column":4,"offset":2865},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":108,"column":1,"offset":2867},"end":{"line":108,"column":4,"offset":2870},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":110,"column":1,"offset":2872},"end":{"line":110,"column":4,"offset":2875},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"☆","position":{"start":{"line":112,"column":1,"offset":2877},"end":{"line":112,"column":2,"offset":2878},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":112,"column":3,"offset":2879},"end":{"line":112,"column":21,"offset":2897},"indent":[]}}],"position":{"start":{"line":112,"column":2,"offset":2878},"end":{"line":112,"column":22,"offset":2898},"indent":[]}},{"type":"text","value":"☆☆","position":{"start":{"line":112,"column":22,"offset":2898},"end":{"line":112,"column":24,"offset":2900},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":112,"column":25,"offset":2901},"end":{"line":112,"column":43,"offset":2919},"indent":[]}}],"position":{"start":{"line":112,"column":24,"offset":2900},"end":{"line":112,"column":44,"offset":2920},"indent":[]}},{"type":"text","value":"☆","position":{"start":{"line":112,"column":44,"offset":2920},"end":{"line":112,"column":45,"offset":2921},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":2877},"end":{"line":112,"column":45,"offset":2921},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":114,"column":1,"offset":2923},"end":{"line":114,"column":4,"offset":2926},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":115,"column":1,"offset":2927}}}}