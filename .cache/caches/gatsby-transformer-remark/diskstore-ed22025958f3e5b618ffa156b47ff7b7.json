{"expireTime":9007200911870451000,"key":"transformer-remark-markdown-html-ast-a912a97fe8f460b6ea9c16debf3370de-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Task - working with variables","position":{"start":{"line":1,"column":5,"offset":4},"end":{"line":1,"column":34,"offset":33}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":34,"offset":33}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Declare a variable","position":{"start":{"line":3,"column":6,"offset":42},"end":{"line":3,"column":24,"offset":60}}}],"position":{"start":{"line":3,"column":4,"offset":40},"end":{"line":3,"column":26,"offset":62}}},{"type":"text","value":". Let's declare a variable using the ","position":{"start":{"line":3,"column":26,"offset":62},"end":{"line":3,"column":63,"offset":99}}},{"type":"raw","value":"<code class=\"language-text\">let</code>","position":{"start":{"line":3,"column":63,"offset":99},"end":{"line":3,"column":68,"offset":104}}},{"type":"text","value":" keyword:","position":{"start":{"line":3,"column":68,"offset":104},"end":{"line":3,"column":77,"offset":113}}}],"position":{"start":{"line":3,"column":1,"offset":37},"end":{"line":3,"column":77,"offset":113}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3,"column":1,"offset":37},"end":{"line":3,"column":77,"offset":113}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">   <span class=\"token keyword\">let</span> myVariable<span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":5,"column":1,"offset":117},"end":{"line":7,"column":5,"offset":158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":9,"column":1,"offset":162},"end":{"line":9,"column":4,"offset":165}}},{"type":"raw","value":"<code class=\"language-text\">myVariable</code>","position":{"start":{"line":9,"column":4,"offset":165},"end":{"line":9,"column":16,"offset":177}}},{"type":"text","value":" has now been declared using the ","position":{"start":{"line":9,"column":16,"offset":177},"end":{"line":9,"column":49,"offset":210}}},{"type":"raw","value":"<code class=\"language-text\">let</code>","position":{"start":{"line":9,"column":49,"offset":210},"end":{"line":9,"column":54,"offset":215}}},{"type":"text","value":" keyword. It currently doesn't have a value.","position":{"start":{"line":9,"column":54,"offset":215},"end":{"line":9,"column":98,"offset":259}}}],"position":{"start":{"line":9,"column":1,"offset":162},"end":{"line":9,"column":98,"offset":259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Assign a value","position":{"start":{"line":11,"column":6,"offset":268},"end":{"line":11,"column":20,"offset":282}}}],"position":{"start":{"line":11,"column":4,"offset":266},"end":{"line":11,"column":22,"offset":284}}},{"type":"text","value":". Store a value in a variable with the ","position":{"start":{"line":11,"column":22,"offset":284},"end":{"line":11,"column":61,"offset":323}}},{"type":"raw","value":"<code class=\"language-text\">=</code>","position":{"start":{"line":11,"column":61,"offset":323},"end":{"line":11,"column":64,"offset":326}}},{"type":"text","value":" operator, followed by the expected value.","position":{"start":{"line":11,"column":64,"offset":326},"end":{"line":11,"column":106,"offset":368}}}],"position":{"start":{"line":11,"column":1,"offset":263},"end":{"line":11,"column":106,"offset":368}}},{"type":"text","value":"\n"}],"position":{"start":{"line":11,"column":1,"offset":263},"end":{"line":11,"column":106,"offset":368}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">   myVariable <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":13,"column":1,"offset":372},"end":{"line":15,"column":5,"offset":415}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: the use of ","position":{"start":{"line":17,"column":6,"offset":424},"end":{"line":17,"column":23,"offset":441}}},{"type":"raw","value":"<code class=\"language-text\">=</code>","position":{"start":{"line":17,"column":23,"offset":441},"end":{"line":17,"column":26,"offset":444}}},{"type":"text","value":" in this lesson means we make use of an \"assignment operator\", used to set a value to a variable. It doesn't denote equality.","position":{"start":{"line":17,"column":26,"offset":444},"end":{"line":17,"column":151,"offset":569}}}],"position":{"start":{"line":17,"column":6,"offset":424},"end":{"line":17,"column":151,"offset":569}}},{"type":"text","value":"\n"}],"position":{"start":{"line":17,"column":1,"offset":419},"end":{"line":17,"column":151,"offset":569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ","position":{"start":{"line":19,"column":1,"offset":573},"end":{"line":19,"column":4,"offset":576}}},{"type":"raw","value":"<code class=\"language-text\">myVariable</code>","position":{"start":{"line":19,"column":4,"offset":576},"end":{"line":19,"column":16,"offset":588}}},{"type":"text","value":" has now been ","position":{"start":{"line":19,"column":16,"offset":588},"end":{"line":19,"column":30,"offset":602}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"initialized","position":{"start":{"line":19,"column":31,"offset":603},"end":{"line":19,"column":42,"offset":614}}}],"position":{"start":{"line":19,"column":30,"offset":602},"end":{"line":19,"column":43,"offset":615}}},{"type":"text","value":" with the value 123.","position":{"start":{"line":19,"column":43,"offset":615},"end":{"line":19,"column":63,"offset":635}}}],"position":{"start":{"line":19,"column":1,"offset":573},"end":{"line":19,"column":63,"offset":635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Refactor","position":{"start":{"line":21,"column":6,"offset":644},"end":{"line":21,"column":14,"offset":652}}}],"position":{"start":{"line":21,"column":4,"offset":642},"end":{"line":21,"column":16,"offset":654}}},{"type":"text","value":". Replace your code with the following statement.","position":{"start":{"line":21,"column":16,"offset":654},"end":{"line":21,"column":65,"offset":703}}}],"position":{"start":{"line":21,"column":1,"offset":639},"end":{"line":21,"column":65,"offset":703}}},{"type":"text","value":"\n"}],"position":{"start":{"line":21,"column":1,"offset":639},"end":{"line":21,"column":65,"offset":703}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">   <span class=\"token keyword\">let</span> myVariable <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":23,"column":1,"offset":707},"end":{"line":25,"column":5,"offset":754}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">The above is called an _explicit initialization_ when a variable is declared and is assigned a value at the same time.</code></pre></div>","position":{"start":{"line":27,"column":1,"offset":758},"end":{"line":27,"column":123,"offset":880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Change the variable value","position":{"start":{"line":29,"column":6,"offset":889},"end":{"line":29,"column":31,"offset":914}}}],"position":{"start":{"line":29,"column":4,"offset":887},"end":{"line":29,"column":33,"offset":916}}},{"type":"text","value":". Change the variable value in the following way:","position":{"start":{"line":29,"column":33,"offset":916},"end":{"line":29,"column":82,"offset":965}}}],"position":{"start":{"line":29,"column":1,"offset":884},"end":{"line":29,"column":82,"offset":965}}},{"type":"text","value":"\n"}],"position":{"start":{"line":29,"column":1,"offset":884},"end":{"line":29,"column":82,"offset":965}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">   myVariable <span class=\"token operator\">=</span> <span class=\"token number\">321</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":31,"column":1,"offset":969},"end":{"line":33,"column":4,"offset":1009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   Once a variable is declared, you can change its value at any point in your code with the ","position":{"start":{"line":35,"column":1,"offset":1013},"end":{"line":35,"column":93,"offset":1105}}},{"type":"raw","value":"<code class=\"language-text\">=</code>","position":{"start":{"line":35,"column":93,"offset":1105},"end":{"line":35,"column":96,"offset":1108}}},{"type":"text","value":" operator and the new value.","position":{"start":{"line":35,"column":96,"offset":1108},"end":{"line":35,"column":124,"offset":1136}}}],"position":{"start":{"line":35,"column":1,"offset":1013},"end":{"line":35,"column":124,"offset":1136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"   ✅ Try it! You can write JavaScript right in your browser. Open a browser window and navigate to Developer Tools. In the console, you will find a prompt; type ","position":{"start":{"line":37,"column":1,"offset":1140},"end":{"line":37,"column":162,"offset":1301}}},{"type":"raw","value":"<code class=\"language-text\">let myVariable = 123</code>","position":{"start":{"line":37,"column":162,"offset":1301},"end":{"line":37,"column":184,"offset":1323}}},{"type":"text","value":", press return, then type ","position":{"start":{"line":37,"column":184,"offset":1323},"end":{"line":37,"column":210,"offset":1349}}},{"type":"raw","value":"<code class=\"language-text\">myVariable</code>","position":{"start":{"line":37,"column":210,"offset":1349},"end":{"line":37,"column":222,"offset":1361}}},{"type":"text","value":". What happens? Note, you'll learn more about these concepts in subsequent lessons.","position":{"start":{"line":37,"column":222,"offset":1361},"end":{"line":37,"column":305,"offset":1444}}}],"position":{"start":{"line":37,"column":1,"offset":1140},"end":{"line":37,"column":305,"offset":1444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Constants","position":{"start":{"line":39,"column":4,"offset":1451},"end":{"line":39,"column":13,"offset":1460}}}],"position":{"start":{"line":39,"column":1,"offset":1448},"end":{"line":39,"column":13,"offset":1460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Declaration and initialization of a constant follows the same concepts as a variable, with the exception of the ","position":{"start":{"line":41,"column":1,"offset":1464},"end":{"line":41,"column":113,"offset":1576}}},{"type":"raw","value":"<code class=\"language-text\">const</code>","position":{"start":{"line":41,"column":113,"offset":1576},"end":{"line":41,"column":120,"offset":1583}}},{"type":"text","value":" keyword. Constants are typically declared with all uppercase letters.","position":{"start":{"line":41,"column":120,"offset":1583},"end":{"line":41,"column":190,"offset":1653}}}],"position":{"start":{"line":41,"column":1,"offset":1464},"end":{"line":41,"column":190,"offset":1653}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">MY_VARIABLE</span> <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":43,"column":1,"offset":1657},"end":{"line":45,"column":4,"offset":1701}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Constants are similar to variables, with two exceptions:","position":{"start":{"line":47,"column":1,"offset":1705},"end":{"line":47,"column":57,"offset":1761}}}],"position":{"start":{"line":47,"column":1,"offset":1705},"end":{"line":47,"column":57,"offset":1761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Must have a value","position":{"start":{"line":49,"column":5,"offset":1769},"end":{"line":49,"column":22,"offset":1786}}}],"position":{"start":{"line":49,"column":3,"offset":1767},"end":{"line":49,"column":24,"offset":1788}}},{"type":"text","value":". Constants must be initialized, or an error will occur when running code.","position":{"start":{"line":49,"column":24,"offset":1788},"end":{"line":49,"column":98,"offset":1862}}}],"position":{"start":{"line":49,"column":1,"offset":1765},"end":{"line":49,"column":98,"offset":1862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Reference cannot be changed","position":{"start":{"line":50,"column":5,"offset":1868},"end":{"line":50,"column":32,"offset":1895}}}],"position":{"start":{"line":50,"column":3,"offset":1866},"end":{"line":50,"column":34,"offset":1897}}},{"type":"text","value":". The reference of a constant cannot be changed once initialized, or an error will occur when running code. Let's look at two examples:","position":{"start":{"line":50,"column":34,"offset":1897},"end":{"line":50,"column":169,"offset":2032}}}],"position":{"start":{"line":50,"column":3,"offset":1866},"end":{"line":50,"column":169,"offset":2032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Simple value","position":{"start":{"line":51,"column":8,"offset":2041},"end":{"line":51,"column":20,"offset":2053}}}],"position":{"start":{"line":51,"column":6,"offset":2039},"end":{"line":51,"column":22,"offset":2055}}},{"type":"text","value":". The following is NOT allowed:","position":{"start":{"line":51,"column":22,"offset":2055},"end":{"line":51,"column":53,"offset":2086}}}],"position":{"start":{"line":51,"column":4,"offset":2037},"end":{"line":51,"column":53,"offset":2086}}},{"type":"text","value":"\n"}],"position":{"start":{"line":51,"column":4,"offset":2037},"end":{"line":51,"column":53,"offset":2086}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":1,"offset":1864},"end":{"line":52,"column":4,"offset":2091}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":1765},"end":{"line":52,"column":4,"offset":2091}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">      <span class=\"token keyword\">const</span> <span class=\"token constant\">PI</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n      <span class=\"token constant\">PI</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// not allowed</span></code></pre></div>","position":{"start":{"line":53,"column":1,"offset":2093},"end":{"line":56,"column":4,"offset":2162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Object reference is protected","position":{"start":{"line":58,"column":8,"offset":2174},"end":{"line":58,"column":37,"offset":2203}}}],"position":{"start":{"line":58,"column":6,"offset":2172},"end":{"line":58,"column":39,"offset":2205}}},{"type":"text","value":". The following is NOT allowed.","position":{"start":{"line":58,"column":39,"offset":2205},"end":{"line":58,"column":70,"offset":2236}}}],"position":{"start":{"line":58,"column":1,"offset":2167},"end":{"line":58,"column":70,"offset":2236}}},{"type":"text","value":"\n"}],"position":{"start":{"line":58,"column":1,"offset":2167},"end":{"line":58,"column":70,"offset":2236}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">      <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// not allowed</span></code></pre></div>","position":{"start":{"line":60,"column":1,"offset":2243},"end":{"line":63,"column":4,"offset":2327}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- **Object value is not protected**. The following IS allowed:</code></pre></div>","position":{"start":{"line":65,"column":1,"offset":2331},"end":{"line":66,"column":5,"offset":2403}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">      <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      obj<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// allowed</span></code></pre></div>","position":{"start":{"line":67,"column":1,"offset":2405},"end":{"line":70,"column":4,"offset":2482}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Above you are changing the value of the object but not the reference itself, which makes it allowed.</code></pre></div>","position":{"start":{"line":72,"column":1,"offset":2486},"end":{"line":72,"column":107,"offset":2592}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note, a ","position":{"start":{"line":74,"column":6,"offset":2601},"end":{"line":74,"column":14,"offset":2609}}},{"type":"raw","value":"<code class=\"language-text\">const</code>","position":{"start":{"line":74,"column":14,"offset":2609},"end":{"line":74,"column":21,"offset":2616}}},{"type":"text","value":" means the reference is protected from reassignment. The value is not ","position":{"start":{"line":74,"column":21,"offset":2616},"end":{"line":74,"column":91,"offset":2686}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"immutable","position":{"start":{"line":74,"column":92,"offset":2687},"end":{"line":74,"column":101,"offset":2696}}}],"position":{"start":{"line":74,"column":91,"offset":2686},"end":{"line":74,"column":102,"offset":2697}}},{"type":"text","value":" though and can change, especially if it's a complex construct like an object.","position":{"start":{"line":74,"column":102,"offset":2697},"end":{"line":74,"column":180,"offset":2775}}}],"position":{"start":{"line":74,"column":6,"offset":2601},"end":{"line":74,"column":180,"offset":2775}}},{"type":"text","value":"\n"}],"position":{"start":{"line":74,"column":1,"offset":2596},"end":{"line":74,"column":180,"offset":2775}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Data Types","position":{"start":{"line":76,"column":4,"offset":2782},"end":{"line":76,"column":14,"offset":2792}}}],"position":{"start":{"line":76,"column":1,"offset":2779},"end":{"line":76,"column":14,"offset":2792}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Variables can store many different types of values, like numbers and text. These various types of values are known as the ","position":{"start":{"line":78,"column":1,"offset":2796},"end":{"line":78,"column":123,"offset":2918}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"data type","position":{"start":{"line":78,"column":125,"offset":2920},"end":{"line":78,"column":134,"offset":2929}}}],"position":{"start":{"line":78,"column":123,"offset":2918},"end":{"line":78,"column":136,"offset":2931}}},{"type":"text","value":". Data types are an important part of software development because it helps developers make decisions on how the code should be written and how the software should run. Furthermore, some data types have unique features that help transform or extract additional information in a value.","position":{"start":{"line":78,"column":136,"offset":2931},"end":{"line":78,"column":420,"offset":3215}}}],"position":{"start":{"line":78,"column":1,"offset":2796},"end":{"line":78,"column":420,"offset":3215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"✅ Data Types are also referred to as JavaScript data primitives, as they are the lowest-level data types that are provided by the language. There are 6 primitive data types: string, number, bigint, boolean, undefined, and symbol. Take a minute to visualize what each of these primitives might represent. What is a ","position":{"start":{"line":80,"column":1,"offset":3219},"end":{"line":80,"column":315,"offset":3533}}},{"type":"raw","value":"<code class=\"language-text\">zebra</code>","position":{"start":{"line":80,"column":315,"offset":3533},"end":{"line":80,"column":322,"offset":3540}}},{"type":"text","value":"? How about ","position":{"start":{"line":80,"column":322,"offset":3540},"end":{"line":80,"column":334,"offset":3552}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":80,"column":334,"offset":3552},"end":{"line":80,"column":337,"offset":3555}}},{"type":"text","value":"? ","position":{"start":{"line":80,"column":337,"offset":3555},"end":{"line":80,"column":339,"offset":3557}}},{"type":"raw","value":"<code class=\"language-text\">true</code>","position":{"start":{"line":80,"column":339,"offset":3557},"end":{"line":80,"column":345,"offset":3563}}},{"type":"text","value":"?","position":{"start":{"line":80,"column":345,"offset":3563},"end":{"line":80,"column":346,"offset":3564}}}],"position":{"start":{"line":80,"column":1,"offset":3219},"end":{"line":80,"column":346,"offset":3564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Numbers","position":{"start":{"line":82,"column":5,"offset":3572},"end":{"line":82,"column":12,"offset":3579}}}],"position":{"start":{"line":82,"column":1,"offset":3568},"end":{"line":82,"column":12,"offset":3579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous section, the value of ","position":{"start":{"line":84,"column":1,"offset":3583},"end":{"line":84,"column":39,"offset":3621}}},{"type":"raw","value":"<code class=\"language-text\">myVariable</code>","position":{"start":{"line":84,"column":39,"offset":3621},"end":{"line":84,"column":51,"offset":3633}}},{"type":"text","value":" was a number data type.","position":{"start":{"line":84,"column":51,"offset":3633},"end":{"line":84,"column":75,"offset":3657}}}],"position":{"start":{"line":84,"column":1,"offset":3583},"end":{"line":84,"column":75,"offset":3657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">let myVariable = 123;</code>","position":{"start":{"line":86,"column":1,"offset":3661},"end":{"line":86,"column":24,"offset":3684}}}],"position":{"start":{"line":86,"column":1,"offset":3661},"end":{"line":86,"column":24,"offset":3684}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Variables can store all types of numbers, including decimals or negative numbers. Numbers also can be used with arithmetic operators, covered in the ","position":{"start":{"line":88,"column":1,"offset":3688},"end":{"line":88,"column":150,"offset":3837}}},{"type":"element","tagName":"a","properties":{"href":"#operators"},"children":[{"type":"text","value":"next section","position":{"start":{"line":88,"column":151,"offset":3838},"end":{"line":88,"column":163,"offset":3850}}}],"position":{"start":{"line":88,"column":150,"offset":3837},"end":{"line":88,"column":176,"offset":3863}}},{"type":"text","value":".","position":{"start":{"line":88,"column":176,"offset":3863},"end":{"line":88,"column":177,"offset":3864}}}],"position":{"start":{"line":88,"column":1,"offset":3688},"end":{"line":88,"column":177,"offset":3864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Arithmetic Operators","position":{"start":{"line":90,"column":5,"offset":3872},"end":{"line":90,"column":25,"offset":3892}}}],"position":{"start":{"line":90,"column":1,"offset":3868},"end":{"line":90,"column":25,"offset":3892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are several types of operators to use when performing arithmetic functions, and some are listed here:","position":{"start":{"line":92,"column":1,"offset":3896},"end":{"line":92,"column":108,"offset":4003}}}],"position":{"start":{"line":92,"column":1,"offset":3896},"end":{"line":92,"column":108,"offset":4003}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Symbol","position":{"start":{"line":94,"column":3,"offset":4009},"end":{"line":94,"column":9,"offset":4015}}}],"position":{"start":{"line":94,"column":3,"offset":4009},"end":{"line":94,"column":9,"offset":4015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Description","position":{"start":{"line":94,"column":12,"offset":4018},"end":{"line":94,"column":23,"offset":4029}}}],"position":{"start":{"line":94,"column":12,"offset":4018},"end":{"line":94,"column":84,"offset":4090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Example","position":{"start":{"line":94,"column":87,"offset":4093},"end":{"line":94,"column":94,"offset":4100}}}],"position":{"start":{"line":94,"column":87,"offset":4093},"end":{"line":94,"column":119,"offset":4125}}},{"type":"text","value":"\n"}],"position":{"start":{"line":94,"column":1,"offset":4007},"end":{"line":94,"column":121,"offset":4127}}},{"type":"text","value":"\n"}],"position":{"start":{"line":94,"column":1,"offset":4007},"end":{"line":94,"column":121,"offset":4127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":96,"column":3,"offset":4253},"end":{"line":96,"column":6,"offset":4256}}}],"position":{"start":{"line":96,"column":3,"offset":4253},"end":{"line":96,"column":9,"offset":4259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Addition","position":{"start":{"line":96,"column":14,"offset":4264},"end":{"line":96,"column":22,"offset":4272}}}],"position":{"start":{"line":96,"column":12,"offset":4262},"end":{"line":96,"column":24,"offset":4274}}},{"type":"text","value":": Calculates the sum of two numbers","position":{"start":{"line":96,"column":24,"offset":4274},"end":{"line":96,"column":59,"offset":4309}}}],"position":{"start":{"line":96,"column":12,"offset":4262},"end":{"line":96,"column":84,"offset":4334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">1 + 2 //expected answer is 3</code>","position":{"start":{"line":96,"column":87,"offset":4337},"end":{"line":96,"column":117,"offset":4367}}}],"position":{"start":{"line":96,"column":87,"offset":4337},"end":{"line":96,"column":119,"offset":4369}}},{"type":"text","value":"\n"}],"position":{"start":{"line":96,"column":1,"offset":4251},"end":{"line":96,"column":121,"offset":4371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":97,"column":3,"offset":4375},"end":{"line":97,"column":6,"offset":4378}}}],"position":{"start":{"line":97,"column":3,"offset":4375},"end":{"line":97,"column":9,"offset":4381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Subtraction","position":{"start":{"line":97,"column":14,"offset":4386},"end":{"line":97,"column":25,"offset":4397}}}],"position":{"start":{"line":97,"column":12,"offset":4384},"end":{"line":97,"column":27,"offset":4399}}},{"type":"text","value":": Calculates the difference of two numbers","position":{"start":{"line":97,"column":27,"offset":4399},"end":{"line":97,"column":69,"offset":4441}}}],"position":{"start":{"line":97,"column":12,"offset":4384},"end":{"line":97,"column":84,"offset":4456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">1 - 2 //expected answer is -1</code>","position":{"start":{"line":97,"column":87,"offset":4459},"end":{"line":97,"column":118,"offset":4490}}}],"position":{"start":{"line":97,"column":87,"offset":4459},"end":{"line":97,"column":119,"offset":4491}}},{"type":"text","value":"\n"}],"position":{"start":{"line":97,"column":1,"offset":4373},"end":{"line":97,"column":121,"offset":4493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":98,"column":3,"offset":4497},"end":{"line":98,"column":6,"offset":4500}}}],"position":{"start":{"line":98,"column":3,"offset":4497},"end":{"line":98,"column":9,"offset":4503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Multiplication","position":{"start":{"line":98,"column":14,"offset":4508},"end":{"line":98,"column":28,"offset":4522}}}],"position":{"start":{"line":98,"column":12,"offset":4506},"end":{"line":98,"column":30,"offset":4524}}},{"type":"text","value":": Calculates the product of two numbers","position":{"start":{"line":98,"column":30,"offset":4524},"end":{"line":98,"column":69,"offset":4563}}}],"position":{"start":{"line":98,"column":12,"offset":4506},"end":{"line":98,"column":84,"offset":4578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">1 * 2 //expected answer is 2</code>","position":{"start":{"line":98,"column":87,"offset":4581},"end":{"line":98,"column":117,"offset":4611}}}],"position":{"start":{"line":98,"column":87,"offset":4581},"end":{"line":98,"column":119,"offset":4613}}},{"type":"text","value":"\n"}],"position":{"start":{"line":98,"column":1,"offset":4495},"end":{"line":98,"column":121,"offset":4615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">/</code>","position":{"start":{"line":99,"column":3,"offset":4619},"end":{"line":99,"column":6,"offset":4622}}}],"position":{"start":{"line":99,"column":3,"offset":4619},"end":{"line":99,"column":9,"offset":4625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Division","position":{"start":{"line":99,"column":14,"offset":4630},"end":{"line":99,"column":22,"offset":4638}}}],"position":{"start":{"line":99,"column":12,"offset":4628},"end":{"line":99,"column":24,"offset":4640}}},{"type":"text","value":": Calculates the quotient of two numbers","position":{"start":{"line":99,"column":24,"offset":4640},"end":{"line":99,"column":64,"offset":4680}}}],"position":{"start":{"line":99,"column":12,"offset":4628},"end":{"line":99,"column":84,"offset":4700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">1 / 2 //expected answer is 0.5</code>","position":{"start":{"line":99,"column":87,"offset":4703},"end":{"line":99,"column":119,"offset":4735}}}],"position":{"start":{"line":99,"column":87,"offset":4703},"end":{"line":99,"column":119,"offset":4735}}},{"type":"text","value":"\n"}],"position":{"start":{"line":99,"column":1,"offset":4617},"end":{"line":99,"column":121,"offset":4737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":100,"column":3,"offset":4741},"end":{"line":100,"column":6,"offset":4744}}}],"position":{"start":{"line":100,"column":3,"offset":4741},"end":{"line":100,"column":9,"offset":4747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Remainder","position":{"start":{"line":100,"column":14,"offset":4752},"end":{"line":100,"column":23,"offset":4761}}}],"position":{"start":{"line":100,"column":12,"offset":4750},"end":{"line":100,"column":25,"offset":4763}}},{"type":"text","value":": Calculates the remainder from the division of two numbers","position":{"start":{"line":100,"column":25,"offset":4763},"end":{"line":100,"column":84,"offset":4822}}}],"position":{"start":{"line":100,"column":12,"offset":4750},"end":{"line":100,"column":84,"offset":4822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">1 % 2 //expected answer is 1</code>","position":{"start":{"line":100,"column":87,"offset":4825},"end":{"line":100,"column":117,"offset":4855}}}],"position":{"start":{"line":100,"column":87,"offset":4825},"end":{"line":100,"column":119,"offset":4857}}},{"type":"text","value":"\n"}],"position":{"start":{"line":100,"column":1,"offset":4739},"end":{"line":100,"column":121,"offset":4859}}},{"type":"text","value":"\n"}],"position":{"start":{"line":96,"column":1,"offset":4251},"end":{"line":100,"column":121,"offset":4859}}},{"type":"text","value":"\n"}],"position":{"start":{"line":94,"column":1,"offset":4007},"end":{"line":100,"column":121,"offset":4859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"✅ Try it! Try an arithmetic operation in your browser's console. Do the results surprise you?","position":{"start":{"line":102,"column":1,"offset":4863},"end":{"line":102,"column":94,"offset":4956}}}],"position":{"start":{"line":102,"column":1,"offset":4863},"end":{"line":102,"column":94,"offset":4956}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Strings","position":{"start":{"line":104,"column":5,"offset":4964},"end":{"line":104,"column":12,"offset":4971}}}],"position":{"start":{"line":104,"column":1,"offset":4960},"end":{"line":104,"column":12,"offset":4971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Strings are sets of characters that reside between single or double quotes.","position":{"start":{"line":106,"column":1,"offset":4975},"end":{"line":106,"column":76,"offset":5050}}}],"position":{"start":{"line":106,"column":1,"offset":4975},"end":{"line":106,"column":76,"offset":5050}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">'This is a string'</code>","position":{"start":{"line":108,"column":3,"offset":5056},"end":{"line":108,"column":23,"offset":5076}}}],"position":{"start":{"line":108,"column":1,"offset":5054},"end":{"line":108,"column":23,"offset":5076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">\"This is also a string\"</code>","position":{"start":{"line":109,"column":3,"offset":5080},"end":{"line":109,"column":28,"offset":5105}}}],"position":{"start":{"line":109,"column":1,"offset":5078},"end":{"line":109,"column":28,"offset":5105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">let myString = 'This is a string value stored in a variable';</code>","position":{"start":{"line":110,"column":3,"offset":5109},"end":{"line":110,"column":66,"offset":5172}}}],"position":{"start":{"line":110,"column":1,"offset":5107},"end":{"line":110,"column":66,"offset":5172}}},{"type":"text","value":"\n"}],"position":{"start":{"line":108,"column":1,"offset":5054},"end":{"line":110,"column":66,"offset":5172}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Remember to use quotes when writing a string, or else JavaScript will assume it's a variable name.","position":{"start":{"line":112,"column":1,"offset":5176},"end":{"line":112,"column":99,"offset":5274}}}],"position":{"start":{"line":112,"column":1,"offset":5176},"end":{"line":112,"column":99,"offset":5274}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Formatting Strings","position":{"start":{"line":114,"column":5,"offset":5282},"end":{"line":114,"column":23,"offset":5300}}}],"position":{"start":{"line":114,"column":1,"offset":5278},"end":{"line":114,"column":23,"offset":5300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Strings are textual, and will require formatting from time to time.","position":{"start":{"line":116,"column":1,"offset":5304},"end":{"line":116,"column":68,"offset":5371}}}],"position":{"start":{"line":116,"column":1,"offset":5304},"end":{"line":116,"column":68,"offset":5371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To ","position":{"start":{"line":118,"column":1,"offset":5375},"end":{"line":118,"column":4,"offset":5378}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"concatenate","position":{"start":{"line":118,"column":6,"offset":5380},"end":{"line":118,"column":17,"offset":5391}}}],"position":{"start":{"line":118,"column":4,"offset":5378},"end":{"line":118,"column":19,"offset":5393}}},{"type":"text","value":" two or more strings, or join them together, use the ","position":{"start":{"line":118,"column":19,"offset":5393},"end":{"line":118,"column":72,"offset":5446}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":118,"column":72,"offset":5446},"end":{"line":118,"column":75,"offset":5449}}},{"type":"text","value":" operator.","position":{"start":{"line":118,"column":75,"offset":5449},"end":{"line":118,"column":85,"offset":5459}}}],"position":{"start":{"line":118,"column":1,"offset":5375},"end":{"line":118,"column":85,"offset":5459}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> myString1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> myString2 <span class=\"token operator\">=</span> <span class=\"token string\">\"World\"</span><span class=\"token punctuation\">;</span>\n\nmyString1 <span class=\"token operator\">+</span> myString2 <span class=\"token operator\">+</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//HelloWorld!</span>\nmyString1 <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> myString2 <span class=\"token operator\">+</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Hello World!</span>\nmyString1 <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> myString2 <span class=\"token operator\">+</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Hello, World!</span></code></pre></div>","position":{"start":{"line":120,"column":1,"offset":5463},"end":{"line":128,"column":4,"offset":5685}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"✅ Why does ","position":{"start":{"line":130,"column":1,"offset":5689},"end":{"line":130,"column":12,"offset":5700}}},{"type":"raw","value":"<code class=\"language-text\">1 + 1 = 2</code>","position":{"start":{"line":130,"column":12,"offset":5700},"end":{"line":130,"column":23,"offset":5711}}},{"type":"text","value":" in JavaScript, but ","position":{"start":{"line":130,"column":23,"offset":5711},"end":{"line":130,"column":43,"offset":5731}}},{"type":"raw","value":"<code class=\"language-text\">'1' + '1' = 11?</code>","position":{"start":{"line":130,"column":43,"offset":5731},"end":{"line":130,"column":60,"offset":5748}}},{"type":"text","value":" Think about it. What about ","position":{"start":{"line":130,"column":60,"offset":5748},"end":{"line":130,"column":88,"offset":5776}}},{"type":"raw","value":"<code class=\"language-text\">'1' + 1</code>","position":{"start":{"line":130,"column":88,"offset":5776},"end":{"line":130,"column":97,"offset":5785}}},{"type":"text","value":"?","position":{"start":{"line":130,"column":97,"offset":5785},"end":{"line":130,"column":98,"offset":5786}}}],"position":{"start":{"line":130,"column":1,"offset":5689},"end":{"line":130,"column":98,"offset":5786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Template literals","position":{"start":{"line":132,"column":3,"offset":5792},"end":{"line":132,"column":20,"offset":5809}}}],"position":{"start":{"line":132,"column":1,"offset":5790},"end":{"line":132,"column":22,"offset":5811}}},{"type":"text","value":" are another way to format strings, except instead of quotes, the backtick  is used. Anything that is not plain text must be placed inside placeholders ","position":{"start":{"line":132,"column":22,"offset":5811},"end":{"line":132,"column":174,"offset":5963}}},{"type":"raw","value":"<code class=\"language-text\">${ }</code>","position":{"start":{"line":132,"column":174,"offset":5963},"end":{"line":132,"column":180,"offset":5969}}},{"type":"text","value":". This includes any variables that may be strings.","position":{"start":{"line":132,"column":180,"offset":5969},"end":{"line":132,"column":230,"offset":6019}}}],"position":{"start":{"line":132,"column":1,"offset":5790},"end":{"line":132,"column":230,"offset":6019}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> myString1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> myString2 <span class=\"token operator\">=</span> <span class=\"token string\">\"World\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>myString1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>myString2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token comment\">//Hello World!</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>myString1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>myString2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token comment\">//Hello, World!</span></code></pre></div>","position":{"start":{"line":134,"column":1,"offset":6023},"end":{"line":140,"column":4,"offset":6187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can achieve your formatting goals with either method, but template literals will respect any spaces and line breaks.","position":{"start":{"line":142,"column":1,"offset":6191},"end":{"line":142,"column":121,"offset":6311}}}],"position":{"start":{"line":142,"column":1,"offset":6191},"end":{"line":142,"column":121,"offset":6311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"✅ When would you use a template literal vs. a plain string?","position":{"start":{"line":144,"column":1,"offset":6315},"end":{"line":144,"column":60,"offset":6374}}}],"position":{"start":{"line":144,"column":1,"offset":6315},"end":{"line":144,"column":60,"offset":6374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Booleans","position":{"start":{"line":146,"column":5,"offset":6382},"end":{"line":146,"column":13,"offset":6390}}}],"position":{"start":{"line":146,"column":1,"offset":6378},"end":{"line":146,"column":13,"offset":6390}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Booleans can be only two values: ","position":{"start":{"line":148,"column":1,"offset":6394},"end":{"line":148,"column":34,"offset":6427}}},{"type":"raw","value":"<code class=\"language-text\">true</code>","position":{"start":{"line":148,"column":34,"offset":6427},"end":{"line":148,"column":40,"offset":6433}}},{"type":"text","value":" or ","position":{"start":{"line":148,"column":40,"offset":6433},"end":{"line":148,"column":44,"offset":6437}}},{"type":"raw","value":"<code class=\"language-text\">false</code>","position":{"start":{"line":148,"column":44,"offset":6437},"end":{"line":148,"column":51,"offset":6444}}},{"type":"text","value":". Booleans can help make decisions on which lines of code should run when certain conditions are met. In many cases, ","position":{"start":{"line":148,"column":51,"offset":6444},"end":{"line":148,"column":168,"offset":6561}}},{"type":"element","tagName":"a","properties":{"href":"#operators"},"children":[{"type":"text","value":"operators","position":{"start":{"line":148,"column":169,"offset":6562},"end":{"line":148,"column":178,"offset":6571}}}],"position":{"start":{"line":148,"column":168,"offset":6561},"end":{"line":148,"column":191,"offset":6584}}},{"type":"text","value":" assist with setting the value of a Boolean and you will often notice and write variables being initialized or their values being updated with an operator.","position":{"start":{"line":148,"column":191,"offset":6584},"end":{"line":148,"column":346,"offset":6739}}}],"position":{"start":{"line":148,"column":1,"offset":6394},"end":{"line":148,"column":346,"offset":6739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">let myTrueBool = true</code>","position":{"start":{"line":150,"column":3,"offset":6745},"end":{"line":150,"column":26,"offset":6768}}}],"position":{"start":{"line":150,"column":1,"offset":6743},"end":{"line":150,"column":26,"offset":6768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">let myFalseBool = false</code>","position":{"start":{"line":151,"column":3,"offset":6772},"end":{"line":151,"column":28,"offset":6797}}}],"position":{"start":{"line":151,"column":1,"offset":6770},"end":{"line":151,"column":28,"offset":6797}}},{"type":"text","value":"\n"}],"position":{"start":{"line":150,"column":1,"offset":6743},"end":{"line":151,"column":28,"offset":6797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"✅ A variable can be considered 'truthy' if it evaluates to a boolean ","position":{"start":{"line":153,"column":1,"offset":6801},"end":{"line":153,"column":70,"offset":6870}}},{"type":"raw","value":"<code class=\"language-text\">true</code>","position":{"start":{"line":153,"column":70,"offset":6870},"end":{"line":153,"column":76,"offset":6876}}},{"type":"text","value":". Interestingly, in JavaScript, ","position":{"start":{"line":153,"column":76,"offset":6876},"end":{"line":153,"column":108,"offset":6908}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Glossary/Truthy"},"children":[{"type":"text","value":"all values are truthy unless defined as falsy","position":{"start":{"line":153,"column":109,"offset":6909},"end":{"line":153,"column":154,"offset":6954}}}],"position":{"start":{"line":153,"column":108,"offset":6908},"end":{"line":153,"column":213,"offset":7013}}},{"type":"text","value":".","position":{"start":{"line":153,"column":213,"offset":7013},"end":{"line":153,"column":214,"offset":7014}}}],"position":{"start":{"line":153,"column":1,"offset":6801},"end":{"line":153,"column":214,"offset":7014}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":154,"column":1,"offset":7016}}}}