{"expireTime":9007200911206578000,"key":"transformer-remark-markdown-ast-8ad843d7b9de78a12ab66ee6928afc6d-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"AJAX and APIs - React","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":24,"offset":25},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":24,"offset":25},"indent":[]}},{"type":"blockquote","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Excerpt","position":{"start":{"line":5,"column":6,"offset":32},"end":{"line":5,"column":13,"offset":39},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":29},"end":{"line":5,"column":13,"offset":39},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A JavaScript library for building user interfaces","position":{"start":{"line":7,"column":3,"offset":44},"end":{"line":7,"column":52,"offset":93},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":44},"end":{"line":7,"column":52,"offset":93},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":27},"end":{"line":7,"column":52,"offset":93},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":9,"column":1,"offset":95},"end":{"line":9,"column":4,"offset":98},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#how-can-i-make-an-ajax-call","children":[],"position":{"start":{"line":11,"column":5,"offset":104},"end":{"line":11,"column":81,"offset":180},"indent":[]}},{"type":"text","value":"How can I make an AJAX call?","position":{"start":{"line":11,"column":81,"offset":180},"end":{"line":11,"column":109,"offset":208},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":100},"end":{"line":11,"column":109,"offset":208},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can use any AJAX library you like with React. Some popular ones are ","position":{"start":{"line":13,"column":1,"offset":210},"end":{"line":13,"column":73,"offset":282},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/axios/axios","children":[{"type":"text","value":"Axios","position":{"start":{"line":13,"column":74,"offset":283},"end":{"line":13,"column":79,"offset":288},"indent":[]}}],"position":{"start":{"line":13,"column":73,"offset":282},"end":{"line":13,"column":112,"offset":321},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":13,"column":112,"offset":321},"end":{"line":13,"column":114,"offset":323},"indent":[]}},{"type":"link","title":null,"url":"https://api.jquery.com/jQuery.ajax/","children":[{"type":"text","value":"jQuery AJAX","position":{"start":{"line":13,"column":115,"offset":324},"end":{"line":13,"column":126,"offset":335},"indent":[]}}],"position":{"start":{"line":13,"column":114,"offset":323},"end":{"line":13,"column":164,"offset":373},"indent":[]}},{"type":"text","value":", and the browser built-in ","position":{"start":{"line":13,"column":164,"offset":373},"end":{"line":13,"column":191,"offset":400},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API","children":[{"type":"text","value":"window.fetch","position":{"start":{"line":13,"column":192,"offset":401},"end":{"line":13,"column":204,"offset":413},"indent":[]}}],"position":{"start":{"line":13,"column":191,"offset":400},"end":{"line":13,"column":265,"offset":474},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":13,"column":265,"offset":474},"end":{"line":13,"column":266,"offset":475},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":210},"end":{"line":13,"column":266,"offset":475},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#where-in-the-component-lifecycle-should-i-make-an-ajax-call","children":[],"position":{"start":{"line":15,"column":5,"offset":481},"end":{"line":15,"column":113,"offset":589},"indent":[]}},{"type":"text","value":"Where in the component lifecycle should I make an AJAX call?","position":{"start":{"line":15,"column":113,"offset":589},"end":{"line":15,"column":173,"offset":649},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":477},"end":{"line":15,"column":173,"offset":649},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You should populate data with AJAX calls in the ","position":{"start":{"line":17,"column":1,"offset":651},"end":{"line":17,"column":49,"offset":699},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/react-component.html#mounting","children":[{"type":"html","value":"<code class=\"language-text\">componentDidMount</code>","position":{"start":{"line":17,"column":50,"offset":700},"end":{"line":17,"column":69,"offset":719},"indent":[]}}],"position":{"start":{"line":17,"column":49,"offset":699},"end":{"line":17,"column":126,"offset":776},"indent":[]}},{"type":"text","value":" lifecycle method. This is so you can use ","position":{"start":{"line":17,"column":126,"offset":776},"end":{"line":17,"column":168,"offset":818},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">setState</code>","position":{"start":{"line":17,"column":168,"offset":818},"end":{"line":17,"column":178,"offset":828},"indent":[]}},{"type":"text","value":" to update your component when the data is retrieved.","position":{"start":{"line":17,"column":178,"offset":828},"end":{"line":17,"column":231,"offset":881},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":651},"end":{"line":17,"column":231,"offset":881},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#example-using-ajax-results-to-set-local-state","children":[],"position":{"start":{"line":19,"column":5,"offset":887},"end":{"line":19,"column":99,"offset":981},"indent":[]}},{"type":"text","value":"Example: Using AJAX results to set local state","position":{"start":{"line":19,"column":99,"offset":981},"end":{"line":19,"column":145,"offset":1027},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":883},"end":{"line":19,"column":145,"offset":1027},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The component below demonstrates how to make an AJAX call in ","position":{"start":{"line":21,"column":1,"offset":1029},"end":{"line":21,"column":62,"offset":1090},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">componentDidMount</code>","position":{"start":{"line":21,"column":62,"offset":1090},"end":{"line":21,"column":81,"offset":1109},"indent":[]}},{"type":"text","value":" to populate local component state.","position":{"start":{"line":21,"column":81,"offset":1109},"end":{"line":21,"column":116,"offset":1144},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1029},"end":{"line":21,"column":116,"offset":1144},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The example API returns a JSON object like this:","position":{"start":{"line":23,"column":1,"offset":1146},"end":{"line":23,"column":49,"offset":1194},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1146},"end":{"line":23,"column":49,"offset":1194},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"items\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Apples\"</span><span class=\"token punctuation\">,</span>  <span class=\"token string-property property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$2\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Peaches\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$5\"</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":25,"column":1,"offset":1196},"end":{"line":33,"column":4,"offset":1330},"indent":[1,1,1,1,1,1,1,1]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">isLoaded</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">items</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.example.com/items'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">isLoaded</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token literal-property property\">items</span><span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span>items\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">isLoaded</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                        error\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">,</span> isLoaded<span class=\"token punctuation\">,</span> items <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Error<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLoaded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Loading<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                        <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                            <span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":35,"column":1,"offset":1332},"end":{"line":86,"column":4,"offset":2602},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the equivalent with ","position":{"start":{"line":88,"column":1,"offset":2604},"end":{"line":88,"column":29,"offset":2632},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/hooks-intro.html","children":[{"type":"text","value":"Hooks","position":{"start":{"line":88,"column":30,"offset":2633},"end":{"line":88,"column":35,"offset":2638},"indent":[]}}],"position":{"start":{"line":88,"column":29,"offset":2632},"end":{"line":88,"column":79,"offset":2682},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":88,"column":79,"offset":2682},"end":{"line":88,"column":80,"offset":2683},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2604},"end":{"line":88,"column":80,"offset":2683},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":90,"column":1,"offset":2685},"end":{"line":90,"column":4,"offset":2688},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>error<span class=\"token punctuation\">,</span> setError<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isLoaded<span class=\"token punctuation\">,</span> setIsLoaded<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>items<span class=\"token punctuation\">,</span> setItems<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.example.com/items'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">setIsLoaded</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">setItems</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">setIsLoaded</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">setError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Error<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLoaded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Loading<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n                <span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">}</span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":93,"column":1,"offset":2691},"end":{"line":134,"column":4,"offset":3669},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":135,"column":1,"offset":3670}}}}