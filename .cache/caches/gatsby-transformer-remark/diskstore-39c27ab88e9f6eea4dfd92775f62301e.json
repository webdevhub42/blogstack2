{"expireTime":9007200911870452000,"key":"transformer-remark-markdown-html-ast-a88b652309f48d46b376b365ef6ca213-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":16,"offset":17}}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":16,"offset":17}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ECMAScript 6, also known as ECMAScript 2015, is the latest version of the ECMAScript standard. ES6 is a significant update to the language, and the first update to the language since ES5 was standardized in 2009. Implementation of these features in major JavaScript engines is ","position":{"start":{"line":5,"column":1,"offset":19},"end":{"line":5,"column":278,"offset":296}}},{"type":"element","tagName":"a","properties":{"href":"http://kangax.github.io/es5-compat-table/es6/"},"children":[{"type":"text","value":"underway now","position":{"start":{"line":5,"column":279,"offset":297},"end":{"line":5,"column":291,"offset":309}}}],"position":{"start":{"line":5,"column":278,"offset":296},"end":{"line":5,"column":339,"offset":357}}},{"type":"text","value":".","position":{"start":{"line":5,"column":339,"offset":357},"end":{"line":5,"column":340,"offset":358}}}],"position":{"start":{"line":5,"column":1,"offset":19},"end":{"line":5,"column":340,"offset":358}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See the ","position":{"start":{"line":7,"column":1,"offset":360},"end":{"line":7,"column":9,"offset":368}}},{"type":"element","tagName":"a","properties":{"href":"http://www.ecma-international.org/ecma-262/6.0/"},"children":[{"type":"text","value":"ES6 standard","position":{"start":{"line":7,"column":10,"offset":369},"end":{"line":7,"column":22,"offset":381}}}],"position":{"start":{"line":7,"column":9,"offset":368},"end":{"line":7,"column":72,"offset":431}}},{"type":"text","value":" for full specification of the ECMAScript 6 language.","position":{"start":{"line":7,"column":72,"offset":431},"end":{"line":7,"column":125,"offset":484}}}],"position":{"start":{"line":7,"column":1,"offset":360},"end":{"line":7,"column":125,"offset":484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ES6 includes the following new features:","position":{"start":{"line":9,"column":1,"offset":486},"end":{"line":9,"column":41,"offset":526}}}],"position":{"start":{"line":9,"column":1,"offset":486},"end":{"line":9,"column":41,"offset":526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#arrows"},"children":[{"type":"text","value":"arrows","position":{"start":{"line":11,"column":4,"offset":531},"end":{"line":11,"column":10,"offset":537}}}],"position":{"start":{"line":11,"column":3,"offset":530},"end":{"line":11,"column":20,"offset":547}}}],"position":{"start":{"line":11,"column":1,"offset":528},"end":{"line":11,"column":20,"offset":547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#classes"},"children":[{"type":"text","value":"classes","position":{"start":{"line":12,"column":4,"offset":551},"end":{"line":12,"column":11,"offset":558}}}],"position":{"start":{"line":12,"column":3,"offset":550},"end":{"line":12,"column":22,"offset":569}}}],"position":{"start":{"line":12,"column":1,"offset":548},"end":{"line":12,"column":22,"offset":569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#enhanced-object-literals"},"children":[{"type":"text","value":"enhanced object literals","position":{"start":{"line":13,"column":4,"offset":573},"end":{"line":13,"column":28,"offset":597}}}],"position":{"start":{"line":13,"column":3,"offset":572},"end":{"line":13,"column":56,"offset":625}}}],"position":{"start":{"line":13,"column":1,"offset":570},"end":{"line":13,"column":56,"offset":625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#template-strings"},"children":[{"type":"text","value":"template strings","position":{"start":{"line":14,"column":4,"offset":629},"end":{"line":14,"column":20,"offset":645}}}],"position":{"start":{"line":14,"column":3,"offset":628},"end":{"line":14,"column":40,"offset":665}}}],"position":{"start":{"line":14,"column":1,"offset":626},"end":{"line":14,"column":40,"offset":665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#destructuring"},"children":[{"type":"text","value":"destructuring","position":{"start":{"line":15,"column":4,"offset":669},"end":{"line":15,"column":17,"offset":682}}}],"position":{"start":{"line":15,"column":3,"offset":668},"end":{"line":15,"column":34,"offset":699}}}],"position":{"start":{"line":15,"column":1,"offset":666},"end":{"line":15,"column":34,"offset":699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#default--rest--spread"},"children":[{"type":"text","value":"default + rest + spread","position":{"start":{"line":16,"column":4,"offset":703},"end":{"line":16,"column":27,"offset":726}}}],"position":{"start":{"line":16,"column":3,"offset":702},"end":{"line":16,"column":52,"offset":751}}}],"position":{"start":{"line":16,"column":1,"offset":700},"end":{"line":16,"column":52,"offset":751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#let--const"},"children":[{"type":"text","value":"let + const","position":{"start":{"line":17,"column":4,"offset":755},"end":{"line":17,"column":15,"offset":766}}}],"position":{"start":{"line":17,"column":3,"offset":754},"end":{"line":17,"column":29,"offset":780}}}],"position":{"start":{"line":17,"column":1,"offset":752},"end":{"line":17,"column":29,"offset":780}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#iterators--forof"},"children":[{"type":"text","value":"iterators + for..of","position":{"start":{"line":18,"column":4,"offset":784},"end":{"line":18,"column":23,"offset":803}}}],"position":{"start":{"line":18,"column":3,"offset":783},"end":{"line":18,"column":43,"offset":823}}}],"position":{"start":{"line":18,"column":1,"offset":781},"end":{"line":18,"column":43,"offset":823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#generators"},"children":[{"type":"text","value":"generators","position":{"start":{"line":19,"column":4,"offset":827},"end":{"line":19,"column":14,"offset":837}}}],"position":{"start":{"line":19,"column":3,"offset":826},"end":{"line":19,"column":28,"offset":851}}}],"position":{"start":{"line":19,"column":1,"offset":824},"end":{"line":19,"column":28,"offset":851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#unicode"},"children":[{"type":"text","value":"unicode","position":{"start":{"line":20,"column":4,"offset":855},"end":{"line":20,"column":11,"offset":862}}}],"position":{"start":{"line":20,"column":3,"offset":854},"end":{"line":20,"column":22,"offset":873}}}],"position":{"start":{"line":20,"column":1,"offset":852},"end":{"line":20,"column":22,"offset":873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#modules"},"children":[{"type":"text","value":"modules","position":{"start":{"line":21,"column":4,"offset":877},"end":{"line":21,"column":11,"offset":884}}}],"position":{"start":{"line":21,"column":3,"offset":876},"end":{"line":21,"column":22,"offset":895}}}],"position":{"start":{"line":21,"column":1,"offset":874},"end":{"line":21,"column":22,"offset":895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#module-loaders"},"children":[{"type":"text","value":"module loaders","position":{"start":{"line":22,"column":4,"offset":899},"end":{"line":22,"column":18,"offset":913}}}],"position":{"start":{"line":22,"column":3,"offset":898},"end":{"line":22,"column":36,"offset":931}}}],"position":{"start":{"line":22,"column":1,"offset":896},"end":{"line":22,"column":36,"offset":931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#map--set--weakmap--weakset"},"children":[{"type":"text","value":"map + set + weakmap + weakset","position":{"start":{"line":23,"column":4,"offset":935},"end":{"line":23,"column":33,"offset":964}}}],"position":{"start":{"line":23,"column":3,"offset":934},"end":{"line":23,"column":63,"offset":994}}}],"position":{"start":{"line":23,"column":1,"offset":932},"end":{"line":23,"column":63,"offset":994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#proxies"},"children":[{"type":"text","value":"proxies","position":{"start":{"line":24,"column":4,"offset":998},"end":{"line":24,"column":11,"offset":1005}}}],"position":{"start":{"line":24,"column":3,"offset":997},"end":{"line":24,"column":22,"offset":1016}}}],"position":{"start":{"line":24,"column":1,"offset":995},"end":{"line":24,"column":22,"offset":1016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#symbols"},"children":[{"type":"text","value":"symbols","position":{"start":{"line":25,"column":4,"offset":1020},"end":{"line":25,"column":11,"offset":1027}}}],"position":{"start":{"line":25,"column":3,"offset":1019},"end":{"line":25,"column":22,"offset":1038}}}],"position":{"start":{"line":25,"column":1,"offset":1017},"end":{"line":25,"column":22,"offset":1038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#subclassable-built-ins"},"children":[{"type":"text","value":"subclassable built-ins","position":{"start":{"line":26,"column":4,"offset":1042},"end":{"line":26,"column":26,"offset":1064}}}],"position":{"start":{"line":26,"column":3,"offset":1041},"end":{"line":26,"column":52,"offset":1090}}}],"position":{"start":{"line":26,"column":1,"offset":1039},"end":{"line":26,"column":52,"offset":1090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#promises"},"children":[{"type":"text","value":"promises","position":{"start":{"line":27,"column":4,"offset":1094},"end":{"line":27,"column":12,"offset":1102}}}],"position":{"start":{"line":27,"column":3,"offset":1093},"end":{"line":27,"column":24,"offset":1114}}}],"position":{"start":{"line":27,"column":1,"offset":1091},"end":{"line":27,"column":24,"offset":1114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#math--number--string--array--object-apis"},"children":[{"type":"text","value":"math + number + string + array + object APIs","position":{"start":{"line":28,"column":4,"offset":1118},"end":{"line":28,"column":48,"offset":1162}}}],"position":{"start":{"line":28,"column":3,"offset":1117},"end":{"line":28,"column":92,"offset":1206}}}],"position":{"start":{"line":28,"column":1,"offset":1115},"end":{"line":28,"column":92,"offset":1206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#binary-and-octal-literals"},"children":[{"type":"text","value":"binary and octal literals","position":{"start":{"line":29,"column":4,"offset":1210},"end":{"line":29,"column":29,"offset":1235}}}],"position":{"start":{"line":29,"column":3,"offset":1209},"end":{"line":29,"column":58,"offset":1264}}}],"position":{"start":{"line":29,"column":1,"offset":1207},"end":{"line":29,"column":58,"offset":1264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#reflect-api"},"children":[{"type":"text","value":"reflect api","position":{"start":{"line":30,"column":4,"offset":1268},"end":{"line":30,"column":15,"offset":1279}}}],"position":{"start":{"line":30,"column":3,"offset":1267},"end":{"line":30,"column":30,"offset":1294}}}],"position":{"start":{"line":30,"column":1,"offset":1265},"end":{"line":30,"column":30,"offset":1294}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#tail-calls"},"children":[{"type":"text","value":"tail calls","position":{"start":{"line":31,"column":4,"offset":1298},"end":{"line":31,"column":14,"offset":1308}}}],"position":{"start":{"line":31,"column":3,"offset":1297},"end":{"line":31,"column":28,"offset":1322}}}],"position":{"start":{"line":31,"column":1,"offset":1295},"end":{"line":31,"column":28,"offset":1322}}},{"type":"text","value":"\n"}],"position":{"start":{"line":11,"column":1,"offset":528},"end":{"line":31,"column":28,"offset":1322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"ECMAScript 6 Features","position":{"start":{"line":33,"column":4,"offset":1327},"end":{"line":33,"column":25,"offset":1348}}}],"position":{"start":{"line":33,"column":1,"offset":1324},"end":{"line":33,"column":25,"offset":1348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Arrows","position":{"start":{"line":35,"column":5,"offset":1354},"end":{"line":35,"column":11,"offset":1360}}}],"position":{"start":{"line":35,"column":1,"offset":1350},"end":{"line":35,"column":11,"offset":1360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Arrows are a function shorthand using the ","position":{"start":{"line":37,"column":1,"offset":1362},"end":{"line":37,"column":43,"offset":1404}}},{"type":"raw","value":"<code class=\"language-text\">=></code>","position":{"start":{"line":37,"column":43,"offset":1404},"end":{"line":37,"column":47,"offset":1408}}},{"type":"text","value":" syntax. They are syntactically similar to the related feature in C#, Java 8 and CoffeeScript. They support both statement block bodies as well as expression bodies which return the value of the expression. Unlike functions, arrows share the same lexical ","position":{"start":{"line":37,"column":47,"offset":1408},"end":{"line":37,"column":302,"offset":1663}}},{"type":"raw","value":"<code class=\"language-text\">this</code>","position":{"start":{"line":37,"column":302,"offset":1663},"end":{"line":37,"column":308,"offset":1669}}},{"type":"text","value":" as their surrounding code.","position":{"start":{"line":37,"column":308,"offset":1669},"end":{"line":37,"column":335,"offset":1696}}}],"position":{"start":{"line":37,"column":1,"offset":1362},"end":{"line":37,"column":335,"offset":1696}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Expression bodies</span>\n<span class=\"token keyword\">var</span> odds <span class=\"token operator\">=</span> evens<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> nums <span class=\"token operator\">=</span> evens<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> pairs <span class=\"token operator\">=</span> evens<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">even</span><span class=\"token operator\">:</span> v<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">odd</span><span class=\"token operator\">:</span> v <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Statement bodies</span>\nnums<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    fives<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Lexical this</span>\n<span class=\"token keyword\">var</span> bob <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">_name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">_friends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">printFriends</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_friends<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span> <span class=\"token operator\">=></span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name <span class=\"token operator\">+</span> <span class=\"token string\">\" knows \"</span> <span class=\"token operator\">+</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1698},"end":{"line":60,"column":4,"offset":2102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":62,"column":1,"offset":2104},"end":{"line":62,"column":12,"offset":2115}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions"},"children":[{"type":"text","value":"MDN Arrow Functions","position":{"start":{"line":62,"column":13,"offset":2116},"end":{"line":62,"column":32,"offset":2135}}}],"position":{"start":{"line":62,"column":12,"offset":2115},"end":{"line":62,"column":123,"offset":2226}}}],"position":{"start":{"line":62,"column":1,"offset":2104},"end":{"line":62,"column":123,"offset":2226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Classes","position":{"start":{"line":64,"column":5,"offset":2232},"end":{"line":64,"column":12,"offset":2239}}}],"position":{"start":{"line":64,"column":1,"offset":2228},"end":{"line":64,"column":12,"offset":2239}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ES6 classes are a simple sugar over the prototype-based OO pattern. Having a single convenient declarative form makes class patterns easier to use, and encourages interoperability. Classes support prototype-based inheritance, super calls, instance and static methods and constructors.","position":{"start":{"line":66,"column":1,"offset":2241},"end":{"line":66,"column":285,"offset":2525}}}],"position":{"start":{"line":66,"column":1,"offset":2241},"end":{"line":66,"column":285,"offset":2525}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SkinnedMesh</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>Mesh</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">geometry<span class=\"token punctuation\">,</span> materials</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>geometry<span class=\"token punctuation\">,</span> materials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idMatrix <span class=\"token operator\">=</span> SkinnedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">defaultMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bones <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>boneMatrices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//...</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">camera</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//...</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">boneCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bones<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">matrixType</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">matrixType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idMatrix <span class=\"token operator\">=</span> SkinnedMesh<span class=\"token punctuation\">[</span>matrixType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">defaultMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>Matrix4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":68,"column":1,"offset":2527},"end":{"line":92,"column":4,"offset":3011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":94,"column":1,"offset":3013},"end":{"line":94,"column":12,"offset":3024}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes"},"children":[{"type":"text","value":"MDN Classes","position":{"start":{"line":94,"column":13,"offset":3025},"end":{"line":94,"column":24,"offset":3036}}}],"position":{"start":{"line":94,"column":12,"offset":3024},"end":{"line":94,"column":97,"offset":3109}}}],"position":{"start":{"line":94,"column":1,"offset":3013},"end":{"line":94,"column":97,"offset":3109}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Enhanced Object Literals","position":{"start":{"line":96,"column":5,"offset":3115},"end":{"line":96,"column":29,"offset":3139}}}],"position":{"start":{"line":96,"column":1,"offset":3111},"end":{"line":96,"column":29,"offset":3139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Object literals are extended to support setting the prototype at construction, shorthand for ","position":{"start":{"line":98,"column":1,"offset":3141},"end":{"line":98,"column":94,"offset":3234}}},{"type":"raw","value":"<code class=\"language-text\">foo: foo</code>","position":{"start":{"line":98,"column":94,"offset":3234},"end":{"line":98,"column":104,"offset":3244}}},{"type":"text","value":" assignments, defining methods, making super calls, and computing property names with expressions. Together, these also bring object literals and class declarations closer together, and let object-based design benefit from some of the same conveniences.","position":{"start":{"line":98,"column":104,"offset":3244},"end":{"line":98,"column":357,"offset":3497}}}],"position":{"start":{"line":98,"column":1,"offset":3141},"end":{"line":98,"column":357,"offset":3497}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// __proto__</span>\n    <span class=\"token literal-property property\">__proto__</span><span class=\"token operator\">:</span> theProtoObj<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Shorthand for 'handler: handler'</span>\n    handler<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Methods</span>\n    <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// Super calls</span>\n     <span class=\"token keyword\">return</span> <span class=\"token string\">\"d \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Computed (dynamic) property names</span>\n    <span class=\"token punctuation\">[</span> <span class=\"token string\">'prop_'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":100,"column":1,"offset":3499},"end":{"line":114,"column":4,"offset":3793}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":116,"column":1,"offset":3795},"end":{"line":116,"column":12,"offset":3806}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Object_literals"},"children":[{"type":"text","value":"MDN Grammar and types: Object literals","position":{"start":{"line":116,"column":13,"offset":3807},"end":{"line":116,"column":51,"offset":3845}}}],"position":{"start":{"line":116,"column":12,"offset":3806},"end":{"line":116,"column":149,"offset":3943}}}],"position":{"start":{"line":116,"column":1,"offset":3795},"end":{"line":116,"column":149,"offset":3943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Template Strings","position":{"start":{"line":118,"column":5,"offset":3949},"end":{"line":118,"column":21,"offset":3965}}}],"position":{"start":{"line":118,"column":1,"offset":3945},"end":{"line":118,"column":21,"offset":3965}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Template strings provide syntactic sugar for constructing strings. This is similar to string interpolation features in Perl, Python and more. Optionally, a tag can be added to allow the string construction to be customized, avoiding injection attacks or constructing higher level data structures from string contents.","position":{"start":{"line":120,"column":1,"offset":3967},"end":{"line":120,"column":318,"offset":4284}}}],"position":{"start":{"line":120,"column":1,"offset":3967},"end":{"line":120,"column":318,"offset":4284}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Basic literal string creation</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">In JavaScript '\\n' is a line-feed.</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token comment\">// Multiline strings</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">In JavaScript this is\n not legal.</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token comment\">// String interpolation</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span> time <span class=\"token operator\">=</span> <span class=\"token string\">\"today\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, how are you </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>time<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token comment\">// Construct an HTTP request prefix is used to interpret the replacements and construction</span>\n<span class=\"token constant\">POST</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://foo.org/bar?a=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>a<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;b=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>b<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n     Content-Type: application/json\n     X-Credentials: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>credentials<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n     { \"foo\": </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>foo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,\n       \"bar\": </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>bar<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">}</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">(</span>myOnReadyStateChangeHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":122,"column":1,"offset":4286},"end":{"line":140,"column":4,"offset":4796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":142,"column":1,"offset":4798},"end":{"line":142,"column":12,"offset":4809}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings"},"children":[{"type":"text","value":"MDN Template Strings","position":{"start":{"line":142,"column":13,"offset":4810},"end":{"line":142,"column":33,"offset":4830}}}],"position":{"start":{"line":142,"column":12,"offset":4809},"end":{"line":142,"column":118,"offset":4915}}}],"position":{"start":{"line":142,"column":1,"offset":4798},"end":{"line":142,"column":118,"offset":4915}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Destructuring","position":{"start":{"line":144,"column":5,"offset":4921},"end":{"line":144,"column":18,"offset":4934}}}],"position":{"start":{"line":144,"column":1,"offset":4917},"end":{"line":144,"column":18,"offset":4934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Destructuring allows binding using pattern matching, with support for matching arrays and objects. Destructuring is fail-soft, similar to standard object lookup ","position":{"start":{"line":146,"column":1,"offset":4936},"end":{"line":146,"column":162,"offset":5097}}},{"type":"raw","value":"<code class=\"language-text\">foo[\"bar\"]</code>","position":{"start":{"line":146,"column":162,"offset":5097},"end":{"line":146,"column":174,"offset":5109}}},{"type":"text","value":", producing ","position":{"start":{"line":146,"column":174,"offset":5109},"end":{"line":146,"column":186,"offset":5121}}},{"type":"raw","value":"<code class=\"language-text\">undefined</code>","position":{"start":{"line":146,"column":186,"offset":5121},"end":{"line":146,"column":197,"offset":5132}}},{"type":"text","value":" values when not found.","position":{"start":{"line":146,"column":197,"offset":5132},"end":{"line":146,"column":220,"offset":5155}}}],"position":{"start":{"line":146,"column":1,"offset":4936},"end":{"line":146,"column":220,"offset":5155}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// list matching</span>\n<span class=\"token keyword\">var</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// object matching</span>\n<span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">op</span><span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lhs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">op</span><span class=\"token operator\">:</span> b <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">rhs</span><span class=\"token operator\">:</span> c <span class=\"token punctuation\">}</span>\n       <span class=\"token operator\">=</span> <span class=\"token function\">getASTNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// object matching shorthand</span>\n<span class=\"token comment\">// binds `op`, `lhs` and `rhs` in scope</span>\n<span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>op<span class=\"token punctuation\">,</span> lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">getASTNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Can be used in parameter position</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">g</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> x<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Fail-soft destructuring</span>\n<span class=\"token keyword\">var</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Fail-soft destructuring with defaults</span>\n<span class=\"token keyword\">var</span> <span class=\"token punctuation\">[</span>a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":148,"column":1,"offset":5157},"end":{"line":173,"column":4,"offset":5614}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":175,"column":1,"offset":5616},"end":{"line":175,"column":12,"offset":5627}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"children":[{"type":"text","value":"MDN Destructuring assignment","position":{"start":{"line":175,"column":13,"offset":5628},"end":{"line":175,"column":41,"offset":5656}}}],"position":{"start":{"line":175,"column":12,"offset":5627},"end":{"line":175,"column":144,"offset":5759}}}],"position":{"start":{"line":175,"column":1,"offset":5616},"end":{"line":175,"column":144,"offset":5759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Default + Rest + Spread","position":{"start":{"line":177,"column":5,"offset":5765},"end":{"line":177,"column":28,"offset":5788}}}],"position":{"start":{"line":177,"column":1,"offset":5761},"end":{"line":177,"column":28,"offset":5788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Callee-evaluated default parameter values. Turn an array into consecutive arguments in a function call. Bind trailing parameters to an array. Rest replaces the need for ","position":{"start":{"line":179,"column":1,"offset":5790},"end":{"line":179,"column":170,"offset":5959}}},{"type":"raw","value":"<code class=\"language-text\">arguments</code>","position":{"start":{"line":179,"column":170,"offset":5959},"end":{"line":179,"column":181,"offset":5970}}},{"type":"text","value":" and addresses common cases more directly.","position":{"start":{"line":179,"column":181,"offset":5970},"end":{"line":179,"column":223,"offset":6012}}}],"position":{"start":{"line":179,"column":1,"offset":5790},"end":{"line":179,"column":223,"offset":6012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":181,"column":1,"offset":6014},"end":{"line":181,"column":4,"offset":6017}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token number\">12</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// y is 12 if not passed (or passed as undefined)</span>\n  <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">15</span></code></pre></div>","position":{"start":{"line":184,"column":1,"offset":6020},"end":{"line":192,"column":4,"offset":6134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":194,"column":1,"offset":6136},"end":{"line":194,"column":4,"offset":6139}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// y is an Array</span>\n  <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> y<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":197,"column":1,"offset":6142},"end":{"line":205,"column":4,"offset":6244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":207,"column":1,"offset":6246},"end":{"line":207,"column":4,"offset":6249}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y <span class=\"token operator\">+</span> z<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Pass each elem of array as argument</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":210,"column":1,"offset":6252},"end":{"line":218,"column":4,"offset":6365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":220,"column":1,"offset":6367},"end":{"line":220,"column":16,"offset":6382}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters"},"children":[{"type":"text","value":"Default parameters","position":{"start":{"line":220,"column":17,"offset":6383},"end":{"line":220,"column":35,"offset":6401}}}],"position":{"start":{"line":220,"column":16,"offset":6382},"end":{"line":220,"column":132,"offset":6498}}},{"type":"text","value":", ","position":{"start":{"line":220,"column":132,"offset":6498},"end":{"line":220,"column":134,"offset":6500}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters"},"children":[{"type":"text","value":"Rest parameters","position":{"start":{"line":220,"column":135,"offset":6501},"end":{"line":220,"column":150,"offset":6516}}}],"position":{"start":{"line":220,"column":134,"offset":6500},"end":{"line":220,"column":244,"offset":6610}}},{"type":"text","value":", ","position":{"start":{"line":220,"column":244,"offset":6610},"end":{"line":220,"column":246,"offset":6612}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"},"children":[{"type":"text","value":"Spread Operator","position":{"start":{"line":220,"column":247,"offset":6613},"end":{"line":220,"column":262,"offset":6628}}}],"position":{"start":{"line":220,"column":246,"offset":6612},"end":{"line":220,"column":356,"offset":6722}}}],"position":{"start":{"line":220,"column":1,"offset":6367},"end":{"line":220,"column":356,"offset":6722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Let + Const","position":{"start":{"line":222,"column":5,"offset":6728},"end":{"line":222,"column":16,"offset":6739}}}],"position":{"start":{"line":222,"column":1,"offset":6724},"end":{"line":222,"column":16,"offset":6739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Block-scoped binding constructs. ","position":{"start":{"line":224,"column":1,"offset":6741},"end":{"line":224,"column":34,"offset":6774}}},{"type":"raw","value":"<code class=\"language-text\">let</code>","position":{"start":{"line":224,"column":34,"offset":6774},"end":{"line":224,"column":39,"offset":6779}}},{"type":"text","value":" is the new ","position":{"start":{"line":224,"column":39,"offset":6779},"end":{"line":224,"column":51,"offset":6791}}},{"type":"raw","value":"<code class=\"language-text\">var</code>","position":{"start":{"line":224,"column":51,"offset":6791},"end":{"line":224,"column":56,"offset":6796}}},{"type":"text","value":". ","position":{"start":{"line":224,"column":56,"offset":6796},"end":{"line":224,"column":58,"offset":6798}}},{"type":"raw","value":"<code class=\"language-text\">const</code>","position":{"start":{"line":224,"column":58,"offset":6798},"end":{"line":224,"column":65,"offset":6805}}},{"type":"text","value":" is single-assignment. Static restrictions prevent use before assignment.","position":{"start":{"line":224,"column":65,"offset":6805},"end":{"line":224,"column":138,"offset":6878}}}],"position":{"start":{"line":224,"column":1,"offset":6741},"end":{"line":224,"column":138,"offset":6878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":226,"column":1,"offset":6880},"end":{"line":226,"column":4,"offset":6883}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// okay, block scoped name</span>\n      <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token string\">\"sneaky\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// error, const</span>\n      x <span class=\"token operator\">=</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// error, already declared in block</span>\n    <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token string\">\"inner\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":229,"column":1,"offset":6886},"end":{"line":245,"column":4,"offset":7104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":247,"column":1,"offset":7106},"end":{"line":247,"column":16,"offset":7121}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let"},"children":[{"type":"text","value":"let statement","position":{"start":{"line":247,"column":17,"offset":7122},"end":{"line":247,"column":30,"offset":7135}}}],"position":{"start":{"line":247,"column":16,"offset":7121},"end":{"line":247,"column":113,"offset":7218}}},{"type":"text","value":", ","position":{"start":{"line":247,"column":113,"offset":7218},"end":{"line":247,"column":115,"offset":7220}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const"},"children":[{"type":"text","value":"const statement","position":{"start":{"line":247,"column":116,"offset":7221},"end":{"line":247,"column":131,"offset":7236}}}],"position":{"start":{"line":247,"column":115,"offset":7220},"end":{"line":247,"column":216,"offset":7321}}}],"position":{"start":{"line":247,"column":1,"offset":7106},"end":{"line":247,"column":216,"offset":7321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Iterators + For..Of","position":{"start":{"line":249,"column":5,"offset":7327},"end":{"line":249,"column":24,"offset":7346}}}],"position":{"start":{"line":249,"column":1,"offset":7323},"end":{"line":249,"column":24,"offset":7346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Iterator objects enable custom iteration like CLR IEnumerable or Java Iterable. Generalize ","position":{"start":{"line":251,"column":1,"offset":7348},"end":{"line":251,"column":92,"offset":7439}}},{"type":"raw","value":"<code class=\"language-text\">for..in</code>","position":{"start":{"line":251,"column":92,"offset":7439},"end":{"line":251,"column":101,"offset":7448}}},{"type":"text","value":" to custom iterator-based iteration with ","position":{"start":{"line":251,"column":101,"offset":7448},"end":{"line":251,"column":142,"offset":7489}}},{"type":"raw","value":"<code class=\"language-text\">for..of</code>","position":{"start":{"line":251,"column":142,"offset":7489},"end":{"line":251,"column":151,"offset":7498}}},{"type":"text","value":". Don't require realizing an array, enabling lazy design patterns like LINQ.","position":{"start":{"line":251,"column":151,"offset":7498},"end":{"line":251,"column":227,"offset":7574}}}],"position":{"start":{"line":251,"column":1,"offset":7348},"end":{"line":251,"column":227,"offset":7574}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> fibonacci <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> pre <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cur <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">[</span>pre<span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">,</span> pre <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">done</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> cur <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token keyword\">of</span> fibonacci<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// truncate the sequence at 1000</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":253,"column":1,"offset":7576},"end":{"line":272,"column":4,"offset":7893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Iteration is based on these duck-typed interfaces (using ","position":{"start":{"line":274,"column":1,"offset":7895},"end":{"line":274,"column":58,"offset":7952}}},{"type":"element","tagName":"a","properties":{"href":"http://typescriptlang.org"},"children":[{"type":"text","value":"TypeScript","position":{"start":{"line":274,"column":59,"offset":7953},"end":{"line":274,"column":69,"offset":7963}}}],"position":{"start":{"line":274,"column":58,"offset":7952},"end":{"line":274,"column":97,"offset":7991}}},{"type":"text","value":" type syntax for exposition only):","position":{"start":{"line":274,"column":97,"offset":7991},"end":{"line":274,"column":131,"offset":8025}}}],"position":{"start":{"line":274,"column":1,"offset":7895},"end":{"line":274,"column":131,"offset":8025}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IteratorResult</span> <span class=\"token punctuation\">{</span>\n  done<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  value<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Iterator</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> IteratorResult<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Iterable</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Iterator\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":276,"column":1,"offset":8027},"end":{"line":287,"column":4,"offset":8208}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":289,"column":1,"offset":8210},"end":{"line":289,"column":12,"offset":8221}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of"},"children":[{"type":"text","value":"MDN for...of","position":{"start":{"line":289,"column":13,"offset":8222},"end":{"line":289,"column":25,"offset":8234}}}],"position":{"start":{"line":289,"column":12,"offset":8221},"end":{"line":289,"column":113,"offset":8322}}}],"position":{"start":{"line":289,"column":1,"offset":8210},"end":{"line":289,"column":113,"offset":8322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Generators","position":{"start":{"line":291,"column":5,"offset":8328},"end":{"line":291,"column":15,"offset":8338}}}],"position":{"start":{"line":291,"column":1,"offset":8324},"end":{"line":291,"column":15,"offset":8338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Generators simplify iterator-authoring using ","position":{"start":{"line":293,"column":1,"offset":8340},"end":{"line":293,"column":46,"offset":8385}}},{"type":"raw","value":"<code class=\"language-text\">function*</code>","position":{"start":{"line":293,"column":46,"offset":8385},"end":{"line":293,"column":57,"offset":8396}}},{"type":"text","value":" and ","position":{"start":{"line":293,"column":57,"offset":8396},"end":{"line":293,"column":62,"offset":8401}}},{"type":"raw","value":"<code class=\"language-text\">yield</code>","position":{"start":{"line":293,"column":62,"offset":8401},"end":{"line":293,"column":69,"offset":8408}}},{"type":"text","value":". A function declared as function","position":{"start":{"line":293,"column":69,"offset":8408},"end":{"line":293,"column":102,"offset":8441}}},{"type":"text","value":"*","position":{"start":{"line":293,"column":102,"offset":8441},"end":{"line":293,"column":104,"offset":8443}}},{"type":"text","value":" returns a Generator instance. Generators are subtypes of iterators which include additional ","position":{"start":{"line":293,"column":104,"offset":8443},"end":{"line":293,"column":197,"offset":8536}}},{"type":"raw","value":"<code class=\"language-text\">next</code>","position":{"start":{"line":293,"column":197,"offset":8536},"end":{"line":293,"column":203,"offset":8542}}},{"type":"text","value":" and ","position":{"start":{"line":293,"column":203,"offset":8542},"end":{"line":293,"column":208,"offset":8547}}},{"type":"raw","value":"<code class=\"language-text\">throw</code>","position":{"start":{"line":293,"column":208,"offset":8547},"end":{"line":293,"column":215,"offset":8554}}},{"type":"text","value":". These enable values to flow back into the generator, so ","position":{"start":{"line":293,"column":215,"offset":8554},"end":{"line":293,"column":273,"offset":8612}}},{"type":"raw","value":"<code class=\"language-text\">yield</code>","position":{"start":{"line":293,"column":273,"offset":8612},"end":{"line":293,"column":280,"offset":8619}}},{"type":"text","value":" is an expression form which returns a value (or throws).","position":{"start":{"line":293,"column":280,"offset":8619},"end":{"line":293,"column":337,"offset":8676}}}],"position":{"start":{"line":293,"column":1,"offset":8340},"end":{"line":293,"column":337,"offset":8676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: Can also be used to enable 'await'-like async programming, see also ES7 ","position":{"start":{"line":295,"column":1,"offset":8678},"end":{"line":295,"column":79,"offset":8756}}},{"type":"raw","value":"<code class=\"language-text\">await</code>","position":{"start":{"line":295,"column":79,"offset":8756},"end":{"line":295,"column":86,"offset":8763}}},{"type":"text","value":" proposal.","position":{"start":{"line":295,"column":86,"offset":8763},"end":{"line":295,"column":96,"offset":8773}}}],"position":{"start":{"line":295,"column":1,"offset":8678},"end":{"line":295,"column":96,"offset":8773}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> fibonacci <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> pre <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cur <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> pre<span class=\"token punctuation\">;</span>\n      pre <span class=\"token operator\">=</span> cur<span class=\"token punctuation\">;</span>\n      cur <span class=\"token operator\">+=</span> temp<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">yield</span> cur<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token keyword\">of</span> fibonacci<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// truncate the sequence at 1000</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":297,"column":1,"offset":8775},"end":{"line":316,"column":4,"offset":9075}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The generator interface is (using ","position":{"start":{"line":318,"column":1,"offset":9077},"end":{"line":318,"column":35,"offset":9111}}},{"type":"element","tagName":"a","properties":{"href":"http://typescriptlang.org"},"children":[{"type":"text","value":"TypeScript","position":{"start":{"line":318,"column":36,"offset":9112},"end":{"line":318,"column":46,"offset":9122}}}],"position":{"start":{"line":318,"column":35,"offset":9111},"end":{"line":318,"column":74,"offset":9150}}},{"type":"text","value":" type syntax for exposition only):","position":{"start":{"line":318,"column":74,"offset":9150},"end":{"line":318,"column":108,"offset":9184}}}],"position":{"start":{"line":318,"column":1,"offset":9077},"end":{"line":318,"column":108,"offset":9184}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Generator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Iterator</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> IteratorResult<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">throw</span><span class=\"token punctuation\">(</span>exception<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":320,"column":1,"offset":9186},"end":{"line":325,"column":4,"offset":9310}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":327,"column":1,"offset":9312},"end":{"line":327,"column":12,"offset":9323}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols"},"children":[{"type":"text","value":"MDN Iteration protocols","position":{"start":{"line":327,"column":13,"offset":9324},"end":{"line":327,"column":36,"offset":9347}}}],"position":{"start":{"line":327,"column":12,"offset":9323},"end":{"line":327,"column":124,"offset":9435}}}],"position":{"start":{"line":327,"column":1,"offset":9312},"end":{"line":327,"column":124,"offset":9435}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Unicode","position":{"start":{"line":329,"column":5,"offset":9441},"end":{"line":329,"column":12,"offset":9448}}}],"position":{"start":{"line":329,"column":1,"offset":9437},"end":{"line":329,"column":12,"offset":9448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Non-breaking additions to support full Unicode, including new Unicode literal form in strings and new RegExp ","position":{"start":{"line":331,"column":1,"offset":9450},"end":{"line":331,"column":110,"offset":9559}}},{"type":"raw","value":"<code class=\"language-text\">u</code>","position":{"start":{"line":331,"column":110,"offset":9559},"end":{"line":331,"column":113,"offset":9562}}},{"type":"text","value":" mode to handle code points, as well as new APIs to process strings at the 21bit code points level. These additions support building global apps in JavaScript.","position":{"start":{"line":331,"column":113,"offset":9562},"end":{"line":331,"column":272,"offset":9721}}}],"position":{"start":{"line":331,"column":1,"offset":9450},"end":{"line":331,"column":272,"offset":9721}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// same as ES5.1</span>\n<span class=\"token string\">\"𠮷\"</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n\n<span class=\"token comment\">// new RegExp behaviour, opt-in 'u'</span>\n<span class=\"token string\">\"𠮷\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">.</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">u</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n\n<span class=\"token comment\">// new form</span>\n<span class=\"token string\">\"\\u{20BB7}\"</span><span class=\"token operator\">==</span><span class=\"token string\">\"𠮷\"</span><span class=\"token operator\">==</span><span class=\"token string\">\"\\uD842\\uDFB7\"</span>\n\n<span class=\"token comment\">// new String ops</span>\n<span class=\"token string\">\"𠮷\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">codePointAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x20BB7</span>\n\n<span class=\"token comment\">// for-of iterates code points</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c <span class=\"token keyword\">of</span> <span class=\"token string\">\"𠮷\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":333,"column":1,"offset":9723},"end":{"line":350,"column":4,"offset":10005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":352,"column":1,"offset":10007},"end":{"line":352,"column":12,"offset":10018}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/unicode"},"children":[{"type":"text","value":"MDN RegExp.prototype.unicode","position":{"start":{"line":352,"column":13,"offset":10019},"end":{"line":352,"column":41,"offset":10047}}}],"position":{"start":{"line":352,"column":12,"offset":10018},"end":{"line":352,"column":139,"offset":10145}}}],"position":{"start":{"line":352,"column":1,"offset":10007},"end":{"line":352,"column":139,"offset":10145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Modules","position":{"start":{"line":354,"column":5,"offset":10151},"end":{"line":354,"column":12,"offset":10158}}}],"position":{"start":{"line":354,"column":1,"offset":10147},"end":{"line":354,"column":12,"offset":10158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Language-level support for modules for component definition. Codifies patterns from popular JavaScript module loaders (AMD, CommonJS). Runtime behaviour defined by a host-defined default loader. Implicitly async model - no code executes until requested modules are available and processed.","position":{"start":{"line":356,"column":1,"offset":10160},"end":{"line":356,"column":290,"offset":10449}}}],"position":{"start":{"line":356,"column":1,"offset":10160},"end":{"line":356,"column":290,"offset":10449}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// lib/math.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">var</span> pi <span class=\"token operator\">=</span> <span class=\"token number\">3.141593</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":358,"column":1,"offset":10451},"end":{"line":364,"column":4,"offset":10547}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// app.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> math <span class=\"token keyword\">from</span> <span class=\"token string\">\"lib/math\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2π = \"</span> <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":366,"column":1,"offset":10549},"end":{"line":370,"column":4,"offset":10647}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// otherApp.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>sum<span class=\"token punctuation\">,</span> pi<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lib/math\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2π = \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">,</span> pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":372,"column":1,"offset":10649},"end":{"line":376,"column":4,"offset":10737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some additional features include ","position":{"start":{"line":378,"column":1,"offset":10739},"end":{"line":378,"column":34,"offset":10772}}},{"type":"raw","value":"<code class=\"language-text\">export default</code>","position":{"start":{"line":378,"column":34,"offset":10772},"end":{"line":378,"column":50,"offset":10788}}},{"type":"text","value":" and ","position":{"start":{"line":378,"column":50,"offset":10788},"end":{"line":378,"column":55,"offset":10793}}},{"type":"raw","value":"<code class=\"language-text\">export *</code>","position":{"start":{"line":378,"column":55,"offset":10793},"end":{"line":378,"column":65,"offset":10803}}},{"type":"text","value":":","position":{"start":{"line":378,"column":65,"offset":10803},"end":{"line":378,"column":66,"offset":10804}}}],"position":{"start":{"line":378,"column":1,"offset":10739},"end":{"line":378,"column":66,"offset":10804}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// lib/mathplusplus.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lib/math\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token number\">2.71828182846</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":380,"column":1,"offset":10806},"end":{"line":387,"column":4,"offset":10949}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// app.js</span>\n<span class=\"token keyword\">import</span> ln<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>pi<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lib/mathplusplus\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2π = \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ln</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>pi<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":389,"column":1,"offset":10951},"end":{"line":393,"column":4,"offset":11043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":395,"column":1,"offset":11045},"end":{"line":395,"column":16,"offset":11060}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import"},"children":[{"type":"text","value":"import statement","position":{"start":{"line":395,"column":17,"offset":11061},"end":{"line":395,"column":33,"offset":11077}}}],"position":{"start":{"line":395,"column":16,"offset":11060},"end":{"line":395,"column":119,"offset":11163}}},{"type":"text","value":", ","position":{"start":{"line":395,"column":119,"offset":11163},"end":{"line":395,"column":121,"offset":11165}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export"},"children":[{"type":"text","value":"export statement","position":{"start":{"line":395,"column":122,"offset":11166},"end":{"line":395,"column":138,"offset":11182}}}],"position":{"start":{"line":395,"column":121,"offset":11165},"end":{"line":395,"column":224,"offset":11268}}}],"position":{"start":{"line":395,"column":1,"offset":11045},"end":{"line":395,"column":224,"offset":11268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Module Loaders","position":{"start":{"line":397,"column":5,"offset":11274},"end":{"line":397,"column":19,"offset":11288}}}],"position":{"start":{"line":397,"column":1,"offset":11270},"end":{"line":397,"column":19,"offset":11288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Module loaders support:","position":{"start":{"line":399,"column":1,"offset":11290},"end":{"line":399,"column":24,"offset":11313}}}],"position":{"start":{"line":399,"column":1,"offset":11290},"end":{"line":399,"column":24,"offset":11313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Dynamic loading","position":{"start":{"line":401,"column":3,"offset":11317},"end":{"line":401,"column":18,"offset":11332}}}],"position":{"start":{"line":401,"column":1,"offset":11315},"end":{"line":401,"column":18,"offset":11332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"State isolation","position":{"start":{"line":402,"column":3,"offset":11335},"end":{"line":402,"column":18,"offset":11350}}}],"position":{"start":{"line":402,"column":1,"offset":11333},"end":{"line":402,"column":18,"offset":11350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Global namespace isolation","position":{"start":{"line":403,"column":3,"offset":11353},"end":{"line":403,"column":29,"offset":11379}}}],"position":{"start":{"line":403,"column":1,"offset":11351},"end":{"line":403,"column":29,"offset":11379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Compilation hooks","position":{"start":{"line":404,"column":3,"offset":11382},"end":{"line":404,"column":20,"offset":11399}}}],"position":{"start":{"line":404,"column":1,"offset":11380},"end":{"line":404,"column":20,"offset":11399}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Nested virtualization","position":{"start":{"line":405,"column":3,"offset":11402},"end":{"line":405,"column":24,"offset":11423}}}],"position":{"start":{"line":405,"column":1,"offset":11400},"end":{"line":405,"column":24,"offset":11423}}},{"type":"text","value":"\n"}],"position":{"start":{"line":401,"column":1,"offset":11315},"end":{"line":405,"column":24,"offset":11423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The default module loader can be configured, and new loaders can be constructed to evaluate and load code in isolated or constrained contexts.","position":{"start":{"line":407,"column":1,"offset":11425},"end":{"line":407,"column":143,"offset":11567}}}],"position":{"start":{"line":407,"column":1,"offset":11425},"end":{"line":407,"column":143,"offset":11567}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Dynamic loading - 'System' is default loader</span>\nSystem<span class=\"token punctuation\">.</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lib/math'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2π = \"</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create execution sandboxes - new Loaders</span>\n<span class=\"token keyword\">var</span> loader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Loader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">global</span><span class=\"token operator\">:</span> <span class=\"token function\">fixup</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span> <span class=\"token comment\">// replace 'console.log'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nloader<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"console.log('hello world!');\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Directly manipulate module cache</span>\nSystem<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jquery'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nSystem<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jquery'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Module</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">$</span><span class=\"token operator\">:</span> $<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// WARNING: not yet finalized</span></code></pre></div>","position":{"start":{"line":409,"column":1,"offset":11569},"end":{"line":424,"column":4,"offset":12009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Map + Set + WeakMap + WeakSet","position":{"start":{"line":426,"column":5,"offset":12015},"end":{"line":426,"column":34,"offset":12044}}}],"position":{"start":{"line":426,"column":1,"offset":12011},"end":{"line":426,"column":34,"offset":12044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Efficient data structures for common algorithms. WeakMaps provides leak-free object-key'd side tables.","position":{"start":{"line":428,"column":1,"offset":12046},"end":{"line":428,"column":103,"offset":12148}}}],"position":{"start":{"line":428,"column":1,"offset":12046},"end":{"line":428,"column":103,"offset":12148}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Sets</span>\n<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"goodbye\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ns<span class=\"token punctuation\">.</span>size <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\ns<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Maps</span>\n<span class=\"token keyword\">var</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nm<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nm<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nm<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">34</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Weak Maps</span>\n<span class=\"token keyword\">var</span> wm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WeakMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwm<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">extra</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwm<span class=\"token punctuation\">.</span>size <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span>\n\n<span class=\"token comment\">// Weak Sets</span>\n<span class=\"token keyword\">var</span> ws <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WeakSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nws<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Because the added object has no other references, it will not be held in the set</span></code></pre></div>","position":{"start":{"line":430,"column":1,"offset":12150},"end":{"line":452,"column":4,"offset":12577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":454,"column":1,"offset":12579},"end":{"line":454,"column":16,"offset":12594}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"},"children":[{"type":"text","value":"Map","position":{"start":{"line":454,"column":17,"offset":12595},"end":{"line":454,"column":20,"offset":12598}}}],"position":{"start":{"line":454,"column":16,"offset":12594},"end":{"line":454,"column":107,"offset":12685}}},{"type":"text","value":", ","position":{"start":{"line":454,"column":107,"offset":12685},"end":{"line":454,"column":109,"offset":12687}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"},"children":[{"type":"text","value":"Set","position":{"start":{"line":454,"column":110,"offset":12688},"end":{"line":454,"column":113,"offset":12691}}}],"position":{"start":{"line":454,"column":109,"offset":12687},"end":{"line":454,"column":200,"offset":12778}}},{"type":"text","value":", ","position":{"start":{"line":454,"column":200,"offset":12778},"end":{"line":454,"column":202,"offset":12780}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap"},"children":[{"type":"text","value":"WeakMap","position":{"start":{"line":454,"column":203,"offset":12781},"end":{"line":454,"column":210,"offset":12788}}}],"position":{"start":{"line":454,"column":202,"offset":12780},"end":{"line":454,"column":301,"offset":12879}}},{"type":"text","value":", ","position":{"start":{"line":454,"column":301,"offset":12879},"end":{"line":454,"column":303,"offset":12881}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet"},"children":[{"type":"text","value":"WeakSet","position":{"start":{"line":454,"column":304,"offset":12882},"end":{"line":454,"column":311,"offset":12889}}}],"position":{"start":{"line":454,"column":303,"offset":12881},"end":{"line":454,"column":402,"offset":12980}}}],"position":{"start":{"line":454,"column":1,"offset":12579},"end":{"line":454,"column":402,"offset":12980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Proxies","position":{"start":{"line":456,"column":5,"offset":12986},"end":{"line":456,"column":12,"offset":12993}}}],"position":{"start":{"line":456,"column":1,"offset":12982},"end":{"line":456,"column":12,"offset":12993}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Proxies enable creation of objects with the full range of behaviors available to host objects. Can be used for interception, object virtualization, logging/profiling, etc.","position":{"start":{"line":458,"column":1,"offset":12995},"end":{"line":458,"column":172,"offset":13166}}}],"position":{"start":{"line":458,"column":1,"offset":12995},"end":{"line":458,"column":172,"offset":13166}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Proxying a normal object</span>\n<span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">receiver<span class=\"token punctuation\">,</span> name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span>world <span class=\"token operator\">===</span> <span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":460,"column":1,"offset":13168},"end":{"line":471,"column":4,"offset":13376}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Proxying a function object</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">target</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'I am the target'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">apply</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">receiver<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'I am the proxy'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">p</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'I am the proxy'</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":473,"column":1,"offset":13378},"end":{"line":484,"column":4,"offset":13628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are traps available for all of the runtime-level meta-operations:","position":{"start":{"line":486,"column":1,"offset":13630},"end":{"line":486,"column":72,"offset":13701}}}],"position":{"start":{"line":486,"column":1,"offset":13630},"end":{"line":486,"column":72,"offset":13701}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> handler <span class=\"token operator\">=</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">get</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">set</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">has</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">deleteProperty</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">apply</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">construct</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">getOwnPropertyDescriptor</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">defineProperty</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">getPrototypeOf</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">setPrototypeOf</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">enumerate</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">ownKeys</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">preventExtensions</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">isExtensible</span><span class=\"token operator\">:</span><span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":488,"column":1,"offset":13703},"end":{"line":506,"column":4,"offset":13989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":508,"column":1,"offset":13991},"end":{"line":508,"column":12,"offset":14002}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"},"children":[{"type":"text","value":"MDN Proxy","position":{"start":{"line":508,"column":13,"offset":14003},"end":{"line":508,"column":22,"offset":14012}}}],"position":{"start":{"line":508,"column":12,"offset":14002},"end":{"line":508,"column":111,"offset":14101}}}],"position":{"start":{"line":508,"column":1,"offset":13991},"end":{"line":508,"column":111,"offset":14101}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Symbols","position":{"start":{"line":510,"column":5,"offset":14107},"end":{"line":510,"column":12,"offset":14114}}}],"position":{"start":{"line":510,"column":1,"offset":14103},"end":{"line":510,"column":12,"offset":14114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Symbols enable access control for object state. Symbols allow properties to be keyed by either ","position":{"start":{"line":512,"column":1,"offset":14116},"end":{"line":512,"column":96,"offset":14211}}},{"type":"raw","value":"<code class=\"language-text\">string</code>","position":{"start":{"line":512,"column":96,"offset":14211},"end":{"line":512,"column":104,"offset":14219}}},{"type":"text","value":" (as in ES5) or ","position":{"start":{"line":512,"column":104,"offset":14219},"end":{"line":512,"column":120,"offset":14235}}},{"type":"raw","value":"<code class=\"language-text\">symbol</code>","position":{"start":{"line":512,"column":120,"offset":14235},"end":{"line":512,"column":128,"offset":14243}}},{"type":"text","value":". Symbols are a new primitive type. Optional ","position":{"start":{"line":512,"column":128,"offset":14243},"end":{"line":512,"column":173,"offset":14288}}},{"type":"raw","value":"<code class=\"language-text\">description</code>","position":{"start":{"line":512,"column":173,"offset":14288},"end":{"line":512,"column":186,"offset":14301}}},{"type":"text","value":" parameter used in debugging - but is not part of identity. Symbols are unique (like gensym), but not private since they are exposed via reflection features like ","position":{"start":{"line":512,"column":186,"offset":14301},"end":{"line":512,"column":348,"offset":14463}}},{"type":"raw","value":"<code class=\"language-text\">Object.getOwnPropertySymbols</code>","position":{"start":{"line":512,"column":348,"offset":14463},"end":{"line":512,"column":378,"offset":14493}}},{"type":"text","value":".","position":{"start":{"line":512,"column":378,"offset":14493},"end":{"line":512,"column":379,"offset":14494}}}],"position":{"start":{"line":512,"column":1,"offset":14116},"end":{"line":512,"column":379,"offset":14494}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> MyClass <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// module scoped symbol</span>\n  <span class=\"token keyword\">var</span> key <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">MyClass</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">privateData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> privateData<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">doStuff</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> MyClass<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\nc<span class=\"token punctuation\">[</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span></code></pre></div>","position":{"start":{"line":514,"column":1,"offset":14496},"end":{"line":535,"column":4,"offset":14819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":537,"column":1,"offset":14821},"end":{"line":537,"column":12,"offset":14832}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol"},"children":[{"type":"text","value":"MDN Symbol","position":{"start":{"line":537,"column":13,"offset":14833},"end":{"line":537,"column":23,"offset":14843}}}],"position":{"start":{"line":537,"column":12,"offset":14832},"end":{"line":537,"column":113,"offset":14933}}}],"position":{"start":{"line":537,"column":1,"offset":14821},"end":{"line":537,"column":113,"offset":14933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Subclassable Built-ins","position":{"start":{"line":539,"column":5,"offset":14939},"end":{"line":539,"column":27,"offset":14961}}}],"position":{"start":{"line":539,"column":1,"offset":14935},"end":{"line":539,"column":27,"offset":14961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES6, built-ins like ","position":{"start":{"line":541,"column":1,"offset":14963},"end":{"line":541,"column":24,"offset":14986}}},{"type":"raw","value":"<code class=\"language-text\">Array</code>","position":{"start":{"line":541,"column":24,"offset":14986},"end":{"line":541,"column":31,"offset":14993}}},{"type":"text","value":", ","position":{"start":{"line":541,"column":31,"offset":14993},"end":{"line":541,"column":33,"offset":14995}}},{"type":"raw","value":"<code class=\"language-text\">Date</code>","position":{"start":{"line":541,"column":33,"offset":14995},"end":{"line":541,"column":39,"offset":15001}}},{"type":"text","value":" and DOM ","position":{"start":{"line":541,"column":39,"offset":15001},"end":{"line":541,"column":48,"offset":15010}}},{"type":"raw","value":"<code class=\"language-text\">Element</code>","position":{"start":{"line":541,"column":48,"offset":15010},"end":{"line":541,"column":57,"offset":15019}}},{"type":"text","value":"s can be subclassed.","position":{"start":{"line":541,"column":57,"offset":15019},"end":{"line":541,"column":77,"offset":15039}}}],"position":{"start":{"line":541,"column":1,"offset":14963},"end":{"line":541,"column":77,"offset":15039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Object construction for a function named ","position":{"start":{"line":543,"column":1,"offset":15041},"end":{"line":543,"column":42,"offset":15082}}},{"type":"raw","value":"<code class=\"language-text\">Ctor</code>","position":{"start":{"line":543,"column":42,"offset":15082},"end":{"line":543,"column":48,"offset":15088}}},{"type":"text","value":" now uses two-phases (both virtually dispatched):","position":{"start":{"line":543,"column":48,"offset":15088},"end":{"line":543,"column":97,"offset":15137}}}],"position":{"start":{"line":543,"column":1,"offset":15041},"end":{"line":543,"column":97,"offset":15137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Call ","position":{"start":{"line":545,"column":3,"offset":15141},"end":{"line":545,"column":8,"offset":15146}}},{"type":"raw","value":"<code class=\"language-text\">Ctor[@@create]</code>","position":{"start":{"line":545,"column":8,"offset":15146},"end":{"line":545,"column":24,"offset":15162}}},{"type":"text","value":" to allocate the object, installing any special behavior","position":{"start":{"line":545,"column":24,"offset":15162},"end":{"line":545,"column":80,"offset":15218}}}],"position":{"start":{"line":545,"column":1,"offset":15139},"end":{"line":545,"column":80,"offset":15218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Invoke constructor on new instance to initialize","position":{"start":{"line":546,"column":3,"offset":15221},"end":{"line":546,"column":51,"offset":15269}}}],"position":{"start":{"line":546,"column":1,"offset":15219},"end":{"line":546,"column":51,"offset":15269}}},{"type":"text","value":"\n"}],"position":{"start":{"line":545,"column":1,"offset":15139},"end":{"line":546,"column":51,"offset":15269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The known ","position":{"start":{"line":548,"column":1,"offset":15271},"end":{"line":548,"column":11,"offset":15281}}},{"type":"raw","value":"<code class=\"language-text\">@@create</code>","position":{"start":{"line":548,"column":11,"offset":15281},"end":{"line":548,"column":21,"offset":15291}}},{"type":"text","value":" symbol is available via ","position":{"start":{"line":548,"column":21,"offset":15291},"end":{"line":548,"column":46,"offset":15316}}},{"type":"raw","value":"<code class=\"language-text\">Symbol.create</code>","position":{"start":{"line":548,"column":46,"offset":15316},"end":{"line":548,"column":61,"offset":15331}}},{"type":"text","value":". Built-ins now expose their ","position":{"start":{"line":548,"column":61,"offset":15331},"end":{"line":548,"column":90,"offset":15360}}},{"type":"raw","value":"<code class=\"language-text\">@@create</code>","position":{"start":{"line":548,"column":90,"offset":15360},"end":{"line":548,"column":100,"offset":15370}}},{"type":"text","value":" explicitly.","position":{"start":{"line":548,"column":100,"offset":15370},"end":{"line":548,"column":112,"offset":15382}}}],"position":{"start":{"line":548,"column":1,"offset":15271},"end":{"line":548,"column":112,"offset":15382}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Pseudo-code of Array</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Array</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Install special [[DefineOwnProperty]]</span>\n        <span class=\"token comment\">// to magically update 'length'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// User code of Array subclass</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyArray</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Array</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Two-phase 'new':</span>\n<span class=\"token comment\">// 1) Call @@create to allocate object</span>\n<span class=\"token comment\">// 2) Invoke constructor on new instance</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":550,"column":1,"offset":15384},"end":{"line":571,"column":4,"offset":15862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Math + Number + String + Array + Object APIs","position":{"start":{"line":573,"column":5,"offset":15868},"end":{"line":573,"column":49,"offset":15912}}}],"position":{"start":{"line":573,"column":1,"offset":15864},"end":{"line":573,"column":49,"offset":15912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Many new library additions, including core Math libraries, Array conversion helpers, String helpers, and Object.assign for copying.","position":{"start":{"line":575,"column":1,"offset":15914},"end":{"line":575,"column":132,"offset":16045}}}],"position":{"start":{"line":575,"column":1,"offset":15914},"end":{"line":575,"column":132,"offset":16045}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Number<span class=\"token punctuation\">.</span><span class=\"token constant\">EPSILON</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NaN\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\n\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">acosh</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1.762747174039086</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">hypot</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 5</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">imul</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span>\n\n<span class=\"token string\">\"abcde\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cd\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n<span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"abcabcabc\"</span>\n\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Returns a real Array</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Similar to new Array(...), but without special one-arg behavior</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// [0,7,7]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyWithin</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// [1, 2, 3, 1, 2]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// iterator [0, \"a\"], [1,\"b\"], [2,\"c\"]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// iterator 0, 1, 2</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// iterator \"a\", \"b\", \"c\"</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":577,"column":1,"offset":16047},"end":{"line":600,"column":4,"offset":16831}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":602,"column":1,"offset":16833},"end":{"line":602,"column":16,"offset":16848}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"children":[{"type":"text","value":"Number","position":{"start":{"line":602,"column":17,"offset":16849},"end":{"line":602,"column":23,"offset":16855}}}],"position":{"start":{"line":602,"column":16,"offset":16848},"end":{"line":602,"column":113,"offset":16945}}},{"type":"text","value":", ","position":{"start":{"line":602,"column":113,"offset":16945},"end":{"line":602,"column":115,"offset":16947}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math"},"children":[{"type":"text","value":"Math","position":{"start":{"line":602,"column":116,"offset":16948},"end":{"line":602,"column":120,"offset":16952}}}],"position":{"start":{"line":602,"column":115,"offset":16947},"end":{"line":602,"column":208,"offset":17040}}},{"type":"text","value":", ","position":{"start":{"line":602,"column":208,"offset":17040},"end":{"line":602,"column":210,"offset":17042}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from"},"children":[{"type":"text","value":"Array.from","position":{"start":{"line":602,"column":211,"offset":17043},"end":{"line":602,"column":221,"offset":17053}}}],"position":{"start":{"line":602,"column":210,"offset":17042},"end":{"line":602,"column":315,"offset":17147}}},{"type":"text","value":", ","position":{"start":{"line":602,"column":315,"offset":17147},"end":{"line":602,"column":317,"offset":17149}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of"},"children":[{"type":"text","value":"Array.of","position":{"start":{"line":602,"column":318,"offset":17150},"end":{"line":602,"column":326,"offset":17158}}}],"position":{"start":{"line":602,"column":317,"offset":17149},"end":{"line":602,"column":418,"offset":17250}}},{"type":"text","value":", ","position":{"start":{"line":602,"column":418,"offset":17250},"end":{"line":602,"column":420,"offset":17252}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin"},"children":[{"type":"text","value":"Array.prototype.copyWithin","position":{"start":{"line":602,"column":421,"offset":17253},"end":{"line":602,"column":447,"offset":17279}}}],"position":{"start":{"line":602,"column":420,"offset":17252},"end":{"line":602,"column":547,"offset":17379}}},{"type":"text","value":", ","position":{"start":{"line":602,"column":547,"offset":17379},"end":{"line":602,"column":549,"offset":17381}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"},"children":[{"type":"text","value":"Object.assign","position":{"start":{"line":602,"column":550,"offset":17382},"end":{"line":602,"column":563,"offset":17395}}}],"position":{"start":{"line":602,"column":549,"offset":17381},"end":{"line":602,"column":660,"offset":17492}}}],"position":{"start":{"line":602,"column":1,"offset":16833},"end":{"line":602,"column":660,"offset":17492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Binary and Octal Literals","position":{"start":{"line":604,"column":5,"offset":17498},"end":{"line":604,"column":30,"offset":17523}}}],"position":{"start":{"line":604,"column":1,"offset":17494},"end":{"line":604,"column":30,"offset":17523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two new numeric literal forms are added for binary (","position":{"start":{"line":606,"column":1,"offset":17525},"end":{"line":606,"column":53,"offset":17577}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":606,"column":53,"offset":17577},"end":{"line":606,"column":56,"offset":17580}}},{"type":"text","value":") and octal (","position":{"start":{"line":606,"column":56,"offset":17580},"end":{"line":606,"column":69,"offset":17593}}},{"type":"raw","value":"<code class=\"language-text\">o</code>","position":{"start":{"line":606,"column":69,"offset":17593},"end":{"line":606,"column":72,"offset":17596}}},{"type":"text","value":").","position":{"start":{"line":606,"column":72,"offset":17596},"end":{"line":606,"column":74,"offset":17598}}}],"position":{"start":{"line":606,"column":1,"offset":17525},"end":{"line":606,"column":74,"offset":17598}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">0b111110111</span> <span class=\"token operator\">===</span> <span class=\"token number\">503</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">0o767</span> <span class=\"token operator\">===</span> <span class=\"token number\">503</span> <span class=\"token comment\">// true</span></code></pre></div>","position":{"start":{"line":608,"column":1,"offset":17600},"end":{"line":611,"column":4,"offset":17659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Promises","position":{"start":{"line":613,"column":5,"offset":17665},"end":{"line":613,"column":13,"offset":17673}}}],"position":{"start":{"line":613,"column":1,"offset":17661},"end":{"line":613,"column":13,"offset":17673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Promises are a library for asynchronous programming. Promises are a first class representation of a value that may be made available in the future. Promises are used in many existing JavaScript libraries.","position":{"start":{"line":615,"column":1,"offset":17675},"end":{"line":615,"column":205,"offset":17879}}}],"position":{"start":{"line":615,"column":1,"offset":17675},"end":{"line":615,"column":205,"offset":17879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":617,"column":1,"offset":17881},"end":{"line":617,"column":4,"offset":17884}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">duration <span class=\"token operator\">=</span> <span class=\"token number\">0</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hmm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":620,"column":1,"offset":17887},"end":{"line":636,"column":4,"offset":18206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":638,"column":1,"offset":18208},"end":{"line":638,"column":12,"offset":18219}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"children":[{"type":"text","value":"MDN Promise","position":{"start":{"line":638,"column":13,"offset":18220},"end":{"line":638,"column":24,"offset":18231}}}],"position":{"start":{"line":638,"column":12,"offset":18219},"end":{"line":638,"column":115,"offset":18322}}}],"position":{"start":{"line":638,"column":1,"offset":18208},"end":{"line":638,"column":115,"offset":18322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Reflect API","position":{"start":{"line":640,"column":5,"offset":18328},"end":{"line":640,"column":16,"offset":18339}}}],"position":{"start":{"line":640,"column":1,"offset":18324},"end":{"line":640,"column":16,"offset":18339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Full reflection API exposing the runtime-level meta-operations on objects. This is effectively the inverse of the Proxy API, and allows making calls corresponding to the same meta-operations as the proxy traps. Especially useful for implementing proxies.","position":{"start":{"line":642,"column":1,"offset":18341},"end":{"line":642,"column":255,"offset":18595}}}],"position":{"start":{"line":642,"column":1,"offset":18341},"end":{"line":642,"column":255,"offset":18595}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// No sample yet</span></code></pre></div>","position":{"start":{"line":644,"column":1,"offset":18597},"end":{"line":646,"column":4,"offset":18623}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":648,"column":1,"offset":18625},"end":{"line":648,"column":12,"offset":18636}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect"},"children":[{"type":"text","value":"MDN Reflect","position":{"start":{"line":648,"column":13,"offset":18637},"end":{"line":648,"column":24,"offset":18648}}}],"position":{"start":{"line":648,"column":12,"offset":18636},"end":{"line":648,"column":115,"offset":18739}}}],"position":{"start":{"line":648,"column":1,"offset":18625},"end":{"line":648,"column":115,"offset":18739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Tail Calls","position":{"start":{"line":650,"column":5,"offset":18745},"end":{"line":650,"column":15,"offset":18755}}}],"position":{"start":{"line":650,"column":1,"offset":18741},"end":{"line":650,"column":15,"offset":18755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Calls in tail-position are guaranteed to not grow the stack unboundedly. Makes recursive algorithms safe in the face of unbounded inputs.","position":{"start":{"line":652,"column":1,"offset":18757},"end":{"line":652,"column":138,"offset":18894}}}],"position":{"start":{"line":652,"column":1,"offset":18757},"end":{"line":652,"column":138,"offset":18894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":654,"column":1,"offset":18896},"end":{"line":654,"column":4,"offset":18899}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> acc <span class=\"token operator\">=</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">*</span> acc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Stack overflow in most implementations today,</span>\n<span class=\"token comment\">// but safe on arbitrary inputs in ES6</span>\n<span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token number\">100000</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":657,"column":1,"offset":18902},"end":{"line":669,"column":4,"offset":19139}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":670,"column":1,"offset":19140}}}}