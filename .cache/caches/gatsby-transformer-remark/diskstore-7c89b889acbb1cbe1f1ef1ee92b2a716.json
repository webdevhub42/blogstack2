{"expireTime":9007200911870453000,"key":"transformer-remark-markdown-html-ast-1fc55b690c7a2b0268709e8952c9a06c-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Python Cheat Sheet","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":21,"offset":22}}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":21,"offset":22}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Python Basics","position":{"start":{"line":5,"column":4,"offset":27},"end":{"line":5,"column":17,"offset":40}}}],"position":{"start":{"line":5,"column":1,"offset":24},"end":{"line":5,"column":17,"offset":40}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Math Operators","position":{"start":{"line":7,"column":5,"offset":46},"end":{"line":7,"column":19,"offset":60}}}],"position":{"start":{"line":7,"column":1,"offset":42},"end":{"line":7,"column":19,"offset":60}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"From ","position":{"start":{"line":9,"column":1,"offset":62},"end":{"line":9,"column":6,"offset":67}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Highest","position":{"start":{"line":9,"column":8,"offset":69},"end":{"line":9,"column":15,"offset":76}}}],"position":{"start":{"line":9,"column":6,"offset":67},"end":{"line":9,"column":17,"offset":78}}},{"type":"text","value":" to ","position":{"start":{"line":9,"column":17,"offset":78},"end":{"line":9,"column":21,"offset":82}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Lowest","position":{"start":{"line":9,"column":23,"offset":84},"end":{"line":9,"column":29,"offset":90}}}],"position":{"start":{"line":9,"column":21,"offset":82},"end":{"line":9,"column":31,"offset":92}}},{"type":"text","value":" precedence:","position":{"start":{"line":9,"column":31,"offset":92},"end":{"line":9,"column":43,"offset":104}}}],"position":{"start":{"line":9,"column":1,"offset":62},"end":{"line":9,"column":43,"offset":104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Operators","position":{"start":{"line":11,"column":3,"offset":108},"end":{"line":11,"column":12,"offset":117}}}],"position":{"start":{"line":11,"column":3,"offset":108},"end":{"line":11,"column":12,"offset":117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Operation","position":{"start":{"line":11,"column":15,"offset":120},"end":{"line":11,"column":24,"offset":129}}}],"position":{"start":{"line":11,"column":15,"offset":120},"end":{"line":11,"column":31,"offset":136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Example","position":{"start":{"line":11,"column":34,"offset":139},"end":{"line":11,"column":41,"offset":146}}}],"position":{"start":{"line":11,"column":34,"offset":139},"end":{"line":11,"column":49,"offset":154}}},{"type":"text","value":"\n"}],"position":{"start":{"line":11,"column":1,"offset":106},"end":{"line":11,"column":51,"offset":156}}},{"type":"text","value":"\n"}],"position":{"start":{"line":11,"column":1,"offset":106},"end":{"line":11,"column":51,"offset":156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"*","position":{"start":{"line":13,"column":3,"offset":210},"end":{"line":13,"column":5,"offset":212}}},{"type":"text","value":"*","position":{"start":{"line":13,"column":5,"offset":212},"end":{"line":13,"column":7,"offset":214}}}],"position":{"start":{"line":13,"column":3,"offset":210},"end":{"line":13,"column":12,"offset":219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Exponent","position":{"start":{"line":13,"column":15,"offset":222},"end":{"line":13,"column":23,"offset":230}}}],"position":{"start":{"line":13,"column":15,"offset":222},"end":{"line":13,"column":31,"offset":238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">2 ** 3 = 8</code>","position":{"start":{"line":13,"column":34,"offset":241},"end":{"line":13,"column":46,"offset":253}}}],"position":{"start":{"line":13,"column":34,"offset":241},"end":{"line":13,"column":49,"offset":256}}},{"type":"text","value":"\n"}],"position":{"start":{"line":13,"column":1,"offset":208},"end":{"line":13,"column":51,"offset":258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"%","position":{"start":{"line":14,"column":3,"offset":261},"end":{"line":14,"column":4,"offset":262}}}],"position":{"start":{"line":14,"column":3,"offset":261},"end":{"line":14,"column":12,"offset":270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Modulus/Remaider","position":{"start":{"line":14,"column":15,"offset":273},"end":{"line":14,"column":31,"offset":289}}}],"position":{"start":{"line":14,"column":15,"offset":273},"end":{"line":14,"column":31,"offset":289}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">22 % 8 = 6</code>","position":{"start":{"line":14,"column":34,"offset":292},"end":{"line":14,"column":46,"offset":304}}}],"position":{"start":{"line":14,"column":34,"offset":292},"end":{"line":14,"column":49,"offset":307}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":1,"offset":259},"end":{"line":14,"column":51,"offset":309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"//","position":{"start":{"line":15,"column":3,"offset":312},"end":{"line":15,"column":5,"offset":314}}}],"position":{"start":{"line":15,"column":3,"offset":312},"end":{"line":15,"column":12,"offset":321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Integer division","position":{"start":{"line":15,"column":15,"offset":324},"end":{"line":15,"column":31,"offset":340}}}],"position":{"start":{"line":15,"column":15,"offset":324},"end":{"line":15,"column":31,"offset":340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">22 // 8 = 2</code>","position":{"start":{"line":15,"column":34,"offset":343},"end":{"line":15,"column":47,"offset":356}}}],"position":{"start":{"line":15,"column":34,"offset":343},"end":{"line":15,"column":49,"offset":358}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":1,"offset":310},"end":{"line":15,"column":51,"offset":360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"/","position":{"start":{"line":16,"column":3,"offset":363},"end":{"line":16,"column":4,"offset":364}}}],"position":{"start":{"line":16,"column":3,"offset":363},"end":{"line":16,"column":12,"offset":372}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Division","position":{"start":{"line":16,"column":15,"offset":375},"end":{"line":16,"column":23,"offset":383}}}],"position":{"start":{"line":16,"column":15,"offset":375},"end":{"line":16,"column":31,"offset":391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">22 / 8 = 2.75</code>","position":{"start":{"line":16,"column":34,"offset":394},"end":{"line":16,"column":49,"offset":409}}}],"position":{"start":{"line":16,"column":34,"offset":394},"end":{"line":16,"column":49,"offset":409}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":361},"end":{"line":16,"column":51,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"*","position":{"start":{"line":17,"column":3,"offset":414},"end":{"line":17,"column":5,"offset":416}}}],"position":{"start":{"line":17,"column":3,"offset":414},"end":{"line":17,"column":12,"offset":423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Multiplication","position":{"start":{"line":17,"column":15,"offset":426},"end":{"line":17,"column":29,"offset":440}}}],"position":{"start":{"line":17,"column":15,"offset":426},"end":{"line":17,"column":31,"offset":442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">3 * 3 = 9</code>","position":{"start":{"line":17,"column":34,"offset":445},"end":{"line":17,"column":45,"offset":456}}}],"position":{"start":{"line":17,"column":34,"offset":445},"end":{"line":17,"column":49,"offset":460}}},{"type":"text","value":"\n"}],"position":{"start":{"line":17,"column":1,"offset":412},"end":{"line":17,"column":51,"offset":462}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"-","position":{"start":{"line":18,"column":3,"offset":465},"end":{"line":18,"column":4,"offset":466}}}],"position":{"start":{"line":18,"column":3,"offset":465},"end":{"line":18,"column":12,"offset":474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Subtraction","position":{"start":{"line":18,"column":15,"offset":477},"end":{"line":18,"column":26,"offset":488}}}],"position":{"start":{"line":18,"column":15,"offset":477},"end":{"line":18,"column":31,"offset":493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">5 - 2 = 3</code>","position":{"start":{"line":18,"column":34,"offset":496},"end":{"line":18,"column":45,"offset":507}}}],"position":{"start":{"line":18,"column":34,"offset":496},"end":{"line":18,"column":49,"offset":511}}},{"type":"text","value":"\n"}],"position":{"start":{"line":18,"column":1,"offset":463},"end":{"line":18,"column":51,"offset":513}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"+","position":{"start":{"line":19,"column":3,"offset":516},"end":{"line":19,"column":4,"offset":517}}}],"position":{"start":{"line":19,"column":3,"offset":516},"end":{"line":19,"column":12,"offset":525}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Addition","position":{"start":{"line":19,"column":15,"offset":528},"end":{"line":19,"column":23,"offset":536}}}],"position":{"start":{"line":19,"column":15,"offset":528},"end":{"line":19,"column":31,"offset":544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">2 + 2 = 4</code>","position":{"start":{"line":19,"column":34,"offset":547},"end":{"line":19,"column":45,"offset":558}}}],"position":{"start":{"line":19,"column":34,"offset":547},"end":{"line":19,"column":49,"offset":562}}},{"type":"text","value":"\n"}],"position":{"start":{"line":19,"column":1,"offset":514},"end":{"line":19,"column":51,"offset":564}}},{"type":"text","value":"\n"}],"position":{"start":{"line":13,"column":1,"offset":208},"end":{"line":19,"column":51,"offset":564}}},{"type":"text","value":"\n"}],"position":{"start":{"line":11,"column":1,"offset":106},"end":{"line":19,"column":51,"offset":564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Examples of expressions in the interactive shell:","position":{"start":{"line":21,"column":1,"offset":566},"end":{"line":21,"column":50,"offset":615}}}],"position":{"start":{"line":21,"column":1,"offset":566},"end":{"line":21,"column":50,"offset":615}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":23,"column":1,"offset":617},"end":{"line":25,"column":4,"offset":640}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":27,"column":1,"offset":642},"end":{"line":29,"column":4,"offset":667}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">8</span></code></pre></div>","position":{"start":{"line":31,"column":1,"offset":669},"end":{"line":33,"column":4,"offset":689}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">23</span> <span class=\"token operator\">//</span> <span class=\"token number\">7</span></code></pre></div>","position":{"start":{"line":35,"column":1,"offset":691},"end":{"line":37,"column":4,"offset":712}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">23</span> <span class=\"token operator\">%</span> <span class=\"token number\">7</span></code></pre></div>","position":{"start":{"line":39,"column":1,"offset":714},"end":{"line":41,"column":4,"offset":734}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":43,"column":1,"offset":736},"end":{"line":45,"column":4,"offset":779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Data Types","position":{"start":{"line":47,"column":5,"offset":785},"end":{"line":47,"column":15,"offset":795}}}],"position":{"start":{"line":47,"column":1,"offset":781},"end":{"line":47,"column":15,"offset":795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Data Type","position":{"start":{"line":49,"column":3,"offset":799},"end":{"line":49,"column":12,"offset":808}}}],"position":{"start":{"line":49,"column":3,"offset":799},"end":{"line":49,"column":25,"offset":821}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Examples","position":{"start":{"line":49,"column":28,"offset":824},"end":{"line":49,"column":36,"offset":832}}}],"position":{"start":{"line":49,"column":28,"offset":824},"end":{"line":49,"column":69,"offset":865}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":797},"end":{"line":49,"column":71,"offset":867}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":797},"end":{"line":49,"column":71,"offset":867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Integers","position":{"start":{"line":51,"column":3,"offset":941},"end":{"line":51,"column":11,"offset":949}}}],"position":{"start":{"line":51,"column":3,"offset":941},"end":{"line":51,"column":25,"offset":963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">-2, -1, 0, 1, 2, 3, 4, 5</code>","position":{"start":{"line":51,"column":28,"offset":966},"end":{"line":51,"column":54,"offset":992}}}],"position":{"start":{"line":51,"column":28,"offset":966},"end":{"line":51,"column":69,"offset":1007}}},{"type":"text","value":"\n"}],"position":{"start":{"line":51,"column":1,"offset":939},"end":{"line":51,"column":71,"offset":1009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Floating-point numbers","position":{"start":{"line":52,"column":3,"offset":1012},"end":{"line":52,"column":25,"offset":1034}}}],"position":{"start":{"line":52,"column":3,"offset":1012},"end":{"line":52,"column":25,"offset":1034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">-1.25, -1.0, --0.5, 0.0, 0.5, 1.0, 1.25</code>","position":{"start":{"line":52,"column":28,"offset":1037},"end":{"line":52,"column":69,"offset":1078}}}],"position":{"start":{"line":52,"column":28,"offset":1037},"end":{"line":52,"column":69,"offset":1078}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":1010},"end":{"line":52,"column":71,"offset":1080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Strings","position":{"start":{"line":53,"column":3,"offset":1083},"end":{"line":53,"column":10,"offset":1090}}}],"position":{"start":{"line":53,"column":3,"offset":1083},"end":{"line":53,"column":25,"offset":1105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">'a', 'aa', 'aaa', 'Hello!', '11 cats'</code>","position":{"start":{"line":53,"column":28,"offset":1108},"end":{"line":53,"column":67,"offset":1147}}}],"position":{"start":{"line":53,"column":28,"offset":1108},"end":{"line":53,"column":69,"offset":1149}}},{"type":"text","value":"\n"}],"position":{"start":{"line":53,"column":1,"offset":1081},"end":{"line":53,"column":71,"offset":1151}}},{"type":"text","value":"\n"}],"position":{"start":{"line":51,"column":1,"offset":939},"end":{"line":53,"column":71,"offset":1151}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":797},"end":{"line":53,"column":71,"offset":1151}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"String Concatenation and Replication","position":{"start":{"line":55,"column":5,"offset":1157},"end":{"line":55,"column":41,"offset":1193}}}],"position":{"start":{"line":55,"column":1,"offset":1153},"end":{"line":55,"column":41,"offset":1193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"String concatenation:","position":{"start":{"line":57,"column":1,"offset":1195},"end":{"line":57,"column":22,"offset":1216}}}],"position":{"start":{"line":57,"column":1,"offset":1195},"end":{"line":57,"column":22,"offset":1216}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Alice'</span> <span class=\"token string\">'Bob'</span></code></pre></div>","position":{"start":{"line":59,"column":1,"offset":1218},"end":{"line":61,"column":4,"offset":1245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: Avoid ","position":{"start":{"line":63,"column":1,"offset":1247},"end":{"line":63,"column":13,"offset":1259}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":63,"column":13,"offset":1259},"end":{"line":63,"column":16,"offset":1262}}},{"type":"text","value":" operator for string concatenation. Prefer string formatting.","position":{"start":{"line":63,"column":16,"offset":1262},"end":{"line":63,"column":77,"offset":1323}}}],"position":{"start":{"line":63,"column":1,"offset":1247},"end":{"line":63,"column":77,"offset":1323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"String Replication:","position":{"start":{"line":65,"column":1,"offset":1325},"end":{"line":65,"column":20,"offset":1344}}}],"position":{"start":{"line":65,"column":1,"offset":1325},"end":{"line":65,"column":20,"offset":1344}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Alice'</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":67,"column":1,"offset":1346},"end":{"line":69,"column":4,"offset":1371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Variables","position":{"start":{"line":71,"column":5,"offset":1377},"end":{"line":71,"column":14,"offset":1386}}}],"position":{"start":{"line":71,"column":1,"offset":1373},"end":{"line":71,"column":14,"offset":1386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can name a variable anything as long as it obeys the following three rules:","position":{"start":{"line":73,"column":1,"offset":1388},"end":{"line":73,"column":80,"offset":1467}}}],"position":{"start":{"line":73,"column":1,"offset":1388},"end":{"line":73,"column":80,"offset":1467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"It can be only one word.","position":{"start":{"line":75,"column":4,"offset":1472},"end":{"line":75,"column":28,"offset":1496}}}],"position":{"start":{"line":75,"column":1,"offset":1469},"end":{"line":75,"column":28,"offset":1496}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"It can use only letters, numbers, and the underscore (","position":{"start":{"line":76,"column":4,"offset":1500},"end":{"line":76,"column":58,"offset":1554}}},{"type":"raw","value":"<code class=\"language-text\">_</code>","position":{"start":{"line":76,"column":58,"offset":1554},"end":{"line":76,"column":61,"offset":1557}}},{"type":"text","value":") character.","position":{"start":{"line":76,"column":61,"offset":1557},"end":{"line":76,"column":73,"offset":1569}}}],"position":{"start":{"line":76,"column":1,"offset":1497},"end":{"line":76,"column":73,"offset":1569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"It can't begin with a number.","position":{"start":{"line":77,"column":4,"offset":1573},"end":{"line":77,"column":33,"offset":1602}}}],"position":{"start":{"line":77,"column":1,"offset":1570},"end":{"line":77,"column":33,"offset":1602}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Variable name starting with an underscore (","position":{"start":{"line":78,"column":4,"offset":1606},"end":{"line":78,"column":47,"offset":1649}}},{"type":"raw","value":"<code class=\"language-text\">_</code>","position":{"start":{"line":78,"column":47,"offset":1649},"end":{"line":78,"column":50,"offset":1652}}},{"type":"text","value":") are considered as \"unuseful`.","position":{"start":{"line":78,"column":50,"offset":1652},"end":{"line":78,"column":81,"offset":1683}}}],"position":{"start":{"line":78,"column":1,"offset":1603},"end":{"line":78,"column":81,"offset":1683}}},{"type":"text","value":"\n"}],"position":{"start":{"line":75,"column":1,"offset":1469},"end":{"line":78,"column":81,"offset":1683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":80,"column":1,"offset":1685},"end":{"line":80,"column":9,"offset":1693}}}],"position":{"start":{"line":80,"column":1,"offset":1685},"end":{"line":80,"column":9,"offset":1693}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span></code></pre></div>","position":{"start":{"line":82,"column":1,"offset":1695},"end":{"line":84,"column":4,"offset":1723}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">_spam <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span></code></pre></div>","position":{"start":{"line":86,"column":1,"offset":1725},"end":{"line":88,"column":4,"offset":1754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">_spam</code>","position":{"start":{"line":90,"column":1,"offset":1756},"end":{"line":90,"column":8,"offset":1763}}},{"type":"text","value":" should not be used again in the code.","position":{"start":{"line":90,"column":8,"offset":1763},"end":{"line":90,"column":46,"offset":1801}}}],"position":{"start":{"line":90,"column":1,"offset":1756},"end":{"line":90,"column":46,"offset":1801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Comments","position":{"start":{"line":92,"column":5,"offset":1807},"end":{"line":92,"column":13,"offset":1815}}}],"position":{"start":{"line":92,"column":1,"offset":1803},"end":{"line":92,"column":13,"offset":1815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inline comment:","position":{"start":{"line":94,"column":1,"offset":1817},"end":{"line":94,"column":16,"offset":1832}}}],"position":{"start":{"line":94,"column":1,"offset":1817},"end":{"line":94,"column":16,"offset":1832}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># This is a comment</span></code></pre></div>","position":{"start":{"line":96,"column":1,"offset":1834},"end":{"line":98,"column":4,"offset":1867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Multiline comment:","position":{"start":{"line":100,"column":1,"offset":1869},"end":{"line":100,"column":19,"offset":1887}}}],"position":{"start":{"line":100,"column":1,"offset":1869},"end":{"line":100,"column":19,"offset":1887}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># This is a</span>\n<span class=\"token comment\"># multiline comment</span></code></pre></div>","position":{"start":{"line":102,"column":1,"offset":1889},"end":{"line":105,"column":4,"offset":1934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Code with a comment:","position":{"start":{"line":107,"column":1,"offset":1936},"end":{"line":107,"column":21,"offset":1956}}}],"position":{"start":{"line":107,"column":1,"offset":1936},"end":{"line":107,"column":21,"offset":1956}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># initialization</span></code></pre></div>","position":{"start":{"line":109,"column":1,"offset":1958},"end":{"line":111,"column":4,"offset":1995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please note the two spaces in front of the comment.","position":{"start":{"line":113,"column":1,"offset":1997},"end":{"line":113,"column":52,"offset":2048}}}],"position":{"start":{"line":113,"column":1,"offset":1997},"end":{"line":113,"column":52,"offset":2048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Function docstring:","position":{"start":{"line":115,"column":1,"offset":2050},"end":{"line":115,"column":20,"offset":2069}}}],"position":{"start":{"line":115,"column":1,"offset":2050},"end":{"line":115,"column":20,"offset":2069}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    This is a function docstring\n    You can also use:\n    ''' Function Docstring '''\n    \"\"\"</span></code></pre></div>","position":{"start":{"line":117,"column":1,"offset":2071},"end":{"line":124,"column":4,"offset":2197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The print Function","position":{"start":{"line":126,"column":5,"offset":2203},"end":{"line":126,"column":23,"offset":2221}}}],"position":{"start":{"line":126,"column":1,"offset":2199},"end":{"line":126,"column":23,"offset":2221}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":128,"column":1,"offset":2223},"end":{"line":130,"column":4,"offset":2258}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":132,"column":1,"offset":2260},"end":{"line":135,"column":4,"offset":2304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The input Function","position":{"start":{"line":137,"column":5,"offset":2310},"end":{"line":137,"column":23,"offset":2328}}}],"position":{"start":{"line":137,"column":1,"offset":2306},"end":{"line":137,"column":23,"offset":2328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example Code:","position":{"start":{"line":139,"column":1,"offset":2330},"end":{"line":139,"column":14,"offset":2343}}}],"position":{"start":{"line":139,"column":1,"offset":2330},"end":{"line":139,"column":14,"offset":2343}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'What is your name?'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># ask for their name</span>\nmyName <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'It is good to meet you, {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>myName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":141,"column":1,"offset":2345},"end":{"line":145,"column":4,"offset":2477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The len Function","position":{"start":{"line":147,"column":5,"offset":2483},"end":{"line":147,"column":21,"offset":2499}}}],"position":{"start":{"line":147,"column":1,"offset":2479},"end":{"line":147,"column":21,"offset":2499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Evaluates to the integer value of the number of characters in a string:","position":{"start":{"line":149,"column":1,"offset":2501},"end":{"line":149,"column":72,"offset":2572}}}],"position":{"start":{"line":149,"column":1,"offset":2501},"end":{"line":149,"column":72,"offset":2572}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":151,"column":1,"offset":2574},"end":{"line":153,"column":4,"offset":2600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: test of emptiness of strings, lists, dictionary, etc, should ","position":{"start":{"line":155,"column":1,"offset":2602},"end":{"line":155,"column":68,"offset":2669}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":155,"column":70,"offset":2671},"end":{"line":155,"column":73,"offset":2674}}}],"position":{"start":{"line":155,"column":68,"offset":2669},"end":{"line":155,"column":75,"offset":2676}}},{"type":"text","value":" use len, but prefer direct\nboolean evaluation.","position":{"start":{"line":155,"column":75,"offset":2676},"end":{"line":156,"column":20,"offset":2723}}}],"position":{"start":{"line":155,"column":1,"offset":2602},"end":{"line":156,"column":20,"offset":2723}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">if</span> a<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"the list is not empty!\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":158,"column":1,"offset":2725},"end":{"line":162,"column":4,"offset":2794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The str, int, and float Functions","position":{"start":{"line":164,"column":5,"offset":2800},"end":{"line":164,"column":38,"offset":2833}}}],"position":{"start":{"line":164,"column":1,"offset":2796},"end":{"line":164,"column":38,"offset":2833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Integer to String or Float:","position":{"start":{"line":166,"column":1,"offset":2835},"end":{"line":166,"column":28,"offset":2862}}}],"position":{"start":{"line":166,"column":1,"offset":2835},"end":{"line":166,"column":28,"offset":2862}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":168,"column":1,"offset":2864},"end":{"line":170,"column":4,"offset":2885}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'I am {} years old.'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":172,"column":1,"offset":2887},"end":{"line":174,"column":4,"offset":2944}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":176,"column":1,"offset":2946},"end":{"line":178,"column":4,"offset":2970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Float to Integer:","position":{"start":{"line":180,"column":1,"offset":2972},"end":{"line":180,"column":18,"offset":2989}}}],"position":{"start":{"line":180,"column":1,"offset":2972},"end":{"line":180,"column":18,"offset":2989}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">7.7</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":182,"column":1,"offset":2991},"end":{"line":184,"column":4,"offset":3013}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">7.7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":186,"column":1,"offset":3015},"end":{"line":188,"column":4,"offset":3041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Flow Control","position":{"start":{"line":190,"column":4,"offset":3046},"end":{"line":190,"column":16,"offset":3058}}}],"position":{"start":{"line":190,"column":1,"offset":3043},"end":{"line":190,"column":16,"offset":3058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Comparison Operators","position":{"start":{"line":192,"column":5,"offset":3064},"end":{"line":192,"column":25,"offset":3084}}}],"position":{"start":{"line":192,"column":1,"offset":3060},"end":{"line":192,"column":25,"offset":3084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Operator","position":{"start":{"line":194,"column":3,"offset":3088},"end":{"line":194,"column":11,"offset":3096}}}],"position":{"start":{"line":194,"column":3,"offset":3088},"end":{"line":194,"column":11,"offset":3096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Meaning","position":{"start":{"line":194,"column":14,"offset":3099},"end":{"line":194,"column":21,"offset":3106}}}],"position":{"start":{"line":194,"column":14,"offset":3099},"end":{"line":194,"column":38,"offset":3123}}},{"type":"text","value":"\n"}],"position":{"start":{"line":194,"column":1,"offset":3086},"end":{"line":194,"column":40,"offset":3125}}},{"type":"text","value":"\n"}],"position":{"start":{"line":194,"column":1,"offset":3086},"end":{"line":194,"column":40,"offset":3125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">==</code>","position":{"start":{"line":196,"column":3,"offset":3168},"end":{"line":196,"column":7,"offset":3172}}}],"position":{"start":{"line":196,"column":3,"offset":3168},"end":{"line":196,"column":11,"offset":3176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Equal to","position":{"start":{"line":196,"column":14,"offset":3179},"end":{"line":196,"column":22,"offset":3187}}}],"position":{"start":{"line":196,"column":14,"offset":3179},"end":{"line":196,"column":38,"offset":3203}}},{"type":"text","value":"\n"}],"position":{"start":{"line":196,"column":1,"offset":3166},"end":{"line":196,"column":40,"offset":3205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">!=</code>","position":{"start":{"line":197,"column":3,"offset":3208},"end":{"line":197,"column":7,"offset":3212}}}],"position":{"start":{"line":197,"column":3,"offset":3208},"end":{"line":197,"column":11,"offset":3216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Not equal to","position":{"start":{"line":197,"column":14,"offset":3219},"end":{"line":197,"column":26,"offset":3231}}}],"position":{"start":{"line":197,"column":14,"offset":3219},"end":{"line":197,"column":38,"offset":3243}}},{"type":"text","value":"\n"}],"position":{"start":{"line":197,"column":1,"offset":3206},"end":{"line":197,"column":40,"offset":3245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">&lt;</code>","position":{"start":{"line":198,"column":3,"offset":3248},"end":{"line":198,"column":6,"offset":3251}}}],"position":{"start":{"line":198,"column":3,"offset":3248},"end":{"line":198,"column":11,"offset":3256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Less than","position":{"start":{"line":198,"column":14,"offset":3259},"end":{"line":198,"column":23,"offset":3268}}}],"position":{"start":{"line":198,"column":14,"offset":3259},"end":{"line":198,"column":38,"offset":3283}}},{"type":"text","value":"\n"}],"position":{"start":{"line":198,"column":1,"offset":3246},"end":{"line":198,"column":40,"offset":3285}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">></code>","position":{"start":{"line":199,"column":3,"offset":3288},"end":{"line":199,"column":6,"offset":3291}}}],"position":{"start":{"line":199,"column":3,"offset":3288},"end":{"line":199,"column":11,"offset":3296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Greater Than","position":{"start":{"line":199,"column":14,"offset":3299},"end":{"line":199,"column":26,"offset":3311}}}],"position":{"start":{"line":199,"column":14,"offset":3299},"end":{"line":199,"column":38,"offset":3323}}},{"type":"text","value":"\n"}],"position":{"start":{"line":199,"column":1,"offset":3286},"end":{"line":199,"column":40,"offset":3325}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">&lt;=</code>","position":{"start":{"line":200,"column":3,"offset":3328},"end":{"line":200,"column":7,"offset":3332}}}],"position":{"start":{"line":200,"column":3,"offset":3328},"end":{"line":200,"column":11,"offset":3336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Less than or Equal to","position":{"start":{"line":200,"column":14,"offset":3339},"end":{"line":200,"column":35,"offset":3360}}}],"position":{"start":{"line":200,"column":14,"offset":3339},"end":{"line":200,"column":38,"offset":3363}}},{"type":"text","value":"\n"}],"position":{"start":{"line":200,"column":1,"offset":3326},"end":{"line":200,"column":40,"offset":3365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">>=</code>","position":{"start":{"line":201,"column":3,"offset":3368},"end":{"line":201,"column":7,"offset":3372}}}],"position":{"start":{"line":201,"column":3,"offset":3368},"end":{"line":201,"column":11,"offset":3376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Greater than or Equal to","position":{"start":{"line":201,"column":14,"offset":3379},"end":{"line":201,"column":38,"offset":3403}}}],"position":{"start":{"line":201,"column":14,"offset":3379},"end":{"line":201,"column":38,"offset":3403}}},{"type":"text","value":"\n"}],"position":{"start":{"line":201,"column":1,"offset":3366},"end":{"line":201,"column":40,"offset":3405}}},{"type":"text","value":"\n"}],"position":{"start":{"line":196,"column":1,"offset":3166},"end":{"line":201,"column":40,"offset":3405}}},{"type":"text","value":"\n"}],"position":{"start":{"line":194,"column":1,"offset":3086},"end":{"line":201,"column":40,"offset":3405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These operators evaluate to True or False depending on the values you give them.","position":{"start":{"line":203,"column":1,"offset":3407},"end":{"line":203,"column":81,"offset":3487}}}],"position":{"start":{"line":203,"column":1,"offset":3407},"end":{"line":203,"column":81,"offset":3487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Examples:","position":{"start":{"line":205,"column":1,"offset":3489},"end":{"line":205,"column":10,"offset":3498}}}],"position":{"start":{"line":205,"column":1,"offset":3489},"end":{"line":205,"column":10,"offset":3498}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">42</span> <span class=\"token operator\">==</span> <span class=\"token number\">42</span></code></pre></div>","position":{"start":{"line":207,"column":1,"offset":3500},"end":{"line":209,"column":4,"offset":3522}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">40</span> <span class=\"token operator\">==</span> <span class=\"token number\">42</span></code></pre></div>","position":{"start":{"line":211,"column":1,"offset":3524},"end":{"line":213,"column":4,"offset":3546}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'hello'</span> <span class=\"token operator\">==</span> <span class=\"token string\">'hello'</span></code></pre></div>","position":{"start":{"line":215,"column":1,"offset":3548},"end":{"line":217,"column":4,"offset":3580}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'hello'</span> <span class=\"token operator\">==</span> <span class=\"token string\">'Hello'</span></code></pre></div>","position":{"start":{"line":219,"column":1,"offset":3582},"end":{"line":221,"column":4,"offset":3614}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'dog'</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'cat'</span></code></pre></div>","position":{"start":{"line":223,"column":1,"offset":3616},"end":{"line":225,"column":4,"offset":3644}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">42</span> <span class=\"token operator\">==</span> <span class=\"token number\">42.0</span></code></pre></div>","position":{"start":{"line":227,"column":1,"offset":3646},"end":{"line":229,"column":4,"offset":3670}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">42</span> <span class=\"token operator\">==</span> <span class=\"token string\">'42'</span></code></pre></div>","position":{"start":{"line":231,"column":1,"offset":3672},"end":{"line":233,"column":4,"offset":3696}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Boolean evaluation","position":{"start":{"line":235,"column":5,"offset":3702},"end":{"line":235,"column":23,"offset":3720}}}],"position":{"start":{"line":235,"column":1,"offset":3698},"end":{"line":235,"column":23,"offset":3720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Never use ","position":{"start":{"line":237,"column":1,"offset":3722},"end":{"line":237,"column":11,"offset":3732}}},{"type":"raw","value":"<code class=\"language-text\">==</code>","position":{"start":{"line":237,"column":11,"offset":3732},"end":{"line":237,"column":15,"offset":3736}}},{"type":"text","value":" or ","position":{"start":{"line":237,"column":15,"offset":3736},"end":{"line":237,"column":19,"offset":3740}}},{"type":"raw","value":"<code class=\"language-text\">!=</code>","position":{"start":{"line":237,"column":19,"offset":3740},"end":{"line":237,"column":23,"offset":3744}}},{"type":"text","value":" operator to evaluate boolean operation. Use the ","position":{"start":{"line":237,"column":23,"offset":3744},"end":{"line":237,"column":72,"offset":3793}}},{"type":"raw","value":"<code class=\"language-text\">is</code>","position":{"start":{"line":237,"column":72,"offset":3793},"end":{"line":237,"column":76,"offset":3797}}},{"type":"text","value":" or ","position":{"start":{"line":237,"column":76,"offset":3797},"end":{"line":237,"column":80,"offset":3801}}},{"type":"raw","value":"<code class=\"language-text\">is not</code>","position":{"start":{"line":237,"column":80,"offset":3801},"end":{"line":237,"column":88,"offset":3809}}},{"type":"text","value":" operators,\nor use implicit boolean evaluation.","position":{"start":{"line":237,"column":88,"offset":3809},"end":{"line":238,"column":36,"offset":3856}}}],"position":{"start":{"line":237,"column":1,"offset":3722},"end":{"line":238,"column":36,"offset":3856}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"NO (even if they are valid Python):","position":{"start":{"line":240,"column":1,"offset":3858},"end":{"line":240,"column":36,"offset":3893}}}],"position":{"start":{"line":240,"column":1,"offset":3858},"end":{"line":240,"column":36,"offset":3893}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token boolean\">True</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":242,"column":1,"offset":3895},"end":{"line":244,"column":4,"offset":3921}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token boolean\">True</span> <span class=\"token operator\">!=</span> <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":246,"column":1,"offset":3923},"end":{"line":248,"column":4,"offset":3950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"YES (even if they are valid Python):","position":{"start":{"line":250,"column":1,"offset":3952},"end":{"line":250,"column":37,"offset":3988}}}],"position":{"start":{"line":250,"column":1,"offset":3952},"end":{"line":250,"column":37,"offset":3988}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token boolean\">True</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":252,"column":1,"offset":3990},"end":{"line":254,"column":4,"offset":4016}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token boolean\">True</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":256,"column":1,"offset":4018},"end":{"line":258,"column":4,"offset":4049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These statements are equivalent:","position":{"start":{"line":260,"column":1,"offset":4051},"end":{"line":260,"column":33,"offset":4083}}}],"position":{"start":{"line":260,"column":1,"offset":4051},"end":{"line":260,"column":33,"offset":4083}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> a <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">if</span> a <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">if</span> a<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">pass</span></code></pre></div>","position":{"start":{"line":262,"column":1,"offset":4085},"end":{"line":269,"column":4,"offset":4161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And these as well:","position":{"start":{"line":271,"column":1,"offset":4163},"end":{"line":271,"column":19,"offset":4181}}}],"position":{"start":{"line":271,"column":1,"offset":4163},"end":{"line":271,"column":19,"offset":4181}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> a <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">if</span> a <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> a<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">pass</span></code></pre></div>","position":{"start":{"line":273,"column":1,"offset":4183},"end":{"line":280,"column":4,"offset":4263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Boolean Operators","position":{"start":{"line":282,"column":5,"offset":4269},"end":{"line":282,"column":22,"offset":4286}}}],"position":{"start":{"line":282,"column":1,"offset":4265},"end":{"line":282,"column":22,"offset":4286}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are three Boolean operators: and, or, and not.","position":{"start":{"line":284,"column":1,"offset":4288},"end":{"line":284,"column":53,"offset":4340}}}],"position":{"start":{"line":284,"column":1,"offset":4288},"end":{"line":284,"column":53,"offset":4340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":286,"column":1,"offset":4342},"end":{"line":286,"column":5,"offset":4346}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"and","position":{"start":{"line":286,"column":6,"offset":4347},"end":{"line":286,"column":9,"offset":4350}}}],"position":{"start":{"line":286,"column":5,"offset":4346},"end":{"line":286,"column":10,"offset":4351}}},{"type":"text","value":" Operator's ","position":{"start":{"line":286,"column":10,"offset":4351},"end":{"line":286,"column":22,"offset":4363}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Truth","position":{"start":{"line":286,"column":23,"offset":4364},"end":{"line":286,"column":28,"offset":4369}}}],"position":{"start":{"line":286,"column":22,"offset":4363},"end":{"line":286,"column":29,"offset":4370}}},{"type":"text","value":" Table:","position":{"start":{"line":286,"column":29,"offset":4370},"end":{"line":286,"column":36,"offset":4377}}}],"position":{"start":{"line":286,"column":1,"offset":4342},"end":{"line":286,"column":36,"offset":4377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Expression","position":{"start":{"line":288,"column":3,"offset":4381},"end":{"line":288,"column":13,"offset":4391}}}],"position":{"start":{"line":288,"column":3,"offset":4381},"end":{"line":288,"column":18,"offset":4396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Evaluates to","position":{"start":{"line":288,"column":21,"offset":4399},"end":{"line":288,"column":33,"offset":4411}}}],"position":{"start":{"line":288,"column":21,"offset":4399},"end":{"line":288,"column":33,"offset":4411}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":4379},"end":{"line":288,"column":35,"offset":4413}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":4379},"end":{"line":288,"column":35,"offset":4413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"True and True","position":{"start":{"line":290,"column":3,"offset":4451},"end":{"line":290,"column":16,"offset":4464}}}],"position":{"start":{"line":290,"column":3,"offset":4451},"end":{"line":290,"column":18,"offset":4466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"True","position":{"start":{"line":290,"column":21,"offset":4469},"end":{"line":290,"column":25,"offset":4473}}}],"position":{"start":{"line":290,"column":21,"offset":4469},"end":{"line":290,"column":33,"offset":4481}}},{"type":"text","value":"\n"}],"position":{"start":{"line":290,"column":1,"offset":4449},"end":{"line":290,"column":35,"offset":4483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"True and False","position":{"start":{"line":291,"column":3,"offset":4486},"end":{"line":291,"column":17,"offset":4500}}}],"position":{"start":{"line":291,"column":3,"offset":4486},"end":{"line":291,"column":18,"offset":4501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"False","position":{"start":{"line":291,"column":21,"offset":4504},"end":{"line":291,"column":26,"offset":4509}}}],"position":{"start":{"line":291,"column":21,"offset":4504},"end":{"line":291,"column":33,"offset":4516}}},{"type":"text","value":"\n"}],"position":{"start":{"line":291,"column":1,"offset":4484},"end":{"line":291,"column":35,"offset":4518}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"False and True","position":{"start":{"line":292,"column":3,"offset":4521},"end":{"line":292,"column":17,"offset":4535}}}],"position":{"start":{"line":292,"column":3,"offset":4521},"end":{"line":292,"column":18,"offset":4536}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"False","position":{"start":{"line":292,"column":21,"offset":4539},"end":{"line":292,"column":26,"offset":4544}}}],"position":{"start":{"line":292,"column":21,"offset":4539},"end":{"line":292,"column":33,"offset":4551}}},{"type":"text","value":"\n"}],"position":{"start":{"line":292,"column":1,"offset":4519},"end":{"line":292,"column":35,"offset":4553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"False and False","position":{"start":{"line":293,"column":3,"offset":4556},"end":{"line":293,"column":18,"offset":4571}}}],"position":{"start":{"line":293,"column":3,"offset":4556},"end":{"line":293,"column":18,"offset":4571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"False","position":{"start":{"line":293,"column":21,"offset":4574},"end":{"line":293,"column":26,"offset":4579}}}],"position":{"start":{"line":293,"column":21,"offset":4574},"end":{"line":293,"column":33,"offset":4586}}},{"type":"text","value":"\n"}],"position":{"start":{"line":293,"column":1,"offset":4554},"end":{"line":293,"column":35,"offset":4588}}},{"type":"text","value":"\n"}],"position":{"start":{"line":290,"column":1,"offset":4449},"end":{"line":293,"column":35,"offset":4588}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":4379},"end":{"line":293,"column":35,"offset":4588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":295,"column":1,"offset":4590},"end":{"line":295,"column":5,"offset":4594}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"or","position":{"start":{"line":295,"column":6,"offset":4595},"end":{"line":295,"column":8,"offset":4597}}}],"position":{"start":{"line":295,"column":5,"offset":4594},"end":{"line":295,"column":9,"offset":4598}}},{"type":"text","value":" Operator's ","position":{"start":{"line":295,"column":9,"offset":4598},"end":{"line":295,"column":21,"offset":4610}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Truth","position":{"start":{"line":295,"column":22,"offset":4611},"end":{"line":295,"column":27,"offset":4616}}}],"position":{"start":{"line":295,"column":21,"offset":4610},"end":{"line":295,"column":28,"offset":4617}}},{"type":"text","value":" Table:","position":{"start":{"line":295,"column":28,"offset":4617},"end":{"line":295,"column":35,"offset":4624}}}],"position":{"start":{"line":295,"column":1,"offset":4590},"end":{"line":295,"column":35,"offset":4624}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Expression","position":{"start":{"line":297,"column":3,"offset":4628},"end":{"line":297,"column":13,"offset":4638}}}],"position":{"start":{"line":297,"column":3,"offset":4628},"end":{"line":297,"column":17,"offset":4642}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Evaluates to","position":{"start":{"line":297,"column":20,"offset":4645},"end":{"line":297,"column":32,"offset":4657}}}],"position":{"start":{"line":297,"column":20,"offset":4645},"end":{"line":297,"column":32,"offset":4657}}},{"type":"text","value":"\n"}],"position":{"start":{"line":297,"column":1,"offset":4626},"end":{"line":297,"column":34,"offset":4659}}},{"type":"text","value":"\n"}],"position":{"start":{"line":297,"column":1,"offset":4626},"end":{"line":297,"column":34,"offset":4659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"True or True","position":{"start":{"line":299,"column":3,"offset":4696},"end":{"line":299,"column":15,"offset":4708}}}],"position":{"start":{"line":299,"column":3,"offset":4696},"end":{"line":299,"column":17,"offset":4710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"True","position":{"start":{"line":299,"column":20,"offset":4713},"end":{"line":299,"column":24,"offset":4717}}}],"position":{"start":{"line":299,"column":20,"offset":4713},"end":{"line":299,"column":32,"offset":4725}}},{"type":"text","value":"\n"}],"position":{"start":{"line":299,"column":1,"offset":4694},"end":{"line":299,"column":34,"offset":4727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"True or False","position":{"start":{"line":300,"column":3,"offset":4730},"end":{"line":300,"column":16,"offset":4743}}}],"position":{"start":{"line":300,"column":3,"offset":4730},"end":{"line":300,"column":17,"offset":4744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"True","position":{"start":{"line":300,"column":20,"offset":4747},"end":{"line":300,"column":24,"offset":4751}}}],"position":{"start":{"line":300,"column":20,"offset":4747},"end":{"line":300,"column":32,"offset":4759}}},{"type":"text","value":"\n"}],"position":{"start":{"line":300,"column":1,"offset":4728},"end":{"line":300,"column":34,"offset":4761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"False or True","position":{"start":{"line":301,"column":3,"offset":4764},"end":{"line":301,"column":16,"offset":4777}}}],"position":{"start":{"line":301,"column":3,"offset":4764},"end":{"line":301,"column":17,"offset":4778}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"True","position":{"start":{"line":301,"column":20,"offset":4781},"end":{"line":301,"column":24,"offset":4785}}}],"position":{"start":{"line":301,"column":20,"offset":4781},"end":{"line":301,"column":32,"offset":4793}}},{"type":"text","value":"\n"}],"position":{"start":{"line":301,"column":1,"offset":4762},"end":{"line":301,"column":34,"offset":4795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"False or False","position":{"start":{"line":302,"column":3,"offset":4798},"end":{"line":302,"column":17,"offset":4812}}}],"position":{"start":{"line":302,"column":3,"offset":4798},"end":{"line":302,"column":17,"offset":4812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"False","position":{"start":{"line":302,"column":20,"offset":4815},"end":{"line":302,"column":25,"offset":4820}}}],"position":{"start":{"line":302,"column":20,"offset":4815},"end":{"line":302,"column":32,"offset":4827}}},{"type":"text","value":"\n"}],"position":{"start":{"line":302,"column":1,"offset":4796},"end":{"line":302,"column":34,"offset":4829}}},{"type":"text","value":"\n"}],"position":{"start":{"line":299,"column":1,"offset":4694},"end":{"line":302,"column":34,"offset":4829}}},{"type":"text","value":"\n"}],"position":{"start":{"line":297,"column":1,"offset":4626},"end":{"line":302,"column":34,"offset":4829}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":304,"column":1,"offset":4831},"end":{"line":304,"column":5,"offset":4835}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":304,"column":6,"offset":4836},"end":{"line":304,"column":9,"offset":4839}}}],"position":{"start":{"line":304,"column":5,"offset":4835},"end":{"line":304,"column":10,"offset":4840}}},{"type":"text","value":" Operator's ","position":{"start":{"line":304,"column":10,"offset":4840},"end":{"line":304,"column":22,"offset":4852}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Truth","position":{"start":{"line":304,"column":23,"offset":4853},"end":{"line":304,"column":28,"offset":4858}}}],"position":{"start":{"line":304,"column":22,"offset":4852},"end":{"line":304,"column":29,"offset":4859}}},{"type":"text","value":" Table:","position":{"start":{"line":304,"column":29,"offset":4859},"end":{"line":304,"column":36,"offset":4866}}}],"position":{"start":{"line":304,"column":1,"offset":4831},"end":{"line":304,"column":36,"offset":4866}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Expression","position":{"start":{"line":306,"column":3,"offset":4870},"end":{"line":306,"column":13,"offset":4880}}}],"position":{"start":{"line":306,"column":3,"offset":4870},"end":{"line":306,"column":13,"offset":4880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Evaluates to","position":{"start":{"line":306,"column":16,"offset":4883},"end":{"line":306,"column":28,"offset":4895}}}],"position":{"start":{"line":306,"column":16,"offset":4883},"end":{"line":306,"column":28,"offset":4895}}},{"type":"text","value":"\n"}],"position":{"start":{"line":306,"column":1,"offset":4868},"end":{"line":306,"column":30,"offset":4897}}},{"type":"text","value":"\n"}],"position":{"start":{"line":306,"column":1,"offset":4868},"end":{"line":306,"column":30,"offset":4897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"not True","position":{"start":{"line":308,"column":3,"offset":4930},"end":{"line":308,"column":11,"offset":4938}}}],"position":{"start":{"line":308,"column":3,"offset":4930},"end":{"line":308,"column":13,"offset":4940}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"False","position":{"start":{"line":308,"column":16,"offset":4943},"end":{"line":308,"column":21,"offset":4948}}}],"position":{"start":{"line":308,"column":16,"offset":4943},"end":{"line":308,"column":28,"offset":4955}}},{"type":"text","value":"\n"}],"position":{"start":{"line":308,"column":1,"offset":4928},"end":{"line":308,"column":30,"offset":4957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"not False","position":{"start":{"line":309,"column":3,"offset":4960},"end":{"line":309,"column":12,"offset":4969}}}],"position":{"start":{"line":309,"column":3,"offset":4960},"end":{"line":309,"column":13,"offset":4970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"True","position":{"start":{"line":309,"column":16,"offset":4973},"end":{"line":309,"column":20,"offset":4977}}}],"position":{"start":{"line":309,"column":16,"offset":4973},"end":{"line":309,"column":28,"offset":4985}}},{"type":"text","value":"\n"}],"position":{"start":{"line":309,"column":1,"offset":4958},"end":{"line":309,"column":30,"offset":4987}}},{"type":"text","value":"\n"}],"position":{"start":{"line":308,"column":1,"offset":4928},"end":{"line":309,"column":30,"offset":4987}}},{"type":"text","value":"\n"}],"position":{"start":{"line":306,"column":1,"offset":4868},"end":{"line":309,"column":30,"offset":4987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Mixing Boolean and Comparison Operators","position":{"start":{"line":311,"column":5,"offset":4993},"end":{"line":311,"column":44,"offset":5032}}}],"position":{"start":{"line":311,"column":1,"offset":4989},"end":{"line":311,"column":44,"offset":5032}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":313,"column":1,"offset":5034},"end":{"line":315,"column":4,"offset":5067}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":317,"column":1,"offset":5069},"end":{"line":319,"column":4,"offset":5102}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":321,"column":1,"offset":5104},"end":{"line":323,"column":4,"offset":5138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also use multiple Boolean operators in an expression, along with the comparison operators:","position":{"start":{"line":325,"column":1,"offset":5140},"end":{"line":325,"column":99,"offset":5238}}}],"position":{"start":{"line":325,"column":1,"offset":5140},"end":{"line":325,"column":99,"offset":5238}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">5</span> <span class=\"token keyword\">and</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":327,"column":1,"offset":5240},"end":{"line":329,"column":4,"offset":5302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"if Statements","position":{"start":{"line":331,"column":5,"offset":5308},"end":{"line":331,"column":18,"offset":5321}}}],"position":{"start":{"line":331,"column":1,"offset":5304},"end":{"line":331,"column":18,"offset":5321}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">'Alice'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi, Alice.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":333,"column":1,"offset":5323},"end":{"line":336,"column":4,"offset":5380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"else Statements","position":{"start":{"line":338,"column":5,"offset":5386},"end":{"line":338,"column":20,"offset":5401}}}],"position":{"start":{"line":338,"column":1,"offset":5382},"end":{"line":338,"column":20,"offset":5401}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">'Bob'</span>\n\n<span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">'Alice'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi, Alice.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, stranger.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":340,"column":1,"offset":5403},"end":{"line":347,"column":4,"offset":5510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"elif Statements","position":{"start":{"line":349,"column":5,"offset":5516},"end":{"line":349,"column":20,"offset":5531}}}],"position":{"start":{"line":349,"column":1,"offset":5512},"end":{"line":349,"column":20,"offset":5531}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">'Bob'</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n\n<span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">'Alice'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi, Alice.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You are not Alice, kiddo.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":351,"column":1,"offset":5533},"end":{"line":359,"column":4,"offset":5666}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">'Bob'</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n\n<span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">'Alice'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi, Alice.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You are not Alice, kiddo.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You are neither Alice nor a little kid.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":361,"column":1,"offset":5668},"end":{"line":371,"column":4,"offset":5861}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"while Loop Statements","position":{"start":{"line":373,"column":5,"offset":5867},"end":{"line":373,"column":26,"offset":5888}}}],"position":{"start":{"line":373,"column":1,"offset":5863},"end":{"line":373,"column":26,"offset":5888}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> spam <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, world.'</span><span class=\"token punctuation\">)</span>\n    spam <span class=\"token operator\">=</span> spam <span class=\"token operator\">+</span> <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":375,"column":1,"offset":5890},"end":{"line":381,"column":4,"offset":5976}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"break Statements","position":{"start":{"line":383,"column":5,"offset":5982},"end":{"line":383,"column":21,"offset":5998}}}],"position":{"start":{"line":383,"column":1,"offset":5978},"end":{"line":383,"column":21,"offset":5998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the execution reaches a break statement, it immediately exits the while loop's clause:","position":{"start":{"line":385,"column":1,"offset":6000},"end":{"line":385,"column":90,"offset":6089}}}],"position":{"start":{"line":385,"column":1,"offset":6000},"end":{"line":385,"column":90,"offset":6089}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please type your name.'</span><span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">'your name'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Thank you!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":387,"column":1,"offset":6091},"end":{"line":395,"column":4,"offset":6234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"continue Statements","position":{"start":{"line":397,"column":5,"offset":6240},"end":{"line":397,"column":24,"offset":6259}}}],"position":{"start":{"line":397,"column":1,"offset":6236},"end":{"line":397,"column":24,"offset":6259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When the program execution reaches a continue statement, the program execution immediately jumps back to the start of the loop.","position":{"start":{"line":399,"column":1,"offset":6261},"end":{"line":399,"column":128,"offset":6388}}}],"position":{"start":{"line":399,"column":1,"offset":6261},"end":{"line":399,"column":128,"offset":6388}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Who are you?'</span><span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> name <span class=\"token operator\">!=</span> <span class=\"token string\">'Joe'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, Joe. What is the password? (It is a fish.)'</span><span class=\"token punctuation\">)</span>\n    password <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> password <span class=\"token operator\">==</span> <span class=\"token string\">'swordfish'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access granted.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":401,"column":1,"offset":6390},"end":{"line":413,"column":4,"offset":6657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"for Loops and the range() Function","position":{"start":{"line":415,"column":5,"offset":6663},"end":{"line":415,"column":39,"offset":6697}}}],"position":{"start":{"line":415,"column":1,"offset":6659},"end":{"line":415,"column":39,"offset":6697}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My name is'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Jimmy Five Times ({})'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":417,"column":1,"offset":6699},"end":{"line":421,"column":4,"offset":6801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":423,"column":1,"offset":6803},"end":{"line":423,"column":5,"offset":6807}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"range()","position":{"start":{"line":423,"column":6,"offset":6808},"end":{"line":423,"column":13,"offset":6815}}}],"position":{"start":{"line":423,"column":5,"offset":6807},"end":{"line":423,"column":14,"offset":6816}}},{"type":"text","value":" function can also be called with three arguments. The first two arguments will be the start and stop values, and the third will be the step argument. The step is the amount that the variable is increased by after each iteration.","position":{"start":{"line":423,"column":14,"offset":6816},"end":{"line":423,"column":243,"offset":7045}}}],"position":{"start":{"line":423,"column":1,"offset":6803},"end":{"line":423,"column":243,"offset":7045}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":425,"column":1,"offset":7047},"end":{"line":428,"column":4,"offset":7098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can even use a negative number for the step argument to make the for loop count down instead of up.","position":{"start":{"line":430,"column":1,"offset":7100},"end":{"line":430,"column":104,"offset":7203}}}],"position":{"start":{"line":430,"column":1,"offset":7100},"end":{"line":430,"column":104,"offset":7203}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":432,"column":1,"offset":7205},"end":{"line":435,"column":4,"offset":7258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"For else statement","position":{"start":{"line":437,"column":5,"offset":7264},"end":{"line":437,"column":23,"offset":7282}}}],"position":{"start":{"line":437,"column":1,"offset":7260},"end":{"line":437,"column":23,"offset":7282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This allows to specify a statement to execute in case of the full loop has been executed. Only\nuseful when a ","position":{"start":{"line":439,"column":1,"offset":7284},"end":{"line":440,"column":15,"offset":7393}}},{"type":"raw","value":"<code class=\"language-text\">break</code>","position":{"start":{"line":440,"column":15,"offset":7393},"end":{"line":440,"column":22,"offset":7400}}},{"type":"text","value":" condition can occur in the loop:","position":{"start":{"line":440,"column":22,"offset":7400},"end":{"line":440,"column":55,"offset":7433}}}],"position":{"start":{"line":439,"column":1,"offset":7284},"end":{"line":440,"column":55,"offset":7433}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n       <span class=\"token keyword\">break</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"only executed when no item of the list is equal to 3\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":442,"column":1,"offset":7435},"end":{"line":448,"column":4,"offset":7572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Importing Modules","position":{"start":{"line":450,"column":5,"offset":7578},"end":{"line":450,"column":22,"offset":7595}}}],"position":{"start":{"line":450,"column":1,"offset":7574},"end":{"line":450,"column":22,"offset":7595}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":452,"column":1,"offset":7597},"end":{"line":457,"column":4,"offset":7677}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random<span class=\"token punctuation\">,</span> sys<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">,</span> math</code></pre></div>","position":{"start":{"line":459,"column":1,"offset":7679},"end":{"line":461,"column":4,"offset":7721}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":463,"column":1,"offset":7723},"end":{"line":465,"column":4,"offset":7758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Ending a Program with sys.exit","position":{"start":{"line":467,"column":5,"offset":7764},"end":{"line":467,"column":35,"offset":7794}}}],"position":{"start":{"line":467,"column":1,"offset":7760},"end":{"line":467,"column":35,"offset":7794}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Type exit to exit.'</span><span class=\"token punctuation\">)</span>\n    response <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> response <span class=\"token operator\">==</span> <span class=\"token string\">'exit'</span><span class=\"token punctuation\">:</span>\n        sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You typed {}.'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":469,"column":1,"offset":7796},"end":{"line":478,"column":4,"offset":7978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Functions","position":{"start":{"line":480,"column":4,"offset":7983},"end":{"line":480,"column":13,"offset":7992}}}],"position":{"start":{"line":480,"column":1,"offset":7980},"end":{"line":480,"column":13,"offset":7992}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":482,"column":1,"offset":7994},"end":{"line":485,"column":4,"offset":8059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Return Values and return Statements","position":{"start":{"line":487,"column":5,"offset":8065},"end":{"line":487,"column":40,"offset":8100}}}],"position":{"start":{"line":487,"column":1,"offset":8061},"end":{"line":487,"column":40,"offset":8100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When creating a function using the def statement, you can specify what the return value should be with a return statement. A return statement consists of the following:","position":{"start":{"line":489,"column":1,"offset":8102},"end":{"line":489,"column":169,"offset":8270}}}],"position":{"start":{"line":489,"column":1,"offset":8102},"end":{"line":489,"column":169,"offset":8270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The return keyword.","position":{"start":{"line":491,"column":5,"offset":8276},"end":{"line":491,"column":24,"offset":8295}}}],"position":{"start":{"line":491,"column":1,"offset":8272},"end":{"line":491,"column":24,"offset":8295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"-","position":{"start":{"line":492,"column":1,"offset":8296},"end":{"line":492,"column":2,"offset":8297}}}],"position":{"start":{"line":492,"column":1,"offset":8296},"end":{"line":492,"column":2,"offset":8297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The value or expression that the function should return.","position":{"start":{"line":493,"column":5,"offset":8302},"end":{"line":493,"column":61,"offset":8358}}}],"position":{"start":{"line":493,"column":1,"offset":8298},"end":{"line":493,"column":61,"offset":8358}}},{"type":"text","value":"\n"}],"position":{"start":{"line":491,"column":1,"offset":8272},"end":{"line":493,"column":61,"offset":8358}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">def</span> <span class=\"token function\">getAnswer</span><span class=\"token punctuation\">(</span>answerNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'It is certain'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'It is decidedly so'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Yes'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Reply hazy try again'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Ask again later'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Concentrate and ask again'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">7</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'My reply is no'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Outlook not so good'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">9</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Very doubtful'</span>\n\nr <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\nfortune <span class=\"token operator\">=</span> getAnswer<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fortune<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":495,"column":1,"offset":8360},"end":{"line":520,"column":4,"offset":9032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The None Value","position":{"start":{"line":522,"column":5,"offset":9038},"end":{"line":522,"column":19,"offset":9052}}}],"position":{"start":{"line":522,"column":1,"offset":9034},"end":{"line":522,"column":19,"offset":9052}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span>\nspam <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span></code></pre></div>","position":{"start":{"line":524,"column":1,"offset":9054},"end":{"line":527,"column":4,"offset":9103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: never compare to ","position":{"start":{"line":529,"column":1,"offset":9105},"end":{"line":529,"column":24,"offset":9128}}},{"type":"raw","value":"<code class=\"language-text\">None</code>","position":{"start":{"line":529,"column":24,"offset":9128},"end":{"line":529,"column":30,"offset":9134}}},{"type":"text","value":" with the ","position":{"start":{"line":529,"column":30,"offset":9134},"end":{"line":529,"column":40,"offset":9144}}},{"type":"raw","value":"<code class=\"language-text\">==</code>","position":{"start":{"line":529,"column":40,"offset":9144},"end":{"line":529,"column":44,"offset":9148}}},{"type":"text","value":" operator. Always use ","position":{"start":{"line":529,"column":44,"offset":9148},"end":{"line":529,"column":66,"offset":9170}}},{"type":"raw","value":"<code class=\"language-text\">is</code>","position":{"start":{"line":529,"column":66,"offset":9170},"end":{"line":529,"column":70,"offset":9174}}},{"type":"text","value":".","position":{"start":{"line":529,"column":70,"offset":9174},"end":{"line":529,"column":71,"offset":9175}}}],"position":{"start":{"line":529,"column":1,"offset":9105},"end":{"line":529,"column":71,"offset":9175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"print Keyword Arguments","position":{"start":{"line":531,"column":5,"offset":9181},"end":{"line":531,"column":28,"offset":9204}}}],"position":{"start":{"line":531,"column":1,"offset":9177},"end":{"line":531,"column":28,"offset":9204}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'World'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":533,"column":1,"offset":9206},"end":{"line":536,"column":4,"offset":9257}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dogs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mice'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":538,"column":1,"offset":9259},"end":{"line":540,"column":4,"offset":9302}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dogs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mice'</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":542,"column":1,"offset":9304},"end":{"line":544,"column":4,"offset":9356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Local and Global Scope","position":{"start":{"line":546,"column":5,"offset":9362},"end":{"line":546,"column":27,"offset":9384}}}],"position":{"start":{"line":546,"column":1,"offset":9358},"end":{"line":546,"column":27,"offset":9384}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Code in the global scope cannot use any local variables.","position":{"start":{"line":548,"column":5,"offset":9390},"end":{"line":548,"column":61,"offset":9446}}}],"position":{"start":{"line":548,"column":1,"offset":9386},"end":{"line":548,"column":61,"offset":9446}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"-","position":{"start":{"line":549,"column":1,"offset":9447},"end":{"line":549,"column":2,"offset":9448}}}],"position":{"start":{"line":549,"column":1,"offset":9447},"end":{"line":549,"column":2,"offset":9448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"However, a local scope can access global variables.","position":{"start":{"line":550,"column":5,"offset":9453},"end":{"line":550,"column":56,"offset":9504}}}],"position":{"start":{"line":550,"column":1,"offset":9449},"end":{"line":550,"column":56,"offset":9504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"-","position":{"start":{"line":551,"column":1,"offset":9505},"end":{"line":551,"column":2,"offset":9506}}}],"position":{"start":{"line":551,"column":1,"offset":9505},"end":{"line":551,"column":2,"offset":9506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Code in a function's local scope cannot use variables in any other local scope.","position":{"start":{"line":552,"column":5,"offset":9511},"end":{"line":552,"column":84,"offset":9590}}}],"position":{"start":{"line":552,"column":1,"offset":9507},"end":{"line":553,"column":1,"offset":9591}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You can use the same name for different variables if they are in different scopes. That is, there can be a local variable named spam and a global variable also named spam.","position":{"start":{"line":554,"column":5,"offset":9596},"end":{"line":554,"column":176,"offset":9767}}}],"position":{"start":{"line":554,"column":1,"offset":9592},"end":{"line":554,"column":176,"offset":9767}}},{"type":"text","value":"\n"}],"position":{"start":{"line":548,"column":1,"offset":9386},"end":{"line":554,"column":176,"offset":9767}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The global Statement","position":{"start":{"line":556,"column":5,"offset":9773},"end":{"line":556,"column":25,"offset":9793}}}],"position":{"start":{"line":556,"column":1,"offset":9769},"end":{"line":556,"column":25,"offset":9793}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you need to modify a global variable from within a function, use the global statement:","position":{"start":{"line":558,"column":1,"offset":9795},"end":{"line":558,"column":90,"offset":9884}}}],"position":{"start":{"line":558,"column":1,"offset":9795},"end":{"line":558,"column":90,"offset":9884}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">spam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> eggs\n    eggs <span class=\"token operator\">=</span> <span class=\"token string\">'spam'</span>\n\neggs <span class=\"token operator\">=</span> <span class=\"token string\">'global'</span>\nspam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>eggs<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":560,"column":1,"offset":9886},"end":{"line":568,"column":4,"offset":9981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are four rules to tell whether a variable is in a local scope or global scope:","position":{"start":{"line":570,"column":1,"offset":9983},"end":{"line":570,"column":85,"offset":10067}}}],"position":{"start":{"line":570,"column":1,"offset":9983},"end":{"line":570,"column":85,"offset":10067}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If a variable is being used in the global scope (that is, outside of all functions), then it is always a global variable.","position":{"start":{"line":572,"column":4,"offset":10072},"end":{"line":572,"column":125,"offset":10193}}}],"position":{"start":{"line":572,"column":1,"offset":10069},"end":{"line":573,"column":1,"offset":10194}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If there is a global statement for that variable in a function, it is a global variable.","position":{"start":{"line":574,"column":4,"offset":10198},"end":{"line":574,"column":92,"offset":10286}}}],"position":{"start":{"line":574,"column":1,"offset":10195},"end":{"line":575,"column":1,"offset":10287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Otherwise, if the variable is used in an assignment statement in the function, it is a local variable.","position":{"start":{"line":576,"column":4,"offset":10291},"end":{"line":576,"column":106,"offset":10393}}}],"position":{"start":{"line":576,"column":1,"offset":10288},"end":{"line":577,"column":1,"offset":10394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"But if the variable is not used in an assignment statement, it is a global variable.","position":{"start":{"line":578,"column":4,"offset":10398},"end":{"line":578,"column":88,"offset":10482}}}],"position":{"start":{"line":578,"column":1,"offset":10395},"end":{"line":578,"column":88,"offset":10482}}},{"type":"text","value":"\n"}],"position":{"start":{"line":572,"column":1,"offset":10069},"end":{"line":578,"column":88,"offset":10482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Exception Handling","position":{"start":{"line":580,"column":4,"offset":10487},"end":{"line":580,"column":22,"offset":10505}}}],"position":{"start":{"line":580,"column":1,"offset":10484},"end":{"line":580,"column":22,"offset":10505}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Basic exception handling","position":{"start":{"line":582,"column":5,"offset":10511},"end":{"line":582,"column":29,"offset":10535}}}],"position":{"start":{"line":582,"column":1,"offset":10507},"end":{"line":582,"column":29,"offset":10535}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">spam</span><span class=\"token punctuation\">(</span>divideBy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">42</span> <span class=\"token operator\">/</span> divideBy\n    <span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error: Invalid argument: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>spam<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>spam<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>spam<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>spam<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":584,"column":1,"offset":10537},"end":{"line":595,"column":4,"offset":10760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Final code in exception handling","position":{"start":{"line":597,"column":5,"offset":10766},"end":{"line":597,"column":37,"offset":10798}}}],"position":{"start":{"line":597,"column":1,"offset":10762},"end":{"line":597,"column":37,"offset":10798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Code inside the ","position":{"start":{"line":599,"column":1,"offset":10800},"end":{"line":599,"column":17,"offset":10816}}},{"type":"raw","value":"<code class=\"language-text\">finally</code>","position":{"start":{"line":599,"column":17,"offset":10816},"end":{"line":599,"column":26,"offset":10825}}},{"type":"text","value":" section is always executed, no matter if an exception has been raised or\nnot, and even if an exception is not caught.","position":{"start":{"line":599,"column":26,"offset":10825},"end":{"line":600,"column":45,"offset":10943}}}],"position":{"start":{"line":599,"column":1,"offset":10800},"end":{"line":600,"column":45,"offset":10943}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">spam</span><span class=\"token punctuation\">(</span>divideBy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">42</span> <span class=\"token operator\">/</span> divideBy\n    <span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error: Invalid argument: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-- division finished --\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>spam<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>spam<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":602,"column":1,"offset":10945},"end":{"line":613,"column":4,"offset":11192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Lists","position":{"start":{"line":615,"column":4,"offset":11197},"end":{"line":615,"column":9,"offset":11202}}}],"position":{"start":{"line":615,"column":1,"offset":11194},"end":{"line":615,"column":9,"offset":11202}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephant'</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":617,"column":1,"offset":11204},"end":{"line":619,"column":4,"offset":11251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Getting Individual Values in a List with Indexes","position":{"start":{"line":621,"column":5,"offset":11257},"end":{"line":621,"column":53,"offset":11305}}}],"position":{"start":{"line":621,"column":1,"offset":11253},"end":{"line":621,"column":53,"offset":11305}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephant'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":623,"column":1,"offset":11307},"end":{"line":626,"column":4,"offset":11369}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":628,"column":1,"offset":11371},"end":{"line":630,"column":4,"offset":11392}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":632,"column":1,"offset":11394},"end":{"line":634,"column":4,"offset":11415}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":636,"column":1,"offset":11417},"end":{"line":638,"column":4,"offset":11438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Negative Indexes","position":{"start":{"line":640,"column":5,"offset":11444},"end":{"line":640,"column":21,"offset":11460}}}],"position":{"start":{"line":640,"column":1,"offset":11440},"end":{"line":640,"column":21,"offset":11460}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephant'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":642,"column":1,"offset":11462},"end":{"line":645,"column":4,"offset":11525}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":647,"column":1,"offset":11527},"end":{"line":649,"column":4,"offset":11549}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'The {} is afraid of the {}.'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>spam<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> spam<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":651,"column":1,"offset":11551},"end":{"line":653,"column":4,"offset":11621}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Getting Sublists with Slices","position":{"start":{"line":655,"column":5,"offset":11627},"end":{"line":655,"column":33,"offset":11655}}}],"position":{"start":{"line":655,"column":1,"offset":11623},"end":{"line":655,"column":33,"offset":11655}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephant'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":657,"column":1,"offset":11657},"end":{"line":660,"column":4,"offset":11721}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":662,"column":1,"offset":11723},"end":{"line":664,"column":4,"offset":11746}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":666,"column":1,"offset":11748},"end":{"line":668,"column":4,"offset":11772}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephant'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":670,"column":1,"offset":11774},"end":{"line":673,"column":4,"offset":11837}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":675,"column":1,"offset":11839},"end":{"line":677,"column":4,"offset":11861}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":679,"column":1,"offset":11863},"end":{"line":681,"column":4,"offset":11884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Getting a list Length with len","position":{"start":{"line":683,"column":5,"offset":11890},"end":{"line":683,"column":35,"offset":11920}}}],"position":{"start":{"line":683,"column":1,"offset":11886},"end":{"line":683,"column":35,"offset":11920}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'moose'</span><span class=\"token punctuation\">]</span>\n<span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>spam<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":685,"column":1,"offset":11922},"end":{"line":688,"column":4,"offset":11976}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Changing Values in a List with Indexes","position":{"start":{"line":690,"column":5,"offset":11982},"end":{"line":690,"column":43,"offset":12020}}}],"position":{"start":{"line":690,"column":1,"offset":11978},"end":{"line":690,"column":43,"offset":12020}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephant'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'aardvark'</span>\nspam</code></pre></div>","position":{"start":{"line":692,"column":1,"offset":12022},"end":{"line":696,"column":4,"offset":12102}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> spam<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nspam</code></pre></div>","position":{"start":{"line":698,"column":1,"offset":12104},"end":{"line":701,"column":4,"offset":12140}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">12345</span>\nspam</code></pre></div>","position":{"start":{"line":703,"column":1,"offset":12142},"end":{"line":706,"column":4,"offset":12177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"List Concatenation and List Replication","position":{"start":{"line":708,"column":5,"offset":12183},"end":{"line":708,"column":44,"offset":12222}}}],"position":{"start":{"line":708,"column":1,"offset":12179},"end":{"line":708,"column":44,"offset":12222}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":710,"column":1,"offset":12224},"end":{"line":712,"column":4,"offset":12265}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span><span class=\"token string\">'X'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span></code></pre></div>","position":{"start":{"line":714,"column":1,"offset":12267},"end":{"line":716,"column":4,"offset":12300}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nspam <span class=\"token operator\">=</span> spam <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span>\nspam</code></pre></div>","position":{"start":{"line":718,"column":1,"offset":12302},"end":{"line":722,"column":4,"offset":12367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Removing Values from Lists with del Statements","position":{"start":{"line":724,"column":5,"offset":12373},"end":{"line":724,"column":51,"offset":12419}}}],"position":{"start":{"line":724,"column":1,"offset":12369},"end":{"line":724,"column":51,"offset":12419}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephant'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">del</span> spam<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nspam</code></pre></div>","position":{"start":{"line":726,"column":1,"offset":12421},"end":{"line":730,"column":4,"offset":12492}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">del</span> spam<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nspam</code></pre></div>","position":{"start":{"line":732,"column":1,"offset":12494},"end":{"line":735,"column":4,"offset":12524}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Using for Loops with Lists","position":{"start":{"line":737,"column":5,"offset":12530},"end":{"line":737,"column":31,"offset":12556}}}],"position":{"start":{"line":737,"column":1,"offset":12526},"end":{"line":737,"column":31,"offset":12556}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">supplies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pens'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'staplers'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'flame-throwers'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'binders'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> supply <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>supplies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Index {} in supplies is: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> supply<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":739,"column":1,"offset":12558},"end":{"line":744,"column":4,"offset":12735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Looping Through Multiple Lists with zip","position":{"start":{"line":746,"column":5,"offset":12741},"end":{"line":746,"column":44,"offset":12780}}}],"position":{"start":{"line":746,"column":1,"offset":12737},"end":{"line":746,"column":44,"offset":12780}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Pete'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Elizabeth'</span><span class=\"token punctuation\">]</span>\nage <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> n<span class=\"token punctuation\">,</span> a <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{} is {} years old'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":748,"column":1,"offset":12782},"end":{"line":754,"column":4,"offset":12924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The in and not in Operators","position":{"start":{"line":756,"column":5,"offset":12930},"end":{"line":756,"column":32,"offset":12957}}}],"position":{"start":{"line":756,"column":1,"offset":12926},"end":{"line":756,"column":32,"offset":12957}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'howdy'</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'howdy'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'heyas'</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":758,"column":1,"offset":12959},"end":{"line":760,"column":4,"offset":13017}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'howdy'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'heyas'</span><span class=\"token punctuation\">]</span>\n<span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":762,"column":1,"offset":13019},"end":{"line":765,"column":4,"offset":13079}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'howdy'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> spam</code></pre></div>","position":{"start":{"line":767,"column":1,"offset":13081},"end":{"line":769,"column":4,"offset":13114}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'cat'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> spam</code></pre></div>","position":{"start":{"line":771,"column":1,"offset":13116},"end":{"line":773,"column":4,"offset":13147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Multiple Assignment Trick","position":{"start":{"line":775,"column":5,"offset":13153},"end":{"line":775,"column":34,"offset":13182}}}],"position":{"start":{"line":775,"column":1,"offset":13149},"end":{"line":775,"column":34,"offset":13182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The multiple assignment trick is a shortcut that lets you assign multiple variables with the values in a list in one line of code. So instead of doing this:","position":{"start":{"line":777,"column":1,"offset":13184},"end":{"line":777,"column":157,"offset":13340}}}],"position":{"start":{"line":777,"column":1,"offset":13184},"end":{"line":777,"column":157,"offset":13340}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cat <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'fat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'loud'</span><span class=\"token punctuation\">]</span>\nsize <span class=\"token operator\">=</span> cat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\ncolor <span class=\"token operator\">=</span> cat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\ndisposition <span class=\"token operator\">=</span> cat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":779,"column":1,"offset":13342},"end":{"line":784,"column":4,"offset":13437}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You could type this line of code:","position":{"start":{"line":786,"column":1,"offset":13439},"end":{"line":786,"column":34,"offset":13472}}}],"position":{"start":{"line":786,"column":1,"offset":13439},"end":{"line":786,"column":34,"offset":13472}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cat <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'fat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'loud'</span><span class=\"token punctuation\">]</span>\nsize<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> disposition <span class=\"token operator\">=</span> cat</code></pre></div>","position":{"start":{"line":788,"column":1,"offset":13474},"end":{"line":791,"column":4,"offset":13550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The multiple assignment trick can also be used to swap the values in two variables:","position":{"start":{"line":793,"column":1,"offset":13552},"end":{"line":793,"column":84,"offset":13635}}}],"position":{"start":{"line":793,"column":1,"offset":13552},"end":{"line":793,"column":84,"offset":13635}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span>\na<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> a\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":795,"column":1,"offset":13637},"end":{"line":799,"column":4,"offset":13693}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":801,"column":1,"offset":13695},"end":{"line":803,"column":4,"offset":13717}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Augmented Assignment Operators","position":{"start":{"line":805,"column":5,"offset":13723},"end":{"line":805,"column":35,"offset":13753}}}],"position":{"start":{"line":805,"column":1,"offset":13719},"end":{"line":805,"column":35,"offset":13753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Operator","position":{"start":{"line":807,"column":3,"offset":13757},"end":{"line":807,"column":11,"offset":13765}}}],"position":{"start":{"line":807,"column":3,"offset":13757},"end":{"line":807,"column":14,"offset":13768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Equivalent","position":{"start":{"line":807,"column":17,"offset":13771},"end":{"line":807,"column":27,"offset":13781}}}],"position":{"start":{"line":807,"column":17,"offset":13771},"end":{"line":807,"column":34,"offset":13788}}},{"type":"text","value":"\n"}],"position":{"start":{"line":807,"column":1,"offset":13755},"end":{"line":807,"column":36,"offset":13790}}},{"type":"text","value":"\n"}],"position":{"start":{"line":807,"column":1,"offset":13755},"end":{"line":807,"column":36,"offset":13790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam += 1</code>","position":{"start":{"line":809,"column":3,"offset":13829},"end":{"line":809,"column":14,"offset":13840}}}],"position":{"start":{"line":809,"column":3,"offset":13829},"end":{"line":809,"column":14,"offset":13840}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam = spam + 1</code>","position":{"start":{"line":809,"column":17,"offset":13843},"end":{"line":809,"column":34,"offset":13860}}}],"position":{"start":{"line":809,"column":17,"offset":13843},"end":{"line":809,"column":34,"offset":13860}}},{"type":"text","value":"\n"}],"position":{"start":{"line":809,"column":1,"offset":13827},"end":{"line":809,"column":36,"offset":13862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam -= 1</code>","position":{"start":{"line":810,"column":3,"offset":13865},"end":{"line":810,"column":14,"offset":13876}}}],"position":{"start":{"line":810,"column":3,"offset":13865},"end":{"line":810,"column":14,"offset":13876}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam = spam - 1</code>","position":{"start":{"line":810,"column":17,"offset":13879},"end":{"line":810,"column":34,"offset":13896}}}],"position":{"start":{"line":810,"column":17,"offset":13879},"end":{"line":810,"column":34,"offset":13896}}},{"type":"text","value":"\n"}],"position":{"start":{"line":810,"column":1,"offset":13863},"end":{"line":810,"column":36,"offset":13898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam *= 1</code>","position":{"start":{"line":811,"column":3,"offset":13901},"end":{"line":811,"column":14,"offset":13912}}}],"position":{"start":{"line":811,"column":3,"offset":13901},"end":{"line":811,"column":14,"offset":13912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam = spam * 1</code>","position":{"start":{"line":811,"column":17,"offset":13915},"end":{"line":811,"column":34,"offset":13932}}}],"position":{"start":{"line":811,"column":17,"offset":13915},"end":{"line":811,"column":34,"offset":13932}}},{"type":"text","value":"\n"}],"position":{"start":{"line":811,"column":1,"offset":13899},"end":{"line":811,"column":36,"offset":13934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam /= 1</code>","position":{"start":{"line":812,"column":3,"offset":13937},"end":{"line":812,"column":14,"offset":13948}}}],"position":{"start":{"line":812,"column":3,"offset":13937},"end":{"line":812,"column":14,"offset":13948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam = spam / 1</code>","position":{"start":{"line":812,"column":17,"offset":13951},"end":{"line":812,"column":34,"offset":13968}}}],"position":{"start":{"line":812,"column":17,"offset":13951},"end":{"line":812,"column":34,"offset":13968}}},{"type":"text","value":"\n"}],"position":{"start":{"line":812,"column":1,"offset":13935},"end":{"line":812,"column":36,"offset":13970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam %= 1</code>","position":{"start":{"line":813,"column":3,"offset":13973},"end":{"line":813,"column":14,"offset":13984}}}],"position":{"start":{"line":813,"column":3,"offset":13973},"end":{"line":813,"column":14,"offset":13984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam = spam % 1</code>","position":{"start":{"line":813,"column":17,"offset":13987},"end":{"line":813,"column":34,"offset":14004}}}],"position":{"start":{"line":813,"column":17,"offset":13987},"end":{"line":813,"column":34,"offset":14004}}},{"type":"text","value":"\n"}],"position":{"start":{"line":813,"column":1,"offset":13971},"end":{"line":813,"column":36,"offset":14006}}},{"type":"text","value":"\n"}],"position":{"start":{"line":809,"column":1,"offset":13827},"end":{"line":813,"column":36,"offset":14006}}},{"type":"text","value":"\n"}],"position":{"start":{"line":807,"column":1,"offset":13755},"end":{"line":813,"column":36,"offset":14006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Examples:","position":{"start":{"line":815,"column":1,"offset":14008},"end":{"line":815,"column":10,"offset":14017}}}],"position":{"start":{"line":815,"column":1,"offset":14008},"end":{"line":815,"column":10,"offset":14017}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span>\nspam <span class=\"token operator\">+=</span> <span class=\"token string\">' world!'</span>\nspam</code></pre></div>","position":{"start":{"line":817,"column":1,"offset":14019},"end":{"line":821,"column":4,"offset":14070}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">bacon <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Zophie'</span><span class=\"token punctuation\">]</span>\nbacon <span class=\"token operator\">*=</span> <span class=\"token number\">3</span>\nbacon</code></pre></div>","position":{"start":{"line":823,"column":1,"offset":14072},"end":{"line":827,"column":4,"offset":14121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Finding a Value in a List with the index Method","position":{"start":{"line":829,"column":5,"offset":14127},"end":{"line":829,"column":52,"offset":14174}}}],"position":{"start":{"line":829,"column":1,"offset":14123},"end":{"line":829,"column":52,"offset":14174}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Zophie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Fat-tail'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":831,"column":1,"offset":14176},"end":{"line":834,"column":4,"offset":14257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Adding Values to Lists with append and insert","position":{"start":{"line":836,"column":5,"offset":14263},"end":{"line":836,"column":50,"offset":14308}}}],"position":{"start":{"line":836,"column":1,"offset":14259},"end":{"line":836,"column":50,"offset":14308}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"append()","position":{"start":{"line":838,"column":3,"offset":14312},"end":{"line":838,"column":11,"offset":14320}}}],"position":{"start":{"line":838,"column":1,"offset":14310},"end":{"line":838,"column":13,"offset":14322}}},{"type":"text","value":":","position":{"start":{"line":838,"column":13,"offset":14322},"end":{"line":838,"column":14,"offset":14323}}}],"position":{"start":{"line":838,"column":1,"offset":14310},"end":{"line":838,"column":14,"offset":14323}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'moose'</span><span class=\"token punctuation\">)</span>\nspam</code></pre></div>","position":{"start":{"line":840,"column":1,"offset":14325},"end":{"line":844,"column":4,"offset":14393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"insert()","position":{"start":{"line":846,"column":3,"offset":14397},"end":{"line":846,"column":11,"offset":14405}}}],"position":{"start":{"line":846,"column":1,"offset":14395},"end":{"line":846,"column":13,"offset":14407}}},{"type":"text","value":":","position":{"start":{"line":846,"column":13,"offset":14407},"end":{"line":846,"column":14,"offset":14408}}}],"position":{"start":{"line":846,"column":1,"offset":14395},"end":{"line":846,"column":14,"offset":14408}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'chicken'</span><span class=\"token punctuation\">)</span>\nspam</code></pre></div>","position":{"start":{"line":848,"column":1,"offset":14410},"end":{"line":852,"column":4,"offset":14483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Removing Values from Lists with remove","position":{"start":{"line":854,"column":5,"offset":14489},"end":{"line":854,"column":43,"offset":14527}}}],"position":{"start":{"line":854,"column":1,"offset":14485},"end":{"line":854,"column":43,"offset":14527}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephant'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">'bat'</span><span class=\"token punctuation\">)</span>\nspam</code></pre></div>","position":{"start":{"line":856,"column":1,"offset":14529},"end":{"line":860,"column":4,"offset":14607}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the value appears multiple times in the list, only the first instance of the value will be removed.","position":{"start":{"line":862,"column":1,"offset":14609},"end":{"line":862,"column":103,"offset":14711}}}],"position":{"start":{"line":862,"column":1,"offset":14609},"end":{"line":862,"column":103,"offset":14711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Sorting the Values in a List with sort","position":{"start":{"line":864,"column":5,"offset":14717},"end":{"line":864,"column":43,"offset":14755}}}],"position":{"start":{"line":864,"column":1,"offset":14713},"end":{"line":864,"column":43,"offset":14755}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nspam</code></pre></div>","position":{"start":{"line":866,"column":1,"offset":14757},"end":{"line":870,"column":4,"offset":14814}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ants'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dogs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'badgers'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephants'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nspam</code></pre></div>","position":{"start":{"line":872,"column":1,"offset":14816},"end":{"line":876,"column":4,"offset":14902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also pass True for the reverse keyword argument to have sort() sort the values in reverse order:","position":{"start":{"line":878,"column":1,"offset":14904},"end":{"line":878,"column":105,"offset":15008}}}],"position":{"start":{"line":878,"column":1,"offset":14904},"end":{"line":878,"column":105,"offset":15008}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nspam</code></pre></div>","position":{"start":{"line":880,"column":1,"offset":15010},"end":{"line":883,"column":4,"offset":15052}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you need to sort the values in regular alphabetical order, pass str. lower for the key keyword argument in the sort() method call:","position":{"start":{"line":885,"column":1,"offset":15054},"end":{"line":885,"column":134,"offset":15187}}}],"position":{"start":{"line":885,"column":1,"offset":15054},"end":{"line":885,"column":134,"offset":15187}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'z'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">]</span>\nspam<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">)</span>\nspam</code></pre></div>","position":{"start":{"line":887,"column":1,"offset":15189},"end":{"line":891,"column":4,"offset":15260}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can use the built-in function ","position":{"start":{"line":893,"column":1,"offset":15262},"end":{"line":893,"column":35,"offset":15296}}},{"type":"raw","value":"<code class=\"language-text\">sorted</code>","position":{"start":{"line":893,"column":35,"offset":15296},"end":{"line":893,"column":43,"offset":15304}}},{"type":"text","value":" to return a new list:","position":{"start":{"line":893,"column":43,"offset":15304},"end":{"line":893,"column":65,"offset":15326}}}],"position":{"start":{"line":893,"column":1,"offset":15262},"end":{"line":893,"column":65,"offset":15326}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ants'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dogs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'badgers'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elephants'</span><span class=\"token punctuation\">]</span>\n<span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>spam<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":895,"column":1,"offset":15328},"end":{"line":898,"column":4,"offset":15410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Tuple Data Type","position":{"start":{"line":900,"column":4,"offset":15415},"end":{"line":900,"column":19,"offset":15430}}}],"position":{"start":{"line":900,"column":1,"offset":15412},"end":{"line":900,"column":19,"offset":15430}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">eggs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\neggs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":902,"column":1,"offset":15432},"end":{"line":905,"column":4,"offset":15479}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">eggs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":907,"column":1,"offset":15481},"end":{"line":909,"column":4,"offset":15504}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>eggs<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":911,"column":1,"offset":15506},"end":{"line":913,"column":4,"offset":15529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The main way that tuples are different from lists is that tuples, like strings, are immutable.","position":{"start":{"line":915,"column":1,"offset":15531},"end":{"line":915,"column":95,"offset":15625}}}],"position":{"start":{"line":915,"column":1,"offset":15531},"end":{"line":915,"column":95,"offset":15625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Converting Types with the list and tuple Functions","position":{"start":{"line":917,"column":4,"offset":15630},"end":{"line":917,"column":54,"offset":15680}}}],"position":{"start":{"line":917,"column":1,"offset":15627},"end":{"line":917,"column":54,"offset":15680}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":919,"column":1,"offset":15682},"end":{"line":921,"column":4,"offset":15720}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":923,"column":1,"offset":15722},"end":{"line":925,"column":4,"offset":15759}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":927,"column":1,"offset":15761},"end":{"line":929,"column":4,"offset":15788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Dictionaries and Structuring Data","position":{"start":{"line":931,"column":4,"offset":15793},"end":{"line":931,"column":37,"offset":15826}}}],"position":{"start":{"line":931,"column":1,"offset":15790},"end":{"line":931,"column":37,"offset":15826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example Dictionary:","position":{"start":{"line":933,"column":1,"offset":15828},"end":{"line":933,"column":20,"offset":15847}}}],"position":{"start":{"line":933,"column":1,"offset":15828},"end":{"line":933,"column":20,"offset":15847}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">myCat <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'fat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'disposition'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'loud'</span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":935,"column":1,"offset":15849},"end":{"line":937,"column":4,"offset":15926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The keys, values, and items Methods","position":{"start":{"line":939,"column":5,"offset":15932},"end":{"line":939,"column":40,"offset":15967}}}],"position":{"start":{"line":939,"column":1,"offset":15928},"end":{"line":939,"column":40,"offset":15967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"values():","position":{"start":{"line":941,"column":1,"offset":15969},"end":{"line":941,"column":10,"offset":15978}}}],"position":{"start":{"line":941,"column":1,"offset":15969},"end":{"line":941,"column":10,"offset":15978}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> spam<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":943,"column":1,"offset":15980},"end":{"line":948,"column":4,"offset":16066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"keys():","position":{"start":{"line":950,"column":1,"offset":16068},"end":{"line":950,"column":8,"offset":16075}}}],"position":{"start":{"line":950,"column":1,"offset":16068},"end":{"line":950,"column":8,"offset":16075}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> spam<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":952,"column":1,"offset":16077},"end":{"line":955,"column":4,"offset":16125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"items():","position":{"start":{"line":957,"column":1,"offset":16127},"end":{"line":957,"column":9,"offset":16135}}}],"position":{"start":{"line":957,"column":1,"offset":16127},"end":{"line":957,"column":9,"offset":16135}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> spam<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":959,"column":1,"offset":16137},"end":{"line":962,"column":4,"offset":16186}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using the keys(), values(), and items() methods, a for loop can iterate over the keys, values, or key-value pairs in a dictionary, respectively.","position":{"start":{"line":964,"column":1,"offset":16188},"end":{"line":964,"column":145,"offset":16332}}}],"position":{"start":{"line":964,"column":1,"offset":16188},"end":{"line":964,"column":145,"offset":16332}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> spam<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Key: {} Value: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":966,"column":1,"offset":16334},"end":{"line":971,"column":4,"offset":16458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Checking if a Key or Value Exists in a Dictionary","position":{"start":{"line":973,"column":5,"offset":16464},"end":{"line":973,"column":54,"offset":16513}}}],"position":{"start":{"line":973,"column":1,"offset":16460},"end":{"line":973,"column":54,"offset":16513}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Zophie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n<span class=\"token string\">'name'</span> <span class=\"token keyword\">in</span> spam<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":975,"column":1,"offset":16515},"end":{"line":978,"column":4,"offset":16586}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Zophie'</span> <span class=\"token keyword\">in</span> spam<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":980,"column":1,"offset":16588},"end":{"line":982,"column":4,"offset":16627}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># You can omit the call to keys() when checking for a key</span>\n<span class=\"token string\">'color'</span> <span class=\"token keyword\">in</span> spam</code></pre></div>","position":{"start":{"line":984,"column":1,"offset":16629},"end":{"line":987,"column":4,"offset":16716}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'color'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> spam</code></pre></div>","position":{"start":{"line":989,"column":1,"offset":16718},"end":{"line":991,"column":4,"offset":16751}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'color'</span> <span class=\"token keyword\">in</span> spam</code></pre></div>","position":{"start":{"line":993,"column":1,"offset":16753},"end":{"line":995,"column":4,"offset":16782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The get Method","position":{"start":{"line":997,"column":5,"offset":16788},"end":{"line":997,"column":19,"offset":16802}}}],"position":{"start":{"line":997,"column":1,"offset":16784},"end":{"line":997,"column":19,"offset":16802}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">picnic_items <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'apples'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cups'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n<span class=\"token string\">'I am bringing {} cups.'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>picnic_items<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'cups'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":999,"column":1,"offset":16804},"end":{"line":1002,"column":4,"offset":16923}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'I am bringing {} eggs.'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>picnic_items<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'eggs'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1004,"column":1,"offset":16925},"end":{"line":1006,"column":4,"offset":17004}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The setdefault Method","position":{"start":{"line":1008,"column":5,"offset":17010},"end":{"line":1008,"column":26,"offset":17031}}}],"position":{"start":{"line":1008,"column":1,"offset":17006},"end":{"line":1008,"column":26,"offset":17031}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's consider this code:","position":{"start":{"line":1010,"column":1,"offset":17033},"end":{"line":1010,"column":26,"offset":17058}}}],"position":{"start":{"line":1010,"column":1,"offset":17033},"end":{"line":1010,"column":26,"offset":17058}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'color'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> spam<span class=\"token punctuation\">:</span>\n    spam<span class=\"token punctuation\">[</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'black'</span></code></pre></div>","position":{"start":{"line":1012,"column":1,"offset":17060},"end":{"line":1016,"column":4,"offset":17160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":1018,"column":1,"offset":17162},"end":{"line":1018,"column":7,"offset":17168}}},{"type":"raw","value":"<code class=\"language-text\">setdefault</code>","position":{"start":{"line":1018,"column":7,"offset":17168},"end":{"line":1018,"column":19,"offset":17180}}},{"type":"text","value":" we could make the same code more shortly:","position":{"start":{"line":1018,"column":19,"offset":17180},"end":{"line":1018,"column":61,"offset":17222}}}],"position":{"start":{"line":1018,"column":1,"offset":17162},"end":{"line":1018,"column":61,"offset":17222}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\nspam<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1020,"column":1,"offset":17224},"end":{"line":1023,"column":4,"offset":17306}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam</code></pre></div>","position":{"start":{"line":1025,"column":1,"offset":17308},"end":{"line":1027,"column":4,"offset":17326}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1029,"column":1,"offset":17328},"end":{"line":1031,"column":4,"offset":17375}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam</code></pre></div>","position":{"start":{"line":1033,"column":1,"offset":17377},"end":{"line":1035,"column":4,"offset":17395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Pretty Printing","position":{"start":{"line":1037,"column":5,"offset":17401},"end":{"line":1037,"column":20,"offset":17416}}}],"position":{"start":{"line":1037,"column":1,"offset":17397},"end":{"line":1037,"column":20,"offset":17416}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pprint\n\nmessage <span class=\"token operator\">=</span> <span class=\"token string\">'It was a bright cold day in April, and the clocks were striking thirteen.'</span>\ncount <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> character <span class=\"token keyword\">in</span> message<span class=\"token punctuation\">:</span>\n    count<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span>character<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    count<span class=\"token punctuation\">[</span>character<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token punctuation\">[</span>character<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\npprint<span class=\"token punctuation\">.</span>pprint<span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1039,"column":1,"offset":17418},"end":{"line":1050,"column":4,"offset":17671}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Merge two dictionaries","position":{"start":{"line":1052,"column":5,"offset":17677},"end":{"line":1052,"column":27,"offset":17699}}}],"position":{"start":{"line":1052,"column":1,"offset":17673},"end":{"line":1052,"column":27,"offset":17699}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># in Python 3.5+:</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\nz <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">**</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>y<span class=\"token punctuation\">}</span>\nz</code></pre></div>","position":{"start":{"line":1054,"column":1,"offset":17701},"end":{"line":1060,"column":4,"offset":17791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"sets","position":{"start":{"line":1062,"column":4,"offset":17796},"end":{"line":1062,"column":8,"offset":17800}}}],"position":{"start":{"line":1062,"column":1,"offset":17793},"end":{"line":1062,"column":8,"offset":17800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"From the Python 3 ","position":{"start":{"line":1064,"column":1,"offset":17802},"end":{"line":1064,"column":19,"offset":17820}}},{"type":"element","tagName":"a","properties":{"href":"https://docs.python.org/3/tutorial/datastructures.html"},"children":[{"type":"text","value":"documentation","position":{"start":{"line":1064,"column":20,"offset":17821},"end":{"line":1064,"column":33,"offset":17834}}}],"position":{"start":{"line":1064,"column":19,"offset":17820},"end":{"line":1064,"column":90,"offset":17891}}}],"position":{"start":{"line":1064,"column":1,"offset":17802},"end":{"line":1064,"column":90,"offset":17891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A set is an unordered collection with no duplicate elements. Basic uses include membership testing and eliminating duplicate entries. Set objects also support mathematical operations like union, intersection, difference, and symmetric difference.","position":{"start":{"line":1066,"column":3,"offset":17895},"end":{"line":1066,"column":249,"offset":18141}}}],"position":{"start":{"line":1066,"column":3,"offset":17895},"end":{"line":1066,"column":249,"offset":18141}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1066,"column":1,"offset":17893},"end":{"line":1066,"column":249,"offset":18141}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Initializing a set","position":{"start":{"line":1068,"column":5,"offset":18147},"end":{"line":1068,"column":23,"offset":18165}}}],"position":{"start":{"line":1068,"column":1,"offset":18143},"end":{"line":1068,"column":23,"offset":18165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are two ways to create sets: using curly braces ","position":{"start":{"line":1070,"column":1,"offset":18167},"end":{"line":1070,"column":55,"offset":18221}}},{"type":"raw","value":"<code class=\"language-text\">{}</code>","position":{"start":{"line":1070,"column":55,"offset":18221},"end":{"line":1070,"column":59,"offset":18225}}},{"type":"text","value":" and the bult-in function ","position":{"start":{"line":1070,"column":59,"offset":18225},"end":{"line":1070,"column":85,"offset":18251}}},{"type":"raw","value":"<code class=\"language-text\">set()</code>","position":{"start":{"line":1070,"column":85,"offset":18251},"end":{"line":1070,"column":92,"offset":18258}}}],"position":{"start":{"line":1070,"column":1,"offset":18167},"end":{"line":1070,"column":92,"offset":18258}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1072,"column":1,"offset":18260},"end":{"line":1075,"column":4,"offset":18306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When creating an empty set, be sure to not use the curly braces ","position":{"start":{"line":1077,"column":1,"offset":18308},"end":{"line":1077,"column":65,"offset":18372}}},{"type":"raw","value":"<code class=\"language-text\">{}</code>","position":{"start":{"line":1077,"column":65,"offset":18372},"end":{"line":1077,"column":69,"offset":18376}}},{"type":"text","value":" or you will get an empty dictionary instead.","position":{"start":{"line":1077,"column":69,"offset":18376},"end":{"line":1077,"column":114,"offset":18421}}}],"position":{"start":{"line":1077,"column":1,"offset":18308},"end":{"line":1077,"column":114,"offset":18421}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1079,"column":1,"offset":18423},"end":{"line":1082,"column":4,"offset":18451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"sets: unordered collections of unique elements","position":{"start":{"line":1084,"column":5,"offset":18457},"end":{"line":1084,"column":51,"offset":18503}}}],"position":{"start":{"line":1084,"column":1,"offset":18453},"end":{"line":1084,"column":51,"offset":18503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A set automatically remove all the duplicate values.","position":{"start":{"line":1086,"column":1,"offset":18505},"end":{"line":1086,"column":53,"offset":18557}}}],"position":{"start":{"line":1086,"column":1,"offset":18505},"end":{"line":1086,"column":53,"offset":18557}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\ns</code></pre></div>","position":{"start":{"line":1088,"column":1,"offset":18559},"end":{"line":1091,"column":4,"offset":18597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And as an unordered data type, they can't be indexed.","position":{"start":{"line":1093,"column":1,"offset":18599},"end":{"line":1093,"column":54,"offset":18652}}}],"position":{"start":{"line":1093,"column":1,"offset":18599},"end":{"line":1093,"column":54,"offset":18652}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1095,"column":1,"offset":18654},"end":{"line":1098,"column":4,"offset":18686}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"set add and update","position":{"start":{"line":1100,"column":5,"offset":18692},"end":{"line":1100,"column":23,"offset":18710}}}],"position":{"start":{"line":1100,"column":1,"offset":18688},"end":{"line":1100,"column":23,"offset":18710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using the ","position":{"start":{"line":1102,"column":1,"offset":18712},"end":{"line":1102,"column":11,"offset":18722}}},{"type":"raw","value":"<code class=\"language-text\">add()</code>","position":{"start":{"line":1102,"column":11,"offset":18722},"end":{"line":1102,"column":18,"offset":18729}}},{"type":"text","value":" method we can add a single element to the set.","position":{"start":{"line":1102,"column":18,"offset":18729},"end":{"line":1102,"column":65,"offset":18776}}}],"position":{"start":{"line":1102,"column":1,"offset":18712},"end":{"line":1102,"column":65,"offset":18776}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\ns</code></pre></div>","position":{"start":{"line":1104,"column":1,"offset":18778},"end":{"line":1108,"column":4,"offset":18816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And with ","position":{"start":{"line":1110,"column":1,"offset":18818},"end":{"line":1110,"column":10,"offset":18827}}},{"type":"raw","value":"<code class=\"language-text\">update()</code>","position":{"start":{"line":1110,"column":10,"offset":18827},"end":{"line":1110,"column":20,"offset":18837}}},{"type":"text","value":", multiple ones .","position":{"start":{"line":1110,"column":20,"offset":18837},"end":{"line":1110,"column":37,"offset":18854}}}],"position":{"start":{"line":1110,"column":1,"offset":18818},"end":{"line":1110,"column":37,"offset":18854}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ns  <span class=\"token comment\"># remember, sets automatically remove duplicates</span></code></pre></div>","position":{"start":{"line":1112,"column":1,"offset":18856},"end":{"line":1116,"column":4,"offset":18961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"set remove and discard","position":{"start":{"line":1118,"column":5,"offset":18967},"end":{"line":1118,"column":27,"offset":18989}}}],"position":{"start":{"line":1118,"column":1,"offset":18963},"end":{"line":1118,"column":27,"offset":18989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Both methods will remove an element from the set, but ","position":{"start":{"line":1120,"column":1,"offset":18991},"end":{"line":1120,"column":55,"offset":19045}}},{"type":"raw","value":"<code class=\"language-text\">remove()</code>","position":{"start":{"line":1120,"column":55,"offset":19045},"end":{"line":1120,"column":65,"offset":19055}}},{"type":"text","value":" will raise a ","position":{"start":{"line":1120,"column":65,"offset":19055},"end":{"line":1120,"column":79,"offset":19069}}},{"type":"raw","value":"<code class=\"language-text\">key error</code>","position":{"start":{"line":1120,"column":79,"offset":19069},"end":{"line":1120,"column":90,"offset":19080}}},{"type":"text","value":" if the value doesn't exist.","position":{"start":{"line":1120,"column":90,"offset":19080},"end":{"line":1120,"column":118,"offset":19108}}}],"position":{"start":{"line":1120,"column":1,"offset":18991},"end":{"line":1120,"column":118,"offset":19108}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\ns</code></pre></div>","position":{"start":{"line":1122,"column":1,"offset":19110},"end":{"line":1126,"column":4,"offset":19151}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1128,"column":1,"offset":19153},"end":{"line":1130,"column":4,"offset":19178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">discard()</code>","position":{"start":{"line":1132,"column":1,"offset":19180},"end":{"line":1132,"column":12,"offset":19191}}},{"type":"text","value":" won't raise any errors.","position":{"start":{"line":1132,"column":12,"offset":19191},"end":{"line":1132,"column":36,"offset":19215}}}],"position":{"start":{"line":1132,"column":1,"offset":19180},"end":{"line":1132,"column":36,"offset":19215}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns<span class=\"token punctuation\">.</span>discard<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\ns</code></pre></div>","position":{"start":{"line":1134,"column":1,"offset":19217},"end":{"line":1138,"column":4,"offset":19259}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s<span class=\"token punctuation\">.</span>discard<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1140,"column":1,"offset":19261},"end":{"line":1142,"column":4,"offset":19287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"set union","position":{"start":{"line":1144,"column":5,"offset":19293},"end":{"line":1144,"column":14,"offset":19302}}}],"position":{"start":{"line":1144,"column":1,"offset":19289},"end":{"line":1144,"column":14,"offset":19302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">union()</code>","position":{"start":{"line":1146,"column":1,"offset":19304},"end":{"line":1146,"column":10,"offset":19313}}},{"type":"text","value":" or ","position":{"start":{"line":1146,"column":10,"offset":19313},"end":{"line":1146,"column":14,"offset":19317}}},{"type":"raw","value":"<code class=\"language-text\">|</code>","position":{"start":{"line":1146,"column":14,"offset":19317},"end":{"line":1146,"column":17,"offset":19320}}},{"type":"text","value":" will create a new set that contains all the elements from the sets provided.","position":{"start":{"line":1146,"column":17,"offset":19320},"end":{"line":1146,"column":94,"offset":19397}}}],"position":{"start":{"line":1146,"column":1,"offset":19304},"end":{"line":1146,"column":94,"offset":19397}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\ns1<span class=\"token punctuation\">.</span>union<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># or 's1 | s2'</span></code></pre></div>","position":{"start":{"line":1148,"column":1,"offset":19399},"end":{"line":1152,"column":4,"offset":19471}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"set intersection","position":{"start":{"line":1154,"column":5,"offset":19477},"end":{"line":1154,"column":21,"offset":19493}}}],"position":{"start":{"line":1154,"column":1,"offset":19473},"end":{"line":1154,"column":21,"offset":19493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">intersection</code>","position":{"start":{"line":1156,"column":1,"offset":19495},"end":{"line":1156,"column":15,"offset":19509}}},{"type":"text","value":" or ","position":{"start":{"line":1156,"column":15,"offset":19509},"end":{"line":1156,"column":19,"offset":19513}}},{"type":"raw","value":"<code class=\"language-text\">&amp;</code>","position":{"start":{"line":1156,"column":19,"offset":19513},"end":{"line":1156,"column":22,"offset":19516}}},{"type":"text","value":" will return a set containing only the elements that are common to all of them.","position":{"start":{"line":1156,"column":22,"offset":19516},"end":{"line":1156,"column":101,"offset":19595}}}],"position":{"start":{"line":1156,"column":1,"offset":19495},"end":{"line":1156,"column":101,"offset":19595}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\ns3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\ns1<span class=\"token punctuation\">.</span>intersection<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">,</span> s3<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># or 's1 &amp; s2 &amp; s3'</span></code></pre></div>","position":{"start":{"line":1158,"column":1,"offset":19597},"end":{"line":1163,"column":4,"offset":19700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"set difference","position":{"start":{"line":1165,"column":5,"offset":19706},"end":{"line":1165,"column":19,"offset":19720}}}],"position":{"start":{"line":1165,"column":1,"offset":19702},"end":{"line":1165,"column":19,"offset":19720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">difference</code>","position":{"start":{"line":1167,"column":1,"offset":19722},"end":{"line":1167,"column":13,"offset":19734}}},{"type":"text","value":" or ","position":{"start":{"line":1167,"column":13,"offset":19734},"end":{"line":1167,"column":17,"offset":19738}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":1167,"column":17,"offset":19738},"end":{"line":1167,"column":20,"offset":19741}}},{"type":"text","value":" will return only the elements that are in one of the sets.","position":{"start":{"line":1167,"column":20,"offset":19741},"end":{"line":1167,"column":79,"offset":19800}}}],"position":{"start":{"line":1167,"column":1,"offset":19722},"end":{"line":1167,"column":79,"offset":19800}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\ns1<span class=\"token punctuation\">.</span>difference<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># or 's1 - s2'</span></code></pre></div>","position":{"start":{"line":1169,"column":1,"offset":19802},"end":{"line":1173,"column":4,"offset":19879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"set symetric_difference","position":{"start":{"line":1175,"column":5,"offset":19885},"end":{"line":1175,"column":28,"offset":19908}}}],"position":{"start":{"line":1175,"column":1,"offset":19881},"end":{"line":1175,"column":28,"offset":19908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">symetric_difference</code>","position":{"start":{"line":1177,"column":1,"offset":19910},"end":{"line":1177,"column":22,"offset":19931}}},{"type":"text","value":" or ","position":{"start":{"line":1177,"column":22,"offset":19931},"end":{"line":1177,"column":26,"offset":19935}}},{"type":"raw","value":"<code class=\"language-text\">^</code>","position":{"start":{"line":1177,"column":26,"offset":19935},"end":{"line":1177,"column":29,"offset":19938}}},{"type":"text","value":" will return all the elements that are not common between them.","position":{"start":{"line":1177,"column":29,"offset":19938},"end":{"line":1177,"column":92,"offset":20001}}}],"position":{"start":{"line":1177,"column":1,"offset":19910},"end":{"line":1177,"column":92,"offset":20001}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\ns2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\ns1<span class=\"token punctuation\">.</span>symmetric_difference<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># or 's1 ^ s2'</span></code></pre></div>","position":{"start":{"line":1179,"column":1,"offset":20003},"end":{"line":1183,"column":4,"offset":20090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"itertools Module","position":{"start":{"line":1185,"column":4,"offset":20095},"end":{"line":1185,"column":20,"offset":20111}}}],"position":{"start":{"line":1185,"column":1,"offset":20092},"end":{"line":1185,"column":20,"offset":20111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":1187,"column":1,"offset":20113},"end":{"line":1187,"column":5,"offset":20117}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"itertools","position":{"start":{"line":1187,"column":6,"offset":20118},"end":{"line":1187,"column":15,"offset":20127}}}],"position":{"start":{"line":1187,"column":5,"offset":20117},"end":{"line":1187,"column":16,"offset":20128}}},{"type":"text","value":" module is a collection of tools intented to be fast and use memory efficiently when handling iterators (like ","position":{"start":{"line":1187,"column":16,"offset":20128},"end":{"line":1187,"column":126,"offset":20238}}},{"type":"element","tagName":"a","properties":{"href":"#lists"},"children":[{"type":"text","value":"lists","position":{"start":{"line":1187,"column":127,"offset":20239},"end":{"line":1187,"column":132,"offset":20244}}}],"position":{"start":{"line":1187,"column":126,"offset":20238},"end":{"line":1187,"column":141,"offset":20253}}},{"type":"text","value":" or ","position":{"start":{"line":1187,"column":141,"offset":20253},"end":{"line":1187,"column":145,"offset":20257}}},{"type":"element","tagName":"a","properties":{"href":"#dictionaries-and-structuring-data"},"children":[{"type":"text","value":"dictionaries","position":{"start":{"line":1187,"column":146,"offset":20258},"end":{"line":1187,"column":158,"offset":20270}}}],"position":{"start":{"line":1187,"column":145,"offset":20257},"end":{"line":1187,"column":195,"offset":20307}}},{"type":"text","value":").","position":{"start":{"line":1187,"column":195,"offset":20307},"end":{"line":1187,"column":197,"offset":20309}}}],"position":{"start":{"line":1187,"column":1,"offset":20113},"end":{"line":1187,"column":197,"offset":20309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"From the official ","position":{"start":{"line":1189,"column":1,"offset":20311},"end":{"line":1189,"column":19,"offset":20329}}},{"type":"element","tagName":"a","properties":{"href":"https://docs.python.org/3/library/itertools.html"},"children":[{"type":"text","value":"Python 3.x documentation","position":{"start":{"line":1189,"column":20,"offset":20330},"end":{"line":1189,"column":44,"offset":20354}}}],"position":{"start":{"line":1189,"column":19,"offset":20329},"end":{"line":1189,"column":95,"offset":20405}}},{"type":"text","value":":","position":{"start":{"line":1189,"column":95,"offset":20405},"end":{"line":1189,"column":96,"offset":20406}}}],"position":{"start":{"line":1189,"column":1,"offset":20311},"end":{"line":1189,"column":96,"offset":20406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The module standardizes a core set of fast, memory efficient tools that are useful by themselves or in combination. Together, they form an \"iterator algebra\" making it possible to construct specialized tools succinctly and efficiently in pure Python.","position":{"start":{"line":1191,"column":3,"offset":20410},"end":{"line":1191,"column":253,"offset":20660}}}],"position":{"start":{"line":1191,"column":3,"offset":20410},"end":{"line":1191,"column":253,"offset":20660}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1191,"column":1,"offset":20408},"end":{"line":1191,"column":253,"offset":20660}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":1193,"column":1,"offset":20662},"end":{"line":1193,"column":5,"offset":20666}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"itertools","position":{"start":{"line":1193,"column":6,"offset":20667},"end":{"line":1193,"column":15,"offset":20676}}}],"position":{"start":{"line":1193,"column":5,"offset":20666},"end":{"line":1193,"column":16,"offset":20677}}},{"type":"text","value":" module comes in the standard library and must be imported.","position":{"start":{"line":1193,"column":16,"offset":20677},"end":{"line":1193,"column":75,"offset":20736}}}],"position":{"start":{"line":1193,"column":1,"offset":20662},"end":{"line":1193,"column":75,"offset":20736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":1195,"column":1,"offset":20738},"end":{"line":1195,"column":5,"offset":20742}}},{"type":"element","tagName":"a","properties":{"href":"https://docs.python.org/3/library/operator.html"},"children":[{"type":"text","value":"operator","position":{"start":{"line":1195,"column":6,"offset":20743},"end":{"line":1195,"column":14,"offset":20751}}}],"position":{"start":{"line":1195,"column":5,"offset":20742},"end":{"line":1195,"column":64,"offset":20801}}},{"type":"text","value":" module will also be used. This module is not necessary when using itertools, but needed for some of the examples below.","position":{"start":{"line":1195,"column":64,"offset":20801},"end":{"line":1195,"column":184,"offset":20921}}}],"position":{"start":{"line":1195,"column":1,"offset":20738},"end":{"line":1195,"column":184,"offset":20921}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> itertools\n<span class=\"token keyword\">import</span> operator</code></pre></div>","position":{"start":{"line":1197,"column":1,"offset":20923},"end":{"line":1200,"column":4,"offset":20969}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"accumulate","position":{"start":{"line":1202,"column":5,"offset":20975},"end":{"line":1202,"column":15,"offset":20985}}}],"position":{"start":{"line":1202,"column":1,"offset":20971},"end":{"line":1202,"column":15,"offset":20985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Makes an iterator that returns the results of a function.","position":{"start":{"line":1204,"column":1,"offset":20987},"end":{"line":1204,"column":58,"offset":21044}}}],"position":{"start":{"line":1204,"column":1,"offset":20987},"end":{"line":1204,"column":58,"offset":21044}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>accumulate<span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> func<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1206,"column":1,"offset":21046},"end":{"line":1208,"column":4,"offset":21098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1210,"column":1,"offset":21100},"end":{"line":1210,"column":9,"offset":21108}}}],"position":{"start":{"line":1210,"column":1,"offset":21100},"end":{"line":1210,"column":9,"offset":21108}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>accumulate<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> operator<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1212,"column":1,"offset":21110},"end":{"line":1217,"column":4,"offset":21231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The operator.mul takes two numbers and multiplies them:","position":{"start":{"line":1219,"column":1,"offset":21233},"end":{"line":1219,"column":56,"offset":21288}}}],"position":{"start":{"line":1219,"column":1,"offset":21233},"end":{"line":1219,"column":56,"offset":21288}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">operator<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1221,"column":1,"offset":21290},"end":{"line":1223,"column":4,"offset":21322}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">operator<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1225,"column":1,"offset":21324},"end":{"line":1227,"column":4,"offset":21356}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">operator<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1229,"column":1,"offset":21358},"end":{"line":1231,"column":4,"offset":21390}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">operator<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1233,"column":1,"offset":21392},"end":{"line":1235,"column":4,"offset":21425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Passing a function is optional:","position":{"start":{"line":1237,"column":1,"offset":21427},"end":{"line":1237,"column":32,"offset":21458}}}],"position":{"start":{"line":1237,"column":1,"offset":21427},"end":{"line":1237,"column":32,"offset":21458}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>accumulate<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1239,"column":1,"offset":21460},"end":{"line":1245,"column":4,"offset":21574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If no function is designated the items will be summed:","position":{"start":{"line":1247,"column":1,"offset":21576},"end":{"line":1247,"column":55,"offset":21630}}}],"position":{"start":{"line":1247,"column":1,"offset":21576},"end":{"line":1247,"column":55,"offset":21630}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">5</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n<span class=\"token number\">7</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">13</span>\n<span class=\"token number\">13</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">17</span>\n<span class=\"token number\">17</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">22</span>\n<span class=\"token number\">22</span> <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">=</span> <span class=\"token number\">31</span>\n<span class=\"token number\">31</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span></code></pre></div>","position":{"start":{"line":1249,"column":1,"offset":21632},"end":{"line":1257,"column":4,"offset":21716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"combinations","position":{"start":{"line":1259,"column":5,"offset":21722},"end":{"line":1259,"column":17,"offset":21734}}}],"position":{"start":{"line":1259,"column":1,"offset":21718},"end":{"line":1259,"column":17,"offset":21734}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Takes an iterable and a integer. This will create all the unique combination that have r members.","position":{"start":{"line":1261,"column":1,"offset":21736},"end":{"line":1261,"column":98,"offset":21833}}}],"position":{"start":{"line":1261,"column":1,"offset":21736},"end":{"line":1261,"column":98,"offset":21833}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>combinations<span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1263,"column":1,"offset":21835},"end":{"line":1265,"column":4,"offset":21884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1267,"column":1,"offset":21886},"end":{"line":1267,"column":9,"offset":21894}}}],"position":{"start":{"line":1267,"column":1,"offset":21886},"end":{"line":1267,"column":9,"offset":21894}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">shapes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'circle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'square'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>combinations<span class=\"token punctuation\">(</span>shapes<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1269,"column":1,"offset":21896},"end":{"line":1275,"column":4,"offset":22031}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"combinations","position":{"start":{"line":1277,"column":5,"offset":22037},"end":{"line":1277,"column":17,"offset":22049}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"with","position":{"start":{"line":1277,"column":18,"offset":22050},"end":{"line":1277,"column":22,"offset":22054}}}],"position":{"start":{"line":1277,"column":17,"offset":22049},"end":{"line":1277,"column":23,"offset":22055}}},{"type":"text","value":"replacement","position":{"start":{"line":1277,"column":23,"offset":22055},"end":{"line":1277,"column":34,"offset":22066}}}],"position":{"start":{"line":1277,"column":1,"offset":22033},"end":{"line":1277,"column":34,"offset":22066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just like combinations(), but allows individual elements to be repeated more than once.","position":{"start":{"line":1279,"column":1,"offset":22068},"end":{"line":1279,"column":88,"offset":22155}}}],"position":{"start":{"line":1279,"column":1,"offset":22068},"end":{"line":1279,"column":88,"offset":22155}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>combinations_with_replacement<span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1281,"column":1,"offset":22157},"end":{"line":1283,"column":4,"offset":22223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1285,"column":1,"offset":22225},"end":{"line":1285,"column":9,"offset":22233}}}],"position":{"start":{"line":1285,"column":1,"offset":22225},"end":{"line":1285,"column":9,"offset":22233}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">shapes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'circle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'square'</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>combinations_with_replacement<span class=\"token punctuation\">(</span>shapes<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1287,"column":1,"offset":22235},"end":{"line":1293,"column":4,"offset":22386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"count","position":{"start":{"line":1295,"column":5,"offset":22392},"end":{"line":1295,"column":10,"offset":22397}}}],"position":{"start":{"line":1295,"column":1,"offset":22388},"end":{"line":1295,"column":10,"offset":22397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Makes an iterator that returns evenly spaced values starting with number start.","position":{"start":{"line":1297,"column":1,"offset":22399},"end":{"line":1297,"column":80,"offset":22478}}}],"position":{"start":{"line":1297,"column":1,"offset":22399},"end":{"line":1297,"column":80,"offset":22478}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>start<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> step<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1299,"column":1,"offset":22480},"end":{"line":1301,"column":4,"offset":22526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1303,"column":1,"offset":22528},"end":{"line":1303,"column":9,"offset":22536}}}],"position":{"start":{"line":1303,"column":1,"offset":22528},"end":{"line":1303,"column":9,"offset":22536}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> <span class=\"token number\">20</span><span class=\"token punctuation\">:</span>\n       <span class=\"token keyword\">break</span></code></pre></div>","position":{"start":{"line":1305,"column":1,"offset":22538},"end":{"line":1310,"column":4,"offset":22622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"cycle","position":{"start":{"line":1312,"column":5,"offset":22628},"end":{"line":1312,"column":10,"offset":22633}}}],"position":{"start":{"line":1312,"column":1,"offset":22624},"end":{"line":1312,"column":10,"offset":22633}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This function cycles through an iterator endlessly.","position":{"start":{"line":1314,"column":1,"offset":22635},"end":{"line":1314,"column":52,"offset":22686}}}],"position":{"start":{"line":1314,"column":1,"offset":22635},"end":{"line":1314,"column":52,"offset":22686}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>cycle<span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1316,"column":1,"offset":22688},"end":{"line":1318,"column":4,"offset":22727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1320,"column":1,"offset":22729},"end":{"line":1320,"column":9,"offset":22737}}}],"position":{"start":{"line":1320,"column":1,"offset":22729},"end":{"line":1320,"column":9,"offset":22737}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'violet'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> color <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>cycle<span class=\"token punctuation\">(</span>colors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1322,"column":1,"offset":22739},"end":{"line":1326,"column":4,"offset":22870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When reached the end of the iterable it start over again from the beginning.","position":{"start":{"line":1328,"column":1,"offset":22872},"end":{"line":1328,"column":77,"offset":22948}}}],"position":{"start":{"line":1328,"column":1,"offset":22872},"end":{"line":1328,"column":77,"offset":22948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"chain","position":{"start":{"line":1330,"column":5,"offset":22954},"end":{"line":1330,"column":10,"offset":22959}}}],"position":{"start":{"line":1330,"column":1,"offset":22950},"end":{"line":1330,"column":10,"offset":22959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Take a series of iterables and return them as one long iterable.","position":{"start":{"line":1332,"column":1,"offset":22961},"end":{"line":1332,"column":65,"offset":23025}}}],"position":{"start":{"line":1332,"column":1,"offset":22961},"end":{"line":1332,"column":65,"offset":23025}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>chain<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>iterables<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1334,"column":1,"offset":23027},"end":{"line":1336,"column":4,"offset":23068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1338,"column":1,"offset":23070},"end":{"line":1338,"column":9,"offset":23078}}}],"position":{"start":{"line":1338,"column":1,"offset":23070},"end":{"line":1338,"column":9,"offset":23078}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">]</span>\nshapes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'circle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'square'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pentagon'</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>chain<span class=\"token punctuation\">(</span>colors<span class=\"token punctuation\">,</span> shapes<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1340,"column":1,"offset":23080},"end":{"line":1347,"column":4,"offset":23278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"compress","position":{"start":{"line":1349,"column":5,"offset":23284},"end":{"line":1349,"column":13,"offset":23292}}}],"position":{"start":{"line":1349,"column":1,"offset":23280},"end":{"line":1349,"column":13,"offset":23292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Filters one iterable with another.","position":{"start":{"line":1351,"column":1,"offset":23294},"end":{"line":1351,"column":35,"offset":23328}}}],"position":{"start":{"line":1351,"column":1,"offset":23294},"end":{"line":1351,"column":35,"offset":23328}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>compress<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> selectors<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1353,"column":1,"offset":23330},"end":{"line":1355,"column":4,"offset":23379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1357,"column":1,"offset":23381},"end":{"line":1357,"column":9,"offset":23389}}}],"position":{"start":{"line":1357,"column":1,"offset":23381},"end":{"line":1357,"column":9,"offset":23389}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">shapes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'circle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'square'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pentagon'</span><span class=\"token punctuation\">]</span>\nselections <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>compress<span class=\"token punctuation\">(</span>shapes<span class=\"token punctuation\">,</span> selections<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1359,"column":1,"offset":23391},"end":{"line":1366,"column":4,"offset":23582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"dropwhile","position":{"start":{"line":1368,"column":5,"offset":23588},"end":{"line":1368,"column":14,"offset":23597}}}],"position":{"start":{"line":1368,"column":1,"offset":23584},"end":{"line":1368,"column":14,"offset":23597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Make an iterator that drops elements from the iterable as long as the predicate is true; afterwards, returns every element.","position":{"start":{"line":1370,"column":1,"offset":23599},"end":{"line":1370,"column":124,"offset":23722}}}],"position":{"start":{"line":1370,"column":1,"offset":23599},"end":{"line":1370,"column":124,"offset":23722}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>dropwhile<span class=\"token punctuation\">(</span>predicate<span class=\"token punctuation\">,</span> iterable<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1372,"column":1,"offset":23724},"end":{"line":1374,"column":4,"offset":23778}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1376,"column":1,"offset":23780},"end":{"line":1376,"column":9,"offset":23788}}}],"position":{"start":{"line":1376,"column":1,"offset":23780},"end":{"line":1376,"column":9,"offset":23788}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>dropwhile<span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1378,"column":1,"offset":23790},"end":{"line":1384,"column":4,"offset":23931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"filterfalse","position":{"start":{"line":1386,"column":5,"offset":23937},"end":{"line":1386,"column":16,"offset":23948}}}],"position":{"start":{"line":1386,"column":1,"offset":23933},"end":{"line":1386,"column":16,"offset":23948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Makes an iterator that filters elements from iterable returning only those for which the predicate is False.","position":{"start":{"line":1388,"column":1,"offset":23950},"end":{"line":1388,"column":109,"offset":24058}}}],"position":{"start":{"line":1388,"column":1,"offset":23950},"end":{"line":1388,"column":109,"offset":24058}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>filterfalse<span class=\"token punctuation\">(</span>predicate<span class=\"token punctuation\">,</span> iterable<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1390,"column":1,"offset":24060},"end":{"line":1392,"column":4,"offset":24116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1394,"column":1,"offset":24118},"end":{"line":1394,"column":9,"offset":24126}}}],"position":{"start":{"line":1394,"column":1,"offset":24118},"end":{"line":1394,"column":9,"offset":24126}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>filterfalse<span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1396,"column":1,"offset":24128},"end":{"line":1402,"column":4,"offset":24268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"groupby","position":{"start":{"line":1404,"column":5,"offset":24274},"end":{"line":1404,"column":12,"offset":24281}}}],"position":{"start":{"line":1404,"column":1,"offset":24270},"end":{"line":1404,"column":12,"offset":24281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Simply put, this function groups things together.","position":{"start":{"line":1406,"column":1,"offset":24283},"end":{"line":1406,"column":50,"offset":24332}}}],"position":{"start":{"line":1406,"column":1,"offset":24283},"end":{"line":1406,"column":50,"offset":24332}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1408,"column":1,"offset":24334},"end":{"line":1410,"column":4,"offset":24385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1412,"column":1,"offset":24387},"end":{"line":1412,"column":9,"offset":24395}}}],"position":{"start":{"line":1412,"column":1,"offset":24387},"end":{"line":1412,"column":9,"offset":24395}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">robots <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'blaster'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'faction'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'autobot'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'galvatron'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'faction'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'decepticon'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'jazz'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'faction'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'autobot'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'metroplex'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'faction'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'autobot'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'megatron'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'faction'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'decepticon'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'starcream'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'faction'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'decepticon'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> group <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span>robots<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">'faction'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1414,"column":1,"offset":24397},"end":{"line":1438,"column":4,"offset":24861}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"islice","position":{"start":{"line":1440,"column":5,"offset":24867},"end":{"line":1440,"column":11,"offset":24873}}}],"position":{"start":{"line":1440,"column":1,"offset":24863},"end":{"line":1440,"column":11,"offset":24873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This function is very much like slices. This allows you to cut out a piece of an iterable.","position":{"start":{"line":1442,"column":1,"offset":24875},"end":{"line":1442,"column":91,"offset":24965}}}],"position":{"start":{"line":1442,"column":1,"offset":24875},"end":{"line":1442,"column":91,"offset":24965}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>islice<span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> stop<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1444,"column":1,"offset":24967},"end":{"line":1446,"column":4,"offset":25028}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1448,"column":1,"offset":25030},"end":{"line":1448,"column":9,"offset":25038}}}],"position":{"start":{"line":1448,"column":1,"offset":25030},"end":{"line":1448,"column":9,"offset":25038}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span>\nfew_colors <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>islice<span class=\"token punctuation\">(</span>colors<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> few_colors<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1450,"column":1,"offset":25040},"end":{"line":1456,"column":4,"offset":25189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"permutations","position":{"start":{"line":1458,"column":5,"offset":25195},"end":{"line":1458,"column":17,"offset":25207}}}],"position":{"start":{"line":1458,"column":1,"offset":25191},"end":{"line":1458,"column":17,"offset":25207}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>permutations<span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">,</span> r<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1460,"column":1,"offset":25209},"end":{"line":1462,"column":4,"offset":25263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1464,"column":1,"offset":25265},"end":{"line":1464,"column":9,"offset":25273}}}],"position":{"start":{"line":1464,"column":1,"offset":25265},"end":{"line":1464,"column":9,"offset":25273}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">alpha_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>permutations<span class=\"token punctuation\">(</span>alpha_data<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1466,"column":1,"offset":25275},"end":{"line":1472,"column":4,"offset":25397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"product","position":{"start":{"line":1474,"column":5,"offset":25403},"end":{"line":1474,"column":12,"offset":25410}}}],"position":{"start":{"line":1474,"column":1,"offset":25399},"end":{"line":1474,"column":12,"offset":25410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Creates the cartesian products from a series of iterables.","position":{"start":{"line":1476,"column":1,"offset":25412},"end":{"line":1476,"column":59,"offset":25470}}}],"position":{"start":{"line":1476,"column":1,"offset":25412},"end":{"line":1476,"column":59,"offset":25470}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">num_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nalpha_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span>num_data<span class=\"token punctuation\">,</span> alpha_data<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1478,"column":1,"offset":25472},"end":{"line":1485,"column":4,"offset":25621}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"repeat","position":{"start":{"line":1487,"column":5,"offset":25627},"end":{"line":1487,"column":11,"offset":25633}}}],"position":{"start":{"line":1487,"column":1,"offset":25623},"end":{"line":1487,"column":11,"offset":25633}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This function will repeat an object over and over again. Unless, there is a times argument.","position":{"start":{"line":1489,"column":1,"offset":25635},"end":{"line":1489,"column":92,"offset":25726}}}],"position":{"start":{"line":1489,"column":1,"offset":25635},"end":{"line":1489,"column":92,"offset":25726}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>repeat<span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> times<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1491,"column":1,"offset":25728},"end":{"line":1493,"column":4,"offset":25775}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1495,"column":1,"offset":25777},"end":{"line":1495,"column":9,"offset":25785}}}],"position":{"start":{"line":1495,"column":1,"offset":25777},"end":{"line":1495,"column":9,"offset":25785}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>repeat<span class=\"token punctuation\">(</span><span class=\"token string\">\"spam\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1497,"column":1,"offset":25787},"end":{"line":1500,"column":4,"offset":25851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"starmap","position":{"start":{"line":1502,"column":5,"offset":25857},"end":{"line":1502,"column":12,"offset":25864}}}],"position":{"start":{"line":1502,"column":1,"offset":25853},"end":{"line":1502,"column":12,"offset":25864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Makes an iterator that computes the function using arguments obtained from the iterable.","position":{"start":{"line":1504,"column":1,"offset":25866},"end":{"line":1504,"column":89,"offset":25954}}}],"position":{"start":{"line":1504,"column":1,"offset":25866},"end":{"line":1504,"column":89,"offset":25954}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>starmap<span class=\"token punctuation\">(</span>function<span class=\"token punctuation\">,</span> iterable<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1506,"column":1,"offset":25956},"end":{"line":1508,"column":4,"offset":26007}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1510,"column":1,"offset":26009},"end":{"line":1510,"column":9,"offset":26017}}}],"position":{"start":{"line":1510,"column":1,"offset":26009},"end":{"line":1510,"column":9,"offset":26017}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>starmap<span class=\"token punctuation\">(</span>operator<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1512,"column":1,"offset":26019},"end":{"line":1518,"column":4,"offset":26147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"takewhile","position":{"start":{"line":1520,"column":5,"offset":26153},"end":{"line":1520,"column":14,"offset":26162}}}],"position":{"start":{"line":1520,"column":1,"offset":26149},"end":{"line":1520,"column":14,"offset":26162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The opposite of dropwhile(). Makes an iterator and returns elements from the iterable as long as the predicate is true.","position":{"start":{"line":1522,"column":1,"offset":26164},"end":{"line":1522,"column":120,"offset":26283}}}],"position":{"start":{"line":1522,"column":1,"offset":26164},"end":{"line":1522,"column":120,"offset":26283}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>takewhile<span class=\"token punctuation\">(</span>predicate<span class=\"token punctuation\">,</span> iterable<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1524,"column":1,"offset":26285},"end":{"line":1526,"column":4,"offset":26339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1528,"column":1,"offset":26341},"end":{"line":1528,"column":9,"offset":26349}}}],"position":{"start":{"line":1528,"column":1,"offset":26341},"end":{"line":1528,"column":9,"offset":26349}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>takewhile<span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1530,"column":1,"offset":26351},"end":{"line":1536,"column":4,"offset":26492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"tee","position":{"start":{"line":1538,"column":5,"offset":26498},"end":{"line":1538,"column":8,"offset":26501}}}],"position":{"start":{"line":1538,"column":1,"offset":26494},"end":{"line":1538,"column":8,"offset":26501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Return n independent iterators from a single iterable.","position":{"start":{"line":1540,"column":1,"offset":26503},"end":{"line":1540,"column":55,"offset":26557}}}],"position":{"start":{"line":1540,"column":1,"offset":26503},"end":{"line":1540,"column":55,"offset":26557}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>tee<span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">,</span> n<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1542,"column":1,"offset":26559},"end":{"line":1544,"column":4,"offset":26601}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1546,"column":1,"offset":26603},"end":{"line":1546,"column":9,"offset":26611}}}],"position":{"start":{"line":1546,"column":1,"offset":26603},"end":{"line":1546,"column":9,"offset":26611}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">]</span>\nalpha_colors<span class=\"token punctuation\">,</span> beta_colors <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>tee<span class=\"token punctuation\">(</span>colors<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> alpha_colors<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1548,"column":1,"offset":26613},"end":{"line":1554,"column":4,"offset":26772}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">]</span>\nalpha_colors<span class=\"token punctuation\">,</span> beta_colors <span class=\"token operator\">=</span> itertools<span class=\"token punctuation\">.</span>tee<span class=\"token punctuation\">(</span>colors<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> beta_colors<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1556,"column":1,"offset":26774},"end":{"line":1562,"column":4,"offset":26932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"zip_longest","position":{"start":{"line":1564,"column":5,"offset":26938},"end":{"line":1564,"column":16,"offset":26949}}}],"position":{"start":{"line":1564,"column":1,"offset":26934},"end":{"line":1564,"column":16,"offset":26949}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Makes an iterator that aggregates elements from each of the iterables. If the iterables are of uneven length, missing values are filled-in with fillvalue. Iteration continues until the longest iterable is exhausted.","position":{"start":{"line":1566,"column":1,"offset":26951},"end":{"line":1566,"column":216,"offset":27166}}}],"position":{"start":{"line":1566,"column":1,"offset":26951},"end":{"line":1566,"column":216,"offset":27166}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">itertools<span class=\"token punctuation\">.</span>zip_longest<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>iterables<span class=\"token punctuation\">,</span> fillvalue<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1568,"column":1,"offset":27168},"end":{"line":1570,"column":4,"offset":27231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1572,"column":1,"offset":27233},"end":{"line":1572,"column":9,"offset":27241}}}],"position":{"start":{"line":1572,"column":1,"offset":27233},"end":{"line":1572,"column":9,"offset":27241}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>zip_longest<span class=\"token punctuation\">(</span>colors<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> fillvalue<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1574,"column":1,"offset":27243},"end":{"line":1580,"column":4,"offset":27432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Comprehensions","position":{"start":{"line":1582,"column":4,"offset":27437},"end":{"line":1582,"column":18,"offset":27451}}}],"position":{"start":{"line":1582,"column":1,"offset":27434},"end":{"line":1582,"column":18,"offset":27451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"List comprehension","position":{"start":{"line":1584,"column":5,"offset":27457},"end":{"line":1584,"column":23,"offset":27475}}}],"position":{"start":{"line":1584,"column":1,"offset":27453},"end":{"line":1584,"column":23,"offset":27475}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1586,"column":1,"offset":27477},"end":{"line":1589,"column":4,"offset":27533}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Set comprehension","position":{"start":{"line":1591,"column":5,"offset":27539},"end":{"line":1591,"column":22,"offset":27556}}}],"position":{"start":{"line":1591,"column":1,"offset":27535},"end":{"line":1591,"column":22,"offset":27556}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">b <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"def\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>s<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> b<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1593,"column":1,"offset":27558},"end":{"line":1596,"column":4,"offset":27613}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Dict comprehension","position":{"start":{"line":1598,"column":5,"offset":27619},"end":{"line":1598,"column":23,"offset":27637}}}],"position":{"start":{"line":1598,"column":1,"offset":27615},"end":{"line":1598,"column":23,"offset":27637}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">c <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>v<span class=\"token punctuation\">,</span> k <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> c<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":1600,"column":1,"offset":27639},"end":{"line":1603,"column":4,"offset":27713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A List comprehension can be generated from a dictionary:","position":{"start":{"line":1605,"column":1,"offset":27715},"end":{"line":1605,"column":57,"offset":27771}}}],"position":{"start":{"line":1605,"column":1,"offset":27715},"end":{"line":1605,"column":57,"offset":27771}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">c <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'first_name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Oooka'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">\"{}:{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> c<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1607,"column":1,"offset":27773},"end":{"line":1610,"column":4,"offset":27892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Manipulating Strings","position":{"start":{"line":1612,"column":4,"offset":27897},"end":{"line":1612,"column":24,"offset":27917}}}],"position":{"start":{"line":1612,"column":1,"offset":27894},"end":{"line":1612,"column":24,"offset":27917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Escape Characters","position":{"start":{"line":1614,"column":5,"offset":27923},"end":{"line":1614,"column":22,"offset":27940}}}],"position":{"start":{"line":1614,"column":1,"offset":27919},"end":{"line":1614,"column":22,"offset":27940}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Escape character","position":{"start":{"line":1616,"column":3,"offset":27944},"end":{"line":1616,"column":19,"offset":27960}}}],"position":{"start":{"line":1616,"column":3,"offset":27944},"end":{"line":1616,"column":19,"offset":27960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Prints as","position":{"start":{"line":1616,"column":22,"offset":27963},"end":{"line":1616,"column":31,"offset":27972}}}],"position":{"start":{"line":1616,"column":22,"offset":27963},"end":{"line":1616,"column":42,"offset":27983}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1616,"column":1,"offset":27942},"end":{"line":1616,"column":44,"offset":27985}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1616,"column":1,"offset":27942},"end":{"line":1616,"column":44,"offset":27985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">\\'</code>","position":{"start":{"line":1618,"column":3,"offset":28032},"end":{"line":1618,"column":7,"offset":28036}}}],"position":{"start":{"line":1618,"column":3,"offset":28032},"end":{"line":1618,"column":19,"offset":28048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Single quote","position":{"start":{"line":1618,"column":22,"offset":28051},"end":{"line":1618,"column":34,"offset":28063}}}],"position":{"start":{"line":1618,"column":22,"offset":28051},"end":{"line":1618,"column":42,"offset":28071}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1618,"column":1,"offset":28030},"end":{"line":1618,"column":44,"offset":28073}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">\\\"</code>","position":{"start":{"line":1619,"column":3,"offset":28076},"end":{"line":1619,"column":7,"offset":28080}}}],"position":{"start":{"line":1619,"column":3,"offset":28076},"end":{"line":1619,"column":19,"offset":28092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Double quote","position":{"start":{"line":1619,"column":22,"offset":28095},"end":{"line":1619,"column":34,"offset":28107}}}],"position":{"start":{"line":1619,"column":22,"offset":28095},"end":{"line":1619,"column":42,"offset":28115}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1619,"column":1,"offset":28074},"end":{"line":1619,"column":44,"offset":28117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">\\t</code>","position":{"start":{"line":1620,"column":3,"offset":28120},"end":{"line":1620,"column":7,"offset":28124}}}],"position":{"start":{"line":1620,"column":3,"offset":28120},"end":{"line":1620,"column":19,"offset":28136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Tab","position":{"start":{"line":1620,"column":22,"offset":28139},"end":{"line":1620,"column":25,"offset":28142}}}],"position":{"start":{"line":1620,"column":22,"offset":28139},"end":{"line":1620,"column":42,"offset":28159}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1620,"column":1,"offset":28118},"end":{"line":1620,"column":44,"offset":28161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">\\n</code>","position":{"start":{"line":1621,"column":3,"offset":28164},"end":{"line":1621,"column":7,"offset":28168}}}],"position":{"start":{"line":1621,"column":3,"offset":28164},"end":{"line":1621,"column":19,"offset":28180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Newline (line break)","position":{"start":{"line":1621,"column":22,"offset":28183},"end":{"line":1621,"column":42,"offset":28203}}}],"position":{"start":{"line":1621,"column":22,"offset":28183},"end":{"line":1621,"column":42,"offset":28203}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1621,"column":1,"offset":28162},"end":{"line":1621,"column":44,"offset":28205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">\\\\</code>","position":{"start":{"line":1622,"column":3,"offset":28208},"end":{"line":1622,"column":7,"offset":28212}}}],"position":{"start":{"line":1622,"column":3,"offset":28208},"end":{"line":1622,"column":19,"offset":28224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Backslash","position":{"start":{"line":1622,"column":22,"offset":28227},"end":{"line":1622,"column":31,"offset":28236}}}],"position":{"start":{"line":1622,"column":22,"offset":28227},"end":{"line":1622,"column":42,"offset":28247}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1622,"column":1,"offset":28206},"end":{"line":1622,"column":44,"offset":28249}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1618,"column":1,"offset":28030},"end":{"line":1622,"column":44,"offset":28249}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1616,"column":1,"offset":27942},"end":{"line":1622,"column":44,"offset":28249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1624,"column":1,"offset":28251},"end":{"line":1624,"column":9,"offset":28259}}}],"position":{"start":{"line":1624,"column":1,"offset":28251},"end":{"line":1624,"column":9,"offset":28259}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello there!\\nHow are you?\\nI\\'m doing fine.\"</span><span class=\"token punctuation\">)</span>\nHello there!\nHow are you?</code></pre></div>","position":{"start":{"line":1626,"column":1,"offset":28261},"end":{"line":1630,"column":4,"offset":28354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Raw Strings","position":{"start":{"line":1632,"column":5,"offset":28360},"end":{"line":1632,"column":16,"offset":28371}}}],"position":{"start":{"line":1632,"column":1,"offset":28356},"end":{"line":1632,"column":16,"offset":28371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A raw string completely ignores all escape characters and prints any backslash that appears in the string.","position":{"start":{"line":1634,"column":1,"offset":28373},"end":{"line":1634,"column":107,"offset":28479}}}],"position":{"start":{"line":1634,"column":1,"offset":28373},"end":{"line":1634,"column":107,"offset":28479}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'That is Carol\\'s cat.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1636,"column":1,"offset":28481},"end":{"line":1638,"column":4,"offset":28526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: mostly used for regular expression definition (see ","position":{"start":{"line":1640,"column":1,"offset":28528},"end":{"line":1640,"column":58,"offset":28585}}},{"type":"raw","value":"<code class=\"language-text\">re</code>","position":{"start":{"line":1640,"column":58,"offset":28585},"end":{"line":1640,"column":62,"offset":28589}}},{"type":"text","value":" package)","position":{"start":{"line":1640,"column":62,"offset":28589},"end":{"line":1640,"column":71,"offset":28598}}}],"position":{"start":{"line":1640,"column":1,"offset":28528},"end":{"line":1640,"column":71,"offset":28598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Multiline Strings with Triple Quotes","position":{"start":{"line":1642,"column":5,"offset":28604},"end":{"line":1642,"column":41,"offset":28640}}}],"position":{"start":{"line":1642,"column":1,"offset":28600},"end":{"line":1642,"column":41,"offset":28640}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''Dear Alice,\n\nEve's cat has been arrested for catnapping, cat burglary, and extortion.\n\nSincerely,\nBob'''</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1644,"column":1,"offset":28642},"end":{"line":1651,"column":4,"offset":28770}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To keep a nicer flow in your code, you can use the ","position":{"start":{"line":1653,"column":1,"offset":28772},"end":{"line":1653,"column":52,"offset":28823}}},{"type":"raw","value":"<code class=\"language-text\">dedent</code>","position":{"start":{"line":1653,"column":52,"offset":28823},"end":{"line":1653,"column":60,"offset":28831}}},{"type":"text","value":" function from the ","position":{"start":{"line":1653,"column":60,"offset":28831},"end":{"line":1653,"column":79,"offset":28850}}},{"type":"raw","value":"<code class=\"language-text\">textwrap</code>","position":{"start":{"line":1653,"column":79,"offset":28850},"end":{"line":1653,"column":89,"offset":28860}}},{"type":"text","value":" standard package.","position":{"start":{"line":1653,"column":89,"offset":28860},"end":{"line":1653,"column":107,"offset":28878}}}],"position":{"start":{"line":1653,"column":1,"offset":28772},"end":{"line":1653,"column":107,"offset":28878}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> textwrap <span class=\"token keyword\">import</span> dedent\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">my_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\n        Dear Alice,\n\n        Eve's cat has been arrested for catnapping, cat burglary, and extortion.\n\n        Sincerely,\n        Bob\n        '''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1655,"column":1,"offset":28880},"end":{"line":1667,"column":4,"offset":29110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This generates the same string than before.","position":{"start":{"line":1669,"column":1,"offset":29112},"end":{"line":1669,"column":44,"offset":29155}}}],"position":{"start":{"line":1669,"column":1,"offset":29112},"end":{"line":1669,"column":44,"offset":29155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Indexing and Slicing Strings","position":{"start":{"line":1671,"column":5,"offset":29161},"end":{"line":1671,"column":33,"offset":29189}}}],"position":{"start":{"line":1671,"column":1,"offset":29157},"end":{"line":1671,"column":33,"offset":29189}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">H   e   l   l   o       w   o   r   l   d    !\n0   1   2   3   4   5   6   7   8   9   10   11</code></pre></div>","position":{"start":{"line":1673,"column":1,"offset":29191},"end":{"line":1674,"column":52,"offset":29293}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token string\">'Hello world!'</span>\nspam<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1676,"column":1,"offset":29295},"end":{"line":1679,"column":4,"offset":29338}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1681,"column":1,"offset":29340},"end":{"line":1683,"column":4,"offset":29361}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1685,"column":1,"offset":29363},"end":{"line":1687,"column":4,"offset":29385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Slicing:","position":{"start":{"line":1689,"column":1,"offset":29387},"end":{"line":1689,"column":9,"offset":29395}}}],"position":{"start":{"line":1689,"column":1,"offset":29387},"end":{"line":1689,"column":9,"offset":29395}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1691,"column":1,"offset":29397},"end":{"line":1694,"column":4,"offset":29421}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1696,"column":1,"offset":29423},"end":{"line":1698,"column":4,"offset":29445}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1700,"column":1,"offset":29447},"end":{"line":1702,"column":4,"offset":29469}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1704,"column":1,"offset":29471},"end":{"line":1706,"column":4,"offset":29495}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1708,"column":1,"offset":29497},"end":{"line":1710,"column":4,"offset":29520}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":1712,"column":1,"offset":29522},"end":{"line":1714,"column":4,"offset":29546}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token string\">'Hello world!'</span>\nfizz <span class=\"token operator\">=</span> spam<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nfizz</code></pre></div>","position":{"start":{"line":1716,"column":1,"offset":29548},"end":{"line":1720,"column":4,"offset":29605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The in and not in Operators with Strings","position":{"start":{"line":1722,"column":5,"offset":29611},"end":{"line":1722,"column":45,"offset":29651}}}],"position":{"start":{"line":1722,"column":1,"offset":29607},"end":{"line":1722,"column":45,"offset":29651}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'Hello World'</span></code></pre></div>","position":{"start":{"line":1724,"column":1,"offset":29653},"end":{"line":1726,"column":4,"offset":29691}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'Hello'</span></code></pre></div>","position":{"start":{"line":1728,"column":1,"offset":29693},"end":{"line":1730,"column":4,"offset":29725}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'HELLO'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'Hello World'</span></code></pre></div>","position":{"start":{"line":1732,"column":1,"offset":29727},"end":{"line":1734,"column":4,"offset":29765}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">''</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'spam'</span></code></pre></div>","position":{"start":{"line":1736,"column":1,"offset":29767},"end":{"line":1738,"column":4,"offset":29793}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'cats'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'cats and dogs'</span></code></pre></div>","position":{"start":{"line":1740,"column":1,"offset":29795},"end":{"line":1742,"column":4,"offset":29838}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The in and not in Operators with list","position":{"start":{"line":1744,"column":5,"offset":29844},"end":{"line":1744,"column":42,"offset":29881}}}],"position":{"start":{"line":1744,"column":1,"offset":29840},"end":{"line":1744,"column":42,"offset":29881}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token number\">5</span> <span class=\"token keyword\">in</span> a</code></pre></div>","position":{"start":{"line":1746,"column":1,"offset":29883},"end":{"line":1749,"column":4,"offset":29920}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">2</span> <span class=\"token keyword\">in</span> a</code></pre></div>","position":{"start":{"line":1751,"column":1,"offset":29922},"end":{"line":1753,"column":4,"offset":29942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The upper, lower, isupper, and islower String Methods","position":{"start":{"line":1755,"column":5,"offset":29948},"end":{"line":1755,"column":58,"offset":30001}}}],"position":{"start":{"line":1755,"column":1,"offset":29944},"end":{"line":1755,"column":58,"offset":30001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">upper()</code>","position":{"start":{"line":1757,"column":1,"offset":30003},"end":{"line":1757,"column":10,"offset":30012}}},{"type":"text","value":" and ","position":{"start":{"line":1757,"column":10,"offset":30012},"end":{"line":1757,"column":15,"offset":30017}}},{"type":"raw","value":"<code class=\"language-text\">lower()</code>","position":{"start":{"line":1757,"column":15,"offset":30017},"end":{"line":1757,"column":24,"offset":30026}}},{"type":"text","value":":","position":{"start":{"line":1757,"column":24,"offset":30026},"end":{"line":1757,"column":25,"offset":30027}}}],"position":{"start":{"line":1757,"column":1,"offset":30003},"end":{"line":1757,"column":25,"offset":30027}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token string\">'Hello world!'</span>\nspam <span class=\"token operator\">=</span> spam<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nspam</code></pre></div>","position":{"start":{"line":1759,"column":1,"offset":30029},"end":{"line":1763,"column":4,"offset":30089}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> spam<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nspam</code></pre></div>","position":{"start":{"line":1765,"column":1,"offset":30091},"end":{"line":1768,"column":4,"offset":30129}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"isupper() and islower():","position":{"start":{"line":1770,"column":1,"offset":30131},"end":{"line":1770,"column":25,"offset":30155}}}],"position":{"start":{"line":1770,"column":1,"offset":30131},"end":{"line":1770,"column":25,"offset":30155}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token string\">'Hello world!'</span>\nspam<span class=\"token punctuation\">.</span>islower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1772,"column":1,"offset":30157},"end":{"line":1775,"column":4,"offset":30207}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">.</span>isupper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1777,"column":1,"offset":30209},"end":{"line":1779,"column":4,"offset":30237}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'HELLO'</span><span class=\"token punctuation\">.</span>isupper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1781,"column":1,"offset":30239},"end":{"line":1783,"column":4,"offset":30270}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'abc12345'</span><span class=\"token punctuation\">.</span>islower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1785,"column":1,"offset":30272},"end":{"line":1787,"column":4,"offset":30306}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'12345'</span><span class=\"token punctuation\">.</span>islower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1789,"column":1,"offset":30308},"end":{"line":1791,"column":4,"offset":30339}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'12345'</span><span class=\"token punctuation\">.</span>isupper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1793,"column":1,"offset":30341},"end":{"line":1795,"column":4,"offset":30372}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The isX String Methods","position":{"start":{"line":1797,"column":5,"offset":30378},"end":{"line":1797,"column":27,"offset":30400}}}],"position":{"start":{"line":1797,"column":1,"offset":30374},"end":{"line":1797,"column":27,"offset":30400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"isalpha()","position":{"start":{"line":1799,"column":7,"offset":30408},"end":{"line":1799,"column":16,"offset":30417}}}],"position":{"start":{"line":1799,"column":5,"offset":30406},"end":{"line":1799,"column":18,"offset":30419}}},{"type":"text","value":" returns True if the string consists only of letters and is not blank.","position":{"start":{"line":1799,"column":18,"offset":30419},"end":{"line":1799,"column":88,"offset":30489}}}],"position":{"start":{"line":1799,"column":1,"offset":30402},"end":{"line":1799,"column":88,"offset":30489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"isalnum()","position":{"start":{"line":1800,"column":7,"offset":30496},"end":{"line":1800,"column":16,"offset":30505}}}],"position":{"start":{"line":1800,"column":5,"offset":30494},"end":{"line":1800,"column":18,"offset":30507}}},{"type":"text","value":" returns True if the string consists only of lettersand numbers and is not blank.","position":{"start":{"line":1800,"column":18,"offset":30507},"end":{"line":1800,"column":99,"offset":30588}}}],"position":{"start":{"line":1800,"column":1,"offset":30490},"end":{"line":1800,"column":99,"offset":30588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"isdecimal()","position":{"start":{"line":1801,"column":7,"offset":30595},"end":{"line":1801,"column":18,"offset":30606}}}],"position":{"start":{"line":1801,"column":5,"offset":30593},"end":{"line":1801,"column":20,"offset":30608}}},{"type":"text","value":" returns True if the string consists only ofnumeric characters and is not blank.","position":{"start":{"line":1801,"column":20,"offset":30608},"end":{"line":1801,"column":100,"offset":30688}}}],"position":{"start":{"line":1801,"column":1,"offset":30589},"end":{"line":1801,"column":100,"offset":30688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"isspace()","position":{"start":{"line":1802,"column":7,"offset":30695},"end":{"line":1802,"column":16,"offset":30704}}}],"position":{"start":{"line":1802,"column":5,"offset":30693},"end":{"line":1802,"column":18,"offset":30706}}},{"type":"text","value":" returns True if the string consists only of spaces,tabs, and new-lines and is not blank.","position":{"start":{"line":1802,"column":18,"offset":30706},"end":{"line":1802,"column":107,"offset":30795}}}],"position":{"start":{"line":1802,"column":1,"offset":30689},"end":{"line":1802,"column":107,"offset":30795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"istitle()","position":{"start":{"line":1803,"column":7,"offset":30802},"end":{"line":1803,"column":16,"offset":30811}}}],"position":{"start":{"line":1803,"column":5,"offset":30800},"end":{"line":1803,"column":18,"offset":30813}}},{"type":"text","value":" returns True if the string consists only of wordsthat begin with an uppercase letter followed by onlylowercase letters.","position":{"start":{"line":1803,"column":18,"offset":30813},"end":{"line":1803,"column":138,"offset":30933}}}],"position":{"start":{"line":1803,"column":1,"offset":30796},"end":{"line":1803,"column":138,"offset":30933}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1799,"column":1,"offset":30402},"end":{"line":1803,"column":138,"offset":30933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The startswith and endswith String Methods","position":{"start":{"line":1805,"column":5,"offset":30939},"end":{"line":1805,"column":47,"offset":30981}}}],"position":{"start":{"line":1805,"column":1,"offset":30935},"end":{"line":1805,"column":47,"offset":30981}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1807,"column":1,"offset":30983},"end":{"line":1809,"column":4,"offset":31031}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'world!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1811,"column":1,"offset":31033},"end":{"line":1813,"column":4,"offset":31080}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'abc123'</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'abcdef'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1815,"column":1,"offset":31082},"end":{"line":1817,"column":4,"offset":31125}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'abc123'</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1819,"column":1,"offset":31127},"end":{"line":1821,"column":4,"offset":31164}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1823,"column":1,"offset":31166},"end":{"line":1825,"column":4,"offset":31221}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1827,"column":1,"offset":31223},"end":{"line":1829,"column":4,"offset":31276}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The join and split String Methods","position":{"start":{"line":1831,"column":5,"offset":31282},"end":{"line":1831,"column":38,"offset":31315}}}],"position":{"start":{"line":1831,"column":1,"offset":31278},"end":{"line":1831,"column":38,"offset":31315}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"join():","position":{"start":{"line":1833,"column":1,"offset":31317},"end":{"line":1833,"column":8,"offset":31324}}}],"position":{"start":{"line":1833,"column":1,"offset":31317},"end":{"line":1833,"column":8,"offset":31324}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">', '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'cats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bats'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1835,"column":1,"offset":31326},"end":{"line":1837,"column":4,"offset":31375}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'My'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'is'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Simon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1839,"column":1,"offset":31377},"end":{"line":1841,"column":4,"offset":31430}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'ABC'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'My'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'is'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Simon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1843,"column":1,"offset":31432},"end":{"line":1845,"column":4,"offset":31487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"split():","position":{"start":{"line":1847,"column":1,"offset":31489},"end":{"line":1847,"column":9,"offset":31497}}}],"position":{"start":{"line":1847,"column":1,"offset":31489},"end":{"line":1847,"column":9,"offset":31497}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'My name is Simon'</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1849,"column":1,"offset":31499},"end":{"line":1851,"column":4,"offset":31539}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'MyABCnameABCisABCSimon'</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'ABC'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1853,"column":1,"offset":31541},"end":{"line":1855,"column":4,"offset":31592}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'My name is Simon'</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1857,"column":1,"offset":31594},"end":{"line":1859,"column":4,"offset":31637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Justifying Text with rjust, ljust, and center","position":{"start":{"line":1861,"column":5,"offset":31643},"end":{"line":1861,"column":50,"offset":31688}}}],"position":{"start":{"line":1861,"column":1,"offset":31639},"end":{"line":1861,"column":50,"offset":31688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"rjust() and ljust():","position":{"start":{"line":1863,"column":1,"offset":31690},"end":{"line":1863,"column":21,"offset":31710}}}],"position":{"start":{"line":1863,"column":1,"offset":31690},"end":{"line":1863,"column":21,"offset":31710}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1865,"column":1,"offset":31712},"end":{"line":1867,"column":4,"offset":31743}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1869,"column":1,"offset":31745},"end":{"line":1871,"column":4,"offset":31776}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1873,"column":1,"offset":31778},"end":{"line":1875,"column":4,"offset":31815}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1877,"column":1,"offset":31817},"end":{"line":1879,"column":4,"offset":31848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An optional second argument to rjust() and ljust() will specify a fill character other than a space character. Enter the following into the interactive shell:","position":{"start":{"line":1881,"column":1,"offset":31850},"end":{"line":1881,"column":159,"offset":32008}}}],"position":{"start":{"line":1881,"column":1,"offset":31850},"end":{"line":1881,"column":159,"offset":32008}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1883,"column":1,"offset":32010},"end":{"line":1885,"column":4,"offset":32046}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1887,"column":1,"offset":32048},"end":{"line":1889,"column":4,"offset":32084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"center():","position":{"start":{"line":1891,"column":1,"offset":32086},"end":{"line":1891,"column":10,"offset":32095}}}],"position":{"start":{"line":1891,"column":1,"offset":32086},"end":{"line":1891,"column":10,"offset":32095}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1893,"column":1,"offset":32097},"end":{"line":1895,"column":4,"offset":32129}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'='</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1897,"column":1,"offset":32131},"end":{"line":1899,"column":4,"offset":32168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Removing Whitespace with strip, rstrip, and lstrip","position":{"start":{"line":1901,"column":5,"offset":32174},"end":{"line":1901,"column":55,"offset":32224}}}],"position":{"start":{"line":1901,"column":1,"offset":32170},"end":{"line":1901,"column":55,"offset":32224}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token string\">'    Hello World     '</span>\nspam<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1903,"column":1,"offset":32226},"end":{"line":1906,"column":4,"offset":32282}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1908,"column":1,"offset":32284},"end":{"line":1910,"column":4,"offset":32311}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam<span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1912,"column":1,"offset":32313},"end":{"line":1914,"column":4,"offset":32340}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token string\">'SpamSpamBaconSpamEggsSpamSpam'</span>\nspam<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'ampS'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1916,"column":1,"offset":32342},"end":{"line":1919,"column":4,"offset":32413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Copying and Pasting Strings with the pyperclip Module","position":{"start":{"line":1921,"column":5,"offset":32419},"end":{"line":1921,"column":58,"offset":32472}}}],"position":{"start":{"line":1921,"column":1,"offset":32415},"end":{"line":1921,"column":58,"offset":32472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First, install ","position":{"start":{"line":1923,"column":1,"offset":32474},"end":{"line":1923,"column":16,"offset":32489}}},{"type":"raw","value":"<code class=\"language-text\">pypeerclip</code>","position":{"start":{"line":1923,"column":16,"offset":32489},"end":{"line":1923,"column":28,"offset":32501}}},{"type":"text","value":" with pip:","position":{"start":{"line":1923,"column":28,"offset":32501},"end":{"line":1923,"column":38,"offset":32511}}}],"position":{"start":{"line":1923,"column":1,"offset":32474},"end":{"line":1923,"column":38,"offset":32511}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">```bashl pyperclip</code></pre></div>","position":{"start":{"line":1925,"column":1,"offset":32513},"end":{"line":1927,"column":4,"offset":32546}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pyperclip\n\npyperclip<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">)</span>\npyperclip<span class=\"token punctuation\">.</span>paste<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1929,"column":1,"offset":32548},"end":{"line":1934,"column":4,"offset":32628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"String Formatting","position":{"start":{"line":1936,"column":4,"offset":32633},"end":{"line":1936,"column":21,"offset":32650}}}],"position":{"start":{"line":1936,"column":1,"offset":32630},"end":{"line":1936,"column":21,"offset":32650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"% operator","position":{"start":{"line":1938,"column":5,"offset":32656},"end":{"line":1938,"column":15,"offset":32666}}}],"position":{"start":{"line":1938,"column":1,"offset":32652},"end":{"line":1938,"column":15,"offset":32666}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">'Pete'</span>\n<span class=\"token string\">'Hello %s'</span> <span class=\"token operator\">%</span> name</code></pre></div>","position":{"start":{"line":1940,"column":1,"offset":32668},"end":{"line":1943,"column":4,"offset":32713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can use the ","position":{"start":{"line":1945,"column":1,"offset":32715},"end":{"line":1945,"column":16,"offset":32730}}},{"type":"raw","value":"<code class=\"language-text\">%x</code>","position":{"start":{"line":1945,"column":16,"offset":32730},"end":{"line":1945,"column":20,"offset":32734}}},{"type":"text","value":" format specifier to convert an int value to a string:","position":{"start":{"line":1945,"column":20,"offset":32734},"end":{"line":1945,"column":74,"offset":32788}}}],"position":{"start":{"line":1945,"column":1,"offset":32715},"end":{"line":1945,"column":74,"offset":32788}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">num <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token string\">'I have %x apples'</span> <span class=\"token operator\">%</span> num</code></pre></div>","position":{"start":{"line":1947,"column":1,"offset":32790},"end":{"line":1950,"column":4,"offset":32836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: For new code, using str.format or f-strings is strongly recommended over the ","position":{"start":{"line":1952,"column":1,"offset":32838},"end":{"line":1952,"column":84,"offset":32921}}},{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":1952,"column":84,"offset":32921},"end":{"line":1952,"column":87,"offset":32924}}},{"type":"text","value":" operator.","position":{"start":{"line":1952,"column":87,"offset":32924},"end":{"line":1952,"column":97,"offset":32934}}}],"position":{"start":{"line":1952,"column":1,"offset":32838},"end":{"line":1952,"column":97,"offset":32934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"str.format","position":{"start":{"line":1954,"column":5,"offset":32940},"end":{"line":1954,"column":15,"offset":32950}}}],"position":{"start":{"line":1954,"column":1,"offset":32936},"end":{"line":1954,"column":15,"offset":32950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python 3 introduced a new way to do string formatting that was later back-ported to Python 2.7. This makes the syntax for string formatting more regular.","position":{"start":{"line":1956,"column":1,"offset":32952},"end":{"line":1956,"column":154,"offset":33105}}}],"position":{"start":{"line":1956,"column":1,"offset":32952},"end":{"line":1956,"column":154,"offset":33105}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">'John'</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">20</span>'\n\n<span class=\"token string\">\"Hello I'm {}, my age is {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1958,"column":1,"offset":33107},"end":{"line":1963,"column":4,"offset":33192}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">\"Hello I'm {0}, my age is {1}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1965,"column":1,"offset":33194},"end":{"line":1967,"column":4,"offset":33256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The official ","position":{"start":{"line":1969,"column":1,"offset":33258},"end":{"line":1969,"column":14,"offset":33271}}},{"type":"element","tagName":"a","properties":{"href":"https://docs.python.org/3/library/stdtypes.html?highlight=sprintf#printf-style-string-formatting"},"children":[{"type":"text","value":"Python 3.x documentation","position":{"start":{"line":1969,"column":15,"offset":33272},"end":{"line":1969,"column":39,"offset":33296}}}],"position":{"start":{"line":1969,"column":14,"offset":33271},"end":{"line":1969,"column":138,"offset":33395}}},{"type":"text","value":" recommend ","position":{"start":{"line":1969,"column":138,"offset":33395},"end":{"line":1969,"column":149,"offset":33406}}},{"type":"raw","value":"<code class=\"language-text\">str.format</code>","position":{"start":{"line":1969,"column":149,"offset":33406},"end":{"line":1969,"column":161,"offset":33418}}},{"type":"text","value":" over the ","position":{"start":{"line":1969,"column":161,"offset":33418},"end":{"line":1969,"column":171,"offset":33428}}},{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":1969,"column":171,"offset":33428},"end":{"line":1969,"column":174,"offset":33431}}},{"type":"text","value":" operator:","position":{"start":{"line":1969,"column":174,"offset":33431},"end":{"line":1969,"column":184,"offset":33441}}}],"position":{"start":{"line":1969,"column":1,"offset":33258},"end":{"line":1969,"column":184,"offset":33441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The formatting operations described here exhibit a variety of quirks that lead to a number of common errors (such as failing to display tuples and dictionaries correctly). Using the newer formatted string literals or the str.format() interface helps avoid these errors. These alternatives also provide more powerful, flexible and extensible approaches to formatting text.","position":{"start":{"line":1971,"column":3,"offset":33445},"end":{"line":1971,"column":374,"offset":33816}}}],"position":{"start":{"line":1971,"column":3,"offset":33445},"end":{"line":1971,"column":374,"offset":33816}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1971,"column":1,"offset":33443},"end":{"line":1971,"column":374,"offset":33816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Lazy string formatting","position":{"start":{"line":1973,"column":5,"offset":33822},"end":{"line":1973,"column":27,"offset":33844}}}],"position":{"start":{"line":1973,"column":1,"offset":33818},"end":{"line":1973,"column":27,"offset":33844}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You would only use ","position":{"start":{"line":1975,"column":1,"offset":33846},"end":{"line":1975,"column":20,"offset":33865}}},{"type":"raw","value":"<code class=\"language-text\">%s</code>","position":{"start":{"line":1975,"column":20,"offset":33865},"end":{"line":1975,"column":24,"offset":33869}}},{"type":"text","value":" string formatting on functions that can do lazy parameters evaluation,\nthe most common being logging:","position":{"start":{"line":1975,"column":24,"offset":33869},"end":{"line":1976,"column":31,"offset":33971}}}],"position":{"start":{"line":1975,"column":1,"offset":33846},"end":{"line":1976,"column":31,"offset":33971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Prefer:","position":{"start":{"line":1978,"column":1,"offset":33973},"end":{"line":1978,"column":8,"offset":33980}}}],"position":{"start":{"line":1978,"column":1,"offset":33973},"end":{"line":1978,"column":8,"offset":33980}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">\"alice\"</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"User name: %s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1980,"column":1,"offset":33982},"end":{"line":1983,"column":4,"offset":34047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Over:","position":{"start":{"line":1985,"column":1,"offset":34049},"end":{"line":1985,"column":6,"offset":34054}}}],"position":{"start":{"line":1985,"column":1,"offset":34049},"end":{"line":1985,"column":6,"offset":34054}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">logging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"User name: {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1987,"column":1,"offset":34056},"end":{"line":1989,"column":4,"offset":34113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Or:","position":{"start":{"line":1991,"column":1,"offset":34115},"end":{"line":1991,"column":4,"offset":34118}}}],"position":{"start":{"line":1991,"column":1,"offset":34115},"end":{"line":1991,"column":4,"offset":34118}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">logging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"User name: \"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1993,"column":1,"offset":34120},"end":{"line":1995,"column":4,"offset":34169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Formatted String Literals or f-strings","position":{"start":{"line":1997,"column":5,"offset":34175},"end":{"line":1997,"column":43,"offset":34213}}}],"position":{"start":{"line":1997,"column":1,"offset":34171},"end":{"line":1997,"column":43,"offset":34213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python 3.6+","position":{"start":{"line":1999,"column":1,"offset":34215},"end":{"line":1999,"column":12,"offset":34226}}}],"position":{"start":{"line":1999,"column":1,"offset":34215},"end":{"line":1999,"column":12,"offset":34226}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">'Elizabeth'</span>\n<span class=\"token string-interpolation\"><span class=\"token string\">f'Hello </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">!'</span></span></code></pre></div>","position":{"start":{"line":2001,"column":1,"offset":34228},"end":{"line":2004,"column":4,"offset":34277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is even possible to do inline arithmetic with it:","position":{"start":{"line":2006,"column":1,"offset":34279},"end":{"line":2006,"column":53,"offset":34331}}}],"position":{"start":{"line":2006,"column":1,"offset":34279},"end":{"line":2006,"column":53,"offset":34331}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token string-interpolation\"><span class=\"token string\">f'Five plus ten is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">}</span></span><span class=\"token string\"> and not </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">.'</span></span></code></pre></div>","position":{"start":{"line":2008,"column":1,"offset":34333},"end":{"line":2012,"column":4,"offset":34410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Template Strings","position":{"start":{"line":2014,"column":5,"offset":34416},"end":{"line":2014,"column":21,"offset":34432}}}],"position":{"start":{"line":2014,"column":1,"offset":34412},"end":{"line":2014,"column":21,"offset":34432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A simpler and less powerful mechanism, but it is recommended when handling format strings generated by users. Due to their reduced complexity template strings are a safer choice.","position":{"start":{"line":2016,"column":1,"offset":34434},"end":{"line":2016,"column":179,"offset":34612}}}],"position":{"start":{"line":2016,"column":1,"offset":34434},"end":{"line":2016,"column":179,"offset":34612}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> string <span class=\"token keyword\">import</span> Template\n\nname <span class=\"token operator\">=</span> <span class=\"token string\">'Elizabeth'</span>\nt <span class=\"token operator\">=</span> Template<span class=\"token punctuation\">(</span><span class=\"token string\">'Hey $name!'</span><span class=\"token punctuation\">)</span>\nt<span class=\"token punctuation\">.</span>substitute<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2018,"column":1,"offset":34614},"end":{"line":2024,"column":4,"offset":34726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Regular Expressions","position":{"start":{"line":2026,"column":4,"offset":34731},"end":{"line":2026,"column":23,"offset":34750}}}],"position":{"start":{"line":2026,"column":1,"offset":34728},"end":{"line":2026,"column":23,"offset":34750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Import the regex module with ","position":{"start":{"line":2028,"column":4,"offset":34755},"end":{"line":2028,"column":33,"offset":34784}}},{"type":"raw","value":"<code class=\"language-text\">import re</code>","position":{"start":{"line":2028,"column":33,"offset":34784},"end":{"line":2028,"column":44,"offset":34795}}},{"type":"text","value":".","position":{"start":{"line":2028,"column":44,"offset":34795},"end":{"line":2028,"column":45,"offset":34796}}}],"position":{"start":{"line":2028,"column":1,"offset":34752},"end":{"line":2028,"column":45,"offset":34796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Create a Regex object with the ","position":{"start":{"line":2029,"column":4,"offset":34800},"end":{"line":2029,"column":35,"offset":34831}}},{"type":"raw","value":"<code class=\"language-text\">re.compile()</code>","position":{"start":{"line":2029,"column":35,"offset":34831},"end":{"line":2029,"column":49,"offset":34845}}},{"type":"text","value":" function. (Remember to use a raw string.)","position":{"start":{"line":2029,"column":49,"offset":34845},"end":{"line":2029,"column":91,"offset":34887}}}],"position":{"start":{"line":2029,"column":1,"offset":34797},"end":{"line":2029,"column":91,"offset":34887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Pass the string you want to search into the Regex object's ","position":{"start":{"line":2030,"column":4,"offset":34891},"end":{"line":2030,"column":63,"offset":34950}}},{"type":"raw","value":"<code class=\"language-text\">search()</code>","position":{"start":{"line":2030,"column":63,"offset":34950},"end":{"line":2030,"column":73,"offset":34960}}},{"type":"text","value":" method. This returns a ","position":{"start":{"line":2030,"column":73,"offset":34960},"end":{"line":2030,"column":97,"offset":34984}}},{"type":"raw","value":"<code class=\"language-text\">Match</code>","position":{"start":{"line":2030,"column":97,"offset":34984},"end":{"line":2030,"column":104,"offset":34991}}},{"type":"text","value":" object.","position":{"start":{"line":2030,"column":104,"offset":34991},"end":{"line":2030,"column":112,"offset":34999}}}],"position":{"start":{"line":2030,"column":1,"offset":34888},"end":{"line":2030,"column":112,"offset":34999}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Call the Match object's ","position":{"start":{"line":2031,"column":4,"offset":35003},"end":{"line":2031,"column":28,"offset":35027}}},{"type":"raw","value":"<code class=\"language-text\">group()</code>","position":{"start":{"line":2031,"column":28,"offset":35027},"end":{"line":2031,"column":37,"offset":35036}}},{"type":"text","value":" method to return a string of the actual matched text.","position":{"start":{"line":2031,"column":37,"offset":35036},"end":{"line":2031,"column":91,"offset":35090}}}],"position":{"start":{"line":2031,"column":1,"offset":35000},"end":{"line":2031,"column":91,"offset":35090}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2028,"column":1,"offset":34752},"end":{"line":2031,"column":91,"offset":35090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All the regex functions in Python are in the re module:","position":{"start":{"line":2033,"column":1,"offset":35092},"end":{"line":2033,"column":56,"offset":35147}}}],"position":{"start":{"line":2033,"column":1,"offset":35092},"end":{"line":2033,"column":56,"offset":35147}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re</code></pre></div>","position":{"start":{"line":2035,"column":1,"offset":35149},"end":{"line":2037,"column":4,"offset":35172}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Matching Regex Objects","position":{"start":{"line":2039,"column":5,"offset":35178},"end":{"line":2039,"column":27,"offset":35200}}}],"position":{"start":{"line":2039,"column":1,"offset":35174},"end":{"line":2039,"column":27,"offset":35200}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">phone_num_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d'</span><span class=\"token punctuation\">)</span>\nmo <span class=\"token operator\">=</span> phone_num_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'My number is 415-555-4242.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Phone number found: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>mo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2041,"column":1,"offset":35202},"end":{"line":2045,"column":4,"offset":35380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Grouping with Parentheses","position":{"start":{"line":2047,"column":5,"offset":35386},"end":{"line":2047,"column":30,"offset":35411}}}],"position":{"start":{"line":2047,"column":1,"offset":35382},"end":{"line":2047,"column":30,"offset":35411}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">phone_num_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(\\d\\d\\d)-(\\d\\d\\d-\\d\\d\\d\\d)'</span><span class=\"token punctuation\">)</span>\nmo <span class=\"token operator\">=</span> phone_num_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'My number is 415-555-4242.'</span><span class=\"token punctuation\">)</span>\nmo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2049,"column":1,"offset":35413},"end":{"line":2053,"column":4,"offset":35556}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2055,"column":1,"offset":35558},"end":{"line":2057,"column":4,"offset":35583}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2059,"column":1,"offset":35585},"end":{"line":2061,"column":4,"offset":35610}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2063,"column":1,"offset":35612},"end":{"line":2065,"column":4,"offset":35636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To retrieve all the groups at once: use the groups() method—note the plural form for the name.","position":{"start":{"line":2067,"column":1,"offset":35638},"end":{"line":2067,"column":95,"offset":35732}}}],"position":{"start":{"line":2067,"column":1,"offset":35638},"end":{"line":2067,"column":95,"offset":35732}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo<span class=\"token punctuation\">.</span>groups<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\narea_code<span class=\"token punctuation\">,</span> main_number <span class=\"token operator\">=</span> mo<span class=\"token punctuation\">.</span>groups<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2069,"column":1,"offset":35734},"end":{"line":2072,"column":4,"offset":35796}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>area_code<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2074,"column":1,"offset":35798},"end":{"line":2076,"column":4,"offset":35828}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>main_number<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2078,"column":1,"offset":35830},"end":{"line":2080,"column":4,"offset":35862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Matching Multiple Groups with the Pipe","position":{"start":{"line":2082,"column":5,"offset":35868},"end":{"line":2082,"column":43,"offset":35906}}}],"position":{"start":{"line":2082,"column":1,"offset":35864},"end":{"line":2082,"column":43,"offset":35906}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The | character is called a pipe. You can use it anywhere you want to match one of many expressions. For example, the regular expression r'Batman|Tina Fey' will match either 'Batman' or 'Tina Fey'.","position":{"start":{"line":2084,"column":1,"offset":35908},"end":{"line":2084,"column":198,"offset":36105}}}],"position":{"start":{"line":2084,"column":1,"offset":35908},"end":{"line":2084,"column":198,"offset":36105}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">hero_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span> <span class=\"token punctuation\">(</span><span class=\"token string\">r'Batman|Tina Fey'</span><span class=\"token punctuation\">)</span>\nmo1 <span class=\"token operator\">=</span> hero_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'Batman and Tina Fey.'</span><span class=\"token punctuation\">)</span>\nmo1<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2086,"column":1,"offset":36107},"end":{"line":2090,"column":4,"offset":36225}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo2 <span class=\"token operator\">=</span> hero_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'Tina Fey and Batman.'</span><span class=\"token punctuation\">)</span>\nmo2<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2092,"column":1,"offset":36227},"end":{"line":2095,"column":4,"offset":36300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also use the pipe to match one of several patterns as part of your regex:","position":{"start":{"line":2097,"column":1,"offset":36302},"end":{"line":2097,"column":82,"offset":36383}}}],"position":{"start":{"line":2097,"column":1,"offset":36302},"end":{"line":2097,"column":82,"offset":36383}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">bat_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'Bat(man|mobile|copter|bat)'</span><span class=\"token punctuation\">)</span>\nmo <span class=\"token operator\">=</span> bat_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'Batmobile lost a wheel'</span><span class=\"token punctuation\">)</span>\nmo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2099,"column":1,"offset":36385},"end":{"line":2103,"column":4,"offset":36511}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2105,"column":1,"offset":36513},"end":{"line":2107,"column":4,"offset":36538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Optional Matching with the Question Mark","position":{"start":{"line":2109,"column":5,"offset":36544},"end":{"line":2109,"column":45,"offset":36584}}}],"position":{"start":{"line":2109,"column":1,"offset":36540},"end":{"line":2109,"column":45,"offset":36584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ? character flags the group that precedes it as an optional part of the pattern.","position":{"start":{"line":2111,"column":1,"offset":36586},"end":{"line":2111,"column":85,"offset":36670}}}],"position":{"start":{"line":2111,"column":1,"offset":36586},"end":{"line":2111,"column":85,"offset":36670}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">bat_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'Bat(wo)?man'</span><span class=\"token punctuation\">)</span>\nmo1 <span class=\"token operator\">=</span> bat_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'The Adventures of Batman'</span><span class=\"token punctuation\">)</span>\nmo1<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2113,"column":1,"offset":36672},"end":{"line":2117,"column":4,"offset":36787}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo2 <span class=\"token operator\">=</span> bat_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'The Adventures of Batwoman'</span><span class=\"token punctuation\">)</span>\nmo2<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2119,"column":1,"offset":36789},"end":{"line":2122,"column":4,"offset":36867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Matching Zero or More with the Star","position":{"start":{"line":2124,"column":5,"offset":36873},"end":{"line":2124,"column":40,"offset":36908}}}],"position":{"start":{"line":2124,"column":1,"offset":36869},"end":{"line":2124,"column":40,"offset":36908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":2126,"column":1,"offset":36910},"end":{"line":2126,"column":5,"offset":36914}}},{"type":"text","value":"*","position":{"start":{"line":2126,"column":5,"offset":36914},"end":{"line":2126,"column":7,"offset":36916}}},{"type":"text","value":" (called the star or asterisk) means \"match zero or more\"—the group that precedes the star can occur any number of times in the text.","position":{"start":{"line":2126,"column":7,"offset":36916},"end":{"line":2126,"column":140,"offset":37049}}}],"position":{"start":{"line":2126,"column":1,"offset":36910},"end":{"line":2126,"column":140,"offset":37049}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">bat_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'Bat(wo)*man'</span><span class=\"token punctuation\">)</span>\nmo1 <span class=\"token operator\">=</span> bat_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'The Adventures of Batman'</span><span class=\"token punctuation\">)</span>\nmo1<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2128,"column":1,"offset":37051},"end":{"line":2132,"column":4,"offset":37166}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo2 <span class=\"token operator\">=</span> bat_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'The Adventures of Batwoman'</span><span class=\"token punctuation\">)</span>\nmo2<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2134,"column":1,"offset":37168},"end":{"line":2137,"column":4,"offset":37246}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo3 <span class=\"token operator\">=</span> bat_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'The Adventures of Batwowowowoman'</span><span class=\"token punctuation\">)</span>\nmo3<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2139,"column":1,"offset":37248},"end":{"line":2142,"column":4,"offset":37332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Matching One or More with the Plus","position":{"start":{"line":2144,"column":5,"offset":37338},"end":{"line":2144,"column":39,"offset":37372}}}],"position":{"start":{"line":2144,"column":1,"offset":37334},"end":{"line":2144,"column":39,"offset":37372}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While ","position":{"start":{"line":2146,"column":1,"offset":37374},"end":{"line":2146,"column":7,"offset":37380}}},{"type":"text","value":"*","position":{"start":{"line":2146,"column":7,"offset":37380},"end":{"line":2146,"column":9,"offset":37382}}},{"type":"text","value":" means \"match zero or more,\" the + (or plus) means \"match one or more\". The group preceding a plus must appear at least once. It is not optional:","position":{"start":{"line":2146,"column":9,"offset":37382},"end":{"line":2146,"column":154,"offset":37527}}}],"position":{"start":{"line":2146,"column":1,"offset":37374},"end":{"line":2146,"column":154,"offset":37527}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">bat_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'Bat(wo)+man'</span><span class=\"token punctuation\">)</span>\nmo1 <span class=\"token operator\">=</span> bat_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'The Adventures of Batwoman'</span><span class=\"token punctuation\">)</span>\nmo1<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2148,"column":1,"offset":37529},"end":{"line":2152,"column":4,"offset":37646}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo2 <span class=\"token operator\">=</span> bat_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'The Adventures of Batwowowowoman'</span><span class=\"token punctuation\">)</span>\nmo2<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2154,"column":1,"offset":37648},"end":{"line":2157,"column":4,"offset":37732}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo3 <span class=\"token operator\">=</span> bat_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'The Adventures of Batman'</span><span class=\"token punctuation\">)</span>\nmo3 <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span></code></pre></div>","position":{"start":{"line":2159,"column":1,"offset":37734},"end":{"line":2162,"column":4,"offset":37810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Matching Specific Repetitions with Curly Brackets","position":{"start":{"line":2164,"column":5,"offset":37816},"end":{"line":2164,"column":54,"offset":37865}}}],"position":{"start":{"line":2164,"column":1,"offset":37812},"end":{"line":2164,"column":54,"offset":37865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you have a group that you want to repeat a specific number of times, follow the group in your regex with a number in curly brackets. For example, the regex (Ha){3} will match the string 'HaHaHa', but it will not match 'HaHa', since the latter has only two repeats of the (Ha) group.","position":{"start":{"line":2166,"column":1,"offset":37867},"end":{"line":2166,"column":286,"offset":38152}}}],"position":{"start":{"line":2166,"column":1,"offset":37867},"end":{"line":2166,"column":286,"offset":38152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of one number, you can specify a range by writing a minimum, a comma, and a maximum in between the curly brackets. For example, the regex (Ha){3,5} will match 'HaHaHa', 'HaHaHaHa', and 'HaHaHaHaHa'.","position":{"start":{"line":2168,"column":1,"offset":38154},"end":{"line":2168,"column":207,"offset":38360}}}],"position":{"start":{"line":2168,"column":1,"offset":38154},"end":{"line":2168,"column":207,"offset":38360}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">ha_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(Ha){3}'</span><span class=\"token punctuation\">)</span>\nmo1 <span class=\"token operator\">=</span> ha_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'HaHaHa'</span><span class=\"token punctuation\">)</span>\nmo1<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2170,"column":1,"offset":38362},"end":{"line":2174,"column":4,"offset":38453}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo2 <span class=\"token operator\">=</span> ha_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'Ha'</span><span class=\"token punctuation\">)</span>\nmo2 <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span></code></pre></div>","position":{"start":{"line":2176,"column":1,"offset":38455},"end":{"line":2179,"column":4,"offset":38508}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Greedy and Nongreedy Matching","position":{"start":{"line":2181,"column":5,"offset":38514},"end":{"line":2181,"column":34,"offset":38543}}}],"position":{"start":{"line":2181,"column":1,"offset":38510},"end":{"line":2181,"column":34,"offset":38543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python's regular expressions are greedy by default, which means that in ambiguous situations they will match the longest string possible. The non-greedy version of the curly brackets, which matches the shortest string possible, has the closing curly bracket followed by a question mark.","position":{"start":{"line":2183,"column":1,"offset":38545},"end":{"line":2183,"column":287,"offset":38831}}}],"position":{"start":{"line":2183,"column":1,"offset":38545},"end":{"line":2183,"column":287,"offset":38831}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">greedy_ha_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(Ha){3,5}'</span><span class=\"token punctuation\">)</span>\nmo1 <span class=\"token operator\">=</span> greedy_ha_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'HaHaHaHaHa'</span><span class=\"token punctuation\">)</span>\nmo1<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2185,"column":1,"offset":38833},"end":{"line":2189,"column":4,"offset":38944}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">nongreedy_ha_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(Ha){3,5}?'</span><span class=\"token punctuation\">)</span>\nmo2 <span class=\"token operator\">=</span> nongreedy_ha_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'HaHaHaHaHa'</span><span class=\"token punctuation\">)</span>\nmo2<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2191,"column":1,"offset":38946},"end":{"line":2195,"column":4,"offset":39064}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The findall Method","position":{"start":{"line":2197,"column":5,"offset":39070},"end":{"line":2197,"column":23,"offset":39088}}}],"position":{"start":{"line":2197,"column":1,"offset":39066},"end":{"line":2197,"column":23,"offset":39088}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to the search() method, Regex objects also have a findall() method. While search() will return a Match object of the first matched text in the searched string, the findall() method will return the strings of every match in the searched string.","position":{"start":{"line":2199,"column":1,"offset":39090},"end":{"line":2199,"column":256,"offset":39345}}}],"position":{"start":{"line":2199,"column":1,"offset":39090},"end":{"line":2199,"column":256,"offset":39345}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">phone_num_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># has no groups</span>\nphone_num_regex<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'Cell: 415-555-9999 Work: 212-555-0000'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2201,"column":1,"offset":39347},"end":{"line":2204,"column":4,"offset":39497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To summarize what the findall() method returns, remember the following:","position":{"start":{"line":2206,"column":1,"offset":39499},"end":{"line":2206,"column":72,"offset":39570}}}],"position":{"start":{"line":2206,"column":1,"offset":39499},"end":{"line":2206,"column":72,"offset":39570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"When called on a regex with no groups, such as \\d-\\d\\d\\d-\\d\\d\\d\\d, the method findall() returns a list of ng matches, such as ","position":{"start":{"line":2208,"column":5,"offset":39576},"end":{"line":2208,"column":131,"offset":39702}}},{"type":"text","value":"['415-555-9999', '212-555-0000']","position":{"start":{"line":2208,"column":132,"offset":39703},"end":{"line":2208,"column":162,"offset":39733}}},{"type":"text","value":".","position":{"start":{"line":2208,"column":163,"offset":39734},"end":{"line":2208,"column":164,"offset":39735}}}],"position":{"start":{"line":2208,"column":1,"offset":39572},"end":{"line":2208,"column":164,"offset":39735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"-","position":{"start":{"line":2209,"column":1,"offset":39736},"end":{"line":2209,"column":2,"offset":39737}}}],"position":{"start":{"line":2209,"column":1,"offset":39736},"end":{"line":2209,"column":2,"offset":39737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"When called on a regex that has groups, such as (\\d\\d\\d)-d\\d)-(\\d\\ d\\d\\d), the method findall() returns a list of es of strings (one string for each group), such as ","position":{"start":{"line":2210,"column":5,"offset":39742},"end":{"line":2210,"column":170,"offset":39907}}},{"type":"text","value":"[('415', ', '9999'), ('212', '555', '0000')]","position":{"start":{"line":2210,"column":171,"offset":39908},"end":{"line":2210,"column":213,"offset":39950}}},{"type":"text","value":".","position":{"start":{"line":2210,"column":214,"offset":39951},"end":{"line":2210,"column":215,"offset":39952}}}],"position":{"start":{"line":2210,"column":1,"offset":39738},"end":{"line":2210,"column":215,"offset":39952}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2208,"column":1,"offset":39572},"end":{"line":2210,"column":215,"offset":39952}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Making Your Own Character Classes","position":{"start":{"line":2212,"column":5,"offset":39958},"end":{"line":2212,"column":38,"offset":39991}}}],"position":{"start":{"line":2212,"column":1,"offset":39954},"end":{"line":2212,"column":38,"offset":39991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are times when you want to match a set of characters but the shorthand character classes (\\d, \\w, \\s, and so on) are too broad. You can define your own character class using square brackets. For example, the character class ","position":{"start":{"line":2214,"column":1,"offset":39993},"end":{"line":2214,"column":231,"offset":40223}}},{"type":"text","value":"[aeiouAEIOU]","position":{"start":{"line":2214,"column":232,"offset":40224},"end":{"line":2214,"column":242,"offset":40234}}},{"type":"text","value":" will match any vowel, both lowercase and uppercase.","position":{"start":{"line":2214,"column":243,"offset":40235},"end":{"line":2214,"column":295,"offset":40287}}}],"position":{"start":{"line":2214,"column":1,"offset":39993},"end":{"line":2214,"column":295,"offset":40287}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">vowel_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'[aeiouAEIOU]'</span><span class=\"token punctuation\">)</span>\nvowel_regex<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'Robocop eats baby food. BABY FOOD.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2216,"column":1,"offset":40289},"end":{"line":2219,"column":4,"offset":40402}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also include ranges of letters or numbers by using a hyphen. For example, the character class ","position":{"start":{"line":2221,"column":1,"offset":40404},"end":{"line":2221,"column":103,"offset":40506}}},{"type":"text","value":"[a-zA-Z0-9]","position":{"start":{"line":2221,"column":104,"offset":40507},"end":{"line":2221,"column":113,"offset":40516}}},{"type":"text","value":" will match all lowercase letters, uppercase letters, and numbers.","position":{"start":{"line":2221,"column":114,"offset":40517},"end":{"line":2221,"column":180,"offset":40583}}}],"position":{"start":{"line":2221,"column":1,"offset":40404},"end":{"line":2221,"column":180,"offset":40583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By placing a caret character (^) just after the character class's opening bracket, you can make a negative character class. A negative character class will match all the characters that are not in the character class. For example, enter the following into the interactive shell:","position":{"start":{"line":2223,"column":1,"offset":40585},"end":{"line":2223,"column":279,"offset":40863}}}],"position":{"start":{"line":2223,"column":1,"offset":40585},"end":{"line":2223,"column":279,"offset":40863}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">consonant_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'[^aeiouAEIOU]'</span><span class=\"token punctuation\">)</span>\nconsonant_regex<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'Robocop eats baby food. BABY FOOD.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2225,"column":1,"offset":40865},"end":{"line":2228,"column":4,"offset":40987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Caret and Dollar Sign Characters","position":{"start":{"line":2230,"column":5,"offset":40993},"end":{"line":2230,"column":41,"offset":41029}}}],"position":{"start":{"line":2230,"column":1,"offset":40989},"end":{"line":2230,"column":41,"offset":41029}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You can also use the caret symbol (^) at the start of a regex to indicate that a match must occur at the beginning of the searched text.","position":{"start":{"line":2232,"column":5,"offset":41035},"end":{"line":2232,"column":141,"offset":41171}}}],"position":{"start":{"line":2232,"column":1,"offset":41031},"end":{"line":2232,"column":141,"offset":41171}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"-","position":{"start":{"line":2233,"column":1,"offset":41172},"end":{"line":2233,"column":2,"offset":41173}}}],"position":{"start":{"line":2233,"column":1,"offset":41172},"end":{"line":2233,"column":2,"offset":41173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Likewise, you can put a dollar sign ($) at the end of the regex to indicate the string must end with this regex pattern.","position":{"start":{"line":2234,"column":5,"offset":41178},"end":{"line":2234,"column":125,"offset":41298}}}],"position":{"start":{"line":2234,"column":1,"offset":41174},"end":{"line":2235,"column":1,"offset":41299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"And you can use the ^ and $ together to indicate that the entire string must match the regex—that is, it's not enough for a match to be made on some subset of the string.","position":{"start":{"line":2236,"column":5,"offset":41304},"end":{"line":2236,"column":175,"offset":41474}}}],"position":{"start":{"line":2236,"column":1,"offset":41300},"end":{"line":2236,"column":175,"offset":41474}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2232,"column":1,"offset":41031},"end":{"line":2236,"column":175,"offset":41474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The r'^Hello' regular expression string matches strings that begin with 'Hello':","position":{"start":{"line":2238,"column":1,"offset":41476},"end":{"line":2238,"column":81,"offset":41556}}}],"position":{"start":{"line":2238,"column":1,"offset":41476},"end":{"line":2238,"column":81,"offset":41556}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">begins_with_hello <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'^Hello'</span><span class=\"token punctuation\">)</span>\nbegins_with_hello<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2240,"column":1,"offset":41558},"end":{"line":2243,"column":4,"offset":41654}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">begins_with_hello<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'He said hello.'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span></code></pre></div>","position":{"start":{"line":2245,"column":1,"offset":41656},"end":{"line":2247,"column":4,"offset":41720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The r'\\d$' regular expression string matches strings that end with a numeric character from 0 to 9:","position":{"start":{"line":2249,"column":1,"offset":41722},"end":{"line":2249,"column":100,"offset":41821}}}],"position":{"start":{"line":2249,"column":1,"offset":41722},"end":{"line":2249,"column":100,"offset":41821}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">whole_string_is_num <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'^\\d+$'</span><span class=\"token punctuation\">)</span>\nwhole_string_is_num<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'1234567890'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2251,"column":1,"offset":41823},"end":{"line":2254,"column":4,"offset":41920}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">whole_string_is_num<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'12345xyz67890'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span></code></pre></div>","position":{"start":{"line":2256,"column":1,"offset":41922},"end":{"line":2258,"column":4,"offset":41987}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">whole_string_is_num<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'12 34567890'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span></code></pre></div>","position":{"start":{"line":2260,"column":1,"offset":41989},"end":{"line":2262,"column":4,"offset":42052}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Wildcard Character","position":{"start":{"line":2264,"column":5,"offset":42058},"end":{"line":2264,"column":27,"offset":42080}}}],"position":{"start":{"line":2264,"column":1,"offset":42054},"end":{"line":2264,"column":27,"offset":42080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The . (or dot) character in a regular expression is called a wildcard and will match any character except for a newline:","position":{"start":{"line":2266,"column":1,"offset":42082},"end":{"line":2266,"column":121,"offset":42202}}}],"position":{"start":{"line":2266,"column":1,"offset":42082},"end":{"line":2266,"column":121,"offset":42202}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">at_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'.at'</span><span class=\"token punctuation\">)</span>\nat_regex<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'The cat in the hat sat on the flat mat.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2268,"column":1,"offset":42204},"end":{"line":2271,"column":4,"offset":42307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Matching Everything with Dot-Star","position":{"start":{"line":2273,"column":5,"offset":42313},"end":{"line":2273,"column":38,"offset":42346}}}],"position":{"start":{"line":2273,"column":1,"offset":42309},"end":{"line":2273,"column":38,"offset":42346}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'First Name: (.*) Last Name: (.*)'</span><span class=\"token punctuation\">)</span>\nmo <span class=\"token operator\">=</span> name_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'First Name: Some Last Name: One'</span><span class=\"token punctuation\">)</span>\nmo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2275,"column":1,"offset":42348},"end":{"line":2279,"column":4,"offset":42492}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2281,"column":1,"offset":42494},"end":{"line":2283,"column":4,"offset":42519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The dot-star uses greedy mode: It will always try to match as much text as possible. To match any and all text in a nongreedy fashion, use the dot, star, and question mark (.","position":{"start":{"line":2285,"column":1,"offset":42521},"end":{"line":2285,"column":175,"offset":42695}}},{"type":"text","value":"*","position":{"start":{"line":2285,"column":175,"offset":42695},"end":{"line":2285,"column":177,"offset":42697}}},{"type":"text","value":"?). The question mark tells Python to match in a nongreedy way:","position":{"start":{"line":2285,"column":177,"offset":42697},"end":{"line":2285,"column":240,"offset":42760}}}],"position":{"start":{"line":2285,"column":1,"offset":42521},"end":{"line":2285,"column":240,"offset":42760}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">nongreedy_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'&lt;.*?>'</span><span class=\"token punctuation\">)</span>\nmo <span class=\"token operator\">=</span> nongreedy_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;To serve man> for dinner.>'</span><span class=\"token punctuation\">)</span>\nmo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2287,"column":1,"offset":42762},"end":{"line":2291,"column":4,"offset":42884}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">greedy_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'&lt;.*>'</span><span class=\"token punctuation\">)</span>\nmo <span class=\"token operator\">=</span> greedy_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;To serve man> for dinner.>'</span><span class=\"token punctuation\">)</span>\nmo<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2293,"column":1,"offset":42886},"end":{"line":2297,"column":4,"offset":43001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Matching Newlines with the Dot Character","position":{"start":{"line":2299,"column":5,"offset":43007},"end":{"line":2299,"column":45,"offset":43047}}}],"position":{"start":{"line":2299,"column":1,"offset":43003},"end":{"line":2299,"column":45,"offset":43047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The dot-star will match everything except a newline. By passing re.DOTALL as the second argument to re.compile(), you can make the dot character match all characters, including the newline character:","position":{"start":{"line":2301,"column":1,"offset":43049},"end":{"line":2301,"column":200,"offset":43248}}}],"position":{"start":{"line":2301,"column":1,"offset":43049},"end":{"line":2301,"column":200,"offset":43248}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">no_newline_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.*'</span><span class=\"token punctuation\">)</span>\nno_newline_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'Serve the public trust.\\nProtect the innocent.\\nUphold the law.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2303,"column":1,"offset":43250},"end":{"line":2306,"column":4,"offset":43398}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">newline_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.*'</span><span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">.</span>DOTALL<span class=\"token punctuation\">)</span>\nnewline_regex<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'Serve the public trust.\\nProtect the innocent.\\nUphold the law.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2308,"column":1,"offset":43400},"end":{"line":2311,"column":4,"offset":43553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Review of Regex Symbols","position":{"start":{"line":2313,"column":5,"offset":43559},"end":{"line":2313,"column":28,"offset":43582}}}],"position":{"start":{"line":2313,"column":1,"offset":43555},"end":{"line":2313,"column":28,"offset":43582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Symbol","position":{"start":{"line":2315,"column":3,"offset":43586},"end":{"line":2315,"column":9,"offset":43592}}}],"position":{"start":{"line":2315,"column":3,"offset":43586},"end":{"line":2315,"column":27,"offset":43610}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Matches","position":{"start":{"line":2315,"column":30,"offset":43613},"end":{"line":2315,"column":37,"offset":43620}}}],"position":{"start":{"line":2315,"column":30,"offset":43613},"end":{"line":2315,"column":90,"offset":43673}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2315,"column":1,"offset":43584},"end":{"line":2315,"column":92,"offset":43675}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2315,"column":1,"offset":43584},"end":{"line":2315,"column":92,"offset":43675}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":2317,"column":3,"offset":43770},"end":{"line":2317,"column":6,"offset":43773}}}],"position":{"start":{"line":2317,"column":3,"offset":43770},"end":{"line":2317,"column":27,"offset":43794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"zero or one of the preceding group.","position":{"start":{"line":2317,"column":30,"offset":43797},"end":{"line":2317,"column":65,"offset":43832}}}],"position":{"start":{"line":2317,"column":30,"offset":43797},"end":{"line":2317,"column":90,"offset":43857}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2317,"column":1,"offset":43768},"end":{"line":2317,"column":92,"offset":43859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":2318,"column":3,"offset":43862},"end":{"line":2318,"column":6,"offset":43865}}}],"position":{"start":{"line":2318,"column":3,"offset":43862},"end":{"line":2318,"column":27,"offset":43886}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"zero or more of the preceding group.","position":{"start":{"line":2318,"column":30,"offset":43889},"end":{"line":2318,"column":66,"offset":43925}}}],"position":{"start":{"line":2318,"column":30,"offset":43889},"end":{"line":2318,"column":90,"offset":43949}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2318,"column":1,"offset":43860},"end":{"line":2318,"column":92,"offset":43951}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":2319,"column":3,"offset":43954},"end":{"line":2319,"column":6,"offset":43957}}}],"position":{"start":{"line":2319,"column":3,"offset":43954},"end":{"line":2319,"column":27,"offset":43978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"one or more of the preceding group.","position":{"start":{"line":2319,"column":30,"offset":43981},"end":{"line":2319,"column":65,"offset":44016}}}],"position":{"start":{"line":2319,"column":30,"offset":43981},"end":{"line":2319,"column":90,"offset":44041}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2319,"column":1,"offset":43952},"end":{"line":2319,"column":92,"offset":44043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">{n}</code>","position":{"start":{"line":2320,"column":3,"offset":44046},"end":{"line":2320,"column":8,"offset":44051}}}],"position":{"start":{"line":2320,"column":3,"offset":44046},"end":{"line":2320,"column":27,"offset":44070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"exactly n of the preceding group.","position":{"start":{"line":2320,"column":30,"offset":44073},"end":{"line":2320,"column":63,"offset":44106}}}],"position":{"start":{"line":2320,"column":30,"offset":44073},"end":{"line":2320,"column":90,"offset":44133}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2320,"column":1,"offset":44044},"end":{"line":2320,"column":92,"offset":44135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">{n,}</code>","position":{"start":{"line":2321,"column":3,"offset":44138},"end":{"line":2321,"column":9,"offset":44144}}}],"position":{"start":{"line":2321,"column":3,"offset":44138},"end":{"line":2321,"column":27,"offset":44162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"n or more of the preceding group.","position":{"start":{"line":2321,"column":30,"offset":44165},"end":{"line":2321,"column":63,"offset":44198}}}],"position":{"start":{"line":2321,"column":30,"offset":44165},"end":{"line":2321,"column":90,"offset":44225}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2321,"column":1,"offset":44136},"end":{"line":2321,"column":92,"offset":44227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">{,m}</code>","position":{"start":{"line":2322,"column":3,"offset":44230},"end":{"line":2322,"column":9,"offset":44236}}}],"position":{"start":{"line":2322,"column":3,"offset":44230},"end":{"line":2322,"column":27,"offset":44254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"0 to m of the preceding group.","position":{"start":{"line":2322,"column":30,"offset":44257},"end":{"line":2322,"column":60,"offset":44287}}}],"position":{"start":{"line":2322,"column":30,"offset":44257},"end":{"line":2322,"column":90,"offset":44317}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2322,"column":1,"offset":44228},"end":{"line":2322,"column":92,"offset":44319}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">{n,m}</code>","position":{"start":{"line":2323,"column":3,"offset":44322},"end":{"line":2323,"column":10,"offset":44329}}}],"position":{"start":{"line":2323,"column":3,"offset":44322},"end":{"line":2323,"column":27,"offset":44346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"at least n and at most m of the preceding p.","position":{"start":{"line":2323,"column":30,"offset":44349},"end":{"line":2323,"column":74,"offset":44393}}}],"position":{"start":{"line":2323,"column":30,"offset":44349},"end":{"line":2323,"column":90,"offset":44409}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2323,"column":1,"offset":44320},"end":{"line":2323,"column":92,"offset":44411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">{n,m}?</code>","position":{"start":{"line":2324,"column":3,"offset":44414},"end":{"line":2324,"column":11,"offset":44422}}},{"type":"text","value":" or ","position":{"start":{"line":2324,"column":11,"offset":44422},"end":{"line":2324,"column":15,"offset":44426}}},{"type":"raw","value":"<code class=\"language-text\">*?</code>","position":{"start":{"line":2324,"column":15,"offset":44426},"end":{"line":2324,"column":19,"offset":44430}}},{"type":"text","value":" or ","position":{"start":{"line":2324,"column":19,"offset":44430},"end":{"line":2324,"column":23,"offset":44434}}},{"type":"raw","value":"<code class=\"language-text\">+?</code>","position":{"start":{"line":2324,"column":23,"offset":44434},"end":{"line":2324,"column":27,"offset":44438}}}],"position":{"start":{"line":2324,"column":3,"offset":44414},"end":{"line":2324,"column":27,"offset":44438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"performs a nongreedy match of the preceding p.","position":{"start":{"line":2324,"column":30,"offset":44441},"end":{"line":2324,"column":76,"offset":44487}}}],"position":{"start":{"line":2324,"column":30,"offset":44441},"end":{"line":2324,"column":90,"offset":44501}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2324,"column":1,"offset":44412},"end":{"line":2324,"column":92,"offset":44503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">^spam</code>","position":{"start":{"line":2325,"column":3,"offset":44506},"end":{"line":2325,"column":10,"offset":44513}}}],"position":{"start":{"line":2325,"column":3,"offset":44506},"end":{"line":2325,"column":27,"offset":44530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"means the string must begin with spam.","position":{"start":{"line":2325,"column":30,"offset":44533},"end":{"line":2325,"column":68,"offset":44571}}}],"position":{"start":{"line":2325,"column":30,"offset":44533},"end":{"line":2325,"column":90,"offset":44593}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2325,"column":1,"offset":44504},"end":{"line":2325,"column":92,"offset":44595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">spam$</code>","position":{"start":{"line":2326,"column":3,"offset":44598},"end":{"line":2326,"column":10,"offset":44605}}}],"position":{"start":{"line":2326,"column":3,"offset":44598},"end":{"line":2326,"column":27,"offset":44622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"means the string must end with spam.","position":{"start":{"line":2326,"column":30,"offset":44625},"end":{"line":2326,"column":66,"offset":44661}}}],"position":{"start":{"line":2326,"column":30,"offset":44625},"end":{"line":2326,"column":90,"offset":44685}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2326,"column":1,"offset":44596},"end":{"line":2326,"column":92,"offset":44687}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">.</code>","position":{"start":{"line":2327,"column":3,"offset":44690},"end":{"line":2327,"column":6,"offset":44693}}}],"position":{"start":{"line":2327,"column":3,"offset":44690},"end":{"line":2327,"column":27,"offset":44714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"any character, except newline characters.","position":{"start":{"line":2327,"column":30,"offset":44717},"end":{"line":2327,"column":71,"offset":44758}}}],"position":{"start":{"line":2327,"column":30,"offset":44717},"end":{"line":2327,"column":90,"offset":44777}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2327,"column":1,"offset":44688},"end":{"line":2327,"column":92,"offset":44779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">\\d</code>","position":{"start":{"line":2328,"column":3,"offset":44782},"end":{"line":2328,"column":7,"offset":44786}}},{"type":"text","value":", ","position":{"start":{"line":2328,"column":7,"offset":44786},"end":{"line":2328,"column":9,"offset":44788}}},{"type":"raw","value":"<code class=\"language-text\">\\w</code>","position":{"start":{"line":2328,"column":9,"offset":44788},"end":{"line":2328,"column":13,"offset":44792}}},{"type":"text","value":", and ","position":{"start":{"line":2328,"column":13,"offset":44792},"end":{"line":2328,"column":19,"offset":44798}}},{"type":"raw","value":"<code class=\"language-text\">\\s</code>","position":{"start":{"line":2328,"column":19,"offset":44798},"end":{"line":2328,"column":23,"offset":44802}}}],"position":{"start":{"line":2328,"column":3,"offset":44782},"end":{"line":2328,"column":27,"offset":44806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"a digit, word, or space character, resectively.","position":{"start":{"line":2328,"column":30,"offset":44809},"end":{"line":2328,"column":77,"offset":44856}}}],"position":{"start":{"line":2328,"column":30,"offset":44809},"end":{"line":2328,"column":90,"offset":44869}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2328,"column":1,"offset":44780},"end":{"line":2328,"column":92,"offset":44871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">\\D</code>","position":{"start":{"line":2329,"column":3,"offset":44874},"end":{"line":2329,"column":7,"offset":44878}}},{"type":"text","value":", ","position":{"start":{"line":2329,"column":7,"offset":44878},"end":{"line":2329,"column":9,"offset":44880}}},{"type":"raw","value":"<code class=\"language-text\">\\W</code>","position":{"start":{"line":2329,"column":9,"offset":44880},"end":{"line":2329,"column":13,"offset":44884}}},{"type":"text","value":", and ","position":{"start":{"line":2329,"column":13,"offset":44884},"end":{"line":2329,"column":19,"offset":44890}}},{"type":"raw","value":"<code class=\"language-text\">\\S</code>","position":{"start":{"line":2329,"column":19,"offset":44890},"end":{"line":2329,"column":23,"offset":44894}}}],"position":{"start":{"line":2329,"column":3,"offset":44874},"end":{"line":2329,"column":27,"offset":44898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"anything except a digit, word, or space acter, respectively.","position":{"start":{"line":2329,"column":30,"offset":44901},"end":{"line":2329,"column":90,"offset":44961}}}],"position":{"start":{"line":2329,"column":30,"offset":44901},"end":{"line":2329,"column":90,"offset":44961}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2329,"column":1,"offset":44872},"end":{"line":2329,"column":92,"offset":44963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">[abc]</code>","position":{"start":{"line":2330,"column":3,"offset":44966},"end":{"line":2330,"column":10,"offset":44973}}}],"position":{"start":{"line":2330,"column":3,"offset":44966},"end":{"line":2330,"column":27,"offset":44990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"any character between the brackets (such as a, b, ).","position":{"start":{"line":2330,"column":30,"offset":44993},"end":{"line":2330,"column":82,"offset":45045}}}],"position":{"start":{"line":2330,"column":30,"offset":44993},"end":{"line":2330,"column":90,"offset":45053}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2330,"column":1,"offset":44964},"end":{"line":2330,"column":92,"offset":45055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">[^abc]</code>","position":{"start":{"line":2331,"column":3,"offset":45058},"end":{"line":2331,"column":11,"offset":45066}}}],"position":{"start":{"line":2331,"column":3,"offset":45058},"end":{"line":2331,"column":27,"offset":45082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"any character that isn't between the brackets.","position":{"start":{"line":2331,"column":30,"offset":45085},"end":{"line":2331,"column":76,"offset":45131}}}],"position":{"start":{"line":2331,"column":30,"offset":45085},"end":{"line":2331,"column":90,"offset":45145}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2331,"column":1,"offset":45056},"end":{"line":2331,"column":92,"offset":45147}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2317,"column":1,"offset":43768},"end":{"line":2331,"column":92,"offset":45147}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2315,"column":1,"offset":43584},"end":{"line":2331,"column":92,"offset":45147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Case-Insensitive Matching","position":{"start":{"line":2333,"column":5,"offset":45153},"end":{"line":2333,"column":30,"offset":45178}}}],"position":{"start":{"line":2333,"column":1,"offset":45149},"end":{"line":2333,"column":30,"offset":45178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To make your regex case-insensitive, you can pass re.IGNORECASE or re.I as a second argument to re.compile():","position":{"start":{"line":2335,"column":1,"offset":45180},"end":{"line":2335,"column":110,"offset":45289}}}],"position":{"start":{"line":2335,"column":1,"offset":45180},"end":{"line":2335,"column":110,"offset":45289}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">robocop <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'robocop'</span><span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">.</span>I<span class=\"token punctuation\">)</span>\nrobocop<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'Robocop is part man, part machine, all cop.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2337,"column":1,"offset":45291},"end":{"line":2340,"column":4,"offset":45413}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">robocop<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'ROBOCOP protects the innocent.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2342,"column":1,"offset":45415},"end":{"line":2344,"column":4,"offset":45485}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">robocop<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'Al, why does your programming book talk about robocop so much?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2346,"column":1,"offset":45487},"end":{"line":2348,"column":4,"offset":45589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Substituting Strings with the sub() Method","position":{"start":{"line":2350,"column":5,"offset":45595},"end":{"line":2350,"column":47,"offset":45637}}}],"position":{"start":{"line":2350,"column":1,"offset":45591},"end":{"line":2350,"column":47,"offset":45637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The sub() method for Regex objects is passed two arguments:","position":{"start":{"line":2352,"column":1,"offset":45639},"end":{"line":2352,"column":60,"offset":45698}}}],"position":{"start":{"line":2352,"column":1,"offset":45639},"end":{"line":2352,"column":60,"offset":45698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The first argument is a string to replace any matches.","position":{"start":{"line":2354,"column":4,"offset":45703},"end":{"line":2354,"column":58,"offset":45757}}}],"position":{"start":{"line":2354,"column":1,"offset":45700},"end":{"line":2354,"column":58,"offset":45757}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The second is the string for the regular expression.","position":{"start":{"line":2355,"column":4,"offset":45761},"end":{"line":2355,"column":56,"offset":45813}}}],"position":{"start":{"line":2355,"column":1,"offset":45758},"end":{"line":2355,"column":56,"offset":45813}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2354,"column":1,"offset":45700},"end":{"line":2355,"column":56,"offset":45813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The sub() method returns a string with the substitutions applied:","position":{"start":{"line":2357,"column":1,"offset":45815},"end":{"line":2357,"column":66,"offset":45880}}}],"position":{"start":{"line":2357,"column":1,"offset":45815},"end":{"line":2357,"column":66,"offset":45880}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">names_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'Agent \\w+'</span><span class=\"token punctuation\">)</span>\nnames_regex<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'CENSORED'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Agent Alice gave the secret documents to Agent Bob.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2359,"column":1,"offset":45882},"end":{"line":2362,"column":4,"offset":46017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another example:","position":{"start":{"line":2364,"column":1,"offset":46019},"end":{"line":2364,"column":17,"offset":46035}}}],"position":{"start":{"line":2364,"column":1,"offset":46019},"end":{"line":2364,"column":17,"offset":46035}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">agent_names_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'Agent (\\w)\\w*'</span><span class=\"token punctuation\">)</span>\nagent_names_regex<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\1****'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Agent Alice told Agent Carol that Agent Eve knew Agent Bob was a double agent.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2366,"column":1,"offset":46037},"end":{"line":2369,"column":4,"offset":46214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Managing Complex Regexes","position":{"start":{"line":2371,"column":5,"offset":46220},"end":{"line":2371,"column":29,"offset":46244}}}],"position":{"start":{"line":2371,"column":1,"offset":46216},"end":{"line":2371,"column":29,"offset":46244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To tell the re.compile() function to ignore whitespace and comments inside the regular expression string, \"verbose mode\" can be enabled by passing the variable re.VERBOSE as the second argument to re.compile().","position":{"start":{"line":2373,"column":1,"offset":46246},"end":{"line":2373,"column":211,"offset":46456}}}],"position":{"start":{"line":2373,"column":1,"offset":46246},"end":{"line":2373,"column":211,"offset":46456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now instead of a hard-to-read regular expression like this:","position":{"start":{"line":2375,"column":1,"offset":46458},"end":{"line":2375,"column":60,"offset":46517}}}],"position":{"start":{"line":2375,"column":1,"offset":46458},"end":{"line":2375,"column":60,"offset":46517}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">phone_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'((\\d{3}|\\(\\d{3}\\))?(\\s|-|\\.)?\\d{3}(\\s|-|\\.)\\d{4}(\\s*(ext|x|ext.)\\s*\\d{2,5})?)'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2377,"column":1,"offset":46519},"end":{"line":2379,"column":4,"offset":46639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"you can spread the regular expression over multiple lines with comments like this:","position":{"start":{"line":2381,"column":1,"offset":46641},"end":{"line":2381,"column":83,"offset":46723}}}],"position":{"start":{"line":2381,"column":1,"offset":46641},"end":{"line":2381,"column":83,"offset":46723}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">phone_regex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">r'''(\n    (\\d{3}|\\(\\d{3}\\))?            # area code\n    (\\s|-|\\.)?                    # separator\n    \\d{3}                         # first 3 digits\n    (\\s|-|\\.)                     # separator\n    \\d{4}                         # last 4 digits\n    (\\s*(ext|x|ext.)\\s*\\d{2,5})?  # extension\n    )'''</span><span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">.</span>VERBOSE<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2383,"column":1,"offset":46725},"end":{"line":2392,"column":4,"offset":47076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Handling File and Directory Paths","position":{"start":{"line":2394,"column":4,"offset":47081},"end":{"line":2394,"column":37,"offset":47114}}}],"position":{"start":{"line":2394,"column":1,"offset":47078},"end":{"line":2394,"column":37,"offset":47114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are two main modules in Python that deals with path manipulation.\nOne is the ","position":{"start":{"line":2396,"column":1,"offset":47116},"end":{"line":2397,"column":12,"offset":47199}}},{"type":"raw","value":"<code class=\"language-text\">os.path</code>","position":{"start":{"line":2397,"column":12,"offset":47199},"end":{"line":2397,"column":21,"offset":47208}}},{"type":"text","value":" module and the other is the ","position":{"start":{"line":2397,"column":21,"offset":47208},"end":{"line":2397,"column":50,"offset":47237}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2397,"column":50,"offset":47237},"end":{"line":2397,"column":59,"offset":47246}}},{"type":"text","value":" module.\nThe ","position":{"start":{"line":2397,"column":59,"offset":47246},"end":{"line":2398,"column":5,"offset":47259}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2398,"column":5,"offset":47259},"end":{"line":2398,"column":14,"offset":47268}}},{"type":"text","value":" module was added in Python 3.4, offering an object-oriented way\nto handle file system paths.","position":{"start":{"line":2398,"column":14,"offset":47268},"end":{"line":2399,"column":29,"offset":47361}}}],"position":{"start":{"line":2396,"column":1,"offset":47116},"end":{"line":2399,"column":29,"offset":47361}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Backslash on Windows and Forward Slash on OS X and Linux","position":{"start":{"line":2401,"column":5,"offset":47367},"end":{"line":2401,"column":61,"offset":47423}}}],"position":{"start":{"line":2401,"column":1,"offset":47363},"end":{"line":2401,"column":61,"offset":47423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On Windows, paths are written using backslashes (","position":{"start":{"line":2403,"column":1,"offset":47425},"end":{"line":2403,"column":50,"offset":47474}}},{"type":"text","value":")","position":{"start":{"line":2403,"column":50,"offset":47474},"end":{"line":2403,"column":52,"offset":47476}}},{"type":"text","value":" as the separator between\nfolder names. On Unix based operating system such as macOS, Linux, and BSDs,\nthe forward slash (/) is used as the path separator. Joining paths can be\na headache if your code needs to work on different platforms.","position":{"start":{"line":2403,"column":52,"offset":47476},"end":{"line":2406,"column":62,"offset":47714}}}],"position":{"start":{"line":2403,"column":1,"offset":47425},"end":{"line":2406,"column":62,"offset":47714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Fortunately, Python provides easy ways to handle this. We will showcase\nhow to deal with this with both ","position":{"start":{"line":2408,"column":1,"offset":47716},"end":{"line":2409,"column":33,"offset":47820}}},{"type":"raw","value":"<code class=\"language-text\">os.path.join</code>","position":{"start":{"line":2409,"column":33,"offset":47820},"end":{"line":2409,"column":47,"offset":47834}}},{"type":"text","value":" and ","position":{"start":{"line":2409,"column":47,"offset":47834},"end":{"line":2409,"column":52,"offset":47839}}},{"type":"raw","value":"<code class=\"language-text\">pathlib.Path.joinpath</code>","position":{"start":{"line":2409,"column":52,"offset":47839},"end":{"line":2409,"column":75,"offset":47862}}}],"position":{"start":{"line":2408,"column":1,"offset":47716},"end":{"line":2409,"column":75,"offset":47862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2411,"column":1,"offset":47864},"end":{"line":2411,"column":7,"offset":47870}}},{"type":"raw","value":"<code class=\"language-text\">os.path.join</code>","position":{"start":{"line":2411,"column":7,"offset":47870},"end":{"line":2411,"column":21,"offset":47884}}},{"type":"text","value":" on Windows:","position":{"start":{"line":2411,"column":21,"offset":47884},"end":{"line":2411,"column":33,"offset":47896}}}],"position":{"start":{"line":2411,"column":1,"offset":47864},"end":{"line":2411,"column":33,"offset":47896}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\nos<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">'usr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'spam'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2413,"column":1,"offset":47898},"end":{"line":2417,"column":4,"offset":47957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And using ","position":{"start":{"line":2419,"column":1,"offset":47959},"end":{"line":2419,"column":11,"offset":47969}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2419,"column":11,"offset":47969},"end":{"line":2419,"column":20,"offset":47978}}},{"type":"text","value":" on ","position":{"start":{"line":2419,"column":20,"offset":47978},"end":{"line":2419,"column":24,"offset":47982}}},{"type":"text","value":"*","position":{"start":{"line":2419,"column":24,"offset":47982},"end":{"line":2419,"column":26,"offset":47984}}},{"type":"text","value":"nix:","position":{"start":{"line":2419,"column":26,"offset":47984},"end":{"line":2419,"column":30,"offset":47988}}}],"position":{"start":{"line":2419,"column":1,"offset":47959},"end":{"line":2419,"column":30,"offset":47988}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">(</span><span class=\"token string\">'usr'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>joinpath<span class=\"token punctuation\">(</span><span class=\"token string\">'bin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>joinpath<span class=\"token punctuation\">(</span><span class=\"token string\">'spam'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2421,"column":1,"offset":47990},"end":{"line":2425,"column":4,"offset":48081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2427,"column":1,"offset":48083},"end":{"line":2427,"column":10,"offset":48092}}},{"type":"text","value":" also provides a shortcut to joinpath using the ","position":{"start":{"line":2427,"column":10,"offset":48092},"end":{"line":2427,"column":58,"offset":48140}}},{"type":"raw","value":"<code class=\"language-text\">/</code>","position":{"start":{"line":2427,"column":58,"offset":48140},"end":{"line":2427,"column":61,"offset":48143}}},{"type":"text","value":" operator:","position":{"start":{"line":2427,"column":61,"offset":48143},"end":{"line":2427,"column":71,"offset":48153}}}],"position":{"start":{"line":2427,"column":1,"offset":48083},"end":{"line":2427,"column":71,"offset":48153}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">(</span><span class=\"token string\">'usr'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token string\">'bin'</span> <span class=\"token operator\">/</span> <span class=\"token string\">'spam'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2429,"column":1,"offset":48155},"end":{"line":2433,"column":4,"offset":48230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice the path separator is different between Windows and Unix based operating\nsystem, that's why you want to use one of the above methods instead of\nadding strings together to join paths together.","position":{"start":{"line":2435,"column":1,"offset":48232},"end":{"line":2437,"column":48,"offset":48430}}}],"position":{"start":{"line":2435,"column":1,"offset":48232},"end":{"line":2437,"column":48,"offset":48430}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Joining paths is helpful if you need to create different file paths under\nthe same directory.","position":{"start":{"line":2439,"column":1,"offset":48432},"end":{"line":2440,"column":20,"offset":48525}}}],"position":{"start":{"line":2439,"column":1,"offset":48432},"end":{"line":2440,"column":20,"offset":48525}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2442,"column":1,"offset":48527},"end":{"line":2442,"column":7,"offset":48533}}},{"type":"raw","value":"<code class=\"language-text\">os.path.join</code>","position":{"start":{"line":2442,"column":7,"offset":48533},"end":{"line":2442,"column":21,"offset":48547}}},{"type":"text","value":" on Windows:","position":{"start":{"line":2442,"column":21,"offset":48547},"end":{"line":2442,"column":33,"offset":48559}}}],"position":{"start":{"line":2442,"column":1,"offset":48527},"end":{"line":2442,"column":33,"offset":48559}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">my_files <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'accounts.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'details.csv'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'invite.docx'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> filename <span class=\"token keyword\">in</span> my_files<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\Users\\\\asweigart'</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2444,"column":1,"offset":48561},"end":{"line":2449,"column":4,"offset":48717}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2451,"column":1,"offset":48719},"end":{"line":2451,"column":7,"offset":48725}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2451,"column":7,"offset":48725},"end":{"line":2451,"column":16,"offset":48734}}},{"type":"text","value":" on ","position":{"start":{"line":2451,"column":16,"offset":48734},"end":{"line":2451,"column":20,"offset":48738}}},{"type":"text","value":"*","position":{"start":{"line":2451,"column":20,"offset":48738},"end":{"line":2451,"column":22,"offset":48740}}},{"type":"text","value":"nix:","position":{"start":{"line":2451,"column":22,"offset":48740},"end":{"line":2451,"column":26,"offset":48744}}}],"position":{"start":{"line":2451,"column":1,"offset":48719},"end":{"line":2451,"column":26,"offset":48744}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">my_files <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'accounts.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'details.csv'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'invite.docx'</span><span class=\"token punctuation\">]</span>\nhome <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">.</span>home<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> filename <span class=\"token keyword\">in</span> my_files<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>home <span class=\"token operator\">/</span> filename<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2453,"column":1,"offset":48746},"end":{"line":2458,"column":4,"offset":48889}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Current Working Directory","position":{"start":{"line":2460,"column":5,"offset":48895},"end":{"line":2460,"column":34,"offset":48924}}}],"position":{"start":{"line":2460,"column":1,"offset":48891},"end":{"line":2460,"column":34,"offset":48924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2462,"column":1,"offset":48926},"end":{"line":2462,"column":7,"offset":48932}}},{"type":"raw","value":"<code class=\"language-text\">os</code>","position":{"start":{"line":2462,"column":7,"offset":48932},"end":{"line":2462,"column":11,"offset":48936}}},{"type":"text","value":" on Windows:","position":{"start":{"line":2462,"column":11,"offset":48936},"end":{"line":2462,"column":23,"offset":48948}}}],"position":{"start":{"line":2462,"column":1,"offset":48926},"end":{"line":2462,"column":23,"offset":48948}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\nos<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2464,"column":1,"offset":48950},"end":{"line":2468,"column":4,"offset":48986}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>chdir<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\Windows\\\\System32'</span><span class=\"token punctuation\">)</span>\nos<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2470,"column":1,"offset":48988},"end":{"line":2473,"column":4,"offset":49047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2475,"column":1,"offset":49049},"end":{"line":2475,"column":7,"offset":49055}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2475,"column":7,"offset":49055},"end":{"line":2475,"column":16,"offset":49064}}},{"type":"text","value":" on ","position":{"start":{"line":2475,"column":16,"offset":49064},"end":{"line":2475,"column":20,"offset":49068}}},{"type":"text","value":"*","position":{"start":{"line":2475,"column":20,"offset":49068},"end":{"line":2475,"column":22,"offset":49070}}},{"type":"text","value":"nix:","position":{"start":{"line":2475,"column":22,"offset":49070},"end":{"line":2475,"column":26,"offset":49074}}}],"position":{"start":{"line":2475,"column":1,"offset":49049},"end":{"line":2475,"column":26,"offset":49074}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n<span class=\"token keyword\">from</span> os <span class=\"token keyword\">import</span> chdir\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2477,"column":1,"offset":49076},"end":{"line":2482,"column":4,"offset":49154}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">chdir<span class=\"token punctuation\">(</span><span class=\"token string\">'/usr/lib/python3.6'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2484,"column":1,"offset":49156},"end":{"line":2487,"column":4,"offset":49215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Creating New Folders","position":{"start":{"line":2489,"column":5,"offset":49221},"end":{"line":2489,"column":25,"offset":49241}}}],"position":{"start":{"line":2489,"column":1,"offset":49217},"end":{"line":2489,"column":25,"offset":49241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2491,"column":1,"offset":49243},"end":{"line":2491,"column":7,"offset":49249}}},{"type":"raw","value":"<code class=\"language-text\">os</code>","position":{"start":{"line":2491,"column":7,"offset":49249},"end":{"line":2491,"column":11,"offset":49253}}},{"type":"text","value":" on Windows:","position":{"start":{"line":2491,"column":11,"offset":49253},"end":{"line":2491,"column":23,"offset":49265}}}],"position":{"start":{"line":2491,"column":1,"offset":49243},"end":{"line":2491,"column":23,"offset":49265}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\nos<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\delicious\\\\walnut\\\\waffles'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2493,"column":1,"offset":49267},"end":{"line":2497,"column":4,"offset":49337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2499,"column":1,"offset":49339},"end":{"line":2499,"column":7,"offset":49345}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2499,"column":7,"offset":49345},"end":{"line":2499,"column":16,"offset":49354}}},{"type":"text","value":" on ","position":{"start":{"line":2499,"column":16,"offset":49354},"end":{"line":2499,"column":20,"offset":49358}}},{"type":"text","value":"*","position":{"start":{"line":2499,"column":20,"offset":49358},"end":{"line":2499,"column":22,"offset":49360}}},{"type":"text","value":"nix:","position":{"start":{"line":2499,"column":22,"offset":49360},"end":{"line":2499,"column":26,"offset":49364}}}],"position":{"start":{"line":2499,"column":1,"offset":49339},"end":{"line":2499,"column":26,"offset":49364}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\ncwd <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>cwd <span class=\"token operator\">/</span> <span class=\"token string\">'delicious'</span> <span class=\"token operator\">/</span> <span class=\"token string\">'walnut'</span> <span class=\"token operator\">/</span> <span class=\"token string\">'waffles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2501,"column":1,"offset":49366},"end":{"line":2505,"column":4,"offset":49472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Oh no, we got a nasty error! The reason is that the 'delicious' directory does\nnot exist, so we cannot make the 'walnut' and the 'waffles' directories under\nit. To fix this, do:","position":{"start":{"line":2507,"column":1,"offset":49474},"end":{"line":2509,"column":21,"offset":49651}}}],"position":{"start":{"line":2507,"column":1,"offset":49474},"end":{"line":2509,"column":21,"offset":49651}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\ncwd <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>cwd <span class=\"token operator\">/</span> <span class=\"token string\">'delicious'</span> <span class=\"token operator\">/</span> <span class=\"token string\">'walnut'</span> <span class=\"token operator\">/</span> <span class=\"token string\">'waffles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span>parents<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2511,"column":1,"offset":49653},"end":{"line":2515,"column":4,"offset":49771}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And all is good :)","position":{"start":{"line":2517,"column":1,"offset":49773},"end":{"line":2517,"column":19,"offset":49791}}}],"position":{"start":{"line":2517,"column":1,"offset":49773},"end":{"line":2517,"column":19,"offset":49791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Absolute vs. Relative Paths","position":{"start":{"line":2519,"column":5,"offset":49797},"end":{"line":2519,"column":32,"offset":49824}}}],"position":{"start":{"line":2519,"column":1,"offset":49793},"end":{"line":2519,"column":32,"offset":49824}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are two ways to specify a file path.","position":{"start":{"line":2521,"column":1,"offset":49826},"end":{"line":2521,"column":43,"offset":49868}}}],"position":{"start":{"line":2521,"column":1,"offset":49826},"end":{"line":2521,"column":43,"offset":49868}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"An absolute path, which always begins with the root folder","position":{"start":{"line":2523,"column":5,"offset":49874},"end":{"line":2523,"column":63,"offset":49932}}}],"position":{"start":{"line":2523,"column":1,"offset":49870},"end":{"line":2523,"column":63,"offset":49932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A relative path, which is relative to the program's current working directory","position":{"start":{"line":2524,"column":5,"offset":49937},"end":{"line":2524,"column":82,"offset":50014}}}],"position":{"start":{"line":2524,"column":1,"offset":49933},"end":{"line":2524,"column":82,"offset":50014}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2523,"column":1,"offset":49870},"end":{"line":2524,"column":82,"offset":50014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are also the dot (.) and dot-dot (..) folders. These are not real folders but special names that can be used in a path. A single period (\"dot\") for a folder name is shorthand for \"this directory.\" Two periods (\"dot-dot\") means \"the parent folder.\"","position":{"start":{"line":2526,"column":1,"offset":50016},"end":{"line":2526,"column":254,"offset":50269}}}],"position":{"start":{"line":2526,"column":1,"offset":50016},"end":{"line":2526,"column":254,"offset":50269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Handling Absolute and Relative Paths","position":{"start":{"line":2528,"column":5,"offset":50275},"end":{"line":2528,"column":41,"offset":50311}}}],"position":{"start":{"line":2528,"column":1,"offset":50271},"end":{"line":2528,"column":41,"offset":50311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To see if a path is an absolute path:","position":{"start":{"line":2530,"column":1,"offset":50313},"end":{"line":2530,"column":38,"offset":50350}}}],"position":{"start":{"line":2530,"column":1,"offset":50313},"end":{"line":2530,"column":38,"offset":50350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2532,"column":1,"offset":50352},"end":{"line":2532,"column":7,"offset":50358}}},{"type":"raw","value":"<code class=\"language-text\">os.path</code>","position":{"start":{"line":2532,"column":7,"offset":50358},"end":{"line":2532,"column":16,"offset":50367}}},{"type":"text","value":" on ","position":{"start":{"line":2532,"column":16,"offset":50367},"end":{"line":2532,"column":20,"offset":50371}}},{"type":"text","value":"*","position":{"start":{"line":2532,"column":20,"offset":50371},"end":{"line":2532,"column":22,"offset":50373}}},{"type":"text","value":"nix:","position":{"start":{"line":2532,"column":22,"offset":50373},"end":{"line":2532,"column":26,"offset":50377}}}],"position":{"start":{"line":2532,"column":1,"offset":50352},"end":{"line":2532,"column":26,"offset":50377}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\nos<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isabs<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2534,"column":1,"offset":50379},"end":{"line":2538,"column":4,"offset":50422}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isabs<span class=\"token punctuation\">(</span><span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2540,"column":1,"offset":50424},"end":{"line":2542,"column":4,"offset":50457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2544,"column":1,"offset":50459},"end":{"line":2544,"column":7,"offset":50465}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2544,"column":7,"offset":50465},"end":{"line":2544,"column":16,"offset":50474}}},{"type":"text","value":" on ","position":{"start":{"line":2544,"column":16,"offset":50474},"end":{"line":2544,"column":20,"offset":50478}}},{"type":"text","value":"*","position":{"start":{"line":2544,"column":20,"offset":50478},"end":{"line":2544,"column":22,"offset":50480}}},{"type":"text","value":"nix:","position":{"start":{"line":2544,"column":22,"offset":50480},"end":{"line":2544,"column":26,"offset":50484}}}],"position":{"start":{"line":2544,"column":1,"offset":50459},"end":{"line":2544,"column":26,"offset":50484}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\nPath<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>is_absolute<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2546,"column":1,"offset":50486},"end":{"line":2549,"column":4,"offset":50548}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Path<span class=\"token punctuation\">(</span><span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>is_absolute<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2551,"column":1,"offset":50550},"end":{"line":2553,"column":4,"offset":50588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can extract an absolute path with both ","position":{"start":{"line":2555,"column":1,"offset":50590},"end":{"line":2555,"column":44,"offset":50633}}},{"type":"raw","value":"<code class=\"language-text\">os.path</code>","position":{"start":{"line":2555,"column":44,"offset":50633},"end":{"line":2555,"column":53,"offset":50642}}},{"type":"text","value":" and ","position":{"start":{"line":2555,"column":53,"offset":50642},"end":{"line":2555,"column":58,"offset":50647}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2555,"column":58,"offset":50647},"end":{"line":2555,"column":67,"offset":50656}}}],"position":{"start":{"line":2555,"column":1,"offset":50590},"end":{"line":2555,"column":67,"offset":50656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2557,"column":1,"offset":50658},"end":{"line":2557,"column":7,"offset":50664}}},{"type":"raw","value":"<code class=\"language-text\">os.path</code>","position":{"start":{"line":2557,"column":7,"offset":50664},"end":{"line":2557,"column":16,"offset":50673}}},{"type":"text","value":" on ","position":{"start":{"line":2557,"column":16,"offset":50673},"end":{"line":2557,"column":20,"offset":50677}}},{"type":"text","value":"*","position":{"start":{"line":2557,"column":20,"offset":50677},"end":{"line":2557,"column":22,"offset":50679}}},{"type":"text","value":"nix:","position":{"start":{"line":2557,"column":22,"offset":50679},"end":{"line":2557,"column":26,"offset":50683}}}],"position":{"start":{"line":2557,"column":1,"offset":50658},"end":{"line":2557,"column":26,"offset":50683}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\nos<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2559,"column":1,"offset":50685},"end":{"line":2563,"column":4,"offset":50721}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span><span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2565,"column":1,"offset":50723},"end":{"line":2567,"column":4,"offset":50758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2569,"column":1,"offset":50760},"end":{"line":2569,"column":7,"offset":50766}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2569,"column":7,"offset":50766},"end":{"line":2569,"column":16,"offset":50775}}},{"type":"text","value":" on ","position":{"start":{"line":2569,"column":16,"offset":50775},"end":{"line":2569,"column":20,"offset":50779}}},{"type":"text","value":"*","position":{"start":{"line":2569,"column":20,"offset":50779},"end":{"line":2569,"column":22,"offset":50781}}},{"type":"text","value":"nix:","position":{"start":{"line":2569,"column":22,"offset":50781},"end":{"line":2569,"column":26,"offset":50785}}}],"position":{"start":{"line":2569,"column":1,"offset":50760},"end":{"line":2569,"column":26,"offset":50785}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span>cwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2571,"column":1,"offset":50787},"end":{"line":2575,"column":4,"offset":50844}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">(</span><span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2577,"column":1,"offset":50846},"end":{"line":2579,"column":4,"offset":50887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can get a relative path from a starting path to another path.","position":{"start":{"line":2581,"column":1,"offset":50889},"end":{"line":2581,"column":66,"offset":50954}}}],"position":{"start":{"line":2581,"column":1,"offset":50889},"end":{"line":2581,"column":66,"offset":50954}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2583,"column":1,"offset":50956},"end":{"line":2583,"column":7,"offset":50962}}},{"type":"raw","value":"<code class=\"language-text\">os.path</code>","position":{"start":{"line":2583,"column":7,"offset":50962},"end":{"line":2583,"column":16,"offset":50971}}},{"type":"text","value":" on ","position":{"start":{"line":2583,"column":16,"offset":50971},"end":{"line":2583,"column":20,"offset":50975}}},{"type":"text","value":"*","position":{"start":{"line":2583,"column":20,"offset":50975},"end":{"line":2583,"column":22,"offset":50977}}},{"type":"text","value":"nix:","position":{"start":{"line":2583,"column":22,"offset":50977},"end":{"line":2583,"column":26,"offset":50981}}}],"position":{"start":{"line":2583,"column":1,"offset":50956},"end":{"line":2583,"column":26,"offset":50981}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\nos<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>relpath<span class=\"token punctuation\">(</span><span class=\"token string\">'/etc/passwd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2585,"column":1,"offset":50983},"end":{"line":2589,"column":4,"offset":51043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2591,"column":1,"offset":51045},"end":{"line":2591,"column":7,"offset":51051}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2591,"column":7,"offset":51051},"end":{"line":2591,"column":16,"offset":51060}}},{"type":"text","value":" on ","position":{"start":{"line":2591,"column":16,"offset":51060},"end":{"line":2591,"column":20,"offset":51064}}},{"type":"text","value":"*","position":{"start":{"line":2591,"column":20,"offset":51064},"end":{"line":2591,"column":22,"offset":51066}}},{"type":"text","value":"nix:","position":{"start":{"line":2591,"column":22,"offset":51066},"end":{"line":2591,"column":26,"offset":51070}}}],"position":{"start":{"line":2591,"column":1,"offset":51045},"end":{"line":2591,"column":26,"offset":51070}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">(</span><span class=\"token string\">'/etc/passwd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>relative_to<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2593,"column":1,"offset":51072},"end":{"line":2597,"column":4,"offset":51155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Checking Path Validity","position":{"start":{"line":2599,"column":5,"offset":51161},"end":{"line":2599,"column":27,"offset":51183}}}],"position":{"start":{"line":2599,"column":1,"offset":51157},"end":{"line":2599,"column":27,"offset":51183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Checking if a file/directory exists:","position":{"start":{"line":2601,"column":1,"offset":51185},"end":{"line":2601,"column":37,"offset":51221}}}],"position":{"start":{"line":2601,"column":1,"offset":51185},"end":{"line":2601,"column":37,"offset":51221}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2603,"column":1,"offset":51223},"end":{"line":2603,"column":7,"offset":51229}}},{"type":"raw","value":"<code class=\"language-text\">os.path</code>","position":{"start":{"line":2603,"column":7,"offset":51229},"end":{"line":2603,"column":16,"offset":51238}}},{"type":"text","value":" on ","position":{"start":{"line":2603,"column":16,"offset":51238},"end":{"line":2603,"column":20,"offset":51242}}},{"type":"text","value":"*","position":{"start":{"line":2603,"column":20,"offset":51242},"end":{"line":2603,"column":22,"offset":51244}}},{"type":"text","value":"nix:","position":{"start":{"line":2603,"column":22,"offset":51244},"end":{"line":2603,"column":26,"offset":51248}}}],"position":{"start":{"line":2603,"column":1,"offset":51223},"end":{"line":2603,"column":26,"offset":51248}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\nos<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2605,"column":1,"offset":51250},"end":{"line":2608,"column":4,"offset":51293}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string\">'setup.py'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2610,"column":1,"offset":51295},"end":{"line":2612,"column":4,"offset":51335}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string\">'/etc'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2614,"column":1,"offset":51337},"end":{"line":2616,"column":4,"offset":51373}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string\">'nonexistentfile'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2618,"column":1,"offset":51375},"end":{"line":2620,"column":4,"offset":51422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2622,"column":1,"offset":51424},"end":{"line":2622,"column":7,"offset":51430}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2622,"column":7,"offset":51430},"end":{"line":2622,"column":16,"offset":51439}}},{"type":"text","value":" on ","position":{"start":{"line":2622,"column":16,"offset":51439},"end":{"line":2622,"column":20,"offset":51443}}},{"type":"text","value":"*","position":{"start":{"line":2622,"column":20,"offset":51443},"end":{"line":2622,"column":22,"offset":51445}}},{"type":"text","value":"nix:","position":{"start":{"line":2622,"column":22,"offset":51445},"end":{"line":2622,"column":26,"offset":51449}}}],"position":{"start":{"line":2622,"column":1,"offset":51424},"end":{"line":2622,"column":26,"offset":51449}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\nPath<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2624,"column":1,"offset":51451},"end":{"line":2627,"column":4,"offset":51508}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Path<span class=\"token punctuation\">(</span><span class=\"token string\">'setup.py'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2629,"column":1,"offset":51510},"end":{"line":2631,"column":4,"offset":51549}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Path<span class=\"token punctuation\">(</span><span class=\"token string\">'/etc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2633,"column":1,"offset":51551},"end":{"line":2635,"column":4,"offset":51586}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Path<span class=\"token punctuation\">(</span><span class=\"token string\">'nonexistentfile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2637,"column":1,"offset":51588},"end":{"line":2639,"column":4,"offset":51634}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Checking if a path is a file:","position":{"start":{"line":2641,"column":1,"offset":51636},"end":{"line":2641,"column":30,"offset":51665}}}],"position":{"start":{"line":2641,"column":1,"offset":51636},"end":{"line":2641,"column":30,"offset":51665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2643,"column":1,"offset":51667},"end":{"line":2643,"column":7,"offset":51673}}},{"type":"raw","value":"<code class=\"language-text\">os.path</code>","position":{"start":{"line":2643,"column":7,"offset":51673},"end":{"line":2643,"column":16,"offset":51682}}},{"type":"text","value":" on ","position":{"start":{"line":2643,"column":16,"offset":51682},"end":{"line":2643,"column":20,"offset":51686}}},{"type":"text","value":"*","position":{"start":{"line":2643,"column":20,"offset":51686},"end":{"line":2643,"column":22,"offset":51688}}},{"type":"text","value":"nix:","position":{"start":{"line":2643,"column":22,"offset":51688},"end":{"line":2643,"column":26,"offset":51692}}}],"position":{"start":{"line":2643,"column":1,"offset":51667},"end":{"line":2643,"column":26,"offset":51692}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\nos<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span><span class=\"token string\">'setup.py'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2645,"column":1,"offset":51694},"end":{"line":2648,"column":4,"offset":51744}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span><span class=\"token string\">'/home'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2650,"column":1,"offset":51746},"end":{"line":2652,"column":4,"offset":51783}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span><span class=\"token string\">'nonexistentfile'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2654,"column":1,"offset":51785},"end":{"line":2656,"column":4,"offset":51832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2658,"column":1,"offset":51834},"end":{"line":2658,"column":7,"offset":51840}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2658,"column":7,"offset":51840},"end":{"line":2658,"column":16,"offset":51849}}},{"type":"text","value":" on ","position":{"start":{"line":2658,"column":16,"offset":51849},"end":{"line":2658,"column":20,"offset":51853}}},{"type":"text","value":"*","position":{"start":{"line":2658,"column":20,"offset":51853},"end":{"line":2658,"column":22,"offset":51855}}},{"type":"text","value":"nix:","position":{"start":{"line":2658,"column":22,"offset":51855},"end":{"line":2658,"column":26,"offset":51859}}}],"position":{"start":{"line":2658,"column":1,"offset":51834},"end":{"line":2658,"column":26,"offset":51859}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\nPath<span class=\"token punctuation\">(</span><span class=\"token string\">'setup.py'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>is_file<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2660,"column":1,"offset":51861},"end":{"line":2664,"column":4,"offset":51927}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Path<span class=\"token punctuation\">(</span><span class=\"token string\">'/home'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>is_file<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2666,"column":1,"offset":51929},"end":{"line":2668,"column":4,"offset":51966}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Path<span class=\"token punctuation\">(</span><span class=\"token string\">'nonexistentfile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>is_file<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2670,"column":1,"offset":51968},"end":{"line":2672,"column":4,"offset":52015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Checking if a path is a directory:","position":{"start":{"line":2674,"column":1,"offset":52017},"end":{"line":2674,"column":35,"offset":52051}}}],"position":{"start":{"line":2674,"column":1,"offset":52017},"end":{"line":2674,"column":35,"offset":52051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2676,"column":1,"offset":52053},"end":{"line":2676,"column":7,"offset":52059}}},{"type":"raw","value":"<code class=\"language-text\">os.path</code>","position":{"start":{"line":2676,"column":7,"offset":52059},"end":{"line":2676,"column":16,"offset":52068}}},{"type":"text","value":" on ","position":{"start":{"line":2676,"column":16,"offset":52068},"end":{"line":2676,"column":20,"offset":52072}}},{"type":"text","value":"*","position":{"start":{"line":2676,"column":20,"offset":52072},"end":{"line":2676,"column":22,"offset":52074}}},{"type":"text","value":"nix:","position":{"start":{"line":2676,"column":22,"offset":52074},"end":{"line":2676,"column":26,"offset":52078}}}],"position":{"start":{"line":2676,"column":1,"offset":52053},"end":{"line":2676,"column":26,"offset":52078}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\nos<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2678,"column":1,"offset":52080},"end":{"line":2681,"column":4,"offset":52122}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span><span class=\"token string\">'setup.py'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2683,"column":1,"offset":52124},"end":{"line":2685,"column":4,"offset":52163}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span><span class=\"token string\">'/spam'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2687,"column":1,"offset":52165},"end":{"line":2689,"column":4,"offset":52201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2691,"column":1,"offset":52203},"end":{"line":2691,"column":7,"offset":52209}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2691,"column":7,"offset":52209},"end":{"line":2691,"column":16,"offset":52218}}},{"type":"text","value":" on ","position":{"start":{"line":2691,"column":16,"offset":52218},"end":{"line":2691,"column":20,"offset":52222}}},{"type":"text","value":"*","position":{"start":{"line":2691,"column":20,"offset":52222},"end":{"line":2691,"column":22,"offset":52224}}},{"type":"text","value":"nix:","position":{"start":{"line":2691,"column":22,"offset":52224},"end":{"line":2691,"column":26,"offset":52228}}}],"position":{"start":{"line":2691,"column":1,"offset":52203},"end":{"line":2691,"column":26,"offset":52228}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\nPath<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>is_dir<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2693,"column":1,"offset":52230},"end":{"line":2697,"column":4,"offset":52288}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Path<span class=\"token punctuation\">(</span><span class=\"token string\">'setup.py'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>is_dir<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2699,"column":1,"offset":52290},"end":{"line":2701,"column":4,"offset":52329}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Path<span class=\"token punctuation\">(</span><span class=\"token string\">'/spam'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>is_dir<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2703,"column":1,"offset":52331},"end":{"line":2705,"column":4,"offset":52367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Finding File Sizes and Folder Contents","position":{"start":{"line":2707,"column":5,"offset":52373},"end":{"line":2707,"column":43,"offset":52411}}}],"position":{"start":{"line":2707,"column":1,"offset":52369},"end":{"line":2707,"column":43,"offset":52411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Getting a file's size in bytes:","position":{"start":{"line":2709,"column":1,"offset":52413},"end":{"line":2709,"column":32,"offset":52444}}}],"position":{"start":{"line":2709,"column":1,"offset":52413},"end":{"line":2709,"column":32,"offset":52444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2711,"column":1,"offset":52446},"end":{"line":2711,"column":7,"offset":52452}}},{"type":"raw","value":"<code class=\"language-text\">os.path</code>","position":{"start":{"line":2711,"column":7,"offset":52452},"end":{"line":2711,"column":16,"offset":52461}}},{"type":"text","value":" on Windows:","position":{"start":{"line":2711,"column":16,"offset":52461},"end":{"line":2711,"column":28,"offset":52473}}}],"position":{"start":{"line":2711,"column":1,"offset":52446},"end":{"line":2711,"column":28,"offset":52473}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\nos<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>getsize<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\Windows\\\\System32\\\\calc.exe'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2713,"column":1,"offset":52475},"end":{"line":2716,"column":4,"offset":52549}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2718,"column":1,"offset":52551},"end":{"line":2718,"column":7,"offset":52557}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2718,"column":7,"offset":52557},"end":{"line":2718,"column":16,"offset":52566}}},{"type":"text","value":" on ","position":{"start":{"line":2718,"column":16,"offset":52566},"end":{"line":2718,"column":20,"offset":52570}}},{"type":"text","value":"*","position":{"start":{"line":2718,"column":20,"offset":52570},"end":{"line":2718,"column":22,"offset":52572}}},{"type":"text","value":"nix:","position":{"start":{"line":2718,"column":22,"offset":52572},"end":{"line":2718,"column":26,"offset":52576}}}],"position":{"start":{"line":2718,"column":1,"offset":52551},"end":{"line":2718,"column":26,"offset":52576}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\nstat <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span><span class=\"token string\">'/bin/python3.6'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stat<span class=\"token punctuation\">)</span> <span class=\"token comment\"># stat contains some other information about the file as well</span></code></pre></div>","position":{"start":{"line":2720,"column":1,"offset":52578},"end":{"line":2725,"column":4,"offset":52728}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stat<span class=\"token punctuation\">.</span>st_size<span class=\"token punctuation\">)</span> <span class=\"token comment\"># size in bytes</span></code></pre></div>","position":{"start":{"line":2727,"column":1,"offset":52730},"end":{"line":2729,"column":4,"offset":52779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Listing directory contents using ","position":{"start":{"line":2731,"column":1,"offset":52781},"end":{"line":2731,"column":34,"offset":52814}}},{"type":"raw","value":"<code class=\"language-text\">os.listdir</code>","position":{"start":{"line":2731,"column":34,"offset":52814},"end":{"line":2731,"column":46,"offset":52826}}},{"type":"text","value":" on Windows:","position":{"start":{"line":2731,"column":46,"offset":52826},"end":{"line":2731,"column":58,"offset":52838}}}],"position":{"start":{"line":2731,"column":1,"offset":52781},"end":{"line":2731,"column":58,"offset":52838}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\nos<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\Windows\\\\System32'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2733,"column":1,"offset":52840},"end":{"line":2736,"column":4,"offset":52899}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Listing directory contents using ","position":{"start":{"line":2738,"column":1,"offset":52901},"end":{"line":2738,"column":34,"offset":52934}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2738,"column":34,"offset":52934},"end":{"line":2738,"column":43,"offset":52943}}},{"type":"text","value":" on ","position":{"start":{"line":2738,"column":43,"offset":52943},"end":{"line":2738,"column":47,"offset":52947}}},{"type":"text","value":"*","position":{"start":{"line":2738,"column":47,"offset":52947},"end":{"line":2738,"column":49,"offset":52949}}},{"type":"text","value":"nix:","position":{"start":{"line":2738,"column":49,"offset":52949},"end":{"line":2738,"column":53,"offset":52953}}}],"position":{"start":{"line":2738,"column":1,"offset":52901},"end":{"line":2738,"column":53,"offset":52953}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\n\n<span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> Path<span class=\"token punctuation\">(</span><span class=\"token string\">'/usr/bin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>iterdir<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2740,"column":1,"offset":52955},"end":{"line":2745,"column":4,"offset":53044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To find the total size of all the files in this directory:","position":{"start":{"line":2747,"column":1,"offset":53046},"end":{"line":2747,"column":59,"offset":53104}}}],"position":{"start":{"line":2747,"column":1,"offset":53046},"end":{"line":2747,"column":59,"offset":53104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"WARNING","position":{"start":{"line":2749,"column":3,"offset":53108},"end":{"line":2749,"column":10,"offset":53115}}}],"position":{"start":{"line":2749,"column":1,"offset":53106},"end":{"line":2749,"column":12,"offset":53117}}},{"type":"text","value":": Directories themselves also have a size! So you might want to\ncheck for whether a path is a file or directory using the methods in the methods discussed in the above section!","position":{"start":{"line":2749,"column":12,"offset":53117},"end":{"line":2750,"column":113,"offset":53293}}}],"position":{"start":{"line":2749,"column":1,"offset":53106},"end":{"line":2750,"column":113,"offset":53293}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2752,"column":1,"offset":53295},"end":{"line":2752,"column":7,"offset":53301}}},{"type":"raw","value":"<code class=\"language-text\">os.path.getsize()</code>","position":{"start":{"line":2752,"column":7,"offset":53301},"end":{"line":2752,"column":26,"offset":53320}}},{"type":"text","value":" and ","position":{"start":{"line":2752,"column":26,"offset":53320},"end":{"line":2752,"column":31,"offset":53325}}},{"type":"raw","value":"<code class=\"language-text\">os.listdir()</code>","position":{"start":{"line":2752,"column":31,"offset":53325},"end":{"line":2752,"column":45,"offset":53339}}},{"type":"text","value":" together on Windows:","position":{"start":{"line":2752,"column":45,"offset":53339},"end":{"line":2752,"column":66,"offset":53360}}}],"position":{"start":{"line":2752,"column":1,"offset":53295},"end":{"line":2752,"column":66,"offset":53360}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\ntotal_size <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> filename <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\Windows\\\\System32'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      total_size <span class=\"token operator\">=</span> total_size <span class=\"token operator\">+</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>getsize<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\Windows\\\\System32'</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>total_size<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2754,"column":1,"offset":53362},"end":{"line":2763,"column":4,"offset":53571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2765,"column":1,"offset":53573},"end":{"line":2765,"column":7,"offset":53579}}},{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2765,"column":7,"offset":53579},"end":{"line":2765,"column":16,"offset":53588}}},{"type":"text","value":" on ","position":{"start":{"line":2765,"column":16,"offset":53588},"end":{"line":2765,"column":20,"offset":53592}}},{"type":"text","value":"*","position":{"start":{"line":2765,"column":20,"offset":53592},"end":{"line":2765,"column":22,"offset":53594}}},{"type":"text","value":"nix:","position":{"start":{"line":2765,"column":22,"offset":53594},"end":{"line":2765,"column":26,"offset":53598}}}],"position":{"start":{"line":2765,"column":1,"offset":53573},"end":{"line":2765,"column":26,"offset":53598}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\ntotal_size <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> sub_path <span class=\"token keyword\">in</span> Path<span class=\"token punctuation\">(</span><span class=\"token string\">'/usr/bin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>iterdir<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    total_size <span class=\"token operator\">+=</span> sub_path<span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>st_size\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>total_size<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2767,"column":1,"offset":53600},"end":{"line":2775,"column":4,"offset":53759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Copying Files and Folders","position":{"start":{"line":2777,"column":5,"offset":53765},"end":{"line":2777,"column":30,"offset":53790}}}],"position":{"start":{"line":2777,"column":1,"offset":53761},"end":{"line":2777,"column":30,"offset":53790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The shutil module provides functions for copying files, as well as entire folders.","position":{"start":{"line":2779,"column":1,"offset":53792},"end":{"line":2779,"column":83,"offset":53874}}}],"position":{"start":{"line":2779,"column":1,"offset":53792},"end":{"line":2779,"column":83,"offset":53874}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> shutil<span class=\"token punctuation\">,</span> os\n\nos<span class=\"token punctuation\">.</span>chdir<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\'</span><span class=\"token punctuation\">)</span>\n\nshutil<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\spam.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C:\\\\delicious'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2781,"column":1,"offset":53876},"end":{"line":2787,"column":4,"offset":53971}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">shutil<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token string\">'eggs.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C:\\\\delicious\\\\eggs2.txt'</span><span class=\"token punctuation\">)</span>\n   <span class=\"token string\">'C:\\\\delicious\\\\eggs2.txt'</span></code></pre></div>","position":{"start":{"line":2789,"column":1,"offset":53973},"end":{"line":2792,"column":4,"offset":54068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While shutil.copy() will copy a single file, shutil.copytree() will copy an entire folder and every folder and file contained in it:","position":{"start":{"line":2794,"column":1,"offset":54070},"end":{"line":2794,"column":133,"offset":54202}}}],"position":{"start":{"line":2794,"column":1,"offset":54070},"end":{"line":2794,"column":133,"offset":54202}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> shutil<span class=\"token punctuation\">,</span> os\n\nos<span class=\"token punctuation\">.</span>chdir<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\'</span><span class=\"token punctuation\">)</span>\nshutil<span class=\"token punctuation\">.</span>copytree<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\bacon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C:\\\\bacon_backup'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2796,"column":1,"offset":54204},"end":{"line":2801,"column":4,"offset":54302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Moving and Renaming Files and Folders","position":{"start":{"line":2803,"column":5,"offset":54308},"end":{"line":2803,"column":42,"offset":54345}}}],"position":{"start":{"line":2803,"column":1,"offset":54304},"end":{"line":2803,"column":42,"offset":54345}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> shutil\n\nshutil<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\bacon.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C:\\\\eggs'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2805,"column":1,"offset":54347},"end":{"line":2809,"column":4,"offset":54416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The destination path can also specify a filename. In the following example, the source file is moved and renamed:","position":{"start":{"line":2811,"column":1,"offset":54418},"end":{"line":2811,"column":114,"offset":54531}}}],"position":{"start":{"line":2811,"column":1,"offset":54418},"end":{"line":2811,"column":114,"offset":54531}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">shutil<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\bacon.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C:\\\\eggs\\\\new_bacon.txt'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2813,"column":1,"offset":54533},"end":{"line":2815,"column":4,"offset":54602}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If there is no eggs folder, then move() will rename bacon.txt to a file named eggs.","position":{"start":{"line":2817,"column":1,"offset":54604},"end":{"line":2817,"column":84,"offset":54687}}}],"position":{"start":{"line":2817,"column":1,"offset":54604},"end":{"line":2817,"column":84,"offset":54687}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">shutil<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\bacon.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C:\\\\eggs'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2819,"column":1,"offset":54689},"end":{"line":2821,"column":4,"offset":54743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Permanently Deleting Files and Folders","position":{"start":{"line":2823,"column":5,"offset":54749},"end":{"line":2823,"column":43,"offset":54787}}}],"position":{"start":{"line":2823,"column":1,"offset":54745},"end":{"line":2823,"column":43,"offset":54787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Calling os.unlink(path) or Path.unlink() will delete the file at path.","position":{"start":{"line":2825,"column":5,"offset":54793},"end":{"line":2825,"column":75,"offset":54863}}}],"position":{"start":{"line":2825,"column":1,"offset":54789},"end":{"line":2825,"column":75,"offset":54863}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"-","position":{"start":{"line":2826,"column":1,"offset":54864},"end":{"line":2826,"column":2,"offset":54865}}}],"position":{"start":{"line":2826,"column":1,"offset":54864},"end":{"line":2826,"column":2,"offset":54865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Calling os.rmdir(path) or Path.rmdir() will delete the folder at path. This folder must be empty of any files or folders.","position":{"start":{"line":2827,"column":5,"offset":54870},"end":{"line":2827,"column":126,"offset":54991}}}],"position":{"start":{"line":2827,"column":1,"offset":54866},"end":{"line":2828,"column":1,"offset":54992}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Calling shutil.rmtree(path) will remove the folder at path, and all files and folders it contains will also be deleted.","position":{"start":{"line":2829,"column":5,"offset":54997},"end":{"line":2829,"column":124,"offset":55116}}}],"position":{"start":{"line":2829,"column":1,"offset":54993},"end":{"line":2829,"column":124,"offset":55116}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2825,"column":1,"offset":54789},"end":{"line":2829,"column":124,"offset":55116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Safe Deletes with the send2trash Module","position":{"start":{"line":2831,"column":5,"offset":55122},"end":{"line":2831,"column":44,"offset":55161}}}],"position":{"start":{"line":2831,"column":1,"offset":55118},"end":{"line":2831,"column":44,"offset":55161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can install this module by running pip install send2trash from a Terminal window.","position":{"start":{"line":2833,"column":1,"offset":55163},"end":{"line":2833,"column":86,"offset":55248}}}],"position":{"start":{"line":2833,"column":1,"offset":55163},"end":{"line":2833,"column":86,"offset":55248}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> send2trash\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bacon.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> bacon_file<span class=\"token punctuation\">:</span> <span class=\"token comment\"># creates the file</span>\n    bacon_file<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'Bacon is not a vegetable.'</span><span class=\"token punctuation\">)</span>\n\nsend2trash<span class=\"token punctuation\">.</span>send2trash<span class=\"token punctuation\">(</span><span class=\"token string\">'bacon.txt'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2835,"column":1,"offset":55250},"end":{"line":2842,"column":4,"offset":55430}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Walking a Directory Tree","position":{"start":{"line":2844,"column":5,"offset":55436},"end":{"line":2844,"column":29,"offset":55460}}}],"position":{"start":{"line":2844,"column":1,"offset":55432},"end":{"line":2844,"column":29,"offset":55460}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\n<span class=\"token keyword\">for</span> folder_name<span class=\"token punctuation\">,</span> subfolders<span class=\"token punctuation\">,</span> filenames <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\delicious'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The current folder is {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>folder_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> subfolder <span class=\"token keyword\">in</span> subfolders<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SUBFOLDER OF {}: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>folder_name<span class=\"token punctuation\">,</span> subfolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> filename <span class=\"token keyword\">in</span> filenames<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'FILE INSIDE {}: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>folder_name<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2846,"column":1,"offset":55462},"end":{"line":2858,"column":4,"offset":55826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">pathlib</code>","position":{"start":{"line":2860,"column":1,"offset":55828},"end":{"line":2860,"column":10,"offset":55837}}},{"type":"text","value":" provides a lot more functionality than the ones listed above,\nlike getting file name, getting file extension, reading/writing a file without\nmanually opening it, etc. Check out the\n","position":{"start":{"line":2860,"column":10,"offset":55837},"end":{"line":2863,"column":1,"offset":56019}}},{"type":"element","tagName":"a","properties":{"href":"https://docs.python.org/3/library/pathlib.html"},"children":[{"type":"text","value":"official documentation","position":{"start":{"line":2863,"column":2,"offset":56020},"end":{"line":2863,"column":24,"offset":56042}}}],"position":{"start":{"line":2863,"column":1,"offset":56019},"end":{"line":2863,"column":73,"offset":56091}}},{"type":"text","value":"\nif you want to know more!","position":{"start":{"line":2863,"column":73,"offset":56091},"end":{"line":2864,"column":26,"offset":56117}}}],"position":{"start":{"line":2860,"column":1,"offset":55828},"end":{"line":2864,"column":26,"offset":56117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Reading and Writing Files","position":{"start":{"line":2866,"column":4,"offset":56122},"end":{"line":2866,"column":29,"offset":56147}}}],"position":{"start":{"line":2866,"column":1,"offset":56119},"end":{"line":2866,"column":29,"offset":56147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The File Reading/Writing Process","position":{"start":{"line":2868,"column":5,"offset":56153},"end":{"line":2868,"column":37,"offset":56185}}}],"position":{"start":{"line":2868,"column":1,"offset":56149},"end":{"line":2868,"column":37,"offset":56185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To read/write to a file in Python, you will want to use the ","position":{"start":{"line":2870,"column":1,"offset":56187},"end":{"line":2870,"column":61,"offset":56247}}},{"type":"raw","value":"<code class=\"language-text\">with</code>","position":{"start":{"line":2870,"column":61,"offset":56247},"end":{"line":2870,"column":67,"offset":56253}}},{"type":"text","value":"\nstatement, which will close the file for you after you are done.","position":{"start":{"line":2870,"column":67,"offset":56253},"end":{"line":2871,"column":65,"offset":56318}}}],"position":{"start":{"line":2870,"column":1,"offset":56187},"end":{"line":2871,"column":65,"offset":56318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Opening and reading files with the open function","position":{"start":{"line":2873,"column":5,"offset":56324},"end":{"line":2873,"column":53,"offset":56372}}}],"position":{"start":{"line":2873,"column":1,"offset":56320},"end":{"line":2873,"column":53,"offset":56372}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\Users\\\\your_home_folder\\\\hello.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> hello_file<span class=\"token punctuation\">:</span>\n    hello_content <span class=\"token operator\">=</span> hello_file<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nhello_content</code></pre></div>","position":{"start":{"line":2875,"column":1,"offset":56374},"end":{"line":2880,"column":4,"offset":56507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Alternatively, you can use the ","position":{"start":{"line":2882,"column":1,"offset":56509},"end":{"line":2882,"column":32,"offset":56540}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"readlines()","position":{"start":{"line":2882,"column":33,"offset":56541},"end":{"line":2882,"column":44,"offset":56552}}}],"position":{"start":{"line":2882,"column":32,"offset":56540},"end":{"line":2882,"column":45,"offset":56553}}},{"type":"text","value":" method to get a list of string values from the file, one string for each line of text:","position":{"start":{"line":2882,"column":45,"offset":56553},"end":{"line":2882,"column":132,"offset":56640}}}],"position":{"start":{"line":2882,"column":1,"offset":56509},"end":{"line":2882,"column":132,"offset":56640}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sonnet29.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sonnet_file<span class=\"token punctuation\">:</span>\n    sonnet_file<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2884,"column":1,"offset":56642},"end":{"line":2887,"column":4,"offset":56725}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also iterate through the file line by line:","position":{"start":{"line":2889,"column":1,"offset":56727},"end":{"line":2889,"column":52,"offset":56778}}}],"position":{"start":{"line":2889,"column":1,"offset":56727},"end":{"line":2889,"column":52,"offset":56778}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sonnet29.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> sonnet_file<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> sonnet_file<span class=\"token punctuation\">:</span> <span class=\"token comment\"># note the new line character will be included in the line</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2891,"column":1,"offset":56780},"end":{"line":2895,"column":4,"offset":56951}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Writing to Files","position":{"start":{"line":2897,"column":5,"offset":56957},"end":{"line":2897,"column":21,"offset":56973}}}],"position":{"start":{"line":2897,"column":1,"offset":56953},"end":{"line":2897,"column":21,"offset":56973}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bacon.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> bacon_file<span class=\"token punctuation\">:</span>\n    bacon_file<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!\\n'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2899,"column":1,"offset":56975},"end":{"line":2902,"column":4,"offset":57070}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bacon.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> bacon_file<span class=\"token punctuation\">:</span>\n    bacon_file<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'Bacon is not a vegetable.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2904,"column":1,"offset":57072},"end":{"line":2907,"column":4,"offset":57178}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bacon.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> bacon_file<span class=\"token punctuation\">:</span>\n    content <span class=\"token operator\">=</span> bacon_file<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2909,"column":1,"offset":57180},"end":{"line":2914,"column":4,"offset":57279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Saving Variables with the shelve Module","position":{"start":{"line":2916,"column":5,"offset":57285},"end":{"line":2916,"column":44,"offset":57324}}}],"position":{"start":{"line":2916,"column":1,"offset":57281},"end":{"line":2916,"column":44,"offset":57324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To save variables:","position":{"start":{"line":2918,"column":1,"offset":57326},"end":{"line":2918,"column":19,"offset":57344}}}],"position":{"start":{"line":2918,"column":1,"offset":57326},"end":{"line":2918,"column":19,"offset":57344}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> shelve\n\ncats <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Zophie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Simon'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">with</span> shelve<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydata'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> shelf_file<span class=\"token punctuation\">:</span>\n    shelf_file<span class=\"token punctuation\">[</span><span class=\"token string\">'cats'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cats</code></pre></div>","position":{"start":{"line":2920,"column":1,"offset":57346},"end":{"line":2926,"column":4,"offset":57482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To open and read variables:","position":{"start":{"line":2928,"column":1,"offset":57484},"end":{"line":2928,"column":28,"offset":57511}}}],"position":{"start":{"line":2928,"column":1,"offset":57484},"end":{"line":2928,"column":28,"offset":57511}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> shelve<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydata'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> shelf_file<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>shelf_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>shelf_file<span class=\"token punctuation\">[</span><span class=\"token string\">'cats'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2930,"column":1,"offset":57513},"end":{"line":2934,"column":4,"offset":57626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just like dictionaries, shelf values have keys() and values() methods that will return list-like values of the keys and values in the shelf. Since these methods return list-like values instead of true lists, you should pass them to the list() function to get them in list form.","position":{"start":{"line":2936,"column":1,"offset":57628},"end":{"line":2936,"column":278,"offset":57905}}}],"position":{"start":{"line":2936,"column":1,"offset":57628},"end":{"line":2936,"column":278,"offset":57905}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> shelve<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydata'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> shelf_file<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>shelf_file<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>shelf_file<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2938,"column":1,"offset":57907},"end":{"line":2942,"column":4,"offset":58034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Saving Variables with pprint.pformat","position":{"start":{"line":2944,"column":5,"offset":58040},"end":{"line":2944,"column":41,"offset":58076}}}],"position":{"start":{"line":2944,"column":1,"offset":58036},"end":{"line":2944,"column":41,"offset":58076}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pprint\n\ncats <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Zophie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'desc'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'chubby'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Pooka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'desc'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'fluffy'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\npprint<span class=\"token punctuation\">.</span>pformat<span class=\"token punctuation\">(</span>cats<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2946,"column":1,"offset":58078},"end":{"line":2951,"column":4,"offset":58210}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCats.py'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> file_obj<span class=\"token punctuation\">:</span>\n    file_obj<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'cats = {}\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pprint<span class=\"token punctuation\">.</span>pformat<span class=\"token punctuation\">(</span>cats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2953,"column":1,"offset":58212},"end":{"line":2956,"column":4,"offset":58329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Reading ZIP Files","position":{"start":{"line":2958,"column":5,"offset":58335},"end":{"line":2958,"column":22,"offset":58352}}}],"position":{"start":{"line":2958,"column":1,"offset":58331},"end":{"line":2958,"column":22,"offset":58352}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> zipfile<span class=\"token punctuation\">,</span> os\n\nos<span class=\"token punctuation\">.</span>chdir<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># move to the folder with example.zip</span>\n<span class=\"token keyword\">with</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span><span class=\"token string\">'example.zip'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> example_zip<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>example_zip<span class=\"token punctuation\">.</span>namelist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    spam_info <span class=\"token operator\">=</span> example_zip<span class=\"token punctuation\">.</span>getinfo<span class=\"token punctuation\">(</span><span class=\"token string\">'spam.txt'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>spam_info<span class=\"token punctuation\">.</span>file_size<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>spam_info<span class=\"token punctuation\">.</span>compress_size<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Compressed file is %sx smaller!'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>spam_info<span class=\"token punctuation\">.</span>file_size <span class=\"token operator\">/</span> spam_info<span class=\"token punctuation\">.</span>compress_size<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2960,"column":1,"offset":58354},"end":{"line":2970,"column":4,"offset":58750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Extracting from ZIP Files","position":{"start":{"line":2972,"column":5,"offset":58756},"end":{"line":2972,"column":30,"offset":58781}}}],"position":{"start":{"line":2972,"column":1,"offset":58752},"end":{"line":2972,"column":30,"offset":58781}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The extractall() method for ZipFile objects extracts all the files and folders from a ZIP file into the current working directory.","position":{"start":{"line":2974,"column":1,"offset":58783},"end":{"line":2974,"column":131,"offset":58913}}}],"position":{"start":{"line":2974,"column":1,"offset":58783},"end":{"line":2974,"column":131,"offset":58913}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> zipfile<span class=\"token punctuation\">,</span> os\n\nos<span class=\"token punctuation\">.</span>chdir<span class=\"token punctuation\">(</span><span class=\"token string\">'C:\\\\'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># move to the folder with example.zip</span>\n\n<span class=\"token keyword\">with</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span><span class=\"token string\">'example.zip'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> example_zip<span class=\"token punctuation\">:</span>\n    example_zip<span class=\"token punctuation\">.</span>extractall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2976,"column":1,"offset":58915},"end":{"line":2983,"column":4,"offset":59088}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The extract() method for ZipFile objects will extract a single file from the ZIP file. Continue the interactive shell example:","position":{"start":{"line":2985,"column":1,"offset":59090},"end":{"line":2985,"column":127,"offset":59216}}}],"position":{"start":{"line":2985,"column":1,"offset":59090},"end":{"line":2985,"column":127,"offset":59216}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span><span class=\"token string\">'example.zip'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> example_zip<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>example_zip<span class=\"token punctuation\">.</span>extract<span class=\"token punctuation\">(</span><span class=\"token string\">'spam.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>example_zip<span class=\"token punctuation\">.</span>extract<span class=\"token punctuation\">(</span><span class=\"token string\">'spam.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C:\\\\some\\\\new\\\\folders'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2987,"column":1,"offset":59218},"end":{"line":2991,"column":4,"offset":59395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Creating and Adding to ZIP Files","position":{"start":{"line":2993,"column":5,"offset":59401},"end":{"line":2993,"column":37,"offset":59433}}}],"position":{"start":{"line":2993,"column":1,"offset":59397},"end":{"line":2993,"column":37,"offset":59433}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> zipfile\n\n<span class=\"token keyword\">with</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span><span class=\"token string\">'new.zip'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> new_zip<span class=\"token punctuation\">:</span>\n    new_zip<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'spam.txt'</span><span class=\"token punctuation\">,</span> compress_type<span class=\"token operator\">=</span>zipfile<span class=\"token punctuation\">.</span>ZIP_DEFLATED<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2995,"column":1,"offset":59435},"end":{"line":3000,"column":4,"offset":59579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This code will create a new ZIP file named new.zip that has the compressed contents of spam.txt.","position":{"start":{"line":3002,"column":1,"offset":59581},"end":{"line":3002,"column":97,"offset":59677}}}],"position":{"start":{"line":3002,"column":1,"offset":59581},"end":{"line":3002,"column":97,"offset":59677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"JSON, YAML and configuration files","position":{"start":{"line":3004,"column":4,"offset":59682},"end":{"line":3004,"column":38,"offset":59716}}}],"position":{"start":{"line":3004,"column":1,"offset":59679},"end":{"line":3004,"column":38,"offset":59716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"JSON","position":{"start":{"line":3006,"column":5,"offset":59722},"end":{"line":3006,"column":9,"offset":59726}}}],"position":{"start":{"line":3006,"column":1,"offset":59718},"end":{"line":3006,"column":9,"offset":59726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Open a JSON file with:","position":{"start":{"line":3008,"column":1,"offset":59728},"end":{"line":3008,"column":23,"offset":59750}}}],"position":{"start":{"line":3008,"column":1,"offset":59728},"end":{"line":3008,"column":23,"offset":59750}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filename.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    content <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3010,"column":1,"offset":59752},"end":{"line":3014,"column":4,"offset":59850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a JSON file with:","position":{"start":{"line":3016,"column":1,"offset":59852},"end":{"line":3016,"column":24,"offset":59875}}}],"position":{"start":{"line":3016,"column":1,"offset":59852},"end":{"line":3016,"column":24,"offset":59875}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n\ncontent <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Joe\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filename.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3018,"column":1,"offset":59877},"end":{"line":3024,"column":4,"offset":60021}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"YAML","position":{"start":{"line":3026,"column":5,"offset":60027},"end":{"line":3026,"column":9,"offset":60031}}}],"position":{"start":{"line":3026,"column":1,"offset":60023},"end":{"line":3026,"column":9,"offset":60031}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compared to JSON, YAML allows a much better humain maintainance and gives ability to add comments.\nIt is a convinient choice for configuration files where human will have to edit.","position":{"start":{"line":3028,"column":1,"offset":60033},"end":{"line":3029,"column":81,"offset":60212}}}],"position":{"start":{"line":3028,"column":1,"offset":60033},"end":{"line":3029,"column":81,"offset":60212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are two main librairies allowing to access to YAML files:","position":{"start":{"line":3031,"column":1,"offset":60214},"end":{"line":3031,"column":64,"offset":60277}}}],"position":{"start":{"line":3031,"column":1,"offset":60214},"end":{"line":3031,"column":64,"offset":60277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://pypi.python.org/pypi/PyYAML"},"children":[{"type":"text","value":"PyYaml","position":{"start":{"line":3033,"column":6,"offset":60284},"end":{"line":3033,"column":12,"offset":60290}}}],"position":{"start":{"line":3033,"column":5,"offset":60283},"end":{"line":3033,"column":50,"offset":60328}}}],"position":{"start":{"line":3033,"column":1,"offset":60279},"end":{"line":3033,"column":50,"offset":60328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://pypi.python.org/pypi/ruamel.yaml"},"children":[{"type":"text","value":"Ruamel.yaml","position":{"start":{"line":3034,"column":6,"offset":60334},"end":{"line":3034,"column":17,"offset":60345}}}],"position":{"start":{"line":3034,"column":5,"offset":60333},"end":{"line":3034,"column":60,"offset":60388}}}],"position":{"start":{"line":3034,"column":1,"offset":60329},"end":{"line":3034,"column":60,"offset":60388}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3033,"column":1,"offset":60279},"end":{"line":3034,"column":60,"offset":60388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Install them using ","position":{"start":{"line":3036,"column":1,"offset":60390},"end":{"line":3036,"column":20,"offset":60409}}},{"type":"raw","value":"<code class=\"language-text\">pip install</code>","position":{"start":{"line":3036,"column":20,"offset":60409},"end":{"line":3036,"column":33,"offset":60422}}},{"type":"text","value":" in your virtual environment.","position":{"start":{"line":3036,"column":33,"offset":60422},"end":{"line":3036,"column":62,"offset":60451}}}],"position":{"start":{"line":3036,"column":1,"offset":60390},"end":{"line":3036,"column":62,"offset":60451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first one it easier to use but the second one, Ruamel, implements much better the YAML\nspecification, and allow for example to modify a YAML content without altering comments.","position":{"start":{"line":3038,"column":1,"offset":60453},"end":{"line":3039,"column":89,"offset":60632}}}],"position":{"start":{"line":3038,"column":1,"offset":60453},"end":{"line":3039,"column":89,"offset":60632}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Open a YAML file with:","position":{"start":{"line":3041,"column":1,"offset":60634},"end":{"line":3041,"column":23,"offset":60656}}}],"position":{"start":{"line":3041,"column":1,"offset":60634},"end":{"line":3041,"column":23,"offset":60656}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> ruamel<span class=\"token punctuation\">.</span>yaml <span class=\"token keyword\">import</span> YAML\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filename.yaml\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    yaml<span class=\"token operator\">=</span>YAML<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    yaml<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3043,"column":1,"offset":60658},"end":{"line":3049,"column":4,"offset":60767}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Anyconfig","position":{"start":{"line":3051,"column":5,"offset":60773},"end":{"line":3051,"column":14,"offset":60782}}}],"position":{"start":{"line":3051,"column":1,"offset":60769},"end":{"line":3051,"column":14,"offset":60782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://pypi.python.org/pypi/anyconfig"},"children":[{"type":"text","value":"Anyconfig","position":{"start":{"line":3053,"column":2,"offset":60785},"end":{"line":3053,"column":11,"offset":60794}}}],"position":{"start":{"line":3053,"column":1,"offset":60784},"end":{"line":3053,"column":52,"offset":60835}}},{"type":"text","value":" is a very handy package allowing to abstract completly the underlying configuration file format. It allows to load a Python dictionary from JSON, YAML, TOML, and so on.","position":{"start":{"line":3053,"column":52,"offset":60835},"end":{"line":3053,"column":221,"offset":61004}}}],"position":{"start":{"line":3053,"column":1,"offset":60784},"end":{"line":3053,"column":221,"offset":61004}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Install it with:","position":{"start":{"line":3055,"column":1,"offset":61006},"end":{"line":3055,"column":17,"offset":61022}}}],"position":{"start":{"line":3055,"column":1,"offset":61006},"end":{"line":3055,"column":17,"offset":61022}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">```bashl anyconfig</code></pre></div>","position":{"start":{"line":3057,"column":1,"offset":61024},"end":{"line":3059,"column":4,"offset":61057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Usage:","position":{"start":{"line":3061,"column":1,"offset":61059},"end":{"line":3061,"column":7,"offset":61065}}}],"position":{"start":{"line":3061,"column":1,"offset":61059},"end":{"line":3061,"column":7,"offset":61065}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> anyconfig\n\nconf1 <span class=\"token operator\">=</span> anyconfig<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"/path/to/foo/conf.d/a.yml\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3063,"column":1,"offset":61067},"end":{"line":3067,"column":4,"offset":61150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Debugging","position":{"start":{"line":3069,"column":4,"offset":61155},"end":{"line":3069,"column":13,"offset":61164}}}],"position":{"start":{"line":3069,"column":1,"offset":61152},"end":{"line":3069,"column":13,"offset":61164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Raising Exceptions","position":{"start":{"line":3071,"column":5,"offset":61170},"end":{"line":3071,"column":23,"offset":61188}}}],"position":{"start":{"line":3071,"column":1,"offset":61166},"end":{"line":3071,"column":23,"offset":61188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Exceptions are raised with a raise statement. In code, a raise statement consists of the following:","position":{"start":{"line":3073,"column":1,"offset":61190},"end":{"line":3073,"column":100,"offset":61289}}}],"position":{"start":{"line":3073,"column":1,"offset":61190},"end":{"line":3073,"column":100,"offset":61289}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The raise keyword","position":{"start":{"line":3075,"column":5,"offset":61295},"end":{"line":3075,"column":22,"offset":61312}}}],"position":{"start":{"line":3075,"column":1,"offset":61291},"end":{"line":3075,"column":22,"offset":61312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A call to the Exception() function","position":{"start":{"line":3076,"column":5,"offset":61317},"end":{"line":3076,"column":39,"offset":61351}}}],"position":{"start":{"line":3076,"column":1,"offset":61313},"end":{"line":3076,"column":39,"offset":61351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A string with a helpful error message passed to the Exception() function","position":{"start":{"line":3077,"column":5,"offset":61356},"end":{"line":3077,"column":77,"offset":61428}}}],"position":{"start":{"line":3077,"column":1,"offset":61352},"end":{"line":3077,"column":77,"offset":61428}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3075,"column":1,"offset":61291},"end":{"line":3077,"column":77,"offset":61428}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'This is the error message.'</span><span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;pyshell#191>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'This is the error message.'</span><span class=\"token punctuation\">)</span>\nException<span class=\"token punctuation\">:</span> This <span class=\"token keyword\">is</span> the error message<span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":3079,"column":1,"offset":61430},"end":{"line":3085,"column":4,"offset":61656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Often it's the code that calls the function, not the function itself, that knows how to handle an expection. So you will commonly see a raise statement inside a function and the try and except statements in the code calling the function.","position":{"start":{"line":3087,"column":1,"offset":61658},"end":{"line":3087,"column":238,"offset":61895}}}],"position":{"start":{"line":3087,"column":1,"offset":61658},"end":{"line":3087,"column":238,"offset":61895}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">box_print</span><span class=\"token punctuation\">(</span>symbol<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>symbol<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Symbol must be a single character string.'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> width <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Width must be greater than 2.'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> height <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Height must be greater than 2.'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>symbol <span class=\"token operator\">*</span> width<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>height <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>symbol <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token string\">' '</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> symbol<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>symbol <span class=\"token operator\">*</span> width<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> sym<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'O'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'ZZ'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        box_print<span class=\"token punctuation\">(</span>sym<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> err<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An exception happened: '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3089,"column":1,"offset":61897},"end":{"line":3106,"column":4,"offset":62519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Getting the Traceback as a String","position":{"start":{"line":3108,"column":5,"offset":62525},"end":{"line":3108,"column":38,"offset":62558}}}],"position":{"start":{"line":3108,"column":1,"offset":62521},"end":{"line":3108,"column":38,"offset":62558}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The traceback is displayed by Python whenever a raised exception goes unhandled. But can also obtain it as a string by calling traceback.format_exc(). This function is useful if you want the information from an exception's traceback but also want an except statement to gracefully handle the exception. You will need to import Python's traceback module before calling this function.","position":{"start":{"line":3110,"column":1,"offset":62560},"end":{"line":3110,"column":383,"offset":62942}}}],"position":{"start":{"line":3110,"column":1,"offset":62560},"end":{"line":3110,"column":383,"offset":62942}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> traceback\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'This is the error message.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'errorInfo.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> error_file<span class=\"token punctuation\">:</span>\n         error_file<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>traceback<span class=\"token punctuation\">.</span>format_exc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The traceback info was written to errorInfo.txt.'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3112,"column":1,"offset":62944},"end":{"line":3121,"column":4,"offset":63204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The 116 is the return value from the write() method, since 116 characters were written to the file. The traceback text was written to errorInfo.txt.","position":{"start":{"line":3123,"column":1,"offset":63206},"end":{"line":3123,"column":149,"offset":63354}}}],"position":{"start":{"line":3123,"column":1,"offset":63206},"end":{"line":3123,"column":149,"offset":63354}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Traceback (most recent call last):\n  File \"&lt;pyshell#28>\", line 2, in &lt;module>\nException: This is the error message.</code></pre></div>","position":{"start":{"line":3125,"column":1,"offset":63356},"end":{"line":3127,"column":42,"offset":63483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Assertions","position":{"start":{"line":3129,"column":5,"offset":63489},"end":{"line":3129,"column":15,"offset":63499}}}],"position":{"start":{"line":3129,"column":1,"offset":63485},"end":{"line":3129,"column":15,"offset":63499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An assertion is a sanity check to make sure your code isn't doing something obviously wrong. These sanity checks are performed by assert statements. If the sanity check fails, then an AssertionError exception is raised. In code, an assert statement consists of the following:","position":{"start":{"line":3131,"column":1,"offset":63501},"end":{"line":3131,"column":276,"offset":63776}}}],"position":{"start":{"line":3131,"column":1,"offset":63501},"end":{"line":3131,"column":276,"offset":63776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The assert keyword","position":{"start":{"line":3133,"column":5,"offset":63782},"end":{"line":3133,"column":23,"offset":63800}}}],"position":{"start":{"line":3133,"column":1,"offset":63778},"end":{"line":3133,"column":23,"offset":63800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A condition (that is, an expression that evaluates to True or False)","position":{"start":{"line":3134,"column":5,"offset":63805},"end":{"line":3134,"column":73,"offset":63873}}}],"position":{"start":{"line":3134,"column":1,"offset":63801},"end":{"line":3134,"column":73,"offset":63873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A comma","position":{"start":{"line":3135,"column":5,"offset":63878},"end":{"line":3135,"column":12,"offset":63885}}}],"position":{"start":{"line":3135,"column":1,"offset":63874},"end":{"line":3135,"column":12,"offset":63885}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A string to display when the condition is False","position":{"start":{"line":3136,"column":5,"offset":63890},"end":{"line":3136,"column":52,"offset":63937}}}],"position":{"start":{"line":3136,"column":1,"offset":63886},"end":{"line":3136,"column":52,"offset":63937}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3133,"column":1,"offset":63778},"end":{"line":3136,"column":52,"offset":63937}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">pod_bay_door_status <span class=\"token operator\">=</span> <span class=\"token string\">'open'</span>\n\n<span class=\"token keyword\">assert</span> pod_bay_door_status <span class=\"token operator\">==</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'The pod bay doors need to be \"open\".'</span>\n\npod_bay_door_status <span class=\"token operator\">=</span> <span class=\"token string\">'I\\'m sorry, Dave. I\\'m afraid I can\\'t do that.'</span>\n\n<span class=\"token keyword\">assert</span> pod_bay_door_status <span class=\"token operator\">==</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'The pod bay doors need to be \"open\".'</span></code></pre></div>","position":{"start":{"line":3138,"column":1,"offset":63939},"end":{"line":3146,"column":4,"offset":64210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In plain English, an assert statement says, \"I assert that this condition holds true, and if not, there is a bug somewhere in the program.\" Unlike exceptions, your code should not handle assert statements with try and except; if an assert fails, your program should crash. By failing fast like this, you shorten the time between the original cause of the bug and when you first notice the bug. This will reduce the amount of code you will have to check before finding the code that's causing the bug.","position":{"start":{"line":3148,"column":1,"offset":64212},"end":{"line":3148,"column":501,"offset":64712}}}],"position":{"start":{"line":3148,"column":1,"offset":64212},"end":{"line":3148,"column":501,"offset":64712}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Disabling Assertions","position":{"start":{"line":3150,"column":1,"offset":64714},"end":{"line":3150,"column":21,"offset":64734}}}],"position":{"start":{"line":3150,"column":1,"offset":64714},"end":{"line":3150,"column":21,"offset":64734}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Assertions can be disabled by passing the -O option when running Python.","position":{"start":{"line":3152,"column":1,"offset":64736},"end":{"line":3152,"column":73,"offset":64808}}}],"position":{"start":{"line":3152,"column":1,"offset":64736},"end":{"line":3152,"column":73,"offset":64808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Logging","position":{"start":{"line":3154,"column":5,"offset":64814},"end":{"line":3154,"column":12,"offset":64821}}}],"position":{"start":{"line":3154,"column":1,"offset":64810},"end":{"line":3154,"column":12,"offset":64821}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To enable the logging module to display log messages on your screen as your program runs, copy the following to the top of your program (but under the #! python shebang line):","position":{"start":{"line":3156,"column":1,"offset":64823},"end":{"line":3156,"column":176,"offset":64998}}}],"position":{"start":{"line":3156,"column":1,"offset":64823},"end":{"line":3156,"column":176,"offset":64998}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> logging\n\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">' %(asctime)s - %(levelname)s- %(message)s'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3158,"column":1,"offset":65000},"end":{"line":3162,"column":4,"offset":65122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you wrote a function to calculate the factorial of a number. In mathematics, factorial 4 is 1 × 2 × 3 × 4, or 24. Factorial 7 is 1 × 2 × 3 × 4 × 5 × 6 × 7, or 5,040. Open a new file editor window and enter the following code. It has a bug in it, but you will also enter several log messages to help yourself figure out what is going wrong. Save the program as factorialLog.py.","position":{"start":{"line":3164,"column":1,"offset":65124},"end":{"line":3164,"column":381,"offset":65504}}}],"position":{"start":{"line":3164,"column":1,"offset":65124},"end":{"line":3164,"column":381,"offset":65504}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> logging\n\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">' %(asctime)s - %(levelname)s- %(message)s'</span><span class=\"token punctuation\">)</span>\n\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">'Start of program'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    logging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">'Start of factorial(%s)'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    total <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">*=</span> i\n        logging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">'i is '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', total is '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    logging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">'End of factorial(%s)'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> total\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>factorial<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">'End of program'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3166,"column":1,"offset":65506},"end":{"line":3188,"column":4,"offset":65986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Logging Levels","position":{"start":{"line":3190,"column":5,"offset":65992},"end":{"line":3190,"column":19,"offset":66006}}}],"position":{"start":{"line":3190,"column":1,"offset":65988},"end":{"line":3190,"column":19,"offset":66006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Logging levels provide a way to categorize your log messages by importance. There are five logging levels, described in Table 10-1 from least to most important. Messages can be logged at each level using a different logging function.","position":{"start":{"line":3192,"column":1,"offset":66008},"end":{"line":3192,"column":234,"offset":66241}}}],"position":{"start":{"line":3192,"column":1,"offset":66008},"end":{"line":3192,"column":234,"offset":66241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Level","position":{"start":{"line":3194,"column":3,"offset":66245},"end":{"line":3194,"column":8,"offset":66250}}}],"position":{"start":{"line":3194,"column":3,"offset":66245},"end":{"line":3194,"column":13,"offset":66255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Logging Function","position":{"start":{"line":3194,"column":16,"offset":66258},"end":{"line":3194,"column":32,"offset":66274}}}],"position":{"start":{"line":3194,"column":16,"offset":66258},"end":{"line":3194,"column":36,"offset":66278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"Description","position":{"start":{"line":3194,"column":39,"offset":66281},"end":{"line":3194,"column":50,"offset":66292}}}],"position":{"start":{"line":3194,"column":39,"offset":66281},"end":{"line":3194,"column":165,"offset":66407}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3194,"column":1,"offset":66243},"end":{"line":3194,"column":167,"offset":66409}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3194,"column":1,"offset":66243},"end":{"line":3194,"column":167,"offset":66409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">DEBUG</code>","position":{"start":{"line":3196,"column":3,"offset":66579},"end":{"line":3196,"column":10,"offset":66586}}}],"position":{"start":{"line":3196,"column":3,"offset":66579},"end":{"line":3196,"column":13,"offset":66589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">logging.debug()</code>","position":{"start":{"line":3196,"column":16,"offset":66592},"end":{"line":3196,"column":33,"offset":66609}}}],"position":{"start":{"line":3196,"column":16,"offset":66592},"end":{"line":3196,"column":36,"offset":66612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"The lowest level. Used for small details. Usually you care about these messages only when diagnosing problems.","position":{"start":{"line":3196,"column":39,"offset":66615},"end":{"line":3196,"column":149,"offset":66725}}}],"position":{"start":{"line":3196,"column":39,"offset":66615},"end":{"line":3196,"column":165,"offset":66741}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3196,"column":1,"offset":66577},"end":{"line":3196,"column":167,"offset":66743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">INFO</code>","position":{"start":{"line":3197,"column":3,"offset":66746},"end":{"line":3197,"column":9,"offset":66752}}}],"position":{"start":{"line":3197,"column":3,"offset":66746},"end":{"line":3197,"column":13,"offset":66756}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">logging.info()</code>","position":{"start":{"line":3197,"column":16,"offset":66759},"end":{"line":3197,"column":32,"offset":66775}}}],"position":{"start":{"line":3197,"column":16,"offset":66759},"end":{"line":3197,"column":36,"offset":66779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Used to record information on general events in your program or confirm that things are working at their point in the program.","position":{"start":{"line":3197,"column":39,"offset":66782},"end":{"line":3197,"column":165,"offset":66908}}}],"position":{"start":{"line":3197,"column":39,"offset":66782},"end":{"line":3197,"column":165,"offset":66908}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3197,"column":1,"offset":66744},"end":{"line":3197,"column":167,"offset":66910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">WARNING</code>","position":{"start":{"line":3198,"column":3,"offset":66913},"end":{"line":3198,"column":12,"offset":66922}}}],"position":{"start":{"line":3198,"column":3,"offset":66913},"end":{"line":3198,"column":13,"offset":66923}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">logging.warning()</code>","position":{"start":{"line":3198,"column":16,"offset":66926},"end":{"line":3198,"column":35,"offset":66945}}}],"position":{"start":{"line":3198,"column":16,"offset":66926},"end":{"line":3198,"column":36,"offset":66946}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Used to indicate a potential problem that doesn't prevent the program from working but might do so in the future.","position":{"start":{"line":3198,"column":39,"offset":66949},"end":{"line":3198,"column":152,"offset":67062}}}],"position":{"start":{"line":3198,"column":39,"offset":66949},"end":{"line":3198,"column":165,"offset":67075}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3198,"column":1,"offset":66911},"end":{"line":3198,"column":167,"offset":67077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">ERROR</code>","position":{"start":{"line":3199,"column":3,"offset":67080},"end":{"line":3199,"column":10,"offset":67087}}}],"position":{"start":{"line":3199,"column":3,"offset":67080},"end":{"line":3199,"column":13,"offset":67090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">logging.error()</code>","position":{"start":{"line":3199,"column":16,"offset":67093},"end":{"line":3199,"column":33,"offset":67110}}}],"position":{"start":{"line":3199,"column":16,"offset":67093},"end":{"line":3199,"column":36,"offset":67113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"Used to record an error that caused the program to fail to do something.","position":{"start":{"line":3199,"column":39,"offset":67116},"end":{"line":3199,"column":111,"offset":67188}}}],"position":{"start":{"line":3199,"column":39,"offset":67116},"end":{"line":3199,"column":165,"offset":67242}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3199,"column":1,"offset":67078},"end":{"line":3199,"column":167,"offset":67244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">CRITICAL</code>","position":{"start":{"line":3200,"column":3,"offset":67247},"end":{"line":3200,"column":13,"offset":67257}}}],"position":{"start":{"line":3200,"column":3,"offset":67247},"end":{"line":3200,"column":13,"offset":67257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"raw","value":"<code class=\"language-text\">logging.critical()</code>","position":{"start":{"line":3200,"column":16,"offset":67260},"end":{"line":3200,"column":36,"offset":67280}}}],"position":{"start":{"line":3200,"column":16,"offset":67260},"end":{"line":3200,"column":36,"offset":67280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"The highest level. Used to indicate a fatal error that has caused or is about to cause the program to stop running entirely.","position":{"start":{"line":3200,"column":39,"offset":67283},"end":{"line":3200,"column":163,"offset":67407}}}],"position":{"start":{"line":3200,"column":39,"offset":67283},"end":{"line":3200,"column":165,"offset":67409}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3200,"column":1,"offset":67245},"end":{"line":3200,"column":167,"offset":67411}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3196,"column":1,"offset":66577},"end":{"line":3200,"column":167,"offset":67411}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3194,"column":1,"offset":66243},"end":{"line":3200,"column":167,"offset":67411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Disabling Logging","position":{"start":{"line":3202,"column":5,"offset":67417},"end":{"line":3202,"column":22,"offset":67434}}}],"position":{"start":{"line":3202,"column":1,"offset":67413},"end":{"line":3202,"column":22,"offset":67434}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After you've debugged your program, you probably don't want all these log messages cluttering the screen. The logging.disable() function disables these so that you don't have to go into your program and remove all the logging calls by hand.","position":{"start":{"line":3204,"column":1,"offset":67436},"end":{"line":3204,"column":241,"offset":67676}}}],"position":{"start":{"line":3204,"column":1,"offset":67436},"end":{"line":3204,"column":241,"offset":67676}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> logging\n\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">' %(asctime)s -%(levelname)s - %(message)s'</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>critical<span class=\"token punctuation\">(</span><span class=\"token string\">'Critical error! Critical error!'</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>disable<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>CRITICAL<span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>critical<span class=\"token punctuation\">(</span><span class=\"token string\">'Critical error! Critical error!'</span><span class=\"token punctuation\">)</span>\nlogging<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'Error! Error!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3206,"column":1,"offset":67678},"end":{"line":3214,"column":4,"offset":67968}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Logging to a File","position":{"start":{"line":3216,"column":5,"offset":67974},"end":{"line":3216,"column":22,"offset":67991}}}],"position":{"start":{"line":3216,"column":1,"offset":67970},"end":{"line":3216,"column":22,"offset":67991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of displaying the log messages to the screen, you can write them to a text file. The logging.basicConfig() function takes a filename keyword argument, like so:","position":{"start":{"line":3218,"column":1,"offset":67993},"end":{"line":3218,"column":168,"offset":68160}}}],"position":{"start":{"line":3218,"column":1,"offset":67993},"end":{"line":3218,"column":168,"offset":68160}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> logging\n\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>filename<span class=\"token operator\">=</span><span class=\"token string\">'myProgramLog.txt'</span><span class=\"token punctuation\">,</span> level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">'%(asctime)s - %(levelname)s - %(message)s'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3220,"column":1,"offset":68162},"end":{"line":3224,"column":4,"offset":68313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Lambda Functions","position":{"start":{"line":3226,"column":4,"offset":68318},"end":{"line":3226,"column":20,"offset":68334}}}],"position":{"start":{"line":3226,"column":1,"offset":68315},"end":{"line":3226,"column":20,"offset":68334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This function:","position":{"start":{"line":3228,"column":1,"offset":68336},"end":{"line":3228,"column":15,"offset":68350}}}],"position":{"start":{"line":3228,"column":1,"offset":68336},"end":{"line":3228,"column":15,"offset":68350}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3230,"column":1,"offset":68352},"end":{"line":3235,"column":4,"offset":68412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Is equivalent to the ","position":{"start":{"line":3237,"column":1,"offset":68414},"end":{"line":3237,"column":22,"offset":68435}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"lambda","position":{"start":{"line":3237,"column":23,"offset":68436},"end":{"line":3237,"column":29,"offset":68442}}}],"position":{"start":{"line":3237,"column":22,"offset":68435},"end":{"line":3237,"column":30,"offset":68443}}},{"type":"text","value":" function:","position":{"start":{"line":3237,"column":30,"offset":68443},"end":{"line":3237,"column":40,"offset":68453}}}],"position":{"start":{"line":3237,"column":1,"offset":68414},"end":{"line":3237,"column":40,"offset":68453}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">add <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> x <span class=\"token operator\">+</span> y\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3239,"column":1,"offset":68455},"end":{"line":3242,"column":4,"offset":68503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's not even need to bind it to a name like add before:","position":{"start":{"line":3244,"column":1,"offset":68505},"end":{"line":3244,"column":57,"offset":68561}}}],"position":{"start":{"line":3244,"column":1,"offset":68505},"end":{"line":3244,"column":57,"offset":68561}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3246,"column":1,"offset":68563},"end":{"line":3248,"column":4,"offset":68603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Like regular nested functions, lambdas also work as lexical closures:","position":{"start":{"line":3250,"column":1,"offset":68605},"end":{"line":3250,"column":70,"offset":68674}}}],"position":{"start":{"line":3250,"column":1,"offset":68605},"end":{"line":3250,"column":70,"offset":68674}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">make_adder</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x <span class=\"token operator\">+</span> n\n\nplus_3 <span class=\"token operator\">=</span> make_adder<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nplus_5<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3252,"column":1,"offset":68676},"end":{"line":3258,"column":4,"offset":68773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: lambda can only evaluate an expression, like a single line of code.","position":{"start":{"line":3260,"column":1,"offset":68775},"end":{"line":3260,"column":74,"offset":68848}}}],"position":{"start":{"line":3260,"column":1,"offset":68775},"end":{"line":3260,"column":74,"offset":68848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Ternary Conditional Operator","position":{"start":{"line":3262,"column":4,"offset":68853},"end":{"line":3262,"column":32,"offset":68881}}}],"position":{"start":{"line":3262,"column":1,"offset":68850},"end":{"line":3262,"column":32,"offset":68881}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Many programming languages have a ternary operator, which define a conditional expression. The most common usage is to make a terse simple conditional assignment statement. In other words, it offers one-line code to evaluate the first expression if the condition is true, otherwise it evaluates the second expression.","position":{"start":{"line":3264,"column":1,"offset":68883},"end":{"line":3264,"column":318,"offset":69200}}}],"position":{"start":{"line":3264,"column":1,"offset":68883},"end":{"line":3264,"column":318,"offset":69200}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;expression1> if &lt;condition> else &lt;expression2></code></pre></div>","position":{"start":{"line":3266,"column":1,"offset":69202},"end":{"line":3266,"column":52,"offset":69253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":3268,"column":1,"offset":69255},"end":{"line":3268,"column":9,"offset":69263}}}],"position":{"start":{"line":3268,"column":1,"offset":69255},"end":{"line":3268,"column":9,"offset":69263}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">age <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'kid'</span> <span class=\"token keyword\">if</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">18</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'adult'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3270,"column":1,"offset":69265},"end":{"line":3274,"column":4,"offset":69326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ternary operators can be changed:","position":{"start":{"line":3276,"column":1,"offset":69328},"end":{"line":3276,"column":34,"offset":69361}}}],"position":{"start":{"line":3276,"column":1,"offset":69328},"end":{"line":3276,"column":34,"offset":69361}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">age <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'kid'</span> <span class=\"token keyword\">if</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">13</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'teenager'</span> <span class=\"token keyword\">if</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">18</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'adult'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3278,"column":1,"offset":69363},"end":{"line":3281,"column":4,"offset":69451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The code above is equivalent to:","position":{"start":{"line":3283,"column":1,"offset":69453},"end":{"line":3283,"column":33,"offset":69485}}}],"position":{"start":{"line":3283,"column":1,"offset":69453},"end":{"line":3283,"column":33,"offset":69485}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">18</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'kid'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'teenager'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'adult'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3285,"column":1,"offset":69487},"end":{"line":3293,"column":4,"offset":69612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"args and kwargs","position":{"start":{"line":3295,"column":4,"offset":69617},"end":{"line":3295,"column":19,"offset":69632}}}],"position":{"start":{"line":3295,"column":1,"offset":69614},"end":{"line":3295,"column":19,"offset":69632}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The names ","position":{"start":{"line":3297,"column":1,"offset":69634},"end":{"line":3297,"column":11,"offset":69644}}},{"type":"raw","value":"<code class=\"language-text\">args and kwargs</code>","position":{"start":{"line":3297,"column":11,"offset":69644},"end":{"line":3297,"column":28,"offset":69661}}},{"type":"text","value":" are arbitrary - the important thing are the ","position":{"start":{"line":3297,"column":28,"offset":69661},"end":{"line":3297,"column":73,"offset":69706}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":3297,"column":73,"offset":69706},"end":{"line":3297,"column":76,"offset":69709}}},{"type":"text","value":" and ","position":{"start":{"line":3297,"column":76,"offset":69709},"end":{"line":3297,"column":81,"offset":69714}}},{"type":"raw","value":"<code class=\"language-text\">**</code>","position":{"start":{"line":3297,"column":81,"offset":69714},"end":{"line":3297,"column":85,"offset":69718}}},{"type":"text","value":" operators. They can mean:","position":{"start":{"line":3297,"column":85,"offset":69718},"end":{"line":3297,"column":111,"offset":69744}}}],"position":{"start":{"line":3297,"column":1,"offset":69634},"end":{"line":3297,"column":111,"offset":69744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In a function declaration, ","position":{"start":{"line":3299,"column":4,"offset":69749},"end":{"line":3299,"column":31,"offset":69776}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":3299,"column":31,"offset":69776},"end":{"line":3299,"column":34,"offset":69779}}},{"type":"text","value":" means \"pack all remaining positional arguments into a tuple named ","position":{"start":{"line":3299,"column":34,"offset":69779},"end":{"line":3299,"column":101,"offset":69846}}},{"type":"raw","value":"<code class=\"language-text\">&lt;name></code>","position":{"start":{"line":3299,"column":101,"offset":69846},"end":{"line":3299,"column":109,"offset":69854}}},{"type":"text","value":"\", while ","position":{"start":{"line":3299,"column":109,"offset":69854},"end":{"line":3299,"column":118,"offset":69863}}},{"type":"raw","value":"<code class=\"language-text\">**</code>","position":{"start":{"line":3299,"column":118,"offset":69863},"end":{"line":3299,"column":122,"offset":69867}}},{"type":"text","value":" is the same for keyword arguments (except it uses a dictionary, not a tuple).","position":{"start":{"line":3299,"column":122,"offset":69867},"end":{"line":3299,"column":200,"offset":69945}}}],"position":{"start":{"line":3299,"column":1,"offset":69746},"end":{"line":3300,"column":1,"offset":69946}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In a function call, ","position":{"start":{"line":3301,"column":4,"offset":69950},"end":{"line":3301,"column":24,"offset":69970}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":3301,"column":24,"offset":69970},"end":{"line":3301,"column":27,"offset":69973}}},{"type":"text","value":" means \"unpack tuple or list named ","position":{"start":{"line":3301,"column":27,"offset":69973},"end":{"line":3301,"column":62,"offset":70008}}},{"type":"raw","value":"<code class=\"language-text\">&lt;name></code>","position":{"start":{"line":3301,"column":62,"offset":70008},"end":{"line":3301,"column":70,"offset":70016}}},{"type":"text","value":" to positional arguments at this position\", while ","position":{"start":{"line":3301,"column":70,"offset":70016},"end":{"line":3301,"column":120,"offset":70066}}},{"type":"raw","value":"<code class=\"language-text\">**</code>","position":{"start":{"line":3301,"column":120,"offset":70066},"end":{"line":3301,"column":124,"offset":70070}}},{"type":"text","value":" is the same for keyword arguments.","position":{"start":{"line":3301,"column":124,"offset":70070},"end":{"line":3301,"column":159,"offset":70105}}}],"position":{"start":{"line":3301,"column":1,"offset":69947},"end":{"line":3301,"column":159,"offset":70105}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3299,"column":1,"offset":69746},"end":{"line":3301,"column":159,"offset":70105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example you can make a function that you can use to call any other function, no matter what parameters it has:","position":{"start":{"line":3303,"column":1,"offset":70107},"end":{"line":3303,"column":115,"offset":70221}}}],"position":{"start":{"line":3303,"column":1,"offset":70107},"end":{"line":3303,"column":115,"offset":70221}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3305,"column":1,"offset":70223},"end":{"line":3308,"column":4,"offset":70299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside forward, args is a tuple (of all positional arguments except the first one, because we specified it - the f), kwargs is a dict. Then we call f and unpack them so they become normal arguments to f.","position":{"start":{"line":3310,"column":1,"offset":70301},"end":{"line":3310,"column":204,"offset":70504}}}],"position":{"start":{"line":3310,"column":1,"offset":70301},"end":{"line":3310,"column":204,"offset":70504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You use ","position":{"start":{"line":3312,"column":1,"offset":70506},"end":{"line":3312,"column":9,"offset":70514}}},{"type":"raw","value":"<code class=\"language-text\">*args</code>","position":{"start":{"line":3312,"column":9,"offset":70514},"end":{"line":3312,"column":16,"offset":70521}}},{"type":"text","value":" when you have an indefinite amount of positional arguments.","position":{"start":{"line":3312,"column":16,"offset":70521},"end":{"line":3312,"column":76,"offset":70581}}}],"position":{"start":{"line":3312,"column":1,"offset":70506},"end":{"line":3312,"column":76,"offset":70581}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">fruits</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">for</span> fruit <span class=\"token keyword\">in</span> args<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span>\n\nfruits<span class=\"token punctuation\">(</span><span class=\"token string\">\"apples\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bananas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"grapes\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3314,"column":1,"offset":70583},"end":{"line":3320,"column":4,"offset":70695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Similarly, you use ","position":{"start":{"line":3322,"column":1,"offset":70697},"end":{"line":3322,"column":20,"offset":70716}}},{"type":"raw","value":"<code class=\"language-text\">**kwargs</code>","position":{"start":{"line":3322,"column":20,"offset":70716},"end":{"line":3322,"column":30,"offset":70726}}},{"type":"text","value":" when you have an indefinite number of keyword arguments.","position":{"start":{"line":3322,"column":30,"offset":70726},"end":{"line":3322,"column":87,"offset":70783}}}],"position":{"start":{"line":3322,"column":1,"offset":70697},"end":{"line":3322,"column":87,"offset":70783}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">fruit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> kwargs<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0}: {1}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nfruit<span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3324,"column":1,"offset":70785},"end":{"line":3330,"column":4,"offset":70938}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> kwarg1<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> kwarg2<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>arg2<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwarg1<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwarg2<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">)</span>\n\ndata1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\ndata2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\ndata3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n\nshow<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>data1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>data2<span class=\"token punctuation\">,</span> kwarg1<span class=\"token operator\">=</span><span class=\"token string\">\"python\"</span><span class=\"token punctuation\">,</span>kwarg2<span class=\"token operator\">=</span><span class=\"token string\">\"cheatsheet\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">**</span>data3<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3332,"column":1,"offset":70940},"end":{"line":3346,"column":4,"offset":71235}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">show<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>data1<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>data2<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>data3<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3348,"column":1,"offset":71237},"end":{"line":3350,"column":4,"offset":71280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you do not specify ","position":{"start":{"line":3352,"column":1,"offset":71282},"end":{"line":3352,"column":23,"offset":71304}}},{"type":"text","value":"*","position":{"start":{"line":3352,"column":23,"offset":71304},"end":{"line":3352,"column":25,"offset":71306}}},{"type":"text","value":"*","position":{"start":{"line":3352,"column":25,"offset":71306},"end":{"line":3352,"column":27,"offset":71308}}},{"type":"text","value":" for kwargs","position":{"start":{"line":3352,"column":27,"offset":71308},"end":{"line":3352,"column":38,"offset":71319}}}],"position":{"start":{"line":3352,"column":1,"offset":71282},"end":{"line":3352,"column":38,"offset":71319}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">show<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>data1<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>data2<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>data3<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3354,"column":1,"offset":71321},"end":{"line":3356,"column":4,"offset":71363}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Thinks to Remember(args)","position":{"start":{"line":3358,"column":5,"offset":71369},"end":{"line":3358,"column":29,"offset":71393}}}],"position":{"start":{"line":3358,"column":1,"offset":71365},"end":{"line":3358,"column":29,"offset":71393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Functions can accept a variable number of positional arguments by using ","position":{"start":{"line":3360,"column":4,"offset":71398},"end":{"line":3360,"column":76,"offset":71470}}},{"type":"raw","value":"<code class=\"language-text\">*args</code>","position":{"start":{"line":3360,"column":76,"offset":71470},"end":{"line":3360,"column":83,"offset":71477}}},{"type":"text","value":" in the def statement.","position":{"start":{"line":3360,"column":83,"offset":71477},"end":{"line":3360,"column":105,"offset":71499}}}],"position":{"start":{"line":3360,"column":1,"offset":71395},"end":{"line":3360,"column":105,"offset":71499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You can use the items from a sequence as the positional arguments for a function with the ","position":{"start":{"line":3361,"column":4,"offset":71503},"end":{"line":3361,"column":94,"offset":71593}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":3361,"column":94,"offset":71593},"end":{"line":3361,"column":97,"offset":71596}}},{"type":"text","value":" operator.","position":{"start":{"line":3361,"column":97,"offset":71596},"end":{"line":3361,"column":107,"offset":71606}}}],"position":{"start":{"line":3361,"column":1,"offset":71500},"end":{"line":3361,"column":107,"offset":71606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Using the ","position":{"start":{"line":3362,"column":4,"offset":71610},"end":{"line":3362,"column":14,"offset":71620}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":3362,"column":14,"offset":71620},"end":{"line":3362,"column":17,"offset":71623}}},{"type":"text","value":" operator with a generator may cause your program to run out of memory and crash.","position":{"start":{"line":3362,"column":17,"offset":71623},"end":{"line":3362,"column":98,"offset":71704}}}],"position":{"start":{"line":3362,"column":1,"offset":71607},"end":{"line":3362,"column":98,"offset":71704}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Adding new positional parameters to functions that accept ","position":{"start":{"line":3363,"column":4,"offset":71708},"end":{"line":3363,"column":62,"offset":71766}}},{"type":"raw","value":"<code class=\"language-text\">*args</code>","position":{"start":{"line":3363,"column":62,"offset":71766},"end":{"line":3363,"column":69,"offset":71773}}},{"type":"text","value":" can introduce hard-to-find bugs.","position":{"start":{"line":3363,"column":69,"offset":71773},"end":{"line":3363,"column":102,"offset":71806}}}],"position":{"start":{"line":3363,"column":1,"offset":71705},"end":{"line":3363,"column":102,"offset":71806}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3360,"column":1,"offset":71395},"end":{"line":3363,"column":102,"offset":71806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Thinks to remember(kwargs)","position":{"start":{"line":3365,"column":5,"offset":71812},"end":{"line":3365,"column":31,"offset":71838}}}],"position":{"start":{"line":3365,"column":1,"offset":71808},"end":{"line":3365,"column":31,"offset":71838}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Function arguments can be specified by position or by keyword.","position":{"start":{"line":3367,"column":4,"offset":71843},"end":{"line":3367,"column":66,"offset":71905}}}],"position":{"start":{"line":3367,"column":1,"offset":71840},"end":{"line":3367,"column":66,"offset":71905}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Keywords make it clear what the purpose of each argument is when it would be confusing with only positional arguments.","position":{"start":{"line":3368,"column":4,"offset":71909},"end":{"line":3368,"column":122,"offset":72027}}}],"position":{"start":{"line":3368,"column":1,"offset":71906},"end":{"line":3368,"column":122,"offset":72027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Keyword arguments with default values make it easy to add new behaviors to a function, especially when the function has existing callers.","position":{"start":{"line":3369,"column":4,"offset":72031},"end":{"line":3369,"column":141,"offset":72168}}}],"position":{"start":{"line":3369,"column":1,"offset":72028},"end":{"line":3369,"column":141,"offset":72168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Optional keyword arguments should always be passed by keyword instead of by position.","position":{"start":{"line":3370,"column":4,"offset":72172},"end":{"line":3370,"column":89,"offset":72257}}}],"position":{"start":{"line":3370,"column":1,"offset":72169},"end":{"line":3370,"column":89,"offset":72257}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3367,"column":1,"offset":71840},"end":{"line":3370,"column":89,"offset":72257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Context Manager","position":{"start":{"line":3372,"column":4,"offset":72262},"end":{"line":3372,"column":19,"offset":72277}}}],"position":{"start":{"line":3372,"column":1,"offset":72259},"end":{"line":3372,"column":19,"offset":72277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While Python's context managers are widely used, few understand the purpose behind their use. These statements, commonly used with reading and writing files, assist the application in conserving system memory and improve resource management by ensuring specific resources are only in use for certain processes.","position":{"start":{"line":3374,"column":1,"offset":72279},"end":{"line":3374,"column":311,"offset":72589}}}],"position":{"start":{"line":3374,"column":1,"offset":72279},"end":{"line":3374,"column":311,"offset":72589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"with statement","position":{"start":{"line":3376,"column":5,"offset":72595},"end":{"line":3376,"column":19,"offset":72609}}}],"position":{"start":{"line":3376,"column":1,"offset":72591},"end":{"line":3376,"column":19,"offset":72609}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A context manager is an object that is notified when a context (a block of code) starts and ends. You commonly use one with the with statement. It takes care of the notifying.","position":{"start":{"line":3378,"column":1,"offset":72611},"end":{"line":3378,"column":176,"offset":72786}}}],"position":{"start":{"line":3378,"column":1,"offset":72611},"end":{"line":3378,"column":176,"offset":72786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, file objects are context managers. When a context ends, the file object is closed automatically:","position":{"start":{"line":3380,"column":1,"offset":72788},"end":{"line":3380,"column":110,"offset":72897}}}],"position":{"start":{"line":3380,"column":1,"offset":72788},"end":{"line":3380,"column":110,"offset":72897}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    file_contents <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># the open_file object has automatically been closed.</span></code></pre></div>","position":{"start":{"line":3382,"column":1,"offset":72899},"end":{"line":3387,"column":4,"offset":73022}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Anything that ends execution of the block causes the context manager's exit method to be called. This includes exceptions, and can be useful when an error causes you to prematurely exit from an open file or connection. Exiting a script without properly closing files/connections is a bad idea, that may cause data loss or other problems. By using a context manager you can ensure that precautions are always taken to prevent damage or loss in this way.","position":{"start":{"line":3389,"column":1,"offset":73024},"end":{"line":3389,"column":453,"offset":73476}}}],"position":{"start":{"line":3389,"column":1,"offset":73024},"end":{"line":3389,"column":453,"offset":73476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Writing your own contextmanager using generator syntax","position":{"start":{"line":3391,"column":5,"offset":73482},"end":{"line":3391,"column":59,"offset":73536}}}],"position":{"start":{"line":3391,"column":1,"offset":73478},"end":{"line":3391,"column":59,"offset":73536}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is also possible to write a context manager using generator syntax thanks to the ","position":{"start":{"line":3393,"column":1,"offset":73538},"end":{"line":3393,"column":85,"offset":73622}}},{"type":"raw","value":"<code class=\"language-text\">contextlib.contextmanager</code>","position":{"start":{"line":3393,"column":85,"offset":73622},"end":{"line":3393,"column":112,"offset":73649}}},{"type":"text","value":" decorator:","position":{"start":{"line":3393,"column":112,"offset":73649},"end":{"line":3393,"column":123,"offset":73660}}}],"position":{"start":{"line":3393,"column":1,"offset":73538},"end":{"line":3393,"column":123,"offset":73660}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> contextlib\n\n<span class=\"token decorator annotation punctuation\">@contextlib<span class=\"token punctuation\">.</span>contextmanager</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">context_manager</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Enter'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">yield</span> num <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Exit'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">with</span> context_manager<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cm<span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># the following instructions are run when the 'yield' point of the context</span>\n    <span class=\"token comment\"># manager is reached.</span>\n    <span class=\"token comment\"># 'cm' will have the value that was yielded</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Right in the middle with cm = {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>cm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3395,"column":1,"offset":73662},"end":{"line":3408,"column":4,"offset":74043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">__main__</code>","position":{"start":{"line":3410,"column":4,"offset":74048},"end":{"line":3410,"column":14,"offset":74058}}},{"type":"text","value":" Top-level script environment","position":{"start":{"line":3410,"column":14,"offset":74058},"end":{"line":3410,"column":43,"offset":74087}}}],"position":{"start":{"line":3410,"column":1,"offset":74045},"end":{"line":3410,"column":43,"offset":74087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">__main__</code>","position":{"start":{"line":3412,"column":1,"offset":74089},"end":{"line":3412,"column":11,"offset":74099}}},{"type":"text","value":" is the name of the scope in which top-level code executes.\nA module's ","position":{"start":{"line":3412,"column":11,"offset":74099},"end":{"line":3413,"column":12,"offset":74170}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":3413,"column":14,"offset":74172},"end":{"line":3413,"column":18,"offset":74176}}}],"position":{"start":{"line":3413,"column":12,"offset":74170},"end":{"line":3413,"column":20,"offset":74178}}},{"type":"text","value":" is set equal to ","position":{"start":{"line":3413,"column":20,"offset":74178},"end":{"line":3413,"column":37,"offset":74195}}},{"type":"raw","value":"<code class=\"language-text\">__main__</code>","position":{"start":{"line":3413,"column":37,"offset":74195},"end":{"line":3413,"column":47,"offset":74205}}},{"type":"text","value":" when read from standard input, a script, or from an interactive prompt.","position":{"start":{"line":3413,"column":47,"offset":74205},"end":{"line":3413,"column":119,"offset":74277}}}],"position":{"start":{"line":3412,"column":1,"offset":74089},"end":{"line":3413,"column":119,"offset":74277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A module can discover whether or not it is running in the main scope by checking its own ","position":{"start":{"line":3415,"column":1,"offset":74279},"end":{"line":3415,"column":90,"offset":74368}}},{"type":"raw","value":"<code class=\"language-text\">__name__</code>","position":{"start":{"line":3415,"column":90,"offset":74368},"end":{"line":3415,"column":100,"offset":74378}}},{"type":"text","value":", which allows a common idiom for conditionally executing code in a module when it is run as a script or with ","position":{"start":{"line":3415,"column":100,"offset":74378},"end":{"line":3415,"column":210,"offset":74488}}},{"type":"raw","value":"<code class=\"language-text\">python -m</code>","position":{"start":{"line":3415,"column":210,"offset":74488},"end":{"line":3415,"column":221,"offset":74499}}},{"type":"text","value":" but not when it is imported:","position":{"start":{"line":3415,"column":221,"offset":74499},"end":{"line":3415,"column":250,"offset":74528}}}],"position":{"start":{"line":3415,"column":1,"offset":74279},"end":{"line":3415,"column":250,"offset":74528}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># execute only if run as a script</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3417,"column":1,"offset":74530},"end":{"line":3421,"column":4,"offset":74619}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For a package, the same effect can be achieved by including a ","position":{"start":{"line":3423,"column":1,"offset":74621},"end":{"line":3423,"column":63,"offset":74683}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"main","position":{"start":{"line":3423,"column":65,"offset":74685},"end":{"line":3423,"column":69,"offset":74689}}}],"position":{"start":{"line":3423,"column":63,"offset":74683},"end":{"line":3423,"column":71,"offset":74691}}},{"type":"text","value":".py module, the contents of which will be executed when the module is run with -m.","position":{"start":{"line":3423,"column":71,"offset":74691},"end":{"line":3423,"column":153,"offset":74773}}}],"position":{"start":{"line":3423,"column":1,"offset":74621},"end":{"line":3423,"column":153,"offset":74773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example we are developing script which is designed to be used as module, we should do:","position":{"start":{"line":3425,"column":1,"offset":74775},"end":{"line":3425,"column":91,"offset":74865}}}],"position":{"start":{"line":3425,"column":1,"offset":74775},"end":{"line":3425,"column":91,"offset":74865}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Python program to execute function directly</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># we can test it by calling the function save it as calculate.py</span></code></pre></div>","position":{"start":{"line":3427,"column":1,"offset":74867},"end":{"line":3433,"column":4,"offset":75034}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Now if we want to use that module by importing we have to comment out our call,</span>\n<span class=\"token comment\"># Instead we can write like this in calculate.py</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3435,"column":1,"offset":75036},"end":{"line":3440,"column":4,"offset":75221}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> calculate\n\ncalculate<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3442,"column":1,"offset":75223},"end":{"line":3446,"column":4,"offset":75274}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Advantages","position":{"start":{"line":3448,"column":5,"offset":75280},"end":{"line":3448,"column":15,"offset":75290}}}],"position":{"start":{"line":3448,"column":1,"offset":75276},"end":{"line":3448,"column":15,"offset":75290}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Every Python module has it's ","position":{"start":{"line":3450,"column":4,"offset":75295},"end":{"line":3450,"column":33,"offset":75324}}},{"type":"raw","value":"<code class=\"language-text\">__name__</code>","position":{"start":{"line":3450,"column":33,"offset":75324},"end":{"line":3450,"column":43,"offset":75334}}},{"type":"text","value":" defined and if this is ","position":{"start":{"line":3450,"column":43,"offset":75334},"end":{"line":3450,"column":67,"offset":75358}}},{"type":"raw","value":"<code class=\"language-text\">__main__</code>","position":{"start":{"line":3450,"column":67,"offset":75358},"end":{"line":3450,"column":77,"offset":75368}}},{"type":"text","value":", it implies that the module is being run standalone by the user and we can do corresponding appropriate actions.","position":{"start":{"line":3450,"column":77,"offset":75368},"end":{"line":3450,"column":190,"offset":75481}}}],"position":{"start":{"line":3450,"column":1,"offset":75292},"end":{"line":3450,"column":190,"offset":75481}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If you import this script as a module in another script, the ","position":{"start":{"line":3451,"column":4,"offset":75485},"end":{"line":3451,"column":65,"offset":75546}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":3451,"column":67,"offset":75548},"end":{"line":3451,"column":71,"offset":75552}}}],"position":{"start":{"line":3451,"column":65,"offset":75546},"end":{"line":3451,"column":73,"offset":75554}}},{"type":"text","value":" is set to the name of the script/module.","position":{"start":{"line":3451,"column":73,"offset":75554},"end":{"line":3451,"column":114,"offset":75595}}}],"position":{"start":{"line":3451,"column":1,"offset":75482},"end":{"line":3451,"column":114,"offset":75595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Python files can act as either reusable modules, or as standalone programs.","position":{"start":{"line":3452,"column":4,"offset":75599},"end":{"line":3452,"column":79,"offset":75674}}}],"position":{"start":{"line":3452,"column":1,"offset":75596},"end":{"line":3452,"column":79,"offset":75674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if ","position":{"start":{"line":3453,"column":4,"offset":75678},"end":{"line":3453,"column":7,"offset":75681}}},{"type":"raw","value":"<code class=\"language-text\">__name__ == \"main\":</code>","position":{"start":{"line":3453,"column":7,"offset":75681},"end":{"line":3453,"column":28,"offset":75702}}},{"type":"text","value":" is used to execute some code only if the file was run directly, and not imported.","position":{"start":{"line":3453,"column":28,"offset":75702},"end":{"line":3453,"column":110,"offset":75784}}}],"position":{"start":{"line":3453,"column":1,"offset":75675},"end":{"line":3453,"column":110,"offset":75784}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3450,"column":1,"offset":75292},"end":{"line":3453,"column":110,"offset":75784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"setup.py","position":{"start":{"line":3455,"column":4,"offset":75789},"end":{"line":3455,"column":12,"offset":75797}}}],"position":{"start":{"line":3455,"column":1,"offset":75786},"end":{"line":3455,"column":12,"offset":75797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The setup script is the centre of all activity in building, distributing, and installing modules using the Distutils. The main purpose of the setup script is to describe your module distribution to the Distutils, so that the various commands that operate on your modules do the right thing.","position":{"start":{"line":3457,"column":1,"offset":75799},"end":{"line":3457,"column":291,"offset":76089}}}],"position":{"start":{"line":3457,"column":1,"offset":75799},"end":{"line":3457,"column":291,"offset":76089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":3459,"column":1,"offset":76091},"end":{"line":3459,"column":5,"offset":76095}}},{"type":"raw","value":"<code class=\"language-text\">setup.py</code>","position":{"start":{"line":3459,"column":5,"offset":76095},"end":{"line":3459,"column":15,"offset":76105}}},{"type":"text","value":" file is at the heart of a Python project. It describes all of the metadata about your project. There a quite a few fields you can add to a project to give it a rich set of metadata describing the project. However, there are only three required fields: name, version, and packages. The name field must be unique if you wish to publish your package on the Python Package Index (PyPI). The version field keeps track of different releases of the project. The packages field describes where you've put the Python source code within your project.","position":{"start":{"line":3459,"column":15,"offset":76105},"end":{"line":3459,"column":556,"offset":76646}}}],"position":{"start":{"line":3459,"column":1,"offset":76091},"end":{"line":3459,"column":556,"offset":76646}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This allows you to easily install Python packages. Often it's enough to write:","position":{"start":{"line":3461,"column":1,"offset":76648},"end":{"line":3461,"column":79,"offset":76726}}}],"position":{"start":{"line":3461,"column":1,"offset":76648},"end":{"line":3461,"column":79,"offset":76726}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">```bashup.py install</code></pre></div>","position":{"start":{"line":3463,"column":1,"offset":76728},"end":{"line":3465,"column":4,"offset":76763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"and module will install itself.","position":{"start":{"line":3467,"column":1,"offset":76765},"end":{"line":3467,"column":32,"offset":76796}}}],"position":{"start":{"line":3467,"column":1,"offset":76765},"end":{"line":3467,"column":32,"offset":76796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Our initial setup.py will also include information about the license and will re-use the README.txt file for the long_description field. This will look like:","position":{"start":{"line":3469,"column":1,"offset":76798},"end":{"line":3469,"column":158,"offset":76955}}}],"position":{"start":{"line":3469,"column":1,"offset":76798},"end":{"line":3469,"column":158,"offset":76955}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> distutils<span class=\"token punctuation\">.</span>core <span class=\"token keyword\">import</span> setup\nsetup<span class=\"token punctuation\">(</span>\n   name<span class=\"token operator\">=</span><span class=\"token string\">'pythonCheatsheet'</span><span class=\"token punctuation\">,</span>\n   version<span class=\"token operator\">=</span><span class=\"token string\">'0.1'</span><span class=\"token punctuation\">,</span>\n   packages<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'pipenv'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   license<span class=\"token operator\">=</span><span class=\"token string\">'MIT'</span><span class=\"token punctuation\">,</span>\n   long_description<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'README.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3471,"column":1,"offset":76957},"end":{"line":3480,"column":4,"offset":77148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Find more information visit ","position":{"start":{"line":3482,"column":1,"offset":77150},"end":{"line":3482,"column":29,"offset":77178}}},{"type":"element","tagName":"a","properties":{"href":"http://docs.python.org/install/index.html"},"children":[{"type":"text","value":"http://docs.python.org/install/index.html","position":{"start":{"line":3482,"column":30,"offset":77179},"end":{"line":3482,"column":71,"offset":77220}}}],"position":{"start":{"line":3482,"column":29,"offset":77178},"end":{"line":3482,"column":115,"offset":77264}}},{"type":"text","value":".","position":{"start":{"line":3482,"column":115,"offset":77264},"end":{"line":3482,"column":116,"offset":77265}}}],"position":{"start":{"line":3482,"column":1,"offset":77150},"end":{"line":3482,"column":116,"offset":77265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Dataclasses","position":{"start":{"line":3484,"column":4,"offset":77270},"end":{"line":3484,"column":15,"offset":77281}}}],"position":{"start":{"line":3484,"column":1,"offset":77267},"end":{"line":3484,"column":15,"offset":77281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">Dataclasses</code>","position":{"start":{"line":3486,"column":1,"offset":77283},"end":{"line":3486,"column":14,"offset":77296}}},{"type":"text","value":" are python classes but are suited for storing data objects.\nThis module provides a decorator and functions for automatically adding generated special methods such as ","position":{"start":{"line":3486,"column":14,"offset":77296},"end":{"line":3487,"column":107,"offset":77463}}},{"type":"raw","value":"<code class=\"language-text\">__init__()</code>","position":{"start":{"line":3487,"column":107,"offset":77463},"end":{"line":3487,"column":119,"offset":77475}}},{"type":"text","value":" and ","position":{"start":{"line":3487,"column":119,"offset":77475},"end":{"line":3487,"column":124,"offset":77480}}},{"type":"raw","value":"<code class=\"language-text\">__repr__()</code>","position":{"start":{"line":3487,"column":124,"offset":77480},"end":{"line":3487,"column":136,"offset":77492}}},{"type":"text","value":" to user-defined classes.","position":{"start":{"line":3487,"column":136,"offset":77492},"end":{"line":3487,"column":161,"offset":77517}}}],"position":{"start":{"line":3486,"column":1,"offset":77283},"end":{"line":3487,"column":161,"offset":77517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Features","position":{"start":{"line":3489,"column":5,"offset":77523},"end":{"line":3489,"column":13,"offset":77531}}}],"position":{"start":{"line":3489,"column":1,"offset":77519},"end":{"line":3489,"column":13,"offset":77531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"They store data and represent a certain data type. Ex: A number. For people familiar with ORMs, a model instance is a data object. It represents a specific kind of entity. It holds attributes that define or represent the entity.","position":{"start":{"line":3491,"column":4,"offset":77536},"end":{"line":3491,"column":232,"offset":77764}}}],"position":{"start":{"line":3491,"column":1,"offset":77533},"end":{"line":3492,"column":1,"offset":77765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"They can be compared to other objects of the same type. Ex: A number can be greater than, less than, or equal to another number.","position":{"start":{"line":3493,"column":4,"offset":77769},"end":{"line":3493,"column":132,"offset":77897}}}],"position":{"start":{"line":3493,"column":1,"offset":77766},"end":{"line":3493,"column":132,"offset":77897}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3491,"column":1,"offset":77533},"end":{"line":3493,"column":132,"offset":77897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python 3.7 provides a decorator dataclass that is used to convert a class into a dataclass.","position":{"start":{"line":3495,"column":1,"offset":77899},"end":{"line":3495,"column":92,"offset":77990}}}],"position":{"start":{"line":3495,"column":1,"offset":77899},"end":{"line":3495,"column":92,"offset":77990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"python 2.7","position":{"start":{"line":3497,"column":1,"offset":77992},"end":{"line":3497,"column":11,"offset":78002}}}],"position":{"start":{"line":3497,"column":1,"offset":77992},"end":{"line":3497,"column":11,"offset":78002}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> val\n\nobj <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>val</code></pre></div>","position":{"start":{"line":3499,"column":1,"offset":78004},"end":{"line":3506,"column":4,"offset":78108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"with dataclass","position":{"start":{"line":3508,"column":1,"offset":78110},"end":{"line":3508,"column":15,"offset":78124}}}],"position":{"start":{"line":3508,"column":1,"offset":78110},"end":{"line":3508,"column":15,"offset":78124}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">:</span>\n    val<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n\nobj <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>val</code></pre></div>","position":{"start":{"line":3510,"column":1,"offset":78126},"end":{"line":3519,"column":4,"offset":78237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Default values","position":{"start":{"line":3521,"column":5,"offset":78243},"end":{"line":3521,"column":19,"offset":78257}}}],"position":{"start":{"line":3521,"column":1,"offset":78239},"end":{"line":3521,"column":19,"offset":78257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is easy to add default values to the fields of your data class.","position":{"start":{"line":3523,"column":1,"offset":78259},"end":{"line":3523,"column":67,"offset":78325}}}],"position":{"start":{"line":3523,"column":1,"offset":78259},"end":{"line":3523,"column":67,"offset":78325}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">:</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n    count<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    price<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span>\n\nobj <span class=\"token operator\">=</span> Product<span class=\"token punctuation\">(</span><span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>name</code></pre></div>","position":{"start":{"line":3525,"column":1,"offset":78327},"end":{"line":3536,"column":4,"offset":78491}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">obj<span class=\"token punctuation\">.</span>count</code></pre></div>","position":{"start":{"line":3538,"column":1,"offset":78493},"end":{"line":3540,"column":4,"offset":78516}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">obj<span class=\"token punctuation\">.</span>price</code></pre></div>","position":{"start":{"line":3542,"column":1,"offset":78518},"end":{"line":3544,"column":4,"offset":78541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Type hints","position":{"start":{"line":3546,"column":5,"offset":78547},"end":{"line":3546,"column":15,"offset":78557}}}],"position":{"start":{"line":3546,"column":1,"offset":78543},"end":{"line":3546,"column":15,"offset":78557}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is mandatory to define the data type in dataclass. However, If you don't want specify the datatype then, use ","position":{"start":{"line":3548,"column":1,"offset":78559},"end":{"line":3548,"column":113,"offset":78671}}},{"type":"raw","value":"<code class=\"language-text\">typing.Any</code>","position":{"start":{"line":3548,"column":113,"offset":78671},"end":{"line":3548,"column":125,"offset":78683}}},{"type":"text","value":".","position":{"start":{"line":3548,"column":125,"offset":78683},"end":{"line":3548,"column":126,"offset":78684}}}],"position":{"start":{"line":3548,"column":1,"offset":78559},"end":{"line":3548,"column":126,"offset":78684}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Any\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WithoutExplicitTypes</span><span class=\"token punctuation\">:</span>\n   name<span class=\"token punctuation\">:</span> Any\n   value<span class=\"token punctuation\">:</span> Any <span class=\"token operator\">=</span> <span class=\"token number\">42</span></code></pre></div>","position":{"start":{"line":3550,"column":1,"offset":78686},"end":{"line":3558,"column":4,"offset":78828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":3560,"column":1,"offset":78830},"end":{"line":3560,"column":4,"offset":78833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":3562,"column":1,"offset":78835},"end":{"line":3562,"column":4,"offset":78838}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":3564,"column":1,"offset":78840},"end":{"line":3564,"column":4,"offset":78843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":3566,"column":1,"offset":78845},"end":{"line":3566,"column":4,"offset":78848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"PART 2","position":{"start":{"line":3568,"column":3,"offset":78852},"end":{"line":3568,"column":9,"offset":78858}}}],"position":{"start":{"line":3568,"column":1,"offset":78850},"end":{"line":3568,"column":9,"offset":78858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Single line comments start with a number symbol","position":{"start":{"line":3570,"column":3,"offset":78862},"end":{"line":3570,"column":50,"offset":78909}}}],"position":{"start":{"line":3570,"column":1,"offset":78860},"end":{"line":3570,"column":50,"offset":78909}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\" Multiline strings can be written\nusing three \"s, and are often used\nas documentation.\n\"\"\"","position":{"start":{"line":3572,"column":1,"offset":78911},"end":{"line":3575,"column":4,"offset":79004}}}],"position":{"start":{"line":3572,"column":1,"offset":78911},"end":{"line":3575,"column":4,"offset":79004}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":3577,"column":1,"offset":79006},"end":{"line":3577,"column":53,"offset":79058}}}],"position":{"start":{"line":3577,"column":1,"offset":79006},"end":{"line":3577,"column":53,"offset":79058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"1. Primitive Datatypes and Operators","position":{"start":{"line":3579,"column":4,"offset":79063},"end":{"line":3579,"column":40,"offset":79099}}}],"position":{"start":{"line":3579,"column":1,"offset":79060},"end":{"line":3579,"column":40,"offset":79099}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":3581,"column":1,"offset":79101},"end":{"line":3581,"column":53,"offset":79153}}}],"position":{"start":{"line":3581,"column":1,"offset":79101},"end":{"line":3581,"column":53,"offset":79153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You have numbers","position":{"start":{"line":3583,"column":3,"offset":79157},"end":{"line":3583,"column":19,"offset":79173}}}],"position":{"start":{"line":3583,"column":1,"offset":79155},"end":{"line":3583,"column":19,"offset":79173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"3 # => 3","position":{"start":{"line":3585,"column":1,"offset":79175},"end":{"line":3585,"column":9,"offset":79183}}}],"position":{"start":{"line":3585,"column":1,"offset":79175},"end":{"line":3585,"column":9,"offset":79183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Math is what you would expect","position":{"start":{"line":3587,"column":3,"offset":79187},"end":{"line":3587,"column":32,"offset":79216}}}],"position":{"start":{"line":3587,"column":1,"offset":79185},"end":{"line":3587,"column":32,"offset":79216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1 + 1 # => 2\n8 - 1 # => 7\n10 ","position":{"start":{"line":3589,"column":1,"offset":79218},"end":{"line":3591,"column":4,"offset":79247}}},{"type":"text","value":"*","position":{"start":{"line":3591,"column":4,"offset":79247},"end":{"line":3591,"column":6,"offset":79249}}},{"type":"text","value":" 2 # => 20\n35 / 5 # => 7.0","position":{"start":{"line":3591,"column":6,"offset":79249},"end":{"line":3592,"column":16,"offset":79275}}}],"position":{"start":{"line":3589,"column":1,"offset":79218},"end":{"line":3592,"column":16,"offset":79275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Integer division rounds down for both positive and negative numbers","position":{"start":{"line":3594,"column":3,"offset":79279},"end":{"line":3594,"column":70,"offset":79346}}}],"position":{"start":{"line":3594,"column":1,"offset":79277},"end":{"line":3594,"column":70,"offset":79346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"5 // 3 # => 1\n-5 // 3 # => -2\n5.0 // 3.0 # => 1.0 # works on floats too\n-5.0 // 3.0 # => -2.0","position":{"start":{"line":3596,"column":1,"offset":79348},"end":{"line":3599,"column":22,"offset":79441}}}],"position":{"start":{"line":3596,"column":1,"offset":79348},"end":{"line":3599,"column":22,"offset":79441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"The result of division is always a float","position":{"start":{"line":3601,"column":3,"offset":79445},"end":{"line":3601,"column":43,"offset":79485}}}],"position":{"start":{"line":3601,"column":1,"offset":79443},"end":{"line":3601,"column":43,"offset":79485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"10.0 / 3 # => 3.3333333333333335","position":{"start":{"line":3603,"column":1,"offset":79487},"end":{"line":3603,"column":33,"offset":79519}}}],"position":{"start":{"line":3603,"column":1,"offset":79487},"end":{"line":3603,"column":33,"offset":79519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Modulo operation","position":{"start":{"line":3605,"column":3,"offset":79523},"end":{"line":3605,"column":19,"offset":79539}}}],"position":{"start":{"line":3605,"column":1,"offset":79521},"end":{"line":3605,"column":19,"offset":79539}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"7 % 3 # => 1","position":{"start":{"line":3607,"column":1,"offset":79541},"end":{"line":3607,"column":13,"offset":79553}}}],"position":{"start":{"line":3607,"column":1,"offset":79541},"end":{"line":3607,"column":13,"offset":79553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Exponentiation (x","position":{"start":{"line":3609,"column":3,"offset":79557},"end":{"line":3609,"column":20,"offset":79574}}},{"type":"text","value":"*","position":{"start":{"line":3609,"column":20,"offset":79574},"end":{"line":3609,"column":22,"offset":79576}}},{"type":"text","value":"*","position":{"start":{"line":3609,"column":22,"offset":79576},"end":{"line":3609,"column":24,"offset":79578}}},{"type":"text","value":"y, x to the yth power)","position":{"start":{"line":3609,"column":24,"offset":79578},"end":{"line":3609,"column":46,"offset":79600}}}],"position":{"start":{"line":3609,"column":1,"offset":79555},"end":{"line":3609,"column":46,"offset":79600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"2","position":{"start":{"line":3611,"column":1,"offset":79602},"end":{"line":3611,"column":2,"offset":79603}}},{"type":"text","value":"*","position":{"start":{"line":3611,"column":2,"offset":79603},"end":{"line":3611,"column":4,"offset":79605}}},{"type":"text","value":"*","position":{"start":{"line":3611,"column":4,"offset":79605},"end":{"line":3611,"column":6,"offset":79607}}},{"type":"text","value":"3 # => 8","position":{"start":{"line":3611,"column":6,"offset":79607},"end":{"line":3611,"column":14,"offset":79615}}}],"position":{"start":{"line":3611,"column":1,"offset":79602},"end":{"line":3611,"column":14,"offset":79615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Enforce precedence with parentheses","position":{"start":{"line":3613,"column":3,"offset":79619},"end":{"line":3613,"column":38,"offset":79654}}}],"position":{"start":{"line":3613,"column":1,"offset":79617},"end":{"line":3613,"column":38,"offset":79654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(1 + 3) ","position":{"start":{"line":3615,"column":1,"offset":79656},"end":{"line":3615,"column":9,"offset":79664}}},{"type":"text","value":"*","position":{"start":{"line":3615,"column":9,"offset":79664},"end":{"line":3615,"column":11,"offset":79666}}},{"type":"text","value":" 2 # => 8","position":{"start":{"line":3615,"column":11,"offset":79666},"end":{"line":3615,"column":20,"offset":79675}}}],"position":{"start":{"line":3615,"column":1,"offset":79656},"end":{"line":3615,"column":20,"offset":79675}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Boolean values are primitives (Note: the capitalization)","position":{"start":{"line":3617,"column":3,"offset":79679},"end":{"line":3617,"column":59,"offset":79735}}}],"position":{"start":{"line":3617,"column":1,"offset":79677},"end":{"line":3617,"column":59,"offset":79735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"True\nFalse","position":{"start":{"line":3619,"column":1,"offset":79737},"end":{"line":3620,"column":6,"offset":79747}}}],"position":{"start":{"line":3619,"column":1,"offset":79737},"end":{"line":3620,"column":6,"offset":79747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"negate with not","position":{"start":{"line":3622,"column":3,"offset":79751},"end":{"line":3622,"column":18,"offset":79766}}}],"position":{"start":{"line":3622,"column":1,"offset":79749},"end":{"line":3622,"column":18,"offset":79766}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"not True # => False\nnot False # => True","position":{"start":{"line":3624,"column":1,"offset":79768},"end":{"line":3625,"column":20,"offset":79807}}}],"position":{"start":{"line":3624,"column":1,"offset":79768},"end":{"line":3625,"column":20,"offset":79807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Boolean Operators","position":{"start":{"line":3627,"column":3,"offset":79811},"end":{"line":3627,"column":20,"offset":79828}}}],"position":{"start":{"line":3627,"column":1,"offset":79809},"end":{"line":3627,"column":20,"offset":79828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Note \"and\" and \"or\" are case-sensitive","position":{"start":{"line":3629,"column":3,"offset":79832},"end":{"line":3629,"column":41,"offset":79870}}}],"position":{"start":{"line":3629,"column":1,"offset":79830},"end":{"line":3629,"column":41,"offset":79870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"True and False # => False\nFalse or True # => True","position":{"start":{"line":3631,"column":1,"offset":79872},"end":{"line":3632,"column":24,"offset":79921}}}],"position":{"start":{"line":3631,"column":1,"offset":79872},"end":{"line":3632,"column":24,"offset":79921}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"True and False are actually 1 and 0 but with different keywords","position":{"start":{"line":3634,"column":3,"offset":79925},"end":{"line":3634,"column":66,"offset":79988}}}],"position":{"start":{"line":3634,"column":1,"offset":79923},"end":{"line":3634,"column":66,"offset":79988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"True + True # => 2\nTrue ","position":{"start":{"line":3636,"column":1,"offset":79990},"end":{"line":3637,"column":6,"offset":80014}}},{"type":"text","value":"*","position":{"start":{"line":3637,"column":6,"offset":80014},"end":{"line":3637,"column":8,"offset":80016}}},{"type":"text","value":" 8 # => 8\nFalse - 5 # => -5","position":{"start":{"line":3637,"column":8,"offset":80016},"end":{"line":3638,"column":18,"offset":80043}}}],"position":{"start":{"line":3636,"column":1,"offset":79990},"end":{"line":3638,"column":18,"offset":80043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Comparison operators look at the numerical value of True and False","position":{"start":{"line":3640,"column":3,"offset":80047},"end":{"line":3640,"column":69,"offset":80113}}}],"position":{"start":{"line":3640,"column":1,"offset":80045},"end":{"line":3640,"column":69,"offset":80113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"0 == False # => True\n1 == True # => True\n2 == True # => False\n-5 != False # => True","position":{"start":{"line":3642,"column":1,"offset":80115},"end":{"line":3645,"column":22,"offset":80198}}}],"position":{"start":{"line":3642,"column":1,"offset":80115},"end":{"line":3645,"column":22,"offset":80198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Using boolean logical operators on ints casts them to booleans for evaluation, but their non-cast value is returned","position":{"start":{"line":3647,"column":3,"offset":80202},"end":{"line":3647,"column":118,"offset":80317}}}],"position":{"start":{"line":3647,"column":1,"offset":80200},"end":{"line":3647,"column":118,"offset":80317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Don't mix up with bool(ints) and bitwise and/or (&,|)","position":{"start":{"line":3649,"column":3,"offset":80321},"end":{"line":3649,"column":56,"offset":80374}}}],"position":{"start":{"line":3649,"column":1,"offset":80319},"end":{"line":3649,"column":56,"offset":80374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"bool(0) # => False\nbool(4) # => True\nbool(-6) # => True\n0 and 2 # => 0\n-5 or 0 # => -5","position":{"start":{"line":3651,"column":1,"offset":80376},"end":{"line":3655,"column":16,"offset":80462}}}],"position":{"start":{"line":3651,"column":1,"offset":80376},"end":{"line":3655,"column":16,"offset":80462}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Equality is ==","position":{"start":{"line":3657,"column":3,"offset":80466},"end":{"line":3657,"column":17,"offset":80480}}}],"position":{"start":{"line":3657,"column":1,"offset":80464},"end":{"line":3657,"column":17,"offset":80480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1 == 1 # => True\n2 == 1 # => False","position":{"start":{"line":3659,"column":1,"offset":80482},"end":{"line":3660,"column":18,"offset":80516}}}],"position":{"start":{"line":3659,"column":1,"offset":80482},"end":{"line":3660,"column":18,"offset":80516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Inequality is !=","position":{"start":{"line":3662,"column":3,"offset":80520},"end":{"line":3662,"column":19,"offset":80536}}}],"position":{"start":{"line":3662,"column":1,"offset":80518},"end":{"line":3662,"column":19,"offset":80536}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1 != 1 # => False\n2 != 1 # => True","position":{"start":{"line":3664,"column":1,"offset":80538},"end":{"line":3665,"column":17,"offset":80572}}}],"position":{"start":{"line":3664,"column":1,"offset":80538},"end":{"line":3665,"column":17,"offset":80572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"More comparisons","position":{"start":{"line":3667,"column":3,"offset":80576},"end":{"line":3667,"column":19,"offset":80592}}}],"position":{"start":{"line":3667,"column":1,"offset":80574},"end":{"line":3667,"column":19,"offset":80592}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1 < 10 # => True\n1 > 10 # => False\n2 <= 2 # => True\n2 >= 2 # => True","position":{"start":{"line":3669,"column":1,"offset":80594},"end":{"line":3672,"column":17,"offset":80662}}}],"position":{"start":{"line":3669,"column":1,"offset":80594},"end":{"line":3672,"column":17,"offset":80662}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Seeing whether a value is in a range","position":{"start":{"line":3674,"column":3,"offset":80666},"end":{"line":3674,"column":39,"offset":80702}}}],"position":{"start":{"line":3674,"column":1,"offset":80664},"end":{"line":3674,"column":39,"offset":80702}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1 < 2 and 2 < 3 # => True\n2 < 3 and 3 < 2 # => False","position":{"start":{"line":3676,"column":1,"offset":80704},"end":{"line":3677,"column":27,"offset":80756}}}],"position":{"start":{"line":3676,"column":1,"offset":80704},"end":{"line":3677,"column":27,"offset":80756}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Chaining makes this look nicer","position":{"start":{"line":3679,"column":3,"offset":80760},"end":{"line":3679,"column":33,"offset":80790}}}],"position":{"start":{"line":3679,"column":1,"offset":80758},"end":{"line":3679,"column":33,"offset":80790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1 < 2 < 3 # => True\n2 < 3 < 2 # => False","position":{"start":{"line":3681,"column":1,"offset":80792},"end":{"line":3682,"column":21,"offset":80832}}}],"position":{"start":{"line":3681,"column":1,"offset":80792},"end":{"line":3682,"column":21,"offset":80832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"(is vs. ==) is checks if two variables refer to the same object, but == checks","position":{"start":{"line":3684,"column":3,"offset":80836},"end":{"line":3684,"column":81,"offset":80914}}}],"position":{"start":{"line":3684,"column":1,"offset":80834},"end":{"line":3684,"column":81,"offset":80914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"if the objects pointed to have the same values","position":{"start":{"line":3686,"column":3,"offset":80918},"end":{"line":3686,"column":49,"offset":80964}}}],"position":{"start":{"line":3686,"column":1,"offset":80916},"end":{"line":3686,"column":49,"offset":80964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"a = ","position":{"start":{"line":3688,"column":1,"offset":80966},"end":{"line":3688,"column":5,"offset":80970}}},{"type":"text","value":"[1, 2, 3, 4]","position":{"start":{"line":3688,"column":6,"offset":80971},"end":{"line":3688,"column":16,"offset":80981}}},{"type":"text","value":" # Point a at a new list, ","position":{"start":{"line":3688,"column":17,"offset":80982},"end":{"line":3688,"column":43,"offset":81008}}},{"type":"text","value":"[1, 2, 3, 4]","position":{"start":{"line":3688,"column":44,"offset":81009},"end":{"line":3688,"column":54,"offset":81019}}},{"type":"text","value":"\nb = a # Point b at what a is pointing to\nb is a # => True, a and b refer to the same object\nb == a # => True, a's and b's objects are equal\nb = ","position":{"start":{"line":3688,"column":55,"offset":81020},"end":{"line":3692,"column":5,"offset":81165}}},{"type":"text","value":"[1, 2, 3, 4]","position":{"start":{"line":3692,"column":6,"offset":81166},"end":{"line":3692,"column":16,"offset":81176}}},{"type":"text","value":" # Point b at a new list, ","position":{"start":{"line":3692,"column":17,"offset":81177},"end":{"line":3692,"column":43,"offset":81203}}},{"type":"text","value":"[1, 2, 3, 4]","position":{"start":{"line":3692,"column":44,"offset":81204},"end":{"line":3692,"column":54,"offset":81214}}},{"type":"text","value":"\nb is a # => False, a and b do not refer to the same object\nb == a # => True, a's and b's objects are equal","position":{"start":{"line":3692,"column":55,"offset":81215},"end":{"line":3694,"column":48,"offset":81322}}}],"position":{"start":{"line":3688,"column":1,"offset":80966},"end":{"line":3694,"column":48,"offset":81322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Strings are created with \" or '","position":{"start":{"line":3696,"column":3,"offset":81326},"end":{"line":3696,"column":34,"offset":81357}}}],"position":{"start":{"line":3696,"column":1,"offset":81324},"end":{"line":3696,"column":34,"offset":81357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"This is a string.\"\n'This is also a string.'","position":{"start":{"line":3698,"column":1,"offset":81359},"end":{"line":3699,"column":25,"offset":81403}}}],"position":{"start":{"line":3698,"column":1,"offset":81359},"end":{"line":3699,"column":25,"offset":81403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Strings can be added too! But try not to do this","position":{"start":{"line":3701,"column":3,"offset":81407},"end":{"line":3701,"column":51,"offset":81455}}}],"position":{"start":{"line":3701,"column":1,"offset":81405},"end":{"line":3701,"column":51,"offset":81455}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"Hello \" + \"world!\" # => \"Hello world!\"","position":{"start":{"line":3703,"column":1,"offset":81457},"end":{"line":3703,"column":40,"offset":81496}}}],"position":{"start":{"line":3703,"column":1,"offset":81457},"end":{"line":3703,"column":40,"offset":81496}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"String literals (but not variables) can be concatenated without using '+'","position":{"start":{"line":3705,"column":3,"offset":81500},"end":{"line":3705,"column":76,"offset":81573}}}],"position":{"start":{"line":3705,"column":1,"offset":81498},"end":{"line":3705,"column":76,"offset":81573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"Hello \" \"world!\" # => \"Hello world!\"","position":{"start":{"line":3707,"column":1,"offset":81575},"end":{"line":3707,"column":38,"offset":81612}}}],"position":{"start":{"line":3707,"column":1,"offset":81575},"end":{"line":3707,"column":38,"offset":81612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"A string can be treated like a list of characters","position":{"start":{"line":3709,"column":3,"offset":81616},"end":{"line":3709,"column":52,"offset":81665}}}],"position":{"start":{"line":3709,"column":1,"offset":81614},"end":{"line":3709,"column":52,"offset":81665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"This is a string\"","position":{"start":{"line":3711,"column":1,"offset":81667},"end":{"line":3711,"column":19,"offset":81685}}},{"type":"text","value":"[0]","position":{"start":{"line":3711,"column":20,"offset":81686},"end":{"line":3711,"column":21,"offset":81687}}},{"type":"text","value":" # => 'T'","position":{"start":{"line":3711,"column":22,"offset":81688},"end":{"line":3711,"column":31,"offset":81697}}}],"position":{"start":{"line":3711,"column":1,"offset":81667},"end":{"line":3711,"column":31,"offset":81697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can find the length of a string","position":{"start":{"line":3713,"column":3,"offset":81701},"end":{"line":3713,"column":38,"offset":81736}}}],"position":{"start":{"line":3713,"column":1,"offset":81699},"end":{"line":3713,"column":38,"offset":81736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"len(\"This is a string\") # => 16","position":{"start":{"line":3715,"column":1,"offset":81738},"end":{"line":3715,"column":32,"offset":81769}}}],"position":{"start":{"line":3715,"column":1,"offset":81738},"end":{"line":3715,"column":32,"offset":81769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":".format can be used to format strings, like this","position":{"start":{"line":3717,"column":3,"offset":81773},"end":{"line":3717,"column":51,"offset":81821}}}],"position":{"start":{"line":3717,"column":1,"offset":81771},"end":{"line":3717,"column":51,"offset":81821}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"{} can be {}\".format(\"Strings\", \"interpolated\") # => \"Strings can be interpolated\"","position":{"start":{"line":3719,"column":1,"offset":81823},"end":{"line":3719,"column":84,"offset":81906}}}],"position":{"start":{"line":3719,"column":1,"offset":81823},"end":{"line":3719,"column":84,"offset":81906}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can repeat the formatting arguments to save some typing","position":{"start":{"line":3721,"column":3,"offset":81910},"end":{"line":3721,"column":62,"offset":81969}}}],"position":{"start":{"line":3721,"column":1,"offset":81908},"end":{"line":3721,"column":62,"offset":81969}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"{0} be nimble, {0} be quick, {0} jump over the {1}\".format(\"Jack\", \"candle stick\")","position":{"start":{"line":3723,"column":1,"offset":81971},"end":{"line":3723,"column":84,"offset":82054}}}],"position":{"start":{"line":3723,"column":1,"offset":81971},"end":{"line":3723,"column":84,"offset":82054}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"=> \"Jack be nimble, Jack be quick, Jack jump over the candle stick\"","position":{"start":{"line":3725,"column":3,"offset":82058},"end":{"line":3725,"column":70,"offset":82125}}}],"position":{"start":{"line":3725,"column":1,"offset":82056},"end":{"line":3725,"column":70,"offset":82125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can use keywords if you don't want to count","position":{"start":{"line":3727,"column":3,"offset":82129},"end":{"line":3727,"column":50,"offset":82176}}}],"position":{"start":{"line":3727,"column":1,"offset":82127},"end":{"line":3727,"column":50,"offset":82176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"{name} wants to eat {food}\".format(name=\"Bob\", food=\"lasagna\") # => \"Bob wants to eat lasagna\"","position":{"start":{"line":3729,"column":1,"offset":82178},"end":{"line":3729,"column":96,"offset":82273}}}],"position":{"start":{"line":3729,"column":1,"offset":82178},"end":{"line":3729,"column":96,"offset":82273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"If your Python 3 code also needs to run on Python 2.5 and below, you can also","position":{"start":{"line":3731,"column":3,"offset":82277},"end":{"line":3731,"column":80,"offset":82354}}}],"position":{"start":{"line":3731,"column":1,"offset":82275},"end":{"line":3731,"column":80,"offset":82354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"still use the old style of formatting","position":{"start":{"line":3733,"column":3,"offset":82358},"end":{"line":3733,"column":40,"offset":82395}}}],"position":{"start":{"line":3733,"column":1,"offset":82356},"end":{"line":3733,"column":40,"offset":82395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"%s can be %s the %s way\" % (\"Strings\", \"interpolated\", \"old\") # => \"Strings can be interpolated the old way\"","position":{"start":{"line":3735,"column":1,"offset":82397},"end":{"line":3735,"column":110,"offset":82506}}}],"position":{"start":{"line":3735,"column":1,"offset":82397},"end":{"line":3735,"column":110,"offset":82506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can also format using f-strings or formatted string literals (in Python 3.6+)","position":{"start":{"line":3737,"column":3,"offset":82510},"end":{"line":3737,"column":84,"offset":82591}}}],"position":{"start":{"line":3737,"column":1,"offset":82508},"end":{"line":3737,"column":84,"offset":82591}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"name = \"Reiko\"\nf\"She said her name is {name}.\" # => \"She said her name is Reiko\"","position":{"start":{"line":3739,"column":1,"offset":82593},"end":{"line":3740,"column":66,"offset":82673}}}],"position":{"start":{"line":3739,"column":1,"offset":82593},"end":{"line":3740,"column":66,"offset":82673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can basically put any Python statement inside the braces and it will be output in the string","position":{"start":{"line":3742,"column":3,"offset":82677},"end":{"line":3742,"column":99,"offset":82773}}}],"position":{"start":{"line":3742,"column":1,"offset":82675},"end":{"line":3742,"column":99,"offset":82773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"f\"{name} is {len(name)} characters long.\" # => \"Reiko is 5 characters long.\"","position":{"start":{"line":3744,"column":1,"offset":82775},"end":{"line":3744,"column":77,"offset":82851}}}],"position":{"start":{"line":3744,"column":1,"offset":82775},"end":{"line":3744,"column":77,"offset":82851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"None is an object","position":{"start":{"line":3746,"column":3,"offset":82855},"end":{"line":3746,"column":20,"offset":82872}}}],"position":{"start":{"line":3746,"column":1,"offset":82853},"end":{"line":3746,"column":20,"offset":82872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"None # => None","position":{"start":{"line":3748,"column":1,"offset":82874},"end":{"line":3748,"column":15,"offset":82888}}}],"position":{"start":{"line":3748,"column":1,"offset":82874},"end":{"line":3748,"column":15,"offset":82888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Don't use the equality \"==\" symbol to compare objects to None","position":{"start":{"line":3750,"column":3,"offset":82892},"end":{"line":3750,"column":64,"offset":82953}}}],"position":{"start":{"line":3750,"column":1,"offset":82890},"end":{"line":3750,"column":64,"offset":82953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Use \"is\" instead. This checks for equality of object identity","position":{"start":{"line":3752,"column":3,"offset":82957},"end":{"line":3752,"column":64,"offset":83018}}}],"position":{"start":{"line":3752,"column":1,"offset":82955},"end":{"line":3752,"column":64,"offset":83018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"etc\" is None # => False\nNone is None # => True","position":{"start":{"line":3754,"column":1,"offset":83020},"end":{"line":3755,"column":23,"offset":83067}}}],"position":{"start":{"line":3754,"column":1,"offset":83020},"end":{"line":3755,"column":23,"offset":83067}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"None, 0, and empty strings/lists/dicts/tuples all evaluate to False","position":{"start":{"line":3757,"column":3,"offset":83071},"end":{"line":3757,"column":70,"offset":83138}}}],"position":{"start":{"line":3757,"column":1,"offset":83069},"end":{"line":3757,"column":70,"offset":83138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"All other values are True","position":{"start":{"line":3759,"column":3,"offset":83142},"end":{"line":3759,"column":28,"offset":83167}}}],"position":{"start":{"line":3759,"column":1,"offset":83140},"end":{"line":3759,"column":28,"offset":83167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"bool(0) # => False\nbool(\"\") # => False\nbool([]) # => False\nbool({}) # => False\nbool(()) # => False","position":{"start":{"line":3761,"column":1,"offset":83169},"end":{"line":3765,"column":20,"offset":83267}}}],"position":{"start":{"line":3761,"column":1,"offset":83169},"end":{"line":3765,"column":20,"offset":83267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":3767,"column":1,"offset":83269},"end":{"line":3767,"column":53,"offset":83321}}}],"position":{"start":{"line":3767,"column":1,"offset":83269},"end":{"line":3767,"column":53,"offset":83321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"2. Variables and Collections","position":{"start":{"line":3769,"column":4,"offset":83326},"end":{"line":3769,"column":32,"offset":83354}}}],"position":{"start":{"line":3769,"column":1,"offset":83323},"end":{"line":3769,"column":32,"offset":83354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":3771,"column":1,"offset":83356},"end":{"line":3771,"column":53,"offset":83408}}}],"position":{"start":{"line":3771,"column":1,"offset":83356},"end":{"line":3771,"column":53,"offset":83408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Python has a print function","position":{"start":{"line":3773,"column":3,"offset":83412},"end":{"line":3773,"column":30,"offset":83439}}}],"position":{"start":{"line":3773,"column":1,"offset":83410},"end":{"line":3773,"column":30,"offset":83439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print(\"I'm Python. Nice to meet you!\") # => I'm Python. Nice to meet you!","position":{"start":{"line":3775,"column":1,"offset":83441},"end":{"line":3775,"column":74,"offset":83514}}}],"position":{"start":{"line":3775,"column":1,"offset":83441},"end":{"line":3775,"column":74,"offset":83514}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"By default the print function also prints out a newline at the end","position":{"start":{"line":3777,"column":3,"offset":83518},"end":{"line":3777,"column":69,"offset":83584}}}],"position":{"start":{"line":3777,"column":1,"offset":83516},"end":{"line":3777,"column":69,"offset":83584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Use the optional argument end to change the end string","position":{"start":{"line":3779,"column":3,"offset":83588},"end":{"line":3779,"column":57,"offset":83642}}}],"position":{"start":{"line":3779,"column":1,"offset":83586},"end":{"line":3779,"column":57,"offset":83642}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print(\"Hello, World\", end=\"!\") # => Hello, World!","position":{"start":{"line":3781,"column":1,"offset":83644},"end":{"line":3781,"column":50,"offset":83693}}}],"position":{"start":{"line":3781,"column":1,"offset":83644},"end":{"line":3781,"column":50,"offset":83693}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Simple way to get input data from console","position":{"start":{"line":3783,"column":3,"offset":83697},"end":{"line":3783,"column":44,"offset":83738}}}],"position":{"start":{"line":3783,"column":1,"offset":83695},"end":{"line":3783,"column":44,"offset":83738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"input","position":{"start":{"line":3785,"column":1,"offset":83740},"end":{"line":3785,"column":6,"offset":83745}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"string","position":{"start":{"line":3785,"column":7,"offset":83746},"end":{"line":3785,"column":13,"offset":83752}}}],"position":{"start":{"line":3785,"column":6,"offset":83745},"end":{"line":3785,"column":14,"offset":83753}}},{"type":"text","value":"var = input(\"Enter some data: \") # Returns the data as a string","position":{"start":{"line":3785,"column":14,"offset":83753},"end":{"line":3785,"column":77,"offset":83816}}}],"position":{"start":{"line":3785,"column":1,"offset":83740},"end":{"line":3785,"column":77,"offset":83816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Note: In earlier versions of Python, input() method was named as raw_input()","position":{"start":{"line":3787,"column":3,"offset":83820},"end":{"line":3787,"column":79,"offset":83896}}}],"position":{"start":{"line":3787,"column":1,"offset":83818},"end":{"line":3787,"column":79,"offset":83896}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"There are no declarations, only assignments","position":{"start":{"line":3789,"column":3,"offset":83900},"end":{"line":3789,"column":46,"offset":83943}}}],"position":{"start":{"line":3789,"column":1,"offset":83898},"end":{"line":3789,"column":46,"offset":83943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Convention is to use lower","position":{"start":{"line":3791,"column":3,"offset":83947},"end":{"line":3791,"column":29,"offset":83973}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"case","position":{"start":{"line":3791,"column":30,"offset":83974},"end":{"line":3791,"column":34,"offset":83978}}}],"position":{"start":{"line":3791,"column":29,"offset":83973},"end":{"line":3791,"column":35,"offset":83979}}},{"type":"text","value":"with_underscores","position":{"start":{"line":3791,"column":35,"offset":83979},"end":{"line":3791,"column":51,"offset":83995}}}],"position":{"start":{"line":3791,"column":1,"offset":83945},"end":{"line":3791,"column":51,"offset":83995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"some","position":{"start":{"line":3793,"column":1,"offset":83997},"end":{"line":3793,"column":5,"offset":84001}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"var = 5\nsome","position":{"start":{"line":3793,"column":6,"offset":84002},"end":{"line":3794,"column":5,"offset":84014}}}],"position":{"start":{"line":3793,"column":5,"offset":84001},"end":{"line":3794,"column":6,"offset":84015}}},{"type":"text","value":"var # => 5","position":{"start":{"line":3794,"column":6,"offset":84015},"end":{"line":3794,"column":16,"offset":84025}}}],"position":{"start":{"line":3793,"column":1,"offset":83997},"end":{"line":3794,"column":16,"offset":84025}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Accessing a previously unassigned variable is an exception","position":{"start":{"line":3796,"column":3,"offset":84029},"end":{"line":3796,"column":61,"offset":84087}}}],"position":{"start":{"line":3796,"column":1,"offset":84027},"end":{"line":3796,"column":61,"offset":84087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"See Control Flow to learn more about exception handling","position":{"start":{"line":3798,"column":3,"offset":84091},"end":{"line":3798,"column":58,"offset":84146}}}],"position":{"start":{"line":3798,"column":1,"offset":84089},"end":{"line":3798,"column":58,"offset":84146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"some","position":{"start":{"line":3800,"column":1,"offset":84148},"end":{"line":3800,"column":5,"offset":84152}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"unknown","position":{"start":{"line":3800,"column":6,"offset":84153},"end":{"line":3800,"column":13,"offset":84160}}}],"position":{"start":{"line":3800,"column":5,"offset":84152},"end":{"line":3800,"column":14,"offset":84161}}},{"type":"text","value":"var # Raises a NameError","position":{"start":{"line":3800,"column":14,"offset":84161},"end":{"line":3800,"column":38,"offset":84185}}}],"position":{"start":{"line":3800,"column":1,"offset":84148},"end":{"line":3800,"column":38,"offset":84185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"if can be used as an expression","position":{"start":{"line":3802,"column":3,"offset":84189},"end":{"line":3802,"column":34,"offset":84220}}}],"position":{"start":{"line":3802,"column":1,"offset":84187},"end":{"line":3802,"column":34,"offset":84220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Equivalent of C's '?:' ternary operator","position":{"start":{"line":3804,"column":3,"offset":84224},"end":{"line":3804,"column":42,"offset":84263}}}],"position":{"start":{"line":3804,"column":1,"offset":84222},"end":{"line":3804,"column":42,"offset":84263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"yahoo!\" if 3 > 2 else 2 # => \"yahoo!\"","position":{"start":{"line":3806,"column":1,"offset":84265},"end":{"line":3806,"column":39,"offset":84303}}}],"position":{"start":{"line":3806,"column":1,"offset":84265},"end":{"line":3806,"column":39,"offset":84303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Lists store sequences","position":{"start":{"line":3808,"column":3,"offset":84307},"end":{"line":3808,"column":24,"offset":84328}}}],"position":{"start":{"line":3808,"column":1,"offset":84305},"end":{"line":3808,"column":24,"offset":84328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li = []","position":{"start":{"line":3810,"column":1,"offset":84330},"end":{"line":3810,"column":8,"offset":84337}}}],"position":{"start":{"line":3810,"column":1,"offset":84330},"end":{"line":3810,"column":8,"offset":84337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can start with a prefilled list","position":{"start":{"line":3812,"column":3,"offset":84341},"end":{"line":3812,"column":38,"offset":84376}}}],"position":{"start":{"line":3812,"column":1,"offset":84339},"end":{"line":3812,"column":38,"offset":84376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"other_li = ","position":{"start":{"line":3814,"column":1,"offset":84378},"end":{"line":3814,"column":12,"offset":84389}}},{"type":"text","value":"[4, 5, 6]","position":{"start":{"line":3814,"column":13,"offset":84390},"end":{"line":3814,"column":20,"offset":84397}}}],"position":{"start":{"line":3814,"column":1,"offset":84378},"end":{"line":3814,"column":21,"offset":84398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Add stuff to the end of a list with append","position":{"start":{"line":3816,"column":3,"offset":84402},"end":{"line":3816,"column":45,"offset":84444}}}],"position":{"start":{"line":3816,"column":1,"offset":84400},"end":{"line":3816,"column":45,"offset":84444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li.append(1) # li is now ","position":{"start":{"line":3818,"column":1,"offset":84446},"end":{"line":3818,"column":26,"offset":84471}}},{"type":"text","value":"[1]","position":{"start":{"line":3818,"column":27,"offset":84472},"end":{"line":3818,"column":28,"offset":84473}}},{"type":"text","value":"\nli.append(2) # li is now ","position":{"start":{"line":3818,"column":29,"offset":84474},"end":{"line":3819,"column":26,"offset":84500}}},{"type":"text","value":"[1, 2]","position":{"start":{"line":3819,"column":27,"offset":84501},"end":{"line":3819,"column":31,"offset":84505}}},{"type":"text","value":"\nli.append(4) # li is now ","position":{"start":{"line":3819,"column":32,"offset":84506},"end":{"line":3820,"column":26,"offset":84532}}},{"type":"text","value":"[1, 2, 4]","position":{"start":{"line":3820,"column":27,"offset":84533},"end":{"line":3820,"column":34,"offset":84540}}},{"type":"text","value":"\nli.append(3) # li is now ","position":{"start":{"line":3820,"column":35,"offset":84541},"end":{"line":3821,"column":26,"offset":84567}}},{"type":"text","value":"[1, 2, 4, 3]","position":{"start":{"line":3821,"column":27,"offset":84568},"end":{"line":3821,"column":37,"offset":84578}}}],"position":{"start":{"line":3818,"column":1,"offset":84446},"end":{"line":3821,"column":38,"offset":84579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Remove from the end with pop","position":{"start":{"line":3823,"column":3,"offset":84583},"end":{"line":3823,"column":31,"offset":84611}}}],"position":{"start":{"line":3823,"column":1,"offset":84581},"end":{"line":3823,"column":31,"offset":84611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li.pop() # => 3 and li is now ","position":{"start":{"line":3825,"column":1,"offset":84613},"end":{"line":3825,"column":31,"offset":84643}}},{"type":"text","value":"[1, 2, 4]","position":{"start":{"line":3825,"column":32,"offset":84644},"end":{"line":3825,"column":39,"offset":84651}}}],"position":{"start":{"line":3825,"column":1,"offset":84613},"end":{"line":3825,"column":40,"offset":84652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Let's put it back","position":{"start":{"line":3827,"column":3,"offset":84656},"end":{"line":3827,"column":20,"offset":84673}}}],"position":{"start":{"line":3827,"column":1,"offset":84654},"end":{"line":3827,"column":20,"offset":84673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li.append(3) # li is now ","position":{"start":{"line":3829,"column":1,"offset":84675},"end":{"line":3829,"column":26,"offset":84700}}},{"type":"text","value":"[1, 2, 4, 3]","position":{"start":{"line":3829,"column":27,"offset":84701},"end":{"line":3829,"column":37,"offset":84711}}},{"type":"text","value":" again.","position":{"start":{"line":3829,"column":38,"offset":84712},"end":{"line":3829,"column":45,"offset":84719}}}],"position":{"start":{"line":3829,"column":1,"offset":84675},"end":{"line":3829,"column":45,"offset":84719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Access a list like you would any array","position":{"start":{"line":3831,"column":3,"offset":84723},"end":{"line":3831,"column":41,"offset":84761}}}],"position":{"start":{"line":3831,"column":1,"offset":84721},"end":{"line":3831,"column":41,"offset":84761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li","position":{"start":{"line":3833,"column":1,"offset":84763},"end":{"line":3833,"column":3,"offset":84765}}},{"type":"text","value":"[0]","position":{"start":{"line":3833,"column":4,"offset":84766},"end":{"line":3833,"column":5,"offset":84767}}},{"type":"text","value":" # => 1","position":{"start":{"line":3833,"column":6,"offset":84768},"end":{"line":3833,"column":13,"offset":84775}}}],"position":{"start":{"line":3833,"column":1,"offset":84763},"end":{"line":3833,"column":13,"offset":84775}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Look at the last element","position":{"start":{"line":3835,"column":3,"offset":84779},"end":{"line":3835,"column":27,"offset":84803}}}],"position":{"start":{"line":3835,"column":1,"offset":84777},"end":{"line":3835,"column":27,"offset":84803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li","position":{"start":{"line":3837,"column":1,"offset":84805},"end":{"line":3837,"column":3,"offset":84807}}},{"type":"text","value":"[-1]","position":{"start":{"line":3837,"column":4,"offset":84808},"end":{"line":3837,"column":6,"offset":84810}}},{"type":"text","value":" # => 3","position":{"start":{"line":3837,"column":7,"offset":84811},"end":{"line":3837,"column":14,"offset":84818}}}],"position":{"start":{"line":3837,"column":1,"offset":84805},"end":{"line":3837,"column":14,"offset":84818}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Looking out of bounds is an IndexError","position":{"start":{"line":3839,"column":3,"offset":84822},"end":{"line":3839,"column":41,"offset":84860}}}],"position":{"start":{"line":3839,"column":1,"offset":84820},"end":{"line":3839,"column":41,"offset":84860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li","position":{"start":{"line":3841,"column":1,"offset":84862},"end":{"line":3841,"column":3,"offset":84864}}},{"type":"text","value":"[4]","position":{"start":{"line":3841,"column":4,"offset":84865},"end":{"line":3841,"column":5,"offset":84866}}},{"type":"text","value":" # Raises an IndexError","position":{"start":{"line":3841,"column":6,"offset":84867},"end":{"line":3841,"column":29,"offset":84890}}}],"position":{"start":{"line":3841,"column":1,"offset":84862},"end":{"line":3841,"column":29,"offset":84890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can look at ranges with slice syntax","position":{"start":{"line":3843,"column":3,"offset":84894},"end":{"line":3843,"column":43,"offset":84934}}}],"position":{"start":{"line":3843,"column":1,"offset":84892},"end":{"line":3843,"column":43,"offset":84934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"The start index is included, the end index is not","position":{"start":{"line":3845,"column":3,"offset":84938},"end":{"line":3845,"column":52,"offset":84987}}}],"position":{"start":{"line":3845,"column":1,"offset":84936},"end":{"line":3845,"column":52,"offset":84987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"(It's a closed/open range for you mathy types.)","position":{"start":{"line":3847,"column":3,"offset":84991},"end":{"line":3847,"column":50,"offset":85038}}}],"position":{"start":{"line":3847,"column":1,"offset":84989},"end":{"line":3847,"column":50,"offset":85038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li","position":{"start":{"line":3849,"column":1,"offset":85040},"end":{"line":3849,"column":3,"offset":85042}}},{"type":"text","value":"[1:3]","position":{"start":{"line":3849,"column":4,"offset":85043},"end":{"line":3849,"column":7,"offset":85046}}},{"type":"text","value":" # Return list from index 1 to 3 => ","position":{"start":{"line":3849,"column":8,"offset":85047},"end":{"line":3849,"column":44,"offset":85083}}},{"type":"text","value":"[2, 4]","position":{"start":{"line":3849,"column":45,"offset":85084},"end":{"line":3849,"column":49,"offset":85088}}},{"type":"text","value":"\nli","position":{"start":{"line":3849,"column":50,"offset":85089},"end":{"line":3850,"column":3,"offset":85092}}},{"type":"text","value":"[2:]","position":{"start":{"line":3850,"column":4,"offset":85093},"end":{"line":3850,"column":6,"offset":85095}}},{"type":"text","value":" # Return list starting from index 2 => ","position":{"start":{"line":3850,"column":7,"offset":85096},"end":{"line":3850,"column":47,"offset":85136}}},{"type":"text","value":"[4, 3]","position":{"start":{"line":3850,"column":48,"offset":85137},"end":{"line":3850,"column":52,"offset":85141}}},{"type":"text","value":"\nli","position":{"start":{"line":3850,"column":53,"offset":85142},"end":{"line":3851,"column":3,"offset":85145}}},{"type":"text","value":"[:3]","position":{"start":{"line":3851,"column":4,"offset":85146},"end":{"line":3851,"column":6,"offset":85148}}},{"type":"text","value":" # Return list from beginning until index 3 => ","position":{"start":{"line":3851,"column":7,"offset":85149},"end":{"line":3851,"column":54,"offset":85196}}},{"type":"text","value":"[1, 2, 4]","position":{"start":{"line":3851,"column":55,"offset":85197},"end":{"line":3851,"column":62,"offset":85204}}},{"type":"text","value":"\nli","position":{"start":{"line":3851,"column":63,"offset":85205},"end":{"line":3852,"column":3,"offset":85208}}},{"type":"text","value":"[::2]","position":{"start":{"line":3852,"column":4,"offset":85209},"end":{"line":3852,"column":7,"offset":85212}}},{"type":"text","value":" # Return list selecting every second entry => ","position":{"start":{"line":3852,"column":8,"offset":85213},"end":{"line":3852,"column":55,"offset":85260}}},{"type":"text","value":"[1, 4]","position":{"start":{"line":3852,"column":56,"offset":85261},"end":{"line":3852,"column":60,"offset":85265}}},{"type":"text","value":"\nli","position":{"start":{"line":3852,"column":61,"offset":85266},"end":{"line":3853,"column":3,"offset":85269}}},{"type":"text","value":"[::-1]","position":{"start":{"line":3853,"column":4,"offset":85270},"end":{"line":3853,"column":8,"offset":85274}}},{"type":"text","value":" # Return list in reverse order => ","position":{"start":{"line":3853,"column":9,"offset":85275},"end":{"line":3853,"column":44,"offset":85310}}},{"type":"text","value":"[3, 4, 2, 1]","position":{"start":{"line":3853,"column":45,"offset":85311},"end":{"line":3853,"column":55,"offset":85321}}}],"position":{"start":{"line":3849,"column":1,"offset":85040},"end":{"line":3853,"column":56,"offset":85322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Use any combination of these to make advanced slices","position":{"start":{"line":3855,"column":3,"offset":85326},"end":{"line":3855,"column":55,"offset":85378}}}],"position":{"start":{"line":3855,"column":1,"offset":85324},"end":{"line":3855,"column":55,"offset":85378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"li","position":{"start":{"line":3857,"column":3,"offset":85382},"end":{"line":3857,"column":5,"offset":85384}}},{"type":"text","value":"[start:end:step]","position":{"start":{"line":3857,"column":6,"offset":85385},"end":{"line":3857,"column":20,"offset":85399}}}],"position":{"start":{"line":3857,"column":1,"offset":85380},"end":{"line":3857,"column":21,"offset":85400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Make a one layer deep copy using slices","position":{"start":{"line":3859,"column":3,"offset":85404},"end":{"line":3859,"column":42,"offset":85443}}}],"position":{"start":{"line":3859,"column":1,"offset":85402},"end":{"line":3859,"column":42,"offset":85443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li2 = li","position":{"start":{"line":3861,"column":1,"offset":85445},"end":{"line":3861,"column":9,"offset":85453}}},{"type":"text","value":"[:]","position":{"start":{"line":3861,"column":10,"offset":85454},"end":{"line":3861,"column":11,"offset":85455}}},{"type":"text","value":" # => li2 = ","position":{"start":{"line":3861,"column":12,"offset":85456},"end":{"line":3861,"column":24,"offset":85468}}},{"type":"text","value":"[1, 2, 4, 3]","position":{"start":{"line":3861,"column":25,"offset":85469},"end":{"line":3861,"column":35,"offset":85479}}},{"type":"text","value":" but (li2 is li) will result in false.","position":{"start":{"line":3861,"column":36,"offset":85480},"end":{"line":3861,"column":74,"offset":85518}}}],"position":{"start":{"line":3861,"column":1,"offset":85445},"end":{"line":3861,"column":74,"offset":85518}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Remove arbitrary elements from a list with \"del\"","position":{"start":{"line":3863,"column":3,"offset":85522},"end":{"line":3863,"column":51,"offset":85570}}}],"position":{"start":{"line":3863,"column":1,"offset":85520},"end":{"line":3863,"column":51,"offset":85570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"del li","position":{"start":{"line":3865,"column":1,"offset":85572},"end":{"line":3865,"column":7,"offset":85578}}},{"type":"text","value":"[2]","position":{"start":{"line":3865,"column":8,"offset":85579},"end":{"line":3865,"column":9,"offset":85580}}},{"type":"text","value":" # li is now ","position":{"start":{"line":3865,"column":10,"offset":85581},"end":{"line":3865,"column":23,"offset":85594}}},{"type":"text","value":"[1, 2, 3]","position":{"start":{"line":3865,"column":24,"offset":85595},"end":{"line":3865,"column":31,"offset":85602}}}],"position":{"start":{"line":3865,"column":1,"offset":85572},"end":{"line":3865,"column":32,"offset":85603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Remove first occurrence of a value","position":{"start":{"line":3867,"column":3,"offset":85607},"end":{"line":3867,"column":37,"offset":85641}}}],"position":{"start":{"line":3867,"column":1,"offset":85605},"end":{"line":3867,"column":37,"offset":85641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li.remove(2) # li is now ","position":{"start":{"line":3869,"column":1,"offset":85643},"end":{"line":3869,"column":26,"offset":85668}}},{"type":"text","value":"[1, 3]","position":{"start":{"line":3869,"column":27,"offset":85669},"end":{"line":3869,"column":31,"offset":85673}}},{"type":"text","value":"\nli.remove(2) # Raises a ValueError as 2 is not in the list","position":{"start":{"line":3869,"column":32,"offset":85674},"end":{"line":3870,"column":59,"offset":85733}}}],"position":{"start":{"line":3869,"column":1,"offset":85643},"end":{"line":3870,"column":59,"offset":85733}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Insert an element at a specific index","position":{"start":{"line":3872,"column":3,"offset":85737},"end":{"line":3872,"column":40,"offset":85774}}}],"position":{"start":{"line":3872,"column":1,"offset":85735},"end":{"line":3872,"column":40,"offset":85774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li.insert(1, 2) # li is now ","position":{"start":{"line":3874,"column":1,"offset":85776},"end":{"line":3874,"column":29,"offset":85804}}},{"type":"text","value":"[1, 2, 3]","position":{"start":{"line":3874,"column":30,"offset":85805},"end":{"line":3874,"column":37,"offset":85812}}},{"type":"text","value":" again","position":{"start":{"line":3874,"column":38,"offset":85813},"end":{"line":3874,"column":44,"offset":85819}}}],"position":{"start":{"line":3874,"column":1,"offset":85776},"end":{"line":3874,"column":44,"offset":85819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Get the index of the first item found matching the argument","position":{"start":{"line":3876,"column":3,"offset":85823},"end":{"line":3876,"column":62,"offset":85882}}}],"position":{"start":{"line":3876,"column":1,"offset":85821},"end":{"line":3876,"column":62,"offset":85882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li.index(2) # => 1\nli.index(4) # Raises a ValueError as 4 is not in the list","position":{"start":{"line":3878,"column":1,"offset":85884},"end":{"line":3879,"column":58,"offset":85960}}}],"position":{"start":{"line":3878,"column":1,"offset":85884},"end":{"line":3879,"column":58,"offset":85960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can add lists","position":{"start":{"line":3881,"column":3,"offset":85964},"end":{"line":3881,"column":20,"offset":85981}}}],"position":{"start":{"line":3881,"column":1,"offset":85962},"end":{"line":3881,"column":20,"offset":85981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Note: values for li and for other_li are not modified","position":{"start":{"line":3883,"column":3,"offset":85985},"end":{"line":3883,"column":56,"offset":86038}}}],"position":{"start":{"line":3883,"column":1,"offset":85983},"end":{"line":3883,"column":56,"offset":86038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li + other_li # => ","position":{"start":{"line":3885,"column":1,"offset":86040},"end":{"line":3885,"column":20,"offset":86059}}},{"type":"text","value":"[1, 2, 3, 4, 5, 6]","position":{"start":{"line":3885,"column":21,"offset":86060},"end":{"line":3885,"column":37,"offset":86076}}}],"position":{"start":{"line":3885,"column":1,"offset":86040},"end":{"line":3885,"column":38,"offset":86077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Concatenate lists with \"extend()\"","position":{"start":{"line":3887,"column":3,"offset":86081},"end":{"line":3887,"column":36,"offset":86114}}}],"position":{"start":{"line":3887,"column":1,"offset":86079},"end":{"line":3887,"column":36,"offset":86114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"li.extend(other_li) # Now li is ","position":{"start":{"line":3889,"column":1,"offset":86116},"end":{"line":3889,"column":33,"offset":86148}}},{"type":"text","value":"[1, 2, 3, 4, 5, 6]","position":{"start":{"line":3889,"column":34,"offset":86149},"end":{"line":3889,"column":50,"offset":86165}}}],"position":{"start":{"line":3889,"column":1,"offset":86116},"end":{"line":3889,"column":51,"offset":86166}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Check for existence in a list with \"in\"","position":{"start":{"line":3891,"column":3,"offset":86170},"end":{"line":3891,"column":42,"offset":86209}}}],"position":{"start":{"line":3891,"column":1,"offset":86168},"end":{"line":3891,"column":42,"offset":86209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1 in li # => True","position":{"start":{"line":3893,"column":1,"offset":86211},"end":{"line":3893,"column":18,"offset":86228}}}],"position":{"start":{"line":3893,"column":1,"offset":86211},"end":{"line":3893,"column":18,"offset":86228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Examine the length with \"len()\"","position":{"start":{"line":3895,"column":3,"offset":86232},"end":{"line":3895,"column":34,"offset":86263}}}],"position":{"start":{"line":3895,"column":1,"offset":86230},"end":{"line":3895,"column":34,"offset":86263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"len(li) # => 6","position":{"start":{"line":3897,"column":1,"offset":86265},"end":{"line":3897,"column":15,"offset":86279}}}],"position":{"start":{"line":3897,"column":1,"offset":86265},"end":{"line":3897,"column":15,"offset":86279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Tuples are like lists but are immutable","position":{"start":{"line":3899,"column":3,"offset":86283},"end":{"line":3899,"column":42,"offset":86322}}}],"position":{"start":{"line":3899,"column":1,"offset":86281},"end":{"line":3899,"column":42,"offset":86322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tup = (1, 2, 3)\ntup","position":{"start":{"line":3901,"column":1,"offset":86324},"end":{"line":3902,"column":4,"offset":86343}}},{"type":"text","value":"[0]","position":{"start":{"line":3902,"column":5,"offset":86344},"end":{"line":3902,"column":6,"offset":86345}}},{"type":"text","value":" # => 1\ntup","position":{"start":{"line":3902,"column":7,"offset":86346},"end":{"line":3903,"column":4,"offset":86357}}},{"type":"text","value":"[0]","position":{"start":{"line":3903,"column":5,"offset":86358},"end":{"line":3903,"column":6,"offset":86359}}},{"type":"text","value":" = 3 # Raises a TypeError","position":{"start":{"line":3903,"column":7,"offset":86360},"end":{"line":3903,"column":32,"offset":86385}}}],"position":{"start":{"line":3901,"column":1,"offset":86324},"end":{"line":3903,"column":32,"offset":86385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Note that a tuple of length one has to have a comma after the last element but","position":{"start":{"line":3905,"column":3,"offset":86389},"end":{"line":3905,"column":81,"offset":86467}}}],"position":{"start":{"line":3905,"column":1,"offset":86387},"end":{"line":3905,"column":81,"offset":86467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"tuples of other lengths, even zero, do not","position":{"start":{"line":3907,"column":3,"offset":86471},"end":{"line":3907,"column":45,"offset":86513}}}],"position":{"start":{"line":3907,"column":1,"offset":86469},"end":{"line":3907,"column":45,"offset":86513}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"type((1)) # => <class 'int'>\ntype((1,)) # => <class 'tuple'>\ntype(()) # => <class 'tuple'>","position":{"start":{"line":3909,"column":1,"offset":86515},"end":{"line":3911,"column":30,"offset":86605}}}],"position":{"start":{"line":3909,"column":1,"offset":86515},"end":{"line":3911,"column":30,"offset":86605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can do most of the list operations on tuples too","position":{"start":{"line":3913,"column":3,"offset":86609},"end":{"line":3913,"column":55,"offset":86661}}}],"position":{"start":{"line":3913,"column":1,"offset":86607},"end":{"line":3913,"column":55,"offset":86661}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"len(tup) # => 3\ntup + (4, 5, 6) # => (1, 2, 3, 4, 5, 6)\ntup","position":{"start":{"line":3915,"column":1,"offset":86663},"end":{"line":3917,"column":4,"offset":86722}}},{"type":"text","value":"[:2]","position":{"start":{"line":3917,"column":5,"offset":86723},"end":{"line":3917,"column":7,"offset":86725}}},{"type":"text","value":" # => (1, 2)\n2 in tup # => True","position":{"start":{"line":3917,"column":8,"offset":86726},"end":{"line":3918,"column":19,"offset":86757}}}],"position":{"start":{"line":3915,"column":1,"offset":86663},"end":{"line":3918,"column":19,"offset":86757}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can unpack tuples (or lists) into variables","position":{"start":{"line":3920,"column":3,"offset":86761},"end":{"line":3920,"column":50,"offset":86808}}}],"position":{"start":{"line":3920,"column":1,"offset":86759},"end":{"line":3920,"column":50,"offset":86808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"a, b, c = (1, 2, 3) # a is now 1, b is now 2 and c is now 3","position":{"start":{"line":3922,"column":1,"offset":86810},"end":{"line":3922,"column":60,"offset":86869}}}],"position":{"start":{"line":3922,"column":1,"offset":86810},"end":{"line":3922,"column":60,"offset":86869}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can also do extended unpacking","position":{"start":{"line":3924,"column":3,"offset":86873},"end":{"line":3924,"column":37,"offset":86907}}}],"position":{"start":{"line":3924,"column":1,"offset":86871},"end":{"line":3924,"column":37,"offset":86907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"a, ","position":{"start":{"line":3926,"column":1,"offset":86909},"end":{"line":3926,"column":4,"offset":86912}}},{"type":"text","value":"*","position":{"start":{"line":3926,"column":4,"offset":86912},"end":{"line":3926,"column":6,"offset":86914}}},{"type":"text","value":"b, c = (1, 2, 3, 4) # a is now 1, b is now ","position":{"start":{"line":3926,"column":6,"offset":86914},"end":{"line":3926,"column":49,"offset":86957}}},{"type":"text","value":"[2, 3]","position":{"start":{"line":3926,"column":50,"offset":86958},"end":{"line":3926,"column":54,"offset":86962}}},{"type":"text","value":" and c is now 4","position":{"start":{"line":3926,"column":55,"offset":86963},"end":{"line":3926,"column":70,"offset":86978}}}],"position":{"start":{"line":3926,"column":1,"offset":86909},"end":{"line":3926,"column":70,"offset":86978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Tuples are created by default if you leave out the parentheses","position":{"start":{"line":3928,"column":3,"offset":86982},"end":{"line":3928,"column":65,"offset":87044}}}],"position":{"start":{"line":3928,"column":1,"offset":86980},"end":{"line":3928,"column":65,"offset":87044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"d, e, f = 4, 5, 6 # tuple 4, 5, 6 is unpacked into variables d, e and f","position":{"start":{"line":3930,"column":1,"offset":87046},"end":{"line":3930,"column":72,"offset":87117}}}],"position":{"start":{"line":3930,"column":1,"offset":87046},"end":{"line":3930,"column":72,"offset":87117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"respectively such that d = 4, e = 5 and f = 6","position":{"start":{"line":3932,"column":3,"offset":87121},"end":{"line":3932,"column":48,"offset":87166}}}],"position":{"start":{"line":3932,"column":1,"offset":87119},"end":{"line":3932,"column":48,"offset":87166}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Now look how easy it is to swap two values","position":{"start":{"line":3934,"column":3,"offset":87170},"end":{"line":3934,"column":45,"offset":87212}}}],"position":{"start":{"line":3934,"column":1,"offset":87168},"end":{"line":3934,"column":45,"offset":87212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"e, d = d, e # d is now 5 and e is now 4","position":{"start":{"line":3936,"column":1,"offset":87214},"end":{"line":3936,"column":40,"offset":87253}}}],"position":{"start":{"line":3936,"column":1,"offset":87214},"end":{"line":3936,"column":40,"offset":87253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Dictionaries store mappings from keys to values","position":{"start":{"line":3938,"column":3,"offset":87257},"end":{"line":3938,"column":50,"offset":87304}}}],"position":{"start":{"line":3938,"column":1,"offset":87255},"end":{"line":3938,"column":50,"offset":87304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"empty_dict = {}","position":{"start":{"line":3940,"column":1,"offset":87306},"end":{"line":3940,"column":16,"offset":87321}}}],"position":{"start":{"line":3940,"column":1,"offset":87306},"end":{"line":3940,"column":16,"offset":87321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Here is a prefilled dictionary","position":{"start":{"line":3942,"column":3,"offset":87325},"end":{"line":3942,"column":33,"offset":87355}}}],"position":{"start":{"line":3942,"column":1,"offset":87323},"end":{"line":3942,"column":33,"offset":87355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled_dict = {\"one\": 1, \"two\": 2, \"three\": 3}","position":{"start":{"line":3944,"column":1,"offset":87357},"end":{"line":3944,"column":47,"offset":87403}}}],"position":{"start":{"line":3944,"column":1,"offset":87357},"end":{"line":3944,"column":47,"offset":87403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Note keys for dictionaries have to be immutable types. This is to ensure that","position":{"start":{"line":3946,"column":3,"offset":87407},"end":{"line":3946,"column":80,"offset":87484}}}],"position":{"start":{"line":3946,"column":1,"offset":87405},"end":{"line":3946,"column":80,"offset":87484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"the key can be converted to a constant hash value for quick look-ups","position":{"start":{"line":3948,"column":3,"offset":87488},"end":{"line":3948,"column":71,"offset":87556}}}],"position":{"start":{"line":3948,"column":1,"offset":87486},"end":{"line":3948,"column":71,"offset":87556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Immutable types include ints, floats, strings, tuples","position":{"start":{"line":3950,"column":3,"offset":87560},"end":{"line":3950,"column":56,"offset":87613}}}],"position":{"start":{"line":3950,"column":1,"offset":87558},"end":{"line":3950,"column":56,"offset":87613}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"invalid","position":{"start":{"line":3952,"column":1,"offset":87615},"end":{"line":3952,"column":8,"offset":87622}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict = {","position":{"start":{"line":3952,"column":9,"offset":87623},"end":{"line":3952,"column":17,"offset":87631}}},{"type":"text","value":"[1,2,3]","position":{"start":{"line":3952,"column":18,"offset":87632},"end":{"line":3952,"column":23,"offset":87637}}},{"type":"text","value":": \"123\"} # => Raises a TypeError: unhashable type: 'list'\nvalid","position":{"start":{"line":3952,"column":24,"offset":87638},"end":{"line":3953,"column":6,"offset":87701}}}],"position":{"start":{"line":3952,"column":8,"offset":87622},"end":{"line":3953,"column":7,"offset":87702}}},{"type":"text","value":"dict = {(1,2,3):","position":{"start":{"line":3953,"column":7,"offset":87702},"end":{"line":3953,"column":23,"offset":87718}}},{"type":"text","value":"[1,2,3]","position":{"start":{"line":3953,"column":24,"offset":87719},"end":{"line":3953,"column":29,"offset":87724}}},{"type":"text","value":"} # Values can be of any type, however.","position":{"start":{"line":3953,"column":30,"offset":87725},"end":{"line":3953,"column":69,"offset":87764}}}],"position":{"start":{"line":3952,"column":1,"offset":87615},"end":{"line":3953,"column":69,"offset":87764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Look up values with []","position":{"start":{"line":3955,"column":3,"offset":87768},"end":{"line":3955,"column":25,"offset":87790}}}],"position":{"start":{"line":3955,"column":1,"offset":87766},"end":{"line":3955,"column":25,"offset":87790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled_dict","position":{"start":{"line":3957,"column":1,"offset":87792},"end":{"line":3957,"column":12,"offset":87803}}},{"type":"text","value":"[\"one\"]","position":{"start":{"line":3957,"column":13,"offset":87804},"end":{"line":3957,"column":18,"offset":87809}}},{"type":"text","value":" # => 1","position":{"start":{"line":3957,"column":19,"offset":87810},"end":{"line":3957,"column":26,"offset":87817}}}],"position":{"start":{"line":3957,"column":1,"offset":87792},"end":{"line":3957,"column":26,"offset":87817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Get all keys as an iterable with \"keys()\". We need to wrap the call in list()","position":{"start":{"line":3959,"column":3,"offset":87821},"end":{"line":3959,"column":80,"offset":87898}}}],"position":{"start":{"line":3959,"column":1,"offset":87819},"end":{"line":3959,"column":80,"offset":87898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"to turn it into a list. We'll talk about those later. Note - for Python","position":{"start":{"line":3961,"column":3,"offset":87902},"end":{"line":3961,"column":74,"offset":87973}}}],"position":{"start":{"line":3961,"column":1,"offset":87900},"end":{"line":3961,"column":74,"offset":87973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"versions <3.7, dictionary key ordering is not guaranteed. Your results might","position":{"start":{"line":3963,"column":3,"offset":87977},"end":{"line":3963,"column":79,"offset":88053}}}],"position":{"start":{"line":3963,"column":1,"offset":87975},"end":{"line":3963,"column":79,"offset":88053}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"not match the example below exactly. However, as of Python 3.7, dictionary","position":{"start":{"line":3965,"column":3,"offset":88057},"end":{"line":3965,"column":77,"offset":88131}}}],"position":{"start":{"line":3965,"column":1,"offset":88055},"end":{"line":3965,"column":77,"offset":88131}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"items maintain the order at which they are inserted into the dictionary","position":{"start":{"line":3967,"column":3,"offset":88135},"end":{"line":3967,"column":74,"offset":88206}}}],"position":{"start":{"line":3967,"column":1,"offset":88133},"end":{"line":3967,"column":74,"offset":88206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"list(filled","position":{"start":{"line":3969,"column":1,"offset":88208},"end":{"line":3969,"column":12,"offset":88219}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict.keys()) # => ","position":{"start":{"line":3969,"column":13,"offset":88220},"end":{"line":3969,"column":31,"offset":88238}}},{"type":"text","value":"[\"three\", \"two\", \"one\"]","position":{"start":{"line":3969,"column":32,"offset":88239},"end":{"line":3969,"column":53,"offset":88260}}},{"type":"text","value":" in Python <3.7\nlist(filled","position":{"start":{"line":3969,"column":54,"offset":88261},"end":{"line":3970,"column":12,"offset":88288}}}],"position":{"start":{"line":3969,"column":12,"offset":88219},"end":{"line":3970,"column":13,"offset":88289}}},{"type":"text","value":"dict.keys()) # => ","position":{"start":{"line":3970,"column":13,"offset":88289},"end":{"line":3970,"column":31,"offset":88307}}},{"type":"text","value":"[\"one\", \"two\", \"three\"]","position":{"start":{"line":3970,"column":32,"offset":88308},"end":{"line":3970,"column":53,"offset":88329}}},{"type":"text","value":" in Python 3.7+","position":{"start":{"line":3970,"column":54,"offset":88330},"end":{"line":3970,"column":69,"offset":88345}}}],"position":{"start":{"line":3969,"column":1,"offset":88208},"end":{"line":3970,"column":69,"offset":88345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Get all values as an iterable with \"values()\". Once again we need to wrap it","position":{"start":{"line":3972,"column":3,"offset":88349},"end":{"line":3972,"column":79,"offset":88425}}}],"position":{"start":{"line":3972,"column":1,"offset":88347},"end":{"line":3972,"column":79,"offset":88425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"in list() to get it out of the iterable. Note - Same as above regarding key","position":{"start":{"line":3974,"column":3,"offset":88429},"end":{"line":3974,"column":78,"offset":88504}}}],"position":{"start":{"line":3974,"column":1,"offset":88427},"end":{"line":3974,"column":78,"offset":88504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"ordering","position":{"start":{"line":3976,"column":3,"offset":88508},"end":{"line":3976,"column":11,"offset":88516}}}],"position":{"start":{"line":3976,"column":1,"offset":88506},"end":{"line":3976,"column":11,"offset":88516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"list(filled","position":{"start":{"line":3978,"column":1,"offset":88518},"end":{"line":3978,"column":12,"offset":88529}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict.values()) # => ","position":{"start":{"line":3978,"column":13,"offset":88530},"end":{"line":3978,"column":33,"offset":88550}}},{"type":"text","value":"[3, 2, 1]","position":{"start":{"line":3978,"column":34,"offset":88551},"end":{"line":3978,"column":41,"offset":88558}}},{"type":"text","value":" in Python <3.7\nlist(filled","position":{"start":{"line":3978,"column":42,"offset":88559},"end":{"line":3979,"column":12,"offset":88586}}}],"position":{"start":{"line":3978,"column":12,"offset":88529},"end":{"line":3979,"column":13,"offset":88587}}},{"type":"text","value":"dict.values()) # => ","position":{"start":{"line":3979,"column":13,"offset":88587},"end":{"line":3979,"column":33,"offset":88607}}},{"type":"text","value":"[1, 2, 3]","position":{"start":{"line":3979,"column":34,"offset":88608},"end":{"line":3979,"column":41,"offset":88615}}},{"type":"text","value":" in Python 3.7+","position":{"start":{"line":3979,"column":42,"offset":88616},"end":{"line":3979,"column":57,"offset":88631}}}],"position":{"start":{"line":3978,"column":1,"offset":88518},"end":{"line":3979,"column":57,"offset":88631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Check for existence of keys in a dictionary with \"in\"","position":{"start":{"line":3981,"column":3,"offset":88635},"end":{"line":3981,"column":56,"offset":88688}}}],"position":{"start":{"line":3981,"column":1,"offset":88633},"end":{"line":3981,"column":56,"offset":88688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"one\" in filled","position":{"start":{"line":3983,"column":1,"offset":88690},"end":{"line":3983,"column":16,"offset":88705}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict # => True\n1 in filled","position":{"start":{"line":3983,"column":17,"offset":88706},"end":{"line":3984,"column":12,"offset":88732}}}],"position":{"start":{"line":3983,"column":16,"offset":88705},"end":{"line":3984,"column":13,"offset":88733}}},{"type":"text","value":"dict # => False","position":{"start":{"line":3984,"column":13,"offset":88733},"end":{"line":3984,"column":28,"offset":88748}}}],"position":{"start":{"line":3983,"column":1,"offset":88690},"end":{"line":3984,"column":28,"offset":88748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Looking up a non-existing key is a KeyError","position":{"start":{"line":3986,"column":3,"offset":88752},"end":{"line":3986,"column":46,"offset":88795}}}],"position":{"start":{"line":3986,"column":1,"offset":88750},"end":{"line":3986,"column":46,"offset":88795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled_dict","position":{"start":{"line":3988,"column":1,"offset":88797},"end":{"line":3988,"column":12,"offset":88808}}},{"type":"text","value":"[\"four\"]","position":{"start":{"line":3988,"column":13,"offset":88809},"end":{"line":3988,"column":19,"offset":88815}}},{"type":"text","value":" # KeyError","position":{"start":{"line":3988,"column":20,"offset":88816},"end":{"line":3988,"column":31,"offset":88827}}}],"position":{"start":{"line":3988,"column":1,"offset":88797},"end":{"line":3988,"column":31,"offset":88827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Use \"get()\" method to avoid the KeyError","position":{"start":{"line":3990,"column":3,"offset":88831},"end":{"line":3990,"column":43,"offset":88871}}}],"position":{"start":{"line":3990,"column":1,"offset":88829},"end":{"line":3990,"column":43,"offset":88871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled","position":{"start":{"line":3992,"column":1,"offset":88873},"end":{"line":3992,"column":7,"offset":88879}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict.get(\"one\") # => 1\nfilled","position":{"start":{"line":3992,"column":8,"offset":88880},"end":{"line":3993,"column":7,"offset":88909}}}],"position":{"start":{"line":3992,"column":7,"offset":88879},"end":{"line":3993,"column":8,"offset":88910}}},{"type":"text","value":"dict.get(\"four\") # => None","position":{"start":{"line":3993,"column":8,"offset":88910},"end":{"line":3993,"column":34,"offset":88936}}}],"position":{"start":{"line":3992,"column":1,"offset":88873},"end":{"line":3993,"column":34,"offset":88936}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"The get method supports a default argument when the value is missing","position":{"start":{"line":3995,"column":3,"offset":88940},"end":{"line":3995,"column":71,"offset":89008}}}],"position":{"start":{"line":3995,"column":1,"offset":88938},"end":{"line":3995,"column":71,"offset":89008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled","position":{"start":{"line":3997,"column":1,"offset":89010},"end":{"line":3997,"column":7,"offset":89016}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict.get(\"one\", 4) # => 1\nfilled","position":{"start":{"line":3997,"column":8,"offset":89017},"end":{"line":3998,"column":7,"offset":89049}}}],"position":{"start":{"line":3997,"column":7,"offset":89016},"end":{"line":3998,"column":8,"offset":89050}}},{"type":"text","value":"dict.get(\"four\", 4) # => 4","position":{"start":{"line":3998,"column":8,"offset":89050},"end":{"line":3998,"column":34,"offset":89076}}}],"position":{"start":{"line":3997,"column":1,"offset":89010},"end":{"line":3998,"column":34,"offset":89076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"\"setdefault()\" inserts into a dictionary only if the given key isn't present","position":{"start":{"line":4000,"column":3,"offset":89080},"end":{"line":4000,"column":79,"offset":89156}}}],"position":{"start":{"line":4000,"column":1,"offset":89078},"end":{"line":4000,"column":79,"offset":89156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled","position":{"start":{"line":4002,"column":1,"offset":89158},"end":{"line":4002,"column":7,"offset":89164}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict.setdefault(\"five\", 5) # filled","position":{"start":{"line":4002,"column":8,"offset":89165},"end":{"line":4002,"column":43,"offset":89200}}}],"position":{"start":{"line":4002,"column":7,"offset":89164},"end":{"line":4002,"column":44,"offset":89201}}},{"type":"text","value":"dict","position":{"start":{"line":4002,"column":44,"offset":89201},"end":{"line":4002,"column":48,"offset":89205}}},{"type":"text","value":"[\"five\"]","position":{"start":{"line":4002,"column":49,"offset":89206},"end":{"line":4002,"column":55,"offset":89212}}},{"type":"text","value":" is set to 5\nfilled","position":{"start":{"line":4002,"column":56,"offset":89213},"end":{"line":4003,"column":7,"offset":89232}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict.setdefault(\"five\", 6) # filled","position":{"start":{"line":4003,"column":8,"offset":89233},"end":{"line":4003,"column":43,"offset":89268}}}],"position":{"start":{"line":4003,"column":7,"offset":89232},"end":{"line":4003,"column":44,"offset":89269}}},{"type":"text","value":"dict","position":{"start":{"line":4003,"column":44,"offset":89269},"end":{"line":4003,"column":48,"offset":89273}}},{"type":"text","value":"[\"five\"]","position":{"start":{"line":4003,"column":49,"offset":89274},"end":{"line":4003,"column":55,"offset":89280}}},{"type":"text","value":" is still 5","position":{"start":{"line":4003,"column":56,"offset":89281},"end":{"line":4003,"column":67,"offset":89292}}}],"position":{"start":{"line":4002,"column":1,"offset":89158},"end":{"line":4003,"column":67,"offset":89292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Adding to a dictionary","position":{"start":{"line":4005,"column":3,"offset":89296},"end":{"line":4005,"column":25,"offset":89318}}}],"position":{"start":{"line":4005,"column":1,"offset":89294},"end":{"line":4005,"column":25,"offset":89318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled","position":{"start":{"line":4007,"column":1,"offset":89320},"end":{"line":4007,"column":7,"offset":89326}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict.update({\"four\":4}) # => {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4}\nfilled","position":{"start":{"line":4007,"column":8,"offset":89327},"end":{"line":4008,"column":7,"offset":89406}}}],"position":{"start":{"line":4007,"column":7,"offset":89326},"end":{"line":4008,"column":8,"offset":89407}}},{"type":"text","value":"dict","position":{"start":{"line":4008,"column":8,"offset":89407},"end":{"line":4008,"column":12,"offset":89411}}},{"type":"text","value":"[\"four\"]","position":{"start":{"line":4008,"column":13,"offset":89412},"end":{"line":4008,"column":19,"offset":89418}}},{"type":"text","value":" = 4 # another way to add to dict","position":{"start":{"line":4008,"column":20,"offset":89419},"end":{"line":4008,"column":53,"offset":89452}}}],"position":{"start":{"line":4007,"column":1,"offset":89320},"end":{"line":4008,"column":53,"offset":89452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Remove keys from a dictionary with del","position":{"start":{"line":4010,"column":3,"offset":89456},"end":{"line":4010,"column":41,"offset":89494}}}],"position":{"start":{"line":4010,"column":1,"offset":89454},"end":{"line":4010,"column":41,"offset":89494}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"del filled_dict","position":{"start":{"line":4012,"column":1,"offset":89496},"end":{"line":4012,"column":16,"offset":89511}}},{"type":"text","value":"[\"one\"]","position":{"start":{"line":4012,"column":17,"offset":89512},"end":{"line":4012,"column":22,"offset":89517}}},{"type":"text","value":" # Removes the key \"one\" from filled dict","position":{"start":{"line":4012,"column":23,"offset":89518},"end":{"line":4012,"column":64,"offset":89559}}}],"position":{"start":{"line":4012,"column":1,"offset":89496},"end":{"line":4012,"column":64,"offset":89559}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"From Python 3.5 you can also use the additional unpacking options","position":{"start":{"line":4014,"column":3,"offset":89563},"end":{"line":4014,"column":68,"offset":89628}}}],"position":{"start":{"line":4014,"column":1,"offset":89561},"end":{"line":4014,"column":68,"offset":89628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"{'a': 1, ","position":{"start":{"line":4016,"column":1,"offset":89630},"end":{"line":4016,"column":10,"offset":89639}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"{'b': 2}} # => {'a': 1, 'b': 2}\n{'a': 1,","position":{"start":{"line":4016,"column":12,"offset":89641},"end":{"line":4017,"column":9,"offset":89681}}}],"position":{"start":{"line":4016,"column":10,"offset":89639},"end":{"line":4017,"column":11,"offset":89683}}},{"type":"text","value":"{'a': 2}} # => {'a': 2}","position":{"start":{"line":4017,"column":11,"offset":89683},"end":{"line":4017,"column":34,"offset":89706}}}],"position":{"start":{"line":4016,"column":1,"offset":89630},"end":{"line":4017,"column":34,"offset":89706}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Sets store ... well sets","position":{"start":{"line":4019,"column":3,"offset":89710},"end":{"line":4019,"column":27,"offset":89734}}}],"position":{"start":{"line":4019,"column":1,"offset":89708},"end":{"line":4019,"column":27,"offset":89734}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"empty_set = set()","position":{"start":{"line":4021,"column":1,"offset":89736},"end":{"line":4021,"column":18,"offset":89753}}}],"position":{"start":{"line":4021,"column":1,"offset":89736},"end":{"line":4021,"column":18,"offset":89753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Initialize a set with a bunch of values. Yeah, it looks a bit like a dict. Sorry","position":{"start":{"line":4023,"column":3,"offset":89757},"end":{"line":4023,"column":83,"offset":89837}}}],"position":{"start":{"line":4023,"column":1,"offset":89755},"end":{"line":4023,"column":83,"offset":89837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"some","position":{"start":{"line":4025,"column":1,"offset":89839},"end":{"line":4025,"column":5,"offset":89843}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"set = {1, 1, 2, 2, 3, 4} # some","position":{"start":{"line":4025,"column":6,"offset":89844},"end":{"line":4025,"column":37,"offset":89875}}}],"position":{"start":{"line":4025,"column":5,"offset":89843},"end":{"line":4025,"column":38,"offset":89876}}},{"type":"text","value":"set is now {1, 2, 3, 4}","position":{"start":{"line":4025,"column":38,"offset":89876},"end":{"line":4025,"column":61,"offset":89899}}}],"position":{"start":{"line":4025,"column":1,"offset":89839},"end":{"line":4025,"column":61,"offset":89899}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Similar to keys of a dictionary, elements of a set have to be immutable","position":{"start":{"line":4027,"column":3,"offset":89903},"end":{"line":4027,"column":74,"offset":89974}}}],"position":{"start":{"line":4027,"column":1,"offset":89901},"end":{"line":4027,"column":74,"offset":89974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"invalid","position":{"start":{"line":4029,"column":1,"offset":89976},"end":{"line":4029,"column":8,"offset":89983}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"set = {","position":{"start":{"line":4029,"column":9,"offset":89984},"end":{"line":4029,"column":16,"offset":89991}}},{"type":"text","value":"[1]","position":{"start":{"line":4029,"column":17,"offset":89992},"end":{"line":4029,"column":18,"offset":89993}}},{"type":"text","value":", 1} # => Raises a TypeError: unhashable type: 'list'\nvalid","position":{"start":{"line":4029,"column":19,"offset":89994},"end":{"line":4030,"column":6,"offset":90053}}}],"position":{"start":{"line":4029,"column":8,"offset":89983},"end":{"line":4030,"column":7,"offset":90054}}},{"type":"text","value":"set = {(1,), 1}","position":{"start":{"line":4030,"column":7,"offset":90054},"end":{"line":4030,"column":22,"offset":90069}}}],"position":{"start":{"line":4029,"column":1,"offset":89976},"end":{"line":4030,"column":22,"offset":90069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Add one more item to the set","position":{"start":{"line":4032,"column":3,"offset":90073},"end":{"line":4032,"column":31,"offset":90101}}}],"position":{"start":{"line":4032,"column":1,"offset":90071},"end":{"line":4032,"column":31,"offset":90101}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled","position":{"start":{"line":4034,"column":1,"offset":90103},"end":{"line":4034,"column":7,"offset":90109}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"set = some","position":{"start":{"line":4034,"column":8,"offset":90110},"end":{"line":4034,"column":18,"offset":90120}}}],"position":{"start":{"line":4034,"column":7,"offset":90109},"end":{"line":4034,"column":19,"offset":90121}}},{"type":"text","value":"set\nfilled","position":{"start":{"line":4034,"column":19,"offset":90121},"end":{"line":4035,"column":7,"offset":90131}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"set.add(5) # filled","position":{"start":{"line":4035,"column":8,"offset":90132},"end":{"line":4035,"column":27,"offset":90151}}}],"position":{"start":{"line":4035,"column":7,"offset":90131},"end":{"line":4035,"column":28,"offset":90152}}},{"type":"text","value":"set is now {1, 2, 3, 4, 5}","position":{"start":{"line":4035,"column":28,"offset":90152},"end":{"line":4035,"column":54,"offset":90178}}}],"position":{"start":{"line":4034,"column":1,"offset":90103},"end":{"line":4035,"column":54,"offset":90178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Sets do not have duplicate elements","position":{"start":{"line":4037,"column":3,"offset":90182},"end":{"line":4037,"column":38,"offset":90217}}}],"position":{"start":{"line":4037,"column":1,"offset":90180},"end":{"line":4037,"column":38,"offset":90217}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled_set.add(5) # it remains as before {1, 2, 3, 4, 5}","position":{"start":{"line":4039,"column":1,"offset":90219},"end":{"line":4039,"column":57,"offset":90275}}}],"position":{"start":{"line":4039,"column":1,"offset":90219},"end":{"line":4039,"column":57,"offset":90275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Do set intersection with &","position":{"start":{"line":4041,"column":3,"offset":90279},"end":{"line":4041,"column":29,"offset":90305}}}],"position":{"start":{"line":4041,"column":1,"offset":90277},"end":{"line":4041,"column":29,"offset":90305}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"other","position":{"start":{"line":4043,"column":1,"offset":90307},"end":{"line":4043,"column":6,"offset":90312}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"set = {3, 4, 5, 6}\nfilled","position":{"start":{"line":4043,"column":7,"offset":90313},"end":{"line":4044,"column":7,"offset":90338}}}],"position":{"start":{"line":4043,"column":6,"offset":90312},"end":{"line":4044,"column":8,"offset":90339}}},{"type":"text","value":"set & other_set # => {3, 4, 5}","position":{"start":{"line":4044,"column":8,"offset":90339},"end":{"line":4044,"column":38,"offset":90369}}}],"position":{"start":{"line":4043,"column":1,"offset":90307},"end":{"line":4044,"column":38,"offset":90369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Do set union with |","position":{"start":{"line":4046,"column":3,"offset":90373},"end":{"line":4046,"column":22,"offset":90392}}}],"position":{"start":{"line":4046,"column":1,"offset":90371},"end":{"line":4046,"column":22,"offset":90392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled","position":{"start":{"line":4048,"column":1,"offset":90394},"end":{"line":4048,"column":7,"offset":90400}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"set | other","position":{"start":{"line":4048,"column":8,"offset":90401},"end":{"line":4048,"column":19,"offset":90412}}}],"position":{"start":{"line":4048,"column":7,"offset":90400},"end":{"line":4048,"column":20,"offset":90413}}},{"type":"text","value":"set # => {1, 2, 3, 4, 5, 6}","position":{"start":{"line":4048,"column":20,"offset":90413},"end":{"line":4048,"column":47,"offset":90440}}}],"position":{"start":{"line":4048,"column":1,"offset":90394},"end":{"line":4048,"column":47,"offset":90440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Do set difference with -","position":{"start":{"line":4050,"column":3,"offset":90444},"end":{"line":4050,"column":27,"offset":90468}}}],"position":{"start":{"line":4050,"column":1,"offset":90442},"end":{"line":4050,"column":27,"offset":90468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"{1, 2, 3, 4} - {2, 3, 5} # => {1, 4}","position":{"start":{"line":4052,"column":1,"offset":90470},"end":{"line":4052,"column":37,"offset":90506}}}],"position":{"start":{"line":4052,"column":1,"offset":90470},"end":{"line":4052,"column":37,"offset":90506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Do set symmetric difference with ^","position":{"start":{"line":4054,"column":3,"offset":90510},"end":{"line":4054,"column":37,"offset":90544}}}],"position":{"start":{"line":4054,"column":1,"offset":90508},"end":{"line":4054,"column":37,"offset":90544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"{1, 2, 3, 4} ^ {2, 3, 5} # => {1, 4, 5}","position":{"start":{"line":4056,"column":1,"offset":90546},"end":{"line":4056,"column":40,"offset":90585}}}],"position":{"start":{"line":4056,"column":1,"offset":90546},"end":{"line":4056,"column":40,"offset":90585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Check if set on the left is a superset of set on the right","position":{"start":{"line":4058,"column":3,"offset":90589},"end":{"line":4058,"column":61,"offset":90647}}}],"position":{"start":{"line":4058,"column":1,"offset":90587},"end":{"line":4058,"column":61,"offset":90647}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"{1, 2} >= {1, 2, 3} # => False","position":{"start":{"line":4060,"column":1,"offset":90649},"end":{"line":4060,"column":31,"offset":90679}}}],"position":{"start":{"line":4060,"column":1,"offset":90649},"end":{"line":4060,"column":31,"offset":90679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Check if set on the left is a subset of set on the right","position":{"start":{"line":4062,"column":3,"offset":90683},"end":{"line":4062,"column":59,"offset":90739}}}],"position":{"start":{"line":4062,"column":1,"offset":90681},"end":{"line":4062,"column":59,"offset":90739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"{1, 2} <= {1, 2, 3} # => True","position":{"start":{"line":4064,"column":1,"offset":90741},"end":{"line":4064,"column":30,"offset":90770}}}],"position":{"start":{"line":4064,"column":1,"offset":90741},"end":{"line":4064,"column":30,"offset":90770}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Check for existence in a set with in","position":{"start":{"line":4066,"column":3,"offset":90774},"end":{"line":4066,"column":39,"offset":90810}}}],"position":{"start":{"line":4066,"column":1,"offset":90772},"end":{"line":4066,"column":39,"offset":90810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"2 in filled","position":{"start":{"line":4068,"column":1,"offset":90812},"end":{"line":4068,"column":12,"offset":90823}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"set # => True\n10 in filled","position":{"start":{"line":4068,"column":13,"offset":90824},"end":{"line":4069,"column":13,"offset":90850}}}],"position":{"start":{"line":4068,"column":12,"offset":90823},"end":{"line":4069,"column":14,"offset":90851}}},{"type":"text","value":"set # => False","position":{"start":{"line":4069,"column":14,"offset":90851},"end":{"line":4069,"column":28,"offset":90865}}}],"position":{"start":{"line":4068,"column":1,"offset":90812},"end":{"line":4069,"column":28,"offset":90865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4071,"column":1,"offset":90867},"end":{"line":4071,"column":53,"offset":90919}}}],"position":{"start":{"line":4071,"column":1,"offset":90867},"end":{"line":4071,"column":53,"offset":90919}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"3. Control Flow and Iterables","position":{"start":{"line":4073,"column":4,"offset":90924},"end":{"line":4073,"column":33,"offset":90953}}}],"position":{"start":{"line":4073,"column":1,"offset":90921},"end":{"line":4073,"column":33,"offset":90953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4075,"column":1,"offset":90955},"end":{"line":4075,"column":53,"offset":91007}}}],"position":{"start":{"line":4075,"column":1,"offset":90955},"end":{"line":4075,"column":53,"offset":91007}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Let's just make a variable","position":{"start":{"line":4077,"column":3,"offset":91011},"end":{"line":4077,"column":29,"offset":91037}}}],"position":{"start":{"line":4077,"column":1,"offset":91009},"end":{"line":4077,"column":29,"offset":91037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"some_var = 5","position":{"start":{"line":4079,"column":1,"offset":91039},"end":{"line":4079,"column":13,"offset":91051}}}],"position":{"start":{"line":4079,"column":1,"offset":91039},"end":{"line":4079,"column":13,"offset":91051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Here is an if statement. Indentation is significant in Python","position":{"start":{"line":4081,"column":3,"offset":91055},"end":{"line":4081,"column":64,"offset":91116}}}],"position":{"start":{"line":4081,"column":1,"offset":91053},"end":{"line":4081,"column":64,"offset":91116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Convention is to use four spaces, not tabs","position":{"start":{"line":4083,"column":3,"offset":91120},"end":{"line":4083,"column":45,"offset":91162}}}],"position":{"start":{"line":4083,"column":1,"offset":91118},"end":{"line":4083,"column":45,"offset":91162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"This prints \"some_var is smaller than 10\"","position":{"start":{"line":4085,"column":3,"offset":91166},"end":{"line":4085,"column":44,"offset":91207}}}],"position":{"start":{"line":4085,"column":1,"offset":91164},"end":{"line":4085,"column":44,"offset":91207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if some","position":{"start":{"line":4087,"column":1,"offset":91209},"end":{"line":4087,"column":8,"offset":91216}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"var > 10:\nprint(\"some","position":{"start":{"line":4087,"column":9,"offset":91217},"end":{"line":4088,"column":12,"offset":91238}}}],"position":{"start":{"line":4087,"column":8,"offset":91216},"end":{"line":4088,"column":13,"offset":91239}}},{"type":"text","value":"var is totally bigger than 10.\")\nelif some","position":{"start":{"line":4088,"column":13,"offset":91239},"end":{"line":4089,"column":10,"offset":91281}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"var < 10: # This elif clause is optional.\nprint(\"some","position":{"start":{"line":4089,"column":11,"offset":91282},"end":{"line":4090,"column":12,"offset":91335}}}],"position":{"start":{"line":4089,"column":10,"offset":91281},"end":{"line":4090,"column":13,"offset":91336}}},{"type":"text","value":"var is smaller than 10.\")\nelse: # This is optional too.\nprint(\"some_var is indeed 10.\")","position":{"start":{"line":4090,"column":13,"offset":91336},"end":{"line":4092,"column":32,"offset":91423}}}],"position":{"start":{"line":4087,"column":1,"offset":91209},"end":{"line":4092,"column":32,"offset":91423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"\nFor loops iterate over lists\nprints:\ndog is a mammal\ncat is a mammal\nmouse is a mammal\n\"\"\"\nfor animal in ","position":{"start":{"line":4094,"column":1,"offset":91425},"end":{"line":4101,"column":15,"offset":91534}}},{"type":"text","value":"[\"dog\", \"cat\", \"mouse\"]","position":{"start":{"line":4101,"column":16,"offset":91535},"end":{"line":4101,"column":37,"offset":91556}}},{"type":"text","value":": # You can use format() to interpolate formatted strings\nprint(\"{} is a mammal\".format(animal))","position":{"start":{"line":4101,"column":38,"offset":91557},"end":{"line":4102,"column":39,"offset":91653}}}],"position":{"start":{"line":4094,"column":1,"offset":91425},"end":{"line":4102,"column":39,"offset":91653}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"\n\"range(number)\" returns an iterable of numbers\nfrom zero to the given number\nprints:\n0\n1\n2\n3\n\"\"\"\nfor i in range(4):\nprint(i)","position":{"start":{"line":4104,"column":1,"offset":91655},"end":{"line":4114,"column":9,"offset":91783}}}],"position":{"start":{"line":4104,"column":1,"offset":91655},"end":{"line":4114,"column":9,"offset":91783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"\n\"range(lower, upper)\" returns an iterable of numbers\nfrom the lower number to the upper number\nprints:\n4\n5\n6\n7\n\"\"\"\nfor i in range(4, 8):\nprint(i)","position":{"start":{"line":4116,"column":1,"offset":91785},"end":{"line":4126,"column":9,"offset":91934}}}],"position":{"start":{"line":4116,"column":1,"offset":91785},"end":{"line":4126,"column":9,"offset":91934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"\n\"range(lower, upper, step)\" returns an iterable of numbers\nfrom the lower number to the upper number, while incrementing\nby step. If step is not indicated, the default value is 1.\nprints:\n4\n6\n\"\"\"\nfor i in range(4, 8, 2):\nprint(i)","position":{"start":{"line":4128,"column":1,"offset":91936},"end":{"line":4137,"column":9,"offset":92169}}}],"position":{"start":{"line":4128,"column":1,"offset":91936},"end":{"line":4137,"column":9,"offset":92169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"\nTo loop over a list, and retrieve both the index and the value of each item in the list\nprints:\n0 dog\n1 cat\n2 mouse\n\"\"\"\nlist = ","position":{"start":{"line":4139,"column":1,"offset":92171},"end":{"line":4146,"column":8,"offset":92302}}},{"type":"text","value":"[\"dog\", \"cat\", \"mouse\"]","position":{"start":{"line":4146,"column":9,"offset":92303},"end":{"line":4146,"column":30,"offset":92324}}},{"type":"text","value":"\nfor i, value in enumerate(list):\nprint(i, value)","position":{"start":{"line":4146,"column":31,"offset":92325},"end":{"line":4148,"column":16,"offset":92374}}}],"position":{"start":{"line":4139,"column":1,"offset":92171},"end":{"line":4148,"column":16,"offset":92374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"\"\"\nWhile loops go until a condition is no longer met.\nprints:\n0\n1\n2\n3\n\"\"\"\nx = 0\nwhile x < 4:\nprint(x)\nx += 1 # Shorthand for x = x + 1","position":{"start":{"line":4150,"column":1,"offset":92376},"end":{"line":4161,"column":33,"offset":92511}}}],"position":{"start":{"line":4150,"column":1,"offset":92376},"end":{"line":4161,"column":33,"offset":92511}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Handle exceptions with a try/except block","position":{"start":{"line":4163,"column":3,"offset":92515},"end":{"line":4163,"column":44,"offset":92556}}}],"position":{"start":{"line":4163,"column":1,"offset":92513},"end":{"line":4163,"column":44,"offset":92556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"try: # Use \"raise\" to raise an error\nraise IndexError(\"This is an index error\")\nexcept IndexError as e:\npass # Pass is just a no-op. Usually you would do recovery here.\nexcept (TypeError, NameError):\npass # Multiple exceptions can be handled together, if required.\nelse: # Optional clause to the try/except block. Must follow all except blocks\nprint(\"All good!\") # Runs only if the code in try raises no exceptions\nfinally: # Execute under all circumstances\nprint(\"We can clean up resources here\")","position":{"start":{"line":4165,"column":1,"offset":92558},"end":{"line":4174,"column":40,"offset":93055}}}],"position":{"start":{"line":4165,"column":1,"offset":92558},"end":{"line":4174,"column":40,"offset":93055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Instead of try/finally to cleanup resources you can use a with statement","position":{"start":{"line":4176,"column":3,"offset":93059},"end":{"line":4176,"column":75,"offset":93131}}}],"position":{"start":{"line":4176,"column":1,"offset":93057},"end":{"line":4176,"column":75,"offset":93131}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"with open(\"myfile.txt\") as f:\nfor line in f:\nprint(line)","position":{"start":{"line":4178,"column":1,"offset":93133},"end":{"line":4180,"column":12,"offset":93189}}}],"position":{"start":{"line":4178,"column":1,"offset":93133},"end":{"line":4180,"column":12,"offset":93189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Writing to a file","position":{"start":{"line":4182,"column":3,"offset":93193},"end":{"line":4182,"column":20,"offset":93210}}}],"position":{"start":{"line":4182,"column":1,"offset":93191},"end":{"line":4182,"column":20,"offset":93210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"contents = {\"aa\": 12, \"bb\": 21}\nwith open(\"myfile1.txt\", \"w+\") as file:\nfile.write(str(contents)) # writes a string to a file","position":{"start":{"line":4184,"column":1,"offset":93212},"end":{"line":4186,"column":54,"offset":93337}}}],"position":{"start":{"line":4184,"column":1,"offset":93212},"end":{"line":4186,"column":54,"offset":93337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"with open(\"myfile2.txt\", \"w+\") as file:\nfile.write(json.dumps(contents)) # writes an object to a file","position":{"start":{"line":4188,"column":1,"offset":93339},"end":{"line":4189,"column":62,"offset":93440}}}],"position":{"start":{"line":4188,"column":1,"offset":93339},"end":{"line":4189,"column":62,"offset":93440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Reading from a file","position":{"start":{"line":4191,"column":3,"offset":93444},"end":{"line":4191,"column":22,"offset":93463}}}],"position":{"start":{"line":4191,"column":1,"offset":93442},"end":{"line":4191,"column":22,"offset":93463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"with open('myfile1.txt', \"r+\") as file:\ncontents = file.read() # reads a string from a file\nprint(contents)","position":{"start":{"line":4193,"column":1,"offset":93465},"end":{"line":4195,"column":16,"offset":93572}}}],"position":{"start":{"line":4193,"column":1,"offset":93465},"end":{"line":4195,"column":16,"offset":93572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"print: {\"aa\": 12, \"bb\": 21}","position":{"start":{"line":4197,"column":3,"offset":93576},"end":{"line":4197,"column":30,"offset":93603}}}],"position":{"start":{"line":4197,"column":1,"offset":93574},"end":{"line":4197,"column":30,"offset":93603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"with open('myfile2.txt', \"r+\") as file:\ncontents = json.load(file) # reads a json object from a file\nprint(contents)","position":{"start":{"line":4199,"column":1,"offset":93605},"end":{"line":4201,"column":16,"offset":93721}}}],"position":{"start":{"line":4199,"column":1,"offset":93605},"end":{"line":4201,"column":16,"offset":93721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"print: {\"aa\": 12, \"bb\": 21}","position":{"start":{"line":4203,"column":3,"offset":93725},"end":{"line":4203,"column":30,"offset":93752}}}],"position":{"start":{"line":4203,"column":1,"offset":93723},"end":{"line":4203,"column":30,"offset":93752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Python offers a fundamental abstraction called the Iterable","position":{"start":{"line":4205,"column":3,"offset":93756},"end":{"line":4205,"column":62,"offset":93815}}}],"position":{"start":{"line":4205,"column":1,"offset":93754},"end":{"line":4205,"column":62,"offset":93815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"An iterable is an object that can be treated as a sequence","position":{"start":{"line":4207,"column":3,"offset":93819},"end":{"line":4207,"column":61,"offset":93877}}}],"position":{"start":{"line":4207,"column":1,"offset":93817},"end":{"line":4207,"column":61,"offset":93877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"The object returned by the range function, is an iterable","position":{"start":{"line":4209,"column":3,"offset":93881},"end":{"line":4209,"column":60,"offset":93938}}}],"position":{"start":{"line":4209,"column":1,"offset":93879},"end":{"line":4209,"column":60,"offset":93938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filled","position":{"start":{"line":4211,"column":1,"offset":93940},"end":{"line":4211,"column":7,"offset":93946}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict = {\"one\": 1, \"two\": 2, \"three\": 3}\nour","position":{"start":{"line":4211,"column":8,"offset":93947},"end":{"line":4212,"column":4,"offset":93990}}}],"position":{"start":{"line":4211,"column":7,"offset":93946},"end":{"line":4212,"column":5,"offset":93991}}},{"type":"text","value":"iterable = filled","position":{"start":{"line":4212,"column":5,"offset":93991},"end":{"line":4212,"column":22,"offset":94008}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"dict.keys()\nprint(our","position":{"start":{"line":4212,"column":23,"offset":94009},"end":{"line":4213,"column":10,"offset":94030}}}],"position":{"start":{"line":4212,"column":22,"offset":94008},"end":{"line":4213,"column":11,"offset":94031}}},{"type":"text","value":"iterable) # => dict_keys(","position":{"start":{"line":4213,"column":11,"offset":94031},"end":{"line":4213,"column":36,"offset":94056}}},{"type":"text","value":"['one', 'two', 'three']","position":{"start":{"line":4213,"column":37,"offset":94057},"end":{"line":4213,"column":58,"offset":94078}}},{"type":"text","value":"). This is an object that implements our Iterable interface.","position":{"start":{"line":4213,"column":59,"offset":94079},"end":{"line":4213,"column":119,"offset":94139}}}],"position":{"start":{"line":4211,"column":1,"offset":93940},"end":{"line":4213,"column":119,"offset":94139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"We can loop over it","position":{"start":{"line":4215,"column":3,"offset":94143},"end":{"line":4215,"column":22,"offset":94162}}}],"position":{"start":{"line":4215,"column":1,"offset":94141},"end":{"line":4215,"column":22,"offset":94162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"for i in our_iterable:\nprint(i) # Prints one, two, three","position":{"start":{"line":4217,"column":1,"offset":94164},"end":{"line":4218,"column":34,"offset":94220}}}],"position":{"start":{"line":4217,"column":1,"offset":94164},"end":{"line":4218,"column":34,"offset":94220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"However we cannot address elements by index","position":{"start":{"line":4220,"column":3,"offset":94224},"end":{"line":4220,"column":46,"offset":94267}}}],"position":{"start":{"line":4220,"column":1,"offset":94222},"end":{"line":4220,"column":46,"offset":94267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"our_iterable","position":{"start":{"line":4222,"column":1,"offset":94269},"end":{"line":4222,"column":13,"offset":94281}}},{"type":"text","value":"[1]","position":{"start":{"line":4222,"column":14,"offset":94282},"end":{"line":4222,"column":15,"offset":94283}}},{"type":"text","value":" # Raises a TypeError","position":{"start":{"line":4222,"column":16,"offset":94284},"end":{"line":4222,"column":37,"offset":94305}}}],"position":{"start":{"line":4222,"column":1,"offset":94269},"end":{"line":4222,"column":37,"offset":94305}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"An iterable is an object that knows how to create an iterator","position":{"start":{"line":4224,"column":3,"offset":94309},"end":{"line":4224,"column":64,"offset":94370}}}],"position":{"start":{"line":4224,"column":1,"offset":94307},"end":{"line":4224,"column":64,"offset":94370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"our","position":{"start":{"line":4226,"column":1,"offset":94372},"end":{"line":4226,"column":4,"offset":94375}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"iterator = iter(our","position":{"start":{"line":4226,"column":5,"offset":94376},"end":{"line":4226,"column":24,"offset":94395}}}],"position":{"start":{"line":4226,"column":4,"offset":94375},"end":{"line":4226,"column":25,"offset":94396}}},{"type":"text","value":"iterable)","position":{"start":{"line":4226,"column":25,"offset":94396},"end":{"line":4226,"column":34,"offset":94405}}}],"position":{"start":{"line":4226,"column":1,"offset":94372},"end":{"line":4226,"column":34,"offset":94405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Our iterator is an object that can remember the state as we traverse through it","position":{"start":{"line":4228,"column":3,"offset":94409},"end":{"line":4228,"column":82,"offset":94488}}}],"position":{"start":{"line":4228,"column":1,"offset":94407},"end":{"line":4228,"column":82,"offset":94488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"We get the next object with \"next()\"","position":{"start":{"line":4230,"column":3,"offset":94492},"end":{"line":4230,"column":39,"offset":94528}}}],"position":{"start":{"line":4230,"column":1,"offset":94490},"end":{"line":4230,"column":39,"offset":94528}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"next(our_iterator) # => \"one\"","position":{"start":{"line":4232,"column":1,"offset":94530},"end":{"line":4232,"column":30,"offset":94559}}}],"position":{"start":{"line":4232,"column":1,"offset":94530},"end":{"line":4232,"column":30,"offset":94559}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"It maintains state as we iterate","position":{"start":{"line":4234,"column":3,"offset":94563},"end":{"line":4234,"column":35,"offset":94595}}}],"position":{"start":{"line":4234,"column":1,"offset":94561},"end":{"line":4234,"column":35,"offset":94595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"next(our","position":{"start":{"line":4236,"column":1,"offset":94597},"end":{"line":4236,"column":9,"offset":94605}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"iterator) # => \"two\"\nnext(our","position":{"start":{"line":4236,"column":10,"offset":94606},"end":{"line":4237,"column":9,"offset":94635}}}],"position":{"start":{"line":4236,"column":9,"offset":94605},"end":{"line":4237,"column":10,"offset":94636}}},{"type":"text","value":"iterator) # => \"three\"","position":{"start":{"line":4237,"column":10,"offset":94636},"end":{"line":4237,"column":32,"offset":94658}}}],"position":{"start":{"line":4236,"column":1,"offset":94597},"end":{"line":4237,"column":32,"offset":94658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"After the iterator has returned all of its data, it raises a StopIteration exception","position":{"start":{"line":4239,"column":3,"offset":94662},"end":{"line":4239,"column":87,"offset":94746}}}],"position":{"start":{"line":4239,"column":1,"offset":94660},"end":{"line":4239,"column":87,"offset":94746}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"next(our_iterator) # Raises StopIteration","position":{"start":{"line":4241,"column":1,"offset":94748},"end":{"line":4241,"column":42,"offset":94789}}}],"position":{"start":{"line":4241,"column":1,"offset":94748},"end":{"line":4241,"column":42,"offset":94789}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"We can also loop over it, in fact, \"for\" does this implicitly","position":{"start":{"line":4243,"column":3,"offset":94793},"end":{"line":4243,"column":64,"offset":94854}}}],"position":{"start":{"line":4243,"column":1,"offset":94791},"end":{"line":4243,"column":64,"offset":94854}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"our","position":{"start":{"line":4245,"column":1,"offset":94856},"end":{"line":4245,"column":4,"offset":94859}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"iterator = iter(our","position":{"start":{"line":4245,"column":5,"offset":94860},"end":{"line":4245,"column":24,"offset":94879}}}],"position":{"start":{"line":4245,"column":4,"offset":94859},"end":{"line":4245,"column":25,"offset":94880}}},{"type":"text","value":"iterable)\nfor i in our_iterator:\nprint(i) # Prints one, two, three","position":{"start":{"line":4245,"column":25,"offset":94880},"end":{"line":4247,"column":34,"offset":94946}}}],"position":{"start":{"line":4245,"column":1,"offset":94856},"end":{"line":4247,"column":34,"offset":94946}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can grab all the elements of an iterable or iterator by calling list() on it","position":{"start":{"line":4249,"column":3,"offset":94950},"end":{"line":4249,"column":83,"offset":95030}}}],"position":{"start":{"line":4249,"column":1,"offset":94948},"end":{"line":4249,"column":83,"offset":95030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"list(our","position":{"start":{"line":4251,"column":1,"offset":95032},"end":{"line":4251,"column":9,"offset":95040}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"iterable) # => Returns ","position":{"start":{"line":4251,"column":10,"offset":95041},"end":{"line":4251,"column":33,"offset":95064}}},{"type":"text","value":"[\"one\", \"two\", \"three\"]","position":{"start":{"line":4251,"column":34,"offset":95065},"end":{"line":4251,"column":55,"offset":95086}}},{"type":"text","value":"\nlist(our","position":{"start":{"line":4251,"column":56,"offset":95087},"end":{"line":4252,"column":9,"offset":95096}}}],"position":{"start":{"line":4251,"column":9,"offset":95040},"end":{"line":4252,"column":10,"offset":95097}}},{"type":"text","value":"iterator) # => Returns [] because state is saved","position":{"start":{"line":4252,"column":10,"offset":95097},"end":{"line":4252,"column":58,"offset":95145}}}],"position":{"start":{"line":4251,"column":1,"offset":95032},"end":{"line":4252,"column":58,"offset":95145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4254,"column":1,"offset":95147},"end":{"line":4254,"column":53,"offset":95199}}}],"position":{"start":{"line":4254,"column":1,"offset":95147},"end":{"line":4254,"column":53,"offset":95199}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"4. Functions","position":{"start":{"line":4256,"column":4,"offset":95204},"end":{"line":4256,"column":16,"offset":95216}}}],"position":{"start":{"line":4256,"column":1,"offset":95201},"end":{"line":4256,"column":16,"offset":95216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4258,"column":1,"offset":95218},"end":{"line":4258,"column":53,"offset":95270}}}],"position":{"start":{"line":4258,"column":1,"offset":95218},"end":{"line":4258,"column":53,"offset":95270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Use \"def\" to create new functions","position":{"start":{"line":4260,"column":3,"offset":95274},"end":{"line":4260,"column":36,"offset":95307}}}],"position":{"start":{"line":4260,"column":1,"offset":95272},"end":{"line":4260,"column":36,"offset":95307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def add(x, y):\nprint(\"x is {} and y is {}\".format(x, y))\nreturn x + y # Return values with a return statement","position":{"start":{"line":4262,"column":1,"offset":95309},"end":{"line":4264,"column":53,"offset":95418}}}],"position":{"start":{"line":4262,"column":1,"offset":95309},"end":{"line":4264,"column":53,"offset":95418}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Calling functions with parameters","position":{"start":{"line":4266,"column":3,"offset":95422},"end":{"line":4266,"column":36,"offset":95455}}}],"position":{"start":{"line":4266,"column":1,"offset":95420},"end":{"line":4266,"column":36,"offset":95455}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"add(5, 6) # => prints out \"x is 5 and y is 6\" and returns 11","position":{"start":{"line":4268,"column":1,"offset":95457},"end":{"line":4268,"column":61,"offset":95517}}}],"position":{"start":{"line":4268,"column":1,"offset":95457},"end":{"line":4268,"column":61,"offset":95517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Another way to call functions is with keyword arguments","position":{"start":{"line":4270,"column":3,"offset":95521},"end":{"line":4270,"column":58,"offset":95576}}}],"position":{"start":{"line":4270,"column":1,"offset":95519},"end":{"line":4270,"column":58,"offset":95576}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"add(y=6, x=5) # Keyword arguments can arrive in any order.","position":{"start":{"line":4272,"column":1,"offset":95578},"end":{"line":4272,"column":59,"offset":95636}}}],"position":{"start":{"line":4272,"column":1,"offset":95578},"end":{"line":4272,"column":59,"offset":95636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can define functions that take a variable number of","position":{"start":{"line":4274,"column":3,"offset":95640},"end":{"line":4274,"column":58,"offset":95695}}}],"position":{"start":{"line":4274,"column":1,"offset":95638},"end":{"line":4274,"column":58,"offset":95695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"positional arguments","position":{"start":{"line":4276,"column":3,"offset":95699},"end":{"line":4276,"column":23,"offset":95719}}}],"position":{"start":{"line":4276,"column":1,"offset":95697},"end":{"line":4276,"column":23,"offset":95719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def varargs(","position":{"start":{"line":4278,"column":1,"offset":95721},"end":{"line":4278,"column":13,"offset":95733}}},{"type":"text","value":"*","position":{"start":{"line":4278,"column":13,"offset":95733},"end":{"line":4278,"column":15,"offset":95735}}},{"type":"text","value":"args):\nreturn args","position":{"start":{"line":4278,"column":15,"offset":95735},"end":{"line":4279,"column":12,"offset":95753}}}],"position":{"start":{"line":4278,"column":1,"offset":95721},"end":{"line":4279,"column":12,"offset":95753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"varargs(1, 2, 3) # => (1, 2, 3)","position":{"start":{"line":4281,"column":1,"offset":95755},"end":{"line":4281,"column":32,"offset":95786}}}],"position":{"start":{"line":4281,"column":1,"offset":95755},"end":{"line":4281,"column":32,"offset":95786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can define functions that take a variable number of","position":{"start":{"line":4283,"column":3,"offset":95790},"end":{"line":4283,"column":58,"offset":95845}}}],"position":{"start":{"line":4283,"column":1,"offset":95788},"end":{"line":4283,"column":58,"offset":95845}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"keyword arguments, as well","position":{"start":{"line":4285,"column":3,"offset":95849},"end":{"line":4285,"column":29,"offset":95875}}}],"position":{"start":{"line":4285,"column":1,"offset":95847},"end":{"line":4285,"column":29,"offset":95875}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def keyword_args(","position":{"start":{"line":4287,"column":1,"offset":95877},"end":{"line":4287,"column":18,"offset":95894}}},{"type":"text","value":"*","position":{"start":{"line":4287,"column":18,"offset":95894},"end":{"line":4287,"column":20,"offset":95896}}},{"type":"text","value":"*","position":{"start":{"line":4287,"column":20,"offset":95896},"end":{"line":4287,"column":22,"offset":95898}}},{"type":"text","value":"kwargs):\nreturn kwargs","position":{"start":{"line":4287,"column":22,"offset":95898},"end":{"line":4288,"column":14,"offset":95920}}}],"position":{"start":{"line":4287,"column":1,"offset":95877},"end":{"line":4288,"column":14,"offset":95920}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Let's call it to see what happens","position":{"start":{"line":4290,"column":3,"offset":95924},"end":{"line":4290,"column":36,"offset":95957}}}],"position":{"start":{"line":4290,"column":1,"offset":95922},"end":{"line":4290,"column":36,"offset":95957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"keyword_args(big=\"foot\", loch=\"ness\") # => {\"big\": \"foot\", \"loch\": \"ness\"}","position":{"start":{"line":4292,"column":1,"offset":95959},"end":{"line":4292,"column":75,"offset":96033}}}],"position":{"start":{"line":4292,"column":1,"offset":95959},"end":{"line":4292,"column":75,"offset":96033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can do both at once, if you like","position":{"start":{"line":4294,"column":3,"offset":96037},"end":{"line":4294,"column":39,"offset":96073}}}],"position":{"start":{"line":4294,"column":1,"offset":96035},"end":{"line":4294,"column":39,"offset":96073}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def all","position":{"start":{"line":4296,"column":1,"offset":96075},"end":{"line":4296,"column":8,"offset":96082}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"the","position":{"start":{"line":4296,"column":9,"offset":96083},"end":{"line":4296,"column":12,"offset":96086}}}],"position":{"start":{"line":4296,"column":8,"offset":96082},"end":{"line":4296,"column":13,"offset":96087}}},{"type":"text","value":"args(","position":{"start":{"line":4296,"column":13,"offset":96087},"end":{"line":4296,"column":18,"offset":96092}}},{"type":"text","value":"*","position":{"start":{"line":4296,"column":18,"offset":96092},"end":{"line":4296,"column":20,"offset":96094}}},{"type":"text","value":"args, ","position":{"start":{"line":4296,"column":20,"offset":96094},"end":{"line":4296,"column":26,"offset":96100}}},{"type":"text","value":"*","position":{"start":{"line":4296,"column":26,"offset":96100},"end":{"line":4296,"column":28,"offset":96102}}},{"type":"text","value":"*","position":{"start":{"line":4296,"column":28,"offset":96102},"end":{"line":4296,"column":30,"offset":96104}}},{"type":"text","value":"kwargs):\nprint(args)\nprint(kwargs)\n\"\"\"\nall","position":{"start":{"line":4296,"column":30,"offset":96104},"end":{"line":4300,"column":4,"offset":96146}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"the","position":{"start":{"line":4300,"column":5,"offset":96147},"end":{"line":4300,"column":8,"offset":96150}}}],"position":{"start":{"line":4300,"column":4,"offset":96146},"end":{"line":4300,"column":9,"offset":96151}}},{"type":"text","value":"args(1, 2, a=3, b=4) prints:\n(1, 2)\n{\"a\": 3, \"b\": 4}\n\"\"\"","position":{"start":{"line":4300,"column":9,"offset":96151},"end":{"line":4303,"column":4,"offset":96207}}}],"position":{"start":{"line":4296,"column":1,"offset":96075},"end":{"line":4303,"column":4,"offset":96207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"When calling functions, you can do the opposite of args/kwargs","position":{"start":{"line":4305,"column":3,"offset":96211},"end":{"line":4305,"column":65,"offset":96273}}}],"position":{"start":{"line":4305,"column":1,"offset":96209},"end":{"line":4305,"column":65,"offset":96273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":4307,"column":3,"offset":96277},"end":{"line":4307,"column":7,"offset":96281}}},{"type":"text","value":"*","position":{"start":{"line":4307,"column":7,"offset":96281},"end":{"line":4307,"column":9,"offset":96283}}},{"type":"text","value":" to expand tuples and use ","position":{"start":{"line":4307,"column":9,"offset":96283},"end":{"line":4307,"column":35,"offset":96309}}},{"type":"text","value":"*","position":{"start":{"line":4307,"column":35,"offset":96309},"end":{"line":4307,"column":37,"offset":96311}}},{"type":"text","value":"*","position":{"start":{"line":4307,"column":37,"offset":96311},"end":{"line":4307,"column":39,"offset":96313}}},{"type":"text","value":" to expand kwargs","position":{"start":{"line":4307,"column":39,"offset":96313},"end":{"line":4307,"column":56,"offset":96330}}}],"position":{"start":{"line":4307,"column":1,"offset":96275},"end":{"line":4307,"column":56,"offset":96330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"args = (1, 2, 3, 4)\nkwargs = {\"a\": 3, \"b\": 4}\nall","position":{"start":{"line":4309,"column":1,"offset":96332},"end":{"line":4311,"column":4,"offset":96381}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"the","position":{"start":{"line":4311,"column":5,"offset":96382},"end":{"line":4311,"column":8,"offset":96385}}}],"position":{"start":{"line":4311,"column":4,"offset":96381},"end":{"line":4311,"column":9,"offset":96386}}},{"type":"text","value":"args(","position":{"start":{"line":4311,"column":9,"offset":96386},"end":{"line":4311,"column":14,"offset":96391}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"args) # equivalent to all","position":{"start":{"line":4311,"column":15,"offset":96392},"end":{"line":4311,"column":40,"offset":96417}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"the","position":{"start":{"line":4311,"column":41,"offset":96418},"end":{"line":4311,"column":44,"offset":96421}}}],"position":{"start":{"line":4311,"column":40,"offset":96417},"end":{"line":4311,"column":45,"offset":96422}}},{"type":"text","value":"args(1, 2, 3, 4)\nall","position":{"start":{"line":4311,"column":45,"offset":96422},"end":{"line":4312,"column":4,"offset":96442}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"the","position":{"start":{"line":4312,"column":5,"offset":96443},"end":{"line":4312,"column":8,"offset":96446}}}],"position":{"start":{"line":4312,"column":4,"offset":96442},"end":{"line":4312,"column":9,"offset":96447}}},{"type":"text","value":"args(\\","position":{"start":{"line":4312,"column":9,"offset":96447},"end":{"line":4312,"column":15,"offset":96453}}}],"position":{"start":{"line":4311,"column":14,"offset":96391},"end":{"line":4312,"column":16,"offset":96454}}},{"type":"text","value":"*","position":{"start":{"line":4312,"column":16,"offset":96454},"end":{"line":4312,"column":18,"offset":96456}}},{"type":"text","value":"kwargs) # equivalent to all","position":{"start":{"line":4312,"column":18,"offset":96456},"end":{"line":4312,"column":45,"offset":96483}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"the","position":{"start":{"line":4312,"column":46,"offset":96484},"end":{"line":4312,"column":49,"offset":96487}}}],"position":{"start":{"line":4312,"column":45,"offset":96483},"end":{"line":4312,"column":50,"offset":96488}}},{"type":"text","value":"args(a=3, b=4)\nall","position":{"start":{"line":4312,"column":50,"offset":96488},"end":{"line":4313,"column":4,"offset":96506}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"the","position":{"start":{"line":4313,"column":5,"offset":96507},"end":{"line":4313,"column":8,"offset":96510}}}],"position":{"start":{"line":4313,"column":4,"offset":96506},"end":{"line":4313,"column":9,"offset":96511}}},{"type":"text","value":"args(","position":{"start":{"line":4313,"column":9,"offset":96511},"end":{"line":4313,"column":14,"offset":96516}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"args, \\","position":{"start":{"line":4313,"column":15,"offset":96517},"end":{"line":4313,"column":22,"offset":96524}}}],"position":{"start":{"line":4313,"column":14,"offset":96516},"end":{"line":4313,"column":23,"offset":96525}}},{"type":"text","value":"*","position":{"start":{"line":4313,"column":23,"offset":96525},"end":{"line":4313,"column":25,"offset":96527}}},{"type":"text","value":"kwargs) # equivalent to all","position":{"start":{"line":4313,"column":25,"offset":96527},"end":{"line":4313,"column":52,"offset":96554}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"the","position":{"start":{"line":4313,"column":53,"offset":96555},"end":{"line":4313,"column":56,"offset":96558}}}],"position":{"start":{"line":4313,"column":52,"offset":96554},"end":{"line":4313,"column":57,"offset":96559}}},{"type":"text","value":"args(1, 2, 3, 4, a=3, b=4)","position":{"start":{"line":4313,"column":57,"offset":96559},"end":{"line":4313,"column":83,"offset":96585}}}],"position":{"start":{"line":4309,"column":1,"offset":96332},"end":{"line":4313,"column":83,"offset":96585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Returning multiple values (with tuple assignments)","position":{"start":{"line":4315,"column":3,"offset":96589},"end":{"line":4315,"column":53,"offset":96639}}}],"position":{"start":{"line":4315,"column":1,"offset":96587},"end":{"line":4315,"column":53,"offset":96639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def swap(x, y):\nreturn y, x # Return multiple values as a tuple without the parenthesis. # (Note: parenthesis have been excluded but can be included)","position":{"start":{"line":4317,"column":1,"offset":96641},"end":{"line":4318,"column":134,"offset":96790}}}],"position":{"start":{"line":4317,"column":1,"offset":96641},"end":{"line":4318,"column":134,"offset":96790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = 1\ny = 2\nx, y = swap(x, y) # => x = 2, y = 1","position":{"start":{"line":4320,"column":1,"offset":96792},"end":{"line":4322,"column":36,"offset":96839}}}],"position":{"start":{"line":4320,"column":1,"offset":96792},"end":{"line":4322,"column":36,"offset":96839}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"(x, y) = swap(x,y) # Again parenthesis have been excluded but can be included","position":{"start":{"line":4324,"column":3,"offset":96843},"end":{"line":4324,"column":80,"offset":96920}}}],"position":{"start":{"line":4324,"column":1,"offset":96841},"end":{"line":4324,"column":80,"offset":96920}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Function Scope","position":{"start":{"line":4326,"column":3,"offset":96924},"end":{"line":4326,"column":17,"offset":96938}}}],"position":{"start":{"line":4326,"column":1,"offset":96922},"end":{"line":4326,"column":17,"offset":96938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"x = 5","position":{"start":{"line":4328,"column":1,"offset":96940},"end":{"line":4328,"column":6,"offset":96945}}}],"position":{"start":{"line":4328,"column":1,"offset":96940},"end":{"line":4328,"column":6,"offset":96945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def set_x(num): # Local var x not the same as global variable x\nx = num # => 43\nprint(x) # => 43","position":{"start":{"line":4330,"column":1,"offset":96947},"end":{"line":4332,"column":17,"offset":97043}}}],"position":{"start":{"line":4330,"column":1,"offset":96947},"end":{"line":4332,"column":17,"offset":97043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def set","position":{"start":{"line":4334,"column":1,"offset":97045},"end":{"line":4334,"column":8,"offset":97052}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"global","position":{"start":{"line":4334,"column":9,"offset":97053},"end":{"line":4334,"column":15,"offset":97059}}}],"position":{"start":{"line":4334,"column":8,"offset":97052},"end":{"line":4334,"column":16,"offset":97060}}},{"type":"text","value":"x(num):\nglobal x\nprint(x) # => 5\nx = num # global var x is now set to 6\nprint(x) # => 6","position":{"start":{"line":4334,"column":16,"offset":97060},"end":{"line":4338,"column":16,"offset":97147}}}],"position":{"start":{"line":4334,"column":1,"offset":97045},"end":{"line":4338,"column":16,"offset":97147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"set","position":{"start":{"line":4340,"column":1,"offset":97149},"end":{"line":4340,"column":4,"offset":97152}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"x(43)\nset","position":{"start":{"line":4340,"column":5,"offset":97153},"end":{"line":4341,"column":4,"offset":97162}}}],"position":{"start":{"line":4340,"column":4,"offset":97152},"end":{"line":4341,"column":5,"offset":97163}}},{"type":"text","value":"global_x(6)","position":{"start":{"line":4341,"column":5,"offset":97163},"end":{"line":4341,"column":16,"offset":97174}}}],"position":{"start":{"line":4340,"column":1,"offset":97149},"end":{"line":4341,"column":16,"offset":97174}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Python has first class functions","position":{"start":{"line":4343,"column":3,"offset":97178},"end":{"line":4343,"column":35,"offset":97210}}}],"position":{"start":{"line":4343,"column":1,"offset":97176},"end":{"line":4343,"column":35,"offset":97210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def create_adder(x):\ndef adder(y):\nreturn x + y\nreturn adder","position":{"start":{"line":4345,"column":1,"offset":97212},"end":{"line":4348,"column":13,"offset":97272}}}],"position":{"start":{"line":4345,"column":1,"offset":97212},"end":{"line":4348,"column":13,"offset":97272}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"add","position":{"start":{"line":4350,"column":1,"offset":97274},"end":{"line":4350,"column":4,"offset":97277}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"10 = create","position":{"start":{"line":4350,"column":5,"offset":97278},"end":{"line":4350,"column":16,"offset":97289}}}],"position":{"start":{"line":4350,"column":4,"offset":97277},"end":{"line":4350,"column":17,"offset":97290}}},{"type":"text","value":"adder(10)\nadd_10(3) # => 13","position":{"start":{"line":4350,"column":17,"offset":97290},"end":{"line":4351,"column":18,"offset":97317}}}],"position":{"start":{"line":4350,"column":1,"offset":97274},"end":{"line":4351,"column":18,"offset":97317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"There are also anonymous functions","position":{"start":{"line":4353,"column":3,"offset":97321},"end":{"line":4353,"column":37,"offset":97355}}}],"position":{"start":{"line":4353,"column":1,"offset":97319},"end":{"line":4353,"column":37,"offset":97355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(lambda x: x > 2)(3) # => True\n(lambda x, y: x ","position":{"start":{"line":4355,"column":1,"offset":97357},"end":{"line":4356,"column":17,"offset":97404}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2 + y","position":{"start":{"line":4356,"column":19,"offset":97406},"end":{"line":4356,"column":24,"offset":97411}}}],"position":{"start":{"line":4356,"column":17,"offset":97404},"end":{"line":4356,"column":26,"offset":97413}}},{"type":"text","value":" 2)(2, 1) # => 5","position":{"start":{"line":4356,"column":26,"offset":97413},"end":{"line":4356,"column":42,"offset":97429}}}],"position":{"start":{"line":4355,"column":1,"offset":97357},"end":{"line":4356,"column":42,"offset":97429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"There are built-in higher order functions","position":{"start":{"line":4358,"column":3,"offset":97433},"end":{"line":4358,"column":44,"offset":97474}}}],"position":{"start":{"line":4358,"column":1,"offset":97431},"end":{"line":4358,"column":44,"offset":97474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"list(map(add_10, ","position":{"start":{"line":4360,"column":1,"offset":97476},"end":{"line":4360,"column":18,"offset":97493}}},{"type":"text","value":"[1, 2, 3]","position":{"start":{"line":4360,"column":19,"offset":97494},"end":{"line":4360,"column":26,"offset":97501}}},{"type":"text","value":")) # => ","position":{"start":{"line":4360,"column":27,"offset":97502},"end":{"line":4360,"column":35,"offset":97510}}},{"type":"text","value":"[11, 12, 13]","position":{"start":{"line":4360,"column":36,"offset":97511},"end":{"line":4360,"column":46,"offset":97521}}},{"type":"text","value":"\nlist(map(max, ","position":{"start":{"line":4360,"column":47,"offset":97522},"end":{"line":4361,"column":15,"offset":97537}}},{"type":"text","value":"[1, 2, 3]","position":{"start":{"line":4361,"column":16,"offset":97538},"end":{"line":4361,"column":23,"offset":97545}}},{"type":"text","value":", ","position":{"start":{"line":4361,"column":24,"offset":97546},"end":{"line":4361,"column":26,"offset":97548}}},{"type":"text","value":"[4, 2, 1]","position":{"start":{"line":4361,"column":27,"offset":97549},"end":{"line":4361,"column":34,"offset":97556}}},{"type":"text","value":")) # => ","position":{"start":{"line":4361,"column":35,"offset":97557},"end":{"line":4361,"column":43,"offset":97565}}},{"type":"text","value":"[4, 2, 3]","position":{"start":{"line":4361,"column":44,"offset":97566},"end":{"line":4361,"column":51,"offset":97573}}}],"position":{"start":{"line":4360,"column":1,"offset":97476},"end":{"line":4361,"column":52,"offset":97574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"list(filter(lambda x: x > 5, ","position":{"start":{"line":4363,"column":1,"offset":97576},"end":{"line":4363,"column":30,"offset":97605}}},{"type":"text","value":"[3, 4, 5, 6, 7]","position":{"start":{"line":4363,"column":31,"offset":97606},"end":{"line":4363,"column":44,"offset":97619}}},{"type":"text","value":")) # => ","position":{"start":{"line":4363,"column":45,"offset":97620},"end":{"line":4363,"column":53,"offset":97628}}},{"type":"text","value":"[6, 7]","position":{"start":{"line":4363,"column":54,"offset":97629},"end":{"line":4363,"column":58,"offset":97633}}}],"position":{"start":{"line":4363,"column":1,"offset":97576},"end":{"line":4363,"column":59,"offset":97634}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"We can use list comprehensions for nice maps and filters","position":{"start":{"line":4365,"column":3,"offset":97638},"end":{"line":4365,"column":59,"offset":97694}}}],"position":{"start":{"line":4365,"column":1,"offset":97636},"end":{"line":4365,"column":59,"offset":97694}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"List comprehension stores the output as a list which can itself be a nested list","position":{"start":{"line":4367,"column":3,"offset":97698},"end":{"line":4367,"column":83,"offset":97778}}}],"position":{"start":{"line":4367,"column":1,"offset":97696},"end":{"line":4367,"column":83,"offset":97778}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[add_10(i) for i in ","position":{"start":{"line":4369,"column":1,"offset":97780},"end":{"line":4369,"column":21,"offset":97800}}},{"type":"text","value":"[1, 2, 3]","position":{"start":{"line":4369,"column":22,"offset":97801},"end":{"line":4369,"column":29,"offset":97808}}},{"type":"text","value":"] # => ","position":{"start":{"line":4369,"column":30,"offset":97809},"end":{"line":4369,"column":37,"offset":97816}}},{"type":"text","value":"[11, 12, 13]","position":{"start":{"line":4369,"column":38,"offset":97817},"end":{"line":4369,"column":48,"offset":97827}}},{"type":"text","value":"\n[x for x in ","position":{"start":{"line":4369,"column":49,"offset":97828},"end":{"line":4370,"column":13,"offset":97841}}},{"type":"text","value":"[3, 4, 5, 6, 7]","position":{"start":{"line":4370,"column":14,"offset":97842},"end":{"line":4370,"column":27,"offset":97855}}},{"type":"text","value":" if x > 5] # => ","position":{"start":{"line":4370,"column":28,"offset":97856},"end":{"line":4370,"column":44,"offset":97872}}},{"type":"text","value":"[6, 7]","position":{"start":{"line":4370,"column":45,"offset":97873},"end":{"line":4370,"column":49,"offset":97877}}}],"position":{"start":{"line":4369,"column":1,"offset":97780},"end":{"line":4370,"column":50,"offset":97878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can construct set and dict comprehensions as well","position":{"start":{"line":4372,"column":3,"offset":97882},"end":{"line":4372,"column":56,"offset":97935}}}],"position":{"start":{"line":4372,"column":1,"offset":97880},"end":{"line":4372,"column":56,"offset":97935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"{x for x in 'abcddeef' if x not in 'abc'} # => {'d', 'e', 'f'}\n{x: x","position":{"start":{"line":4374,"column":1,"offset":97937},"end":{"line":4375,"column":6,"offset":98005}}},{"type":"text","value":"*","position":{"start":{"line":4375,"column":6,"offset":98005},"end":{"line":4375,"column":8,"offset":98007}}},{"type":"text","value":"*","position":{"start":{"line":4375,"column":8,"offset":98007},"end":{"line":4375,"column":10,"offset":98009}}},{"type":"text","value":"2 for x in range(5)} # => {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}","position":{"start":{"line":4375,"column":10,"offset":98009},"end":{"line":4375,"column":67,"offset":98066}}}],"position":{"start":{"line":4374,"column":1,"offset":97937},"end":{"line":4375,"column":67,"offset":98066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4377,"column":1,"offset":98068},"end":{"line":4377,"column":53,"offset":98120}}}],"position":{"start":{"line":4377,"column":1,"offset":98068},"end":{"line":4377,"column":53,"offset":98120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"5. Modules","position":{"start":{"line":4379,"column":4,"offset":98125},"end":{"line":4379,"column":14,"offset":98135}}}],"position":{"start":{"line":4379,"column":1,"offset":98122},"end":{"line":4379,"column":14,"offset":98135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4381,"column":1,"offset":98137},"end":{"line":4381,"column":53,"offset":98189}}}],"position":{"start":{"line":4381,"column":1,"offset":98137},"end":{"line":4381,"column":53,"offset":98189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can import modules","position":{"start":{"line":4383,"column":3,"offset":98193},"end":{"line":4383,"column":25,"offset":98215}}}],"position":{"start":{"line":4383,"column":1,"offset":98191},"end":{"line":4383,"column":25,"offset":98215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import math\nprint(math.sqrt(16)) # => 4.0","position":{"start":{"line":4385,"column":1,"offset":98217},"end":{"line":4386,"column":30,"offset":98258}}}],"position":{"start":{"line":4385,"column":1,"offset":98217},"end":{"line":4386,"column":30,"offset":98258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can get specific functions from a module","position":{"start":{"line":4388,"column":3,"offset":98262},"end":{"line":4388,"column":47,"offset":98306}}}],"position":{"start":{"line":4388,"column":1,"offset":98260},"end":{"line":4388,"column":47,"offset":98306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from math import ceil, floor\nprint(ceil(3.7)) # => 4.0\nprint(floor(3.7)) # => 3.0","position":{"start":{"line":4390,"column":1,"offset":98308},"end":{"line":4392,"column":27,"offset":98389}}}],"position":{"start":{"line":4390,"column":1,"offset":98308},"end":{"line":4392,"column":27,"offset":98389}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can import all functions from a module","position":{"start":{"line":4394,"column":3,"offset":98393},"end":{"line":4394,"column":45,"offset":98435}}}],"position":{"start":{"line":4394,"column":1,"offset":98391},"end":{"line":4394,"column":45,"offset":98435}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Warning: this is not recommended","position":{"start":{"line":4396,"column":3,"offset":98439},"end":{"line":4396,"column":35,"offset":98471}}}],"position":{"start":{"line":4396,"column":1,"offset":98437},"end":{"line":4396,"column":35,"offset":98471}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from math import ","position":{"start":{"line":4398,"column":1,"offset":98473},"end":{"line":4398,"column":18,"offset":98490}}},{"type":"text","value":"*","position":{"start":{"line":4398,"column":18,"offset":98490},"end":{"line":4398,"column":20,"offset":98492}}}],"position":{"start":{"line":4398,"column":1,"offset":98473},"end":{"line":4398,"column":20,"offset":98492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can shorten module names","position":{"start":{"line":4400,"column":3,"offset":98496},"end":{"line":4400,"column":31,"offset":98524}}}],"position":{"start":{"line":4400,"column":1,"offset":98494},"end":{"line":4400,"column":31,"offset":98524}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import math as m\nmath.sqrt(16) == m.sqrt(16) # => True","position":{"start":{"line":4402,"column":1,"offset":98526},"end":{"line":4403,"column":38,"offset":98580}}}],"position":{"start":{"line":4402,"column":1,"offset":98526},"end":{"line":4403,"column":38,"offset":98580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Python modules are just ordinary Python files. You","position":{"start":{"line":4405,"column":3,"offset":98584},"end":{"line":4405,"column":53,"offset":98634}}}],"position":{"start":{"line":4405,"column":1,"offset":98582},"end":{"line":4405,"column":53,"offset":98634}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"can write your own, and import them. The name of the","position":{"start":{"line":4407,"column":3,"offset":98638},"end":{"line":4407,"column":55,"offset":98690}}}],"position":{"start":{"line":4407,"column":1,"offset":98636},"end":{"line":4407,"column":55,"offset":98690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"module is the same as the name of the file","position":{"start":{"line":4409,"column":3,"offset":98694},"end":{"line":4409,"column":45,"offset":98736}}}],"position":{"start":{"line":4409,"column":1,"offset":98692},"end":{"line":4409,"column":45,"offset":98736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can find out which functions and attributes","position":{"start":{"line":4411,"column":3,"offset":98740},"end":{"line":4411,"column":50,"offset":98787}}}],"position":{"start":{"line":4411,"column":1,"offset":98738},"end":{"line":4411,"column":50,"offset":98787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"are defined in a module","position":{"start":{"line":4413,"column":3,"offset":98791},"end":{"line":4413,"column":26,"offset":98814}}}],"position":{"start":{"line":4413,"column":1,"offset":98789},"end":{"line":4413,"column":26,"offset":98814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"import math\ndir(math)","position":{"start":{"line":4415,"column":1,"offset":98816},"end":{"line":4416,"column":10,"offset":98837}}}],"position":{"start":{"line":4415,"column":1,"offset":98816},"end":{"line":4416,"column":10,"offset":98837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"If you have a Python script named math.py in the same","position":{"start":{"line":4418,"column":3,"offset":98841},"end":{"line":4418,"column":56,"offset":98894}}}],"position":{"start":{"line":4418,"column":1,"offset":98839},"end":{"line":4418,"column":56,"offset":98894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"folder as your current script, the file math.py will","position":{"start":{"line":4420,"column":3,"offset":98898},"end":{"line":4420,"column":55,"offset":98950}}}],"position":{"start":{"line":4420,"column":1,"offset":98896},"end":{"line":4420,"column":55,"offset":98950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"be loaded instead of the built-in Python module","position":{"start":{"line":4422,"column":3,"offset":98954},"end":{"line":4422,"column":50,"offset":99001}}}],"position":{"start":{"line":4422,"column":1,"offset":98952},"end":{"line":4422,"column":50,"offset":99001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"This happens because the local folder has priority","position":{"start":{"line":4424,"column":3,"offset":99005},"end":{"line":4424,"column":53,"offset":99055}}}],"position":{"start":{"line":4424,"column":1,"offset":99003},"end":{"line":4424,"column":53,"offset":99055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"over Python's built-in libraries","position":{"start":{"line":4426,"column":3,"offset":99059},"end":{"line":4426,"column":35,"offset":99091}}}],"position":{"start":{"line":4426,"column":1,"offset":99057},"end":{"line":4426,"column":35,"offset":99091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4428,"column":1,"offset":99093},"end":{"line":4428,"column":53,"offset":99145}}}],"position":{"start":{"line":4428,"column":1,"offset":99093},"end":{"line":4428,"column":53,"offset":99145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"6. Classes","position":{"start":{"line":4430,"column":4,"offset":99150},"end":{"line":4430,"column":14,"offset":99160}}}],"position":{"start":{"line":4430,"column":1,"offset":99147},"end":{"line":4430,"column":14,"offset":99160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4432,"column":1,"offset":99162},"end":{"line":4432,"column":53,"offset":99214}}}],"position":{"start":{"line":4432,"column":1,"offset":99162},"end":{"line":4432,"column":53,"offset":99214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"We use the \"class\" statement to create a class","position":{"start":{"line":4434,"column":3,"offset":99218},"end":{"line":4434,"column":49,"offset":99264}}}],"position":{"start":{"line":4434,"column":1,"offset":99216},"end":{"line":4434,"column":49,"offset":99264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Human:","position":{"start":{"line":4436,"column":1,"offset":99266},"end":{"line":4436,"column":13,"offset":99278}}}],"position":{"start":{"line":4436,"column":1,"offset":99266},"end":{"line":4436,"column":13,"offset":99278}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># A class attribute. It is shared by all instances of this class\nspecies = \"H. sapiens\"\n\n# Basic initializer, this is called when this class is instantiated.\n# Note that the double leading and trailing underscores denote objects\n# or attributes that are used by Python but that live in user-controlled\n# namespaces. Methods(or objects or attributes) like: __init__, __str__,\n# __repr__ etc. are called special methods (or sometimes called dunder methods)\n# You should not invent such names on your own.\ndef __init__(self, name):\n    # Assign the argument to the instance's name attribute\n    self.name = name\n\n    # Initialize property\n    self._age = 0\n\n# An instance method. All methods take \"self\" as the first argument\ndef say(self, msg):\n    print(\"{name}: {message}\".format(name=self.name, message=msg))\n\n# Another instance method\ndef sing(self):\n    return 'yo... yo... microphone check... one two... one two...'\n\n# A class method is shared among all instances\n# They are called with the calling class as the first argument\n@classmethod\ndef get_species(cls):\n    return cls.species\n\n# A static method is called without a class or instance reference\n@staticmethod\ndef grunt():\n    return \"*grunt*\"\n\n# A property is just like a getter.\n# It turns the method age() into an read-only attribute of the same name.\n# There's no need to write trivial getters and setters in Python, though.\n@property\ndef age(self):\n    return self._age\n\n# This allows the property to be set\n@age.setter\ndef age(self, age):\n    self._age = age\n\n# This allows the property to be deleted\n@age.deleter\ndef age(self):\n    del self._age</code></pre></div>","position":{"start":{"line":4438,"column":1,"offset":99280},"end":{"line":4488,"column":22,"offset":101060}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"When a Python interpreter reads a source file it executes all its code","position":{"start":{"line":4490,"column":3,"offset":101064},"end":{"line":4490,"column":73,"offset":101134}}}],"position":{"start":{"line":4490,"column":1,"offset":101062},"end":{"line":4490,"column":73,"offset":101134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"This ","position":{"start":{"line":4492,"column":3,"offset":101138},"end":{"line":4492,"column":8,"offset":101143}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":4492,"column":10,"offset":101145},"end":{"line":4492,"column":14,"offset":101149}}}],"position":{"start":{"line":4492,"column":8,"offset":101143},"end":{"line":4492,"column":16,"offset":101151}}},{"type":"text","value":" check makes sure this code block is only executed when this","position":{"start":{"line":4492,"column":16,"offset":101151},"end":{"line":4492,"column":76,"offset":101211}}}],"position":{"start":{"line":4492,"column":1,"offset":101136},"end":{"line":4492,"column":76,"offset":101211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"module is the main program","position":{"start":{"line":4494,"column":3,"offset":101215},"end":{"line":4494,"column":29,"offset":101241}}}],"position":{"start":{"line":4494,"column":1,"offset":101213},"end":{"line":4494,"column":29,"offset":101241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if ","position":{"start":{"line":4496,"column":1,"offset":101243},"end":{"line":4496,"column":4,"offset":101246}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":4496,"column":6,"offset":101248},"end":{"line":4496,"column":10,"offset":101252}}}],"position":{"start":{"line":4496,"column":4,"offset":101246},"end":{"line":4496,"column":12,"offset":101254}}},{"type":"text","value":" == '","position":{"start":{"line":4496,"column":12,"offset":101254},"end":{"line":4496,"column":17,"offset":101259}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"main","position":{"start":{"line":4496,"column":19,"offset":101261},"end":{"line":4496,"column":23,"offset":101265}}}],"position":{"start":{"line":4496,"column":17,"offset":101259},"end":{"line":4496,"column":25,"offset":101267}}},{"type":"text","value":"': # Instantiate a class\ni = Human(name=\"Ian\")\ni.say(\"hi\") # \"Ian: hi\"\nj = Human(\"Joel\")\nj.say(\"hello\") # \"Joel: hello\" # i and j are instances of type Human, or in other words: they are Human objects","position":{"start":{"line":4496,"column":25,"offset":101267},"end":{"line":4500,"column":112,"offset":101467}}}],"position":{"start":{"line":4496,"column":1,"offset":101243},"end":{"line":4500,"column":112,"offset":101467}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Call our class method\ni.say(i.get_species())          # \"Ian: H. sapiens\"\n# Change the shared attribute\nHuman.species = \"H. neanderthalensis\"\ni.say(i.get_species())          # => \"Ian: H. neanderthalensis\"\nj.say(j.get_species())          # => \"Joel: H. neanderthalensis\"\n\n# Call the static method\nprint(Human.grunt())            # => \"*grunt*\"\n\n# Cannot call static method with instance of object\n# because i.grunt() will automatically put \"self\" (the object i) as an argument\nprint(i.grunt())                # => TypeError: grunt() takes 0 positional arguments but 1 was given\n\n# Update the property for this instance\ni.age = 42\n# Get the property\ni.say(i.age)                    # => \"Ian: 42\"\nj.say(j.age)                    # => \"Joel: 0\"\n# Delete the property\ndel i.age\n# i.age                         # => this would raise an AttributeError</code></pre></div>","position":{"start":{"line":4502,"column":1,"offset":101469},"end":{"line":4523,"column":76,"offset":102393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4525,"column":1,"offset":102395},"end":{"line":4525,"column":53,"offset":102447}}}],"position":{"start":{"line":4525,"column":1,"offset":102395},"end":{"line":4525,"column":53,"offset":102447}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"6.1 Inheritance","position":{"start":{"line":4527,"column":4,"offset":102452},"end":{"line":4527,"column":19,"offset":102467}}}],"position":{"start":{"line":4527,"column":1,"offset":102449},"end":{"line":4527,"column":19,"offset":102467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4529,"column":1,"offset":102469},"end":{"line":4529,"column":53,"offset":102521}}}],"position":{"start":{"line":4529,"column":1,"offset":102469},"end":{"line":4529,"column":53,"offset":102521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Inheritance allows new child classes to be defined that inherit methods and","position":{"start":{"line":4531,"column":3,"offset":102525},"end":{"line":4531,"column":78,"offset":102600}}}],"position":{"start":{"line":4531,"column":1,"offset":102523},"end":{"line":4531,"column":78,"offset":102600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"variables from their parent class","position":{"start":{"line":4533,"column":3,"offset":102604},"end":{"line":4533,"column":36,"offset":102637}}}],"position":{"start":{"line":4533,"column":1,"offset":102602},"end":{"line":4533,"column":36,"offset":102637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Using the Human class defined above as the base or parent class, we can","position":{"start":{"line":4535,"column":3,"offset":102641},"end":{"line":4535,"column":74,"offset":102712}}}],"position":{"start":{"line":4535,"column":1,"offset":102639},"end":{"line":4535,"column":74,"offset":102712}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"define a child class, Superhero, which inherits the class variables like","position":{"start":{"line":4537,"column":3,"offset":102716},"end":{"line":4537,"column":75,"offset":102788}}}],"position":{"start":{"line":4537,"column":1,"offset":102714},"end":{"line":4537,"column":75,"offset":102788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"\"species\", \"name\", and \"age\", as well as methods, like \"sing\" and \"grunt\"","position":{"start":{"line":4539,"column":3,"offset":102792},"end":{"line":4539,"column":76,"offset":102865}}}],"position":{"start":{"line":4539,"column":1,"offset":102790},"end":{"line":4539,"column":76,"offset":102865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"from the Human class, but can also have its own unique properties","position":{"start":{"line":4541,"column":3,"offset":102869},"end":{"line":4541,"column":68,"offset":102934}}}],"position":{"start":{"line":4541,"column":1,"offset":102867},"end":{"line":4541,"column":68,"offset":102934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"To take advantage of modularization by file you could place the classes above in their own files","position":{"start":{"line":4543,"column":3,"offset":102938},"end":{"line":4543,"column":99,"offset":103034}}}],"position":{"start":{"line":4543,"column":1,"offset":102936},"end":{"line":4543,"column":99,"offset":103034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"say, human.py","position":{"start":{"line":4545,"column":3,"offset":103038},"end":{"line":4545,"column":16,"offset":103051}}}],"position":{"start":{"line":4545,"column":1,"offset":103036},"end":{"line":4545,"column":16,"offset":103051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"To import functions from other files use the following format","position":{"start":{"line":4547,"column":3,"offset":103055},"end":{"line":4547,"column":64,"offset":103116}}}],"position":{"start":{"line":4547,"column":1,"offset":103053},"end":{"line":4547,"column":64,"offset":103116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"from \"filename-without-extension\" import \"function-or-class\"","position":{"start":{"line":4549,"column":3,"offset":103120},"end":{"line":4549,"column":63,"offset":103180}}}],"position":{"start":{"line":4549,"column":1,"offset":103118},"end":{"line":4549,"column":63,"offset":103180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from human import Human","position":{"start":{"line":4551,"column":1,"offset":103182},"end":{"line":4551,"column":24,"offset":103205}}}],"position":{"start":{"line":4551,"column":1,"offset":103182},"end":{"line":4551,"column":24,"offset":103205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Specify the parent class(es) as parameters to the class definition","position":{"start":{"line":4553,"column":3,"offset":103209},"end":{"line":4553,"column":69,"offset":103275}}}],"position":{"start":{"line":4553,"column":1,"offset":103207},"end":{"line":4553,"column":69,"offset":103275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Superhero(Human):","position":{"start":{"line":4555,"column":1,"offset":103277},"end":{"line":4555,"column":24,"offset":103300}}}],"position":{"start":{"line":4555,"column":1,"offset":103277},"end":{"line":4555,"column":24,"offset":103300}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># If the child class should inherit all of the parent's definitions without\n# any modifications, you can just use the \"pass\" keyword (and nothing else)\n# but in this case it is commented out to allow for a unique child class:\n# pass\n\n# Child classes can override their parents' attributes\nspecies = 'Superhuman'\n\n# Children automatically inherit their parent class's constructor including\n# its arguments, but can also define additional arguments or definitions\n# and override its methods such as the class constructor.\n# This constructor inherits the \"name\" argument from the \"Human\" class and\n# adds the \"superpower\" and \"movie\" arguments:\ndef __init__(self, name, movie=False,\n             superpowers=[\"super strength\", \"bulletproofing\"]):\n\n    # add additional class attributes:\n    self.fictional = True\n    self.movie = movie\n    # be aware of mutable default values, since defaults are shared\n    self.superpowers = superpowers\n\n    # The \"super\" function lets you access the parent class's methods\n    # that are overridden by the child, in this case, the __init__ method.\n    # This calls the parent class constructor:\n    super().__init__(name)\n\n# override the sing method\ndef sing(self):\n    return 'Dun, dun, DUN!'\n\n# add an additional instance method\ndef boast(self):\n    for power in self.superpowers:\n        print(\"I wield the power of {pow}!\".format(pow=power))</code></pre></div>","position":{"start":{"line":4557,"column":1,"offset":103302},"end":{"line":4591,"column":67,"offset":104797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if ","position":{"start":{"line":4593,"column":1,"offset":104799},"end":{"line":4593,"column":4,"offset":104802}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":4593,"column":6,"offset":104804},"end":{"line":4593,"column":10,"offset":104808}}}],"position":{"start":{"line":4593,"column":4,"offset":104802},"end":{"line":4593,"column":12,"offset":104810}}},{"type":"text","value":" == '","position":{"start":{"line":4593,"column":12,"offset":104810},"end":{"line":4593,"column":17,"offset":104815}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"main","position":{"start":{"line":4593,"column":19,"offset":104817},"end":{"line":4593,"column":23,"offset":104821}}}],"position":{"start":{"line":4593,"column":17,"offset":104815},"end":{"line":4593,"column":25,"offset":104823}}},{"type":"text","value":"':\nsup = Superhero(name=\"Tick\")","position":{"start":{"line":4593,"column":25,"offset":104823},"end":{"line":4594,"column":29,"offset":104854}}}],"position":{"start":{"line":4593,"column":1,"offset":104799},"end":{"line":4594,"column":29,"offset":104854}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Instance type checks\nif isinstance(sup, Human):\n    print('I am human')\nif type(sup) is Superhero:\n    print('I am a superhero')\n\n# Get the Method Resolution search Order used by both getattr() and super()\n# This attribute is dynamic and can be updated\nprint(Superhero.__mro__)    # => (&lt;class '__main__.Superhero'>,\n                            # => &lt;class 'human.Human'>, &lt;class 'object'>)\n\n# Calls parent method but uses its own class attribute\nprint(sup.get_species())    # => Superhuman\n\n# Calls overridden method\nprint(sup.sing())           # => Dun, dun, DUN!\n\n# Calls method from Human\nsup.say('Spoon')            # => Tick: Spoon\n\n# Call method that exists only in Superhero\nsup.boast()                 # => I wield the power of super strength!\n                            # => I wield the power of bulletproofing!\n\n# Inherited class attribute\nsup.age = 31\nprint(sup.age)              # => 31\n\n# Attribute that only exists within Superhero\nprint('Am I Oscar eligible? ' + str(sup.movie))</code></pre></div>","position":{"start":{"line":4596,"column":1,"offset":104856},"end":{"line":4625,"column":52,"offset":105945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4627,"column":1,"offset":105947},"end":{"line":4627,"column":53,"offset":105999}}}],"position":{"start":{"line":4627,"column":1,"offset":105947},"end":{"line":4627,"column":53,"offset":105999}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"6.2 Multiple Inheritance","position":{"start":{"line":4629,"column":4,"offset":106004},"end":{"line":4629,"column":28,"offset":106028}}}],"position":{"start":{"line":4629,"column":1,"offset":106001},"end":{"line":4629,"column":28,"offset":106028}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4631,"column":1,"offset":106030},"end":{"line":4631,"column":53,"offset":106082}}}],"position":{"start":{"line":4631,"column":1,"offset":106030},"end":{"line":4631,"column":53,"offset":106082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Another class definition","position":{"start":{"line":4633,"column":3,"offset":106086},"end":{"line":4633,"column":27,"offset":106110}}}],"position":{"start":{"line":4633,"column":1,"offset":106084},"end":{"line":4633,"column":27,"offset":106110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"bat.py","position":{"start":{"line":4635,"column":3,"offset":106114},"end":{"line":4635,"column":9,"offset":106120}}}],"position":{"start":{"line":4635,"column":1,"offset":106112},"end":{"line":4635,"column":9,"offset":106120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Bat:","position":{"start":{"line":4637,"column":1,"offset":106122},"end":{"line":4637,"column":11,"offset":106132}}}],"position":{"start":{"line":4637,"column":1,"offset":106122},"end":{"line":4637,"column":11,"offset":106132}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">species = 'Baty'\n\ndef __init__(self, can_fly=True):\n    self.fly = can_fly\n\n# This class also has a say method\ndef say(self, msg):\n    msg = '... ... ...'\n    return msg\n\n# And its own method as well\ndef sonar(self):\n    return '))) ... ((('</code></pre></div>","position":{"start":{"line":4639,"column":1,"offset":106134},"end":{"line":4651,"column":29,"offset":106415}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if ","position":{"start":{"line":4653,"column":1,"offset":106417},"end":{"line":4653,"column":4,"offset":106420}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":4653,"column":6,"offset":106422},"end":{"line":4653,"column":10,"offset":106426}}}],"position":{"start":{"line":4653,"column":4,"offset":106420},"end":{"line":4653,"column":12,"offset":106428}}},{"type":"text","value":" == '","position":{"start":{"line":4653,"column":12,"offset":106428},"end":{"line":4653,"column":17,"offset":106433}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"main","position":{"start":{"line":4653,"column":19,"offset":106435},"end":{"line":4653,"column":23,"offset":106439}}}],"position":{"start":{"line":4653,"column":17,"offset":106433},"end":{"line":4653,"column":25,"offset":106441}}},{"type":"text","value":"':\nb = Bat()\nprint(b.say('hello'))\nprint(b.fly)","position":{"start":{"line":4653,"column":25,"offset":106441},"end":{"line":4656,"column":13,"offset":106488}}}],"position":{"start":{"line":4653,"column":1,"offset":106417},"end":{"line":4656,"column":13,"offset":106488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"And yet another class definition that inherits from Superhero and Bat","position":{"start":{"line":4658,"column":3,"offset":106492},"end":{"line":4658,"column":72,"offset":106561}}}],"position":{"start":{"line":4658,"column":1,"offset":106490},"end":{"line":4658,"column":72,"offset":106561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"superhero.py","position":{"start":{"line":4660,"column":3,"offset":106565},"end":{"line":4660,"column":15,"offset":106577}}}],"position":{"start":{"line":4660,"column":1,"offset":106563},"end":{"line":4660,"column":15,"offset":106577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from superhero import Superhero\nfrom bat import Bat","position":{"start":{"line":4662,"column":1,"offset":106579},"end":{"line":4663,"column":20,"offset":106630}}}],"position":{"start":{"line":4662,"column":1,"offset":106579},"end":{"line":4663,"column":20,"offset":106630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Define Batman as a child that inherits from both Superhero and Bat","position":{"start":{"line":4665,"column":3,"offset":106634},"end":{"line":4665,"column":69,"offset":106700}}}],"position":{"start":{"line":4665,"column":1,"offset":106632},"end":{"line":4665,"column":69,"offset":106700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"class Batman(Superhero, Bat):","position":{"start":{"line":4667,"column":1,"offset":106702},"end":{"line":4667,"column":30,"offset":106731}}}],"position":{"start":{"line":4667,"column":1,"offset":106702},"end":{"line":4667,"column":30,"offset":106731}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">def __init__(self, *args, **kwargs):\n    # Typically to inherit attributes you have to call super:\n    # super(Batman, self).__init__(*args, **kwargs)\n    # However we are dealing with multiple inheritance here, and super()\n    # only works with the next base class in the MRO list.\n    # So instead we explicitly call __init__ for all ancestors.\n    # The use of *args and **kwargs allows for a clean way to pass arguments,\n    # with each parent \"peeling a layer of the onion\".\n    Superhero.__init__(self, 'anonymous', movie=True,\n                       superpowers=['Wealthy'], *args, **kwargs)\n    Bat.__init__(self, *args, can_fly=False, **kwargs)\n    # override the value for the name attribute\n    self.name = 'Sad Affleck'\n\ndef sing(self):\n    return 'nan nan nan nan nan batman!'</code></pre></div>","position":{"start":{"line":4669,"column":1,"offset":106733},"end":{"line":4684,"column":45,"offset":107582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if ","position":{"start":{"line":4686,"column":1,"offset":107584},"end":{"line":4686,"column":4,"offset":107587}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":4686,"column":6,"offset":107589},"end":{"line":4686,"column":10,"offset":107593}}}],"position":{"start":{"line":4686,"column":4,"offset":107587},"end":{"line":4686,"column":12,"offset":107595}}},{"type":"text","value":" == '","position":{"start":{"line":4686,"column":12,"offset":107595},"end":{"line":4686,"column":17,"offset":107600}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"main","position":{"start":{"line":4686,"column":19,"offset":107602},"end":{"line":4686,"column":23,"offset":107606}}}],"position":{"start":{"line":4686,"column":17,"offset":107600},"end":{"line":4686,"column":25,"offset":107608}}},{"type":"text","value":"':\nsup = Batman()","position":{"start":{"line":4686,"column":25,"offset":107608},"end":{"line":4687,"column":15,"offset":107625}}}],"position":{"start":{"line":4686,"column":1,"offset":107584},"end":{"line":4687,"column":15,"offset":107625}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Get the Method Resolution search Order used by both getattr() and super().\n# This attribute is dynamic and can be updated\nprint(Batman.__mro__)       # => (&lt;class '__main__.Batman'>,\n                            # => &lt;class 'superhero.Superhero'>,\n                            # => &lt;class 'human.Human'>,\n                            # => &lt;class 'bat.Bat'>, &lt;class 'object'>)\n\n# Calls parent method but uses its own class attribute\nprint(sup.get_species())    # => Superhuman\n\n# Calls overridden method\nprint(sup.sing())           # => nan nan nan nan nan batman!\n\n# Calls method from Human, because inheritance order matters\nsup.say('I agree')          # => Sad Affleck: I agree\n\n# Call method that exists only in 2nd ancestor\nprint(sup.sonar())          # => ))) ... (((\n\n# Inherited class attribute\nsup.age = 100\nprint(sup.age)              # => 100\n\n# Inherited attribute from 2nd ancestor whose default value was overridden.\nprint('Can I fly? ' + str(sup.fly)) # => Can I fly? False</code></pre></div>","position":{"start":{"line":4689,"column":1,"offset":107627},"end":{"line":4713,"column":62,"offset":108689}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4715,"column":1,"offset":108691},"end":{"line":4715,"column":53,"offset":108743}}}],"position":{"start":{"line":4715,"column":1,"offset":108691},"end":{"line":4715,"column":53,"offset":108743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"7. Advanced","position":{"start":{"line":4717,"column":4,"offset":108748},"end":{"line":4717,"column":15,"offset":108759}}}],"position":{"start":{"line":4717,"column":1,"offset":108745},"end":{"line":4717,"column":15,"offset":108759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####################################################","position":{"start":{"line":4719,"column":1,"offset":108761},"end":{"line":4719,"column":53,"offset":108813}}}],"position":{"start":{"line":4719,"column":1,"offset":108761},"end":{"line":4719,"column":53,"offset":108813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Generators help you make lazy code","position":{"start":{"line":4721,"column":3,"offset":108817},"end":{"line":4721,"column":37,"offset":108851}}}],"position":{"start":{"line":4721,"column":1,"offset":108815},"end":{"line":4721,"column":37,"offset":108851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def double_numbers(iterable):\nfor i in iterable:\nyield i + i","position":{"start":{"line":4723,"column":1,"offset":108853},"end":{"line":4725,"column":12,"offset":108913}}}],"position":{"start":{"line":4723,"column":1,"offset":108853},"end":{"line":4725,"column":12,"offset":108913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Generators are memory-efficient because they only load the data needed to","position":{"start":{"line":4727,"column":3,"offset":108917},"end":{"line":4727,"column":76,"offset":108990}}}],"position":{"start":{"line":4727,"column":1,"offset":108915},"end":{"line":4727,"column":76,"offset":108990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"process the next value in the iterable. This allows them to perform","position":{"start":{"line":4729,"column":3,"offset":108994},"end":{"line":4729,"column":70,"offset":109061}}}],"position":{"start":{"line":4729,"column":1,"offset":108992},"end":{"line":4729,"column":70,"offset":109061}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"operations on otherwise prohibitively large value ranges","position":{"start":{"line":4731,"column":3,"offset":109065},"end":{"line":4731,"column":59,"offset":109121}}}],"position":{"start":{"line":4731,"column":1,"offset":109063},"end":{"line":4731,"column":59,"offset":109121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"NOTE: ","position":{"start":{"line":4733,"column":3,"offset":109125},"end":{"line":4733,"column":9,"offset":109131}}},{"type":"raw","value":"<code class=\"language-text\">range</code>","position":{"start":{"line":4733,"column":9,"offset":109131},"end":{"line":4733,"column":16,"offset":109138}}},{"type":"text","value":" replaces ","position":{"start":{"line":4733,"column":16,"offset":109138},"end":{"line":4733,"column":26,"offset":109148}}},{"type":"raw","value":"<code class=\"language-text\">xrange</code>","position":{"start":{"line":4733,"column":26,"offset":109148},"end":{"line":4733,"column":34,"offset":109156}}},{"type":"text","value":" in Python 3","position":{"start":{"line":4733,"column":34,"offset":109156},"end":{"line":4733,"column":46,"offset":109168}}}],"position":{"start":{"line":4733,"column":1,"offset":109123},"end":{"line":4733,"column":46,"offset":109168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"for i in double_numbers(range(1, 900000000)): # ","position":{"start":{"line":4735,"column":1,"offset":109170},"end":{"line":4735,"column":49,"offset":109218}}},{"type":"raw","value":"<code class=\"language-text\">range</code>","position":{"start":{"line":4735,"column":49,"offset":109218},"end":{"line":4735,"column":56,"offset":109225}}},{"type":"text","value":" is a generator.\nprint(i)\nif i >= 30:\nbreak","position":{"start":{"line":4735,"column":56,"offset":109225},"end":{"line":4738,"column":6,"offset":109268}}}],"position":{"start":{"line":4735,"column":1,"offset":109170},"end":{"line":4738,"column":6,"offset":109268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Just as you can create a list comprehension, you can create generator","position":{"start":{"line":4740,"column":3,"offset":109272},"end":{"line":4740,"column":72,"offset":109341}}}],"position":{"start":{"line":4740,"column":1,"offset":109270},"end":{"line":4740,"column":72,"offset":109341}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"comprehensions as well","position":{"start":{"line":4742,"column":3,"offset":109345},"end":{"line":4742,"column":25,"offset":109367}}}],"position":{"start":{"line":4742,"column":1,"offset":109343},"end":{"line":4742,"column":25,"offset":109367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"values = (-x for x in ","position":{"start":{"line":4744,"column":1,"offset":109369},"end":{"line":4744,"column":23,"offset":109391}}},{"type":"text","value":"[1,2,3,4,5]","position":{"start":{"line":4744,"column":24,"offset":109392},"end":{"line":4744,"column":33,"offset":109401}}},{"type":"text","value":")\nfor x in values:\nprint(x) # prints -1 -2 -3 -4 -5 to console/terminal","position":{"start":{"line":4744,"column":34,"offset":109402},"end":{"line":4746,"column":53,"offset":109473}}}],"position":{"start":{"line":4744,"column":1,"offset":109369},"end":{"line":4746,"column":53,"offset":109473}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"You can also cast a generator comprehension directly to a list","position":{"start":{"line":4748,"column":3,"offset":109477},"end":{"line":4748,"column":65,"offset":109539}}}],"position":{"start":{"line":4748,"column":1,"offset":109475},"end":{"line":4748,"column":65,"offset":109539}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"values = (-x for x in ","position":{"start":{"line":4750,"column":1,"offset":109541},"end":{"line":4750,"column":23,"offset":109563}}},{"type":"text","value":"[1,2,3,4,5]","position":{"start":{"line":4750,"column":24,"offset":109564},"end":{"line":4750,"column":33,"offset":109573}}},{"type":"text","value":")\ngen","position":{"start":{"line":4750,"column":34,"offset":109574},"end":{"line":4751,"column":4,"offset":109579}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"to","position":{"start":{"line":4751,"column":5,"offset":109580},"end":{"line":4751,"column":7,"offset":109582}}}],"position":{"start":{"line":4751,"column":4,"offset":109579},"end":{"line":4751,"column":8,"offset":109583}}},{"type":"text","value":"list = list(values)\nprint(gen","position":{"start":{"line":4751,"column":8,"offset":109583},"end":{"line":4752,"column":10,"offset":109612}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"to","position":{"start":{"line":4752,"column":11,"offset":109613},"end":{"line":4752,"column":13,"offset":109615}}}],"position":{"start":{"line":4752,"column":10,"offset":109612},"end":{"line":4752,"column":14,"offset":109616}}},{"type":"text","value":"list) # => ","position":{"start":{"line":4752,"column":14,"offset":109616},"end":{"line":4752,"column":25,"offset":109627}}},{"type":"text","value":"[-1, -2, -3, -4, -5]","position":{"start":{"line":4752,"column":26,"offset":109628},"end":{"line":4752,"column":44,"offset":109646}}}],"position":{"start":{"line":4750,"column":1,"offset":109541},"end":{"line":4752,"column":45,"offset":109647}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Decorators","position":{"start":{"line":4754,"column":3,"offset":109651},"end":{"line":4754,"column":13,"offset":109661}}}],"position":{"start":{"line":4754,"column":1,"offset":109649},"end":{"line":4754,"column":13,"offset":109661}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"In this example ","position":{"start":{"line":4756,"column":3,"offset":109665},"end":{"line":4756,"column":19,"offset":109681}}},{"type":"raw","value":"<code class=\"language-text\">beg</code>","position":{"start":{"line":4756,"column":19,"offset":109681},"end":{"line":4756,"column":24,"offset":109686}}},{"type":"text","value":" wraps ","position":{"start":{"line":4756,"column":24,"offset":109686},"end":{"line":4756,"column":31,"offset":109693}}},{"type":"raw","value":"<code class=\"language-text\">say</code>","position":{"start":{"line":4756,"column":31,"offset":109693},"end":{"line":4756,"column":36,"offset":109698}}},{"type":"text","value":". If say_please is True then it","position":{"start":{"line":4756,"column":36,"offset":109698},"end":{"line":4756,"column":67,"offset":109729}}}],"position":{"start":{"line":4756,"column":1,"offset":109663},"end":{"line":4756,"column":67,"offset":109729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"will change the returned message","position":{"start":{"line":4758,"column":3,"offset":109733},"end":{"line":4758,"column":35,"offset":109765}}}],"position":{"start":{"line":4758,"column":1,"offset":109731},"end":{"line":4758,"column":35,"offset":109765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"from functools import wraps","position":{"start":{"line":4760,"column":1,"offset":109767},"end":{"line":4760,"column":28,"offset":109794}}}],"position":{"start":{"line":4760,"column":1,"offset":109767},"end":{"line":4760,"column":28,"offset":109794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"def beg(target","position":{"start":{"line":4762,"column":1,"offset":109796},"end":{"line":4762,"column":15,"offset":109810}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"function):\n@wraps(target","position":{"start":{"line":4762,"column":16,"offset":109811},"end":{"line":4763,"column":14,"offset":109835}}}],"position":{"start":{"line":4762,"column":15,"offset":109810},"end":{"line":4763,"column":15,"offset":109836}}},{"type":"text","value":"function)\ndef wrapper(","position":{"start":{"line":4763,"column":15,"offset":109836},"end":{"line":4764,"column":13,"offset":109858}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"args, \\","position":{"start":{"line":4764,"column":14,"offset":109859},"end":{"line":4764,"column":21,"offset":109866}}}],"position":{"start":{"line":4764,"column":13,"offset":109858},"end":{"line":4764,"column":22,"offset":109867}}},{"type":"text","value":"*","position":{"start":{"line":4764,"column":22,"offset":109867},"end":{"line":4764,"column":24,"offset":109869}}},{"type":"text","value":"kwargs):\nmsg, say","position":{"start":{"line":4764,"column":24,"offset":109869},"end":{"line":4765,"column":9,"offset":109886}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"please = target","position":{"start":{"line":4765,"column":10,"offset":109887},"end":{"line":4765,"column":25,"offset":109902}}}],"position":{"start":{"line":4765,"column":9,"offset":109886},"end":{"line":4765,"column":26,"offset":109903}}},{"type":"text","value":"function(","position":{"start":{"line":4765,"column":26,"offset":109903},"end":{"line":4765,"column":35,"offset":109912}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"args, \\","position":{"start":{"line":4765,"column":36,"offset":109913},"end":{"line":4765,"column":43,"offset":109920}}}],"position":{"start":{"line":4765,"column":35,"offset":109912},"end":{"line":4765,"column":44,"offset":109921}}},{"type":"text","value":"*","position":{"start":{"line":4765,"column":44,"offset":109921},"end":{"line":4765,"column":46,"offset":109923}}},{"type":"text","value":"kwargs)\nif say_please:\nreturn \"{} {}\".format(msg, \"Please! I am poor :(\")\nreturn msg","position":{"start":{"line":4765,"column":46,"offset":109923},"end":{"line":4768,"column":11,"offset":110007}}}],"position":{"start":{"line":4762,"column":1,"offset":109796},"end":{"line":4768,"column":11,"offset":110007}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">return wrapper</code></pre></div>","position":{"start":{"line":4770,"column":1,"offset":110009},"end":{"line":4770,"column":19,"offset":110027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"@beg\ndef say(say","position":{"start":{"line":4772,"column":1,"offset":110029},"end":{"line":4773,"column":12,"offset":110045}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"please=False):\nmsg = \"Can you buy me a beer?\"\nreturn msg, say","position":{"start":{"line":4773,"column":13,"offset":110046},"end":{"line":4775,"column":16,"offset":110107}}}],"position":{"start":{"line":4773,"column":12,"offset":110045},"end":{"line":4775,"column":17,"offset":110108}}},{"type":"text","value":"please","position":{"start":{"line":4775,"column":17,"offset":110108},"end":{"line":4775,"column":23,"offset":110114}}}],"position":{"start":{"line":4772,"column":1,"offset":110029},"end":{"line":4775,"column":23,"offset":110114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"print(say()) # Can you buy me a beer?\nprint(say(say_please=True)) # Can you buy me a beer? Please! I am poor :(","position":{"start":{"line":4777,"column":1,"offset":110116},"end":{"line":4778,"column":74,"offset":110227}}}],"position":{"start":{"line":4777,"column":1,"offset":110116},"end":{"line":4778,"column":74,"offset":110227}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4779,"column":1,"offset":110228}}}}