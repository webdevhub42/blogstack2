{"expireTime":9007200911206587000,"key":"transformer-remark-markdown-html-cd7357c8375fa41bb947d0d8bd78784a-gatsby-remark-prismjs-","val":"<h2>Functions</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Return Values and return Statements</h3>\n<p>When creating a function using the def statement, you can specify what the return value should be with a return statement. A return statement consists of the following:</p>\n<ul>\n<li>The return keyword.</li>\n<li>-</li>\n<li>The value or expression that the function should return.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">def</span> <span class=\"token function\">getAnswer</span><span class=\"token punctuation\">(</span>answerNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'It is certain'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'It is decidedly so'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Yes'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Reply hazy try again'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Ask again later'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Concentrate and ask again'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">7</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'My reply is no'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Outlook not so good'</span>\n    <span class=\"token keyword\">elif</span> answerNumber <span class=\"token operator\">==</span> <span class=\"token number\">9</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Very doubtful'</span>\n\nr <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\nfortune <span class=\"token operator\">=</span> getAnswer<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fortune<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>The None Value</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spam <span class=\"token operator\">=</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span>\nspam <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span></code></pre></div>\n<p>Note: never compare to <code class=\"language-text\">None</code> with the <code class=\"language-text\">==</code> operator. Always use <code class=\"language-text\">is</code>.</p>\n<h3>print Keyword Arguments</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'World'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dogs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mice'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dogs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mice'</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Local and Global Scope</h3>\n<ul>\n<li>Code in the global scope cannot use any local variables.</li>\n<li>-</li>\n<li>However, a local scope can access global variables.</li>\n<li>-</li>\n<li>Code in a function's local scope cannot use variables in any other local scope.</li>\n<li>You can use the same name for different variables if they are in different scopes. That is, there can be a local variable named spam and a global variable also named spam.</li>\n</ul>\n<h3>The global Statement</h3>\n<p>If you need to modify a global variable from within a function, use the global statement:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">spam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> eggs\n    eggs <span class=\"token operator\">=</span> <span class=\"token string\">'spam'</span>\n\neggs <span class=\"token operator\">=</span> <span class=\"token string\">'global'</span>\nspam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>eggs<span class=\"token punctuation\">)</span></code></pre></div>\n<p>There are four rules to tell whether a variable is in a local scope or global scope:</p>\n<ol>\n<li>If a variable is being used in the global scope (that is, outside of all functions), then it is always a global variable.</li>\n<li>If there is a global statement for that variable in a function, it is a global variable.</li>\n<li>Otherwise, if the variable is used in an assignment statement in the function, it is a local variable.</li>\n<li>But if the variable is not used in an assignment statement, it is a global variable.</li>\n</ol>"}