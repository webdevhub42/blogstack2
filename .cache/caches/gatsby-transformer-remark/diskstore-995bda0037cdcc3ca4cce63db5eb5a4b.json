{"expireTime":9007200911870452000,"key":"transformer-remark-markdown-html-ast-78f5d472940b47fcec710f15da9291a2-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/zigzag-conversion/description/"},"children":[{"type":"text","value":"6. ZigZag Conversion","position":{"start":{"line":3,"column":5,"offset":6},"end":{"line":3,"column":25,"offset":26}}}],"position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":88,"offset":89}}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":88,"offset":89}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":5,"column":5,"offset":95},"end":{"line":5,"column":13,"offset":103}}}],"position":{"start":{"line":5,"column":1,"offset":91},"end":{"line":5,"column":13,"offset":103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The string ","position":{"start":{"line":7,"column":1,"offset":105},"end":{"line":7,"column":12,"offset":116}}},{"type":"raw","value":"<code class=\"language-text\">\"PAYPALISHIRING\"</code>","position":{"start":{"line":7,"column":12,"offset":116},"end":{"line":7,"column":30,"offset":134}}},{"type":"text","value":" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)","position":{"start":{"line":7,"column":30,"offset":134},"end":{"line":7,"column":175,"offset":279}}}],"position":{"start":{"line":7,"column":1,"offset":105},"end":{"line":7,"column":175,"offset":279}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">P   A   H   N\nA P L S I I G\nY   I   R</code></pre></div>","position":{"start":{"line":9,"column":1,"offset":281},"end":{"line":13,"column":4,"offset":326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And then read line by line: ","position":{"start":{"line":15,"column":1,"offset":328},"end":{"line":15,"column":29,"offset":356}}},{"type":"raw","value":"<code class=\"language-text\">\"PAHNAPLSIIGYIR\"</code>","position":{"start":{"line":15,"column":29,"offset":356},"end":{"line":15,"column":47,"offset":374}}}],"position":{"start":{"line":15,"column":1,"offset":328},"end":{"line":15,"column":47,"offset":374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write the code that will take a string and make this conversion given a number of rows:","position":{"start":{"line":17,"column":1,"offset":376},"end":{"line":17,"column":88,"offset":463}}}],"position":{"start":{"line":17,"column":1,"offset":376},"end":{"line":17,"column":88,"offset":463}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">string convert(string s, int numRows);</code></pre></div>","position":{"start":{"line":19,"column":1,"offset":465},"end":{"line":21,"column":4,"offset":511}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":23,"column":3,"offset":515},"end":{"line":23,"column":13,"offset":525}}}],"position":{"start":{"line":23,"column":1,"offset":513},"end":{"line":23,"column":15,"offset":527}}}],"position":{"start":{"line":23,"column":1,"offset":513},"end":{"line":23,"column":15,"offset":527}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = \"PAYPALISHIRING\", numRows = 3\nOutput: \"PAHNAPLSIIGYIR\"</code></pre></div>","position":{"start":{"line":25,"column":1,"offset":529},"end":{"line":28,"column":4,"offset":602}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":30,"column":3,"offset":606},"end":{"line":30,"column":13,"offset":616}}}],"position":{"start":{"line":30,"column":1,"offset":604},"end":{"line":30,"column":15,"offset":618}}}],"position":{"start":{"line":30,"column":1,"offset":604},"end":{"line":30,"column":15,"offset":618}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\n\nP     I    N\nA   L S  I G\nY A   H R\nP     I</code></pre></div>","position":{"start":{"line":32,"column":1,"offset":620},"end":{"line":41,"column":4,"offset":751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":43,"column":5,"offset":757},"end":{"line":43,"column":14,"offset":766}}}],"position":{"start":{"line":43,"column":1,"offset":753},"end":{"line":43,"column":14,"offset":766}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Squeeze the zigzag pattern horizontally to form a matrix. Now deal with the odd and even columns respectively.","position":{"start":{"line":45,"column":1,"offset":768},"end":{"line":45,"column":111,"offset":878}}}],"position":{"start":{"line":45,"column":1,"offset":768},"end":{"line":45,"column":111,"offset":878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example let numRows be 5, if we list out the indecies:","position":{"start":{"line":47,"column":1,"offset":880},"end":{"line":47,"column":59,"offset":938}}}],"position":{"start":{"line":47,"column":1,"offset":880},"end":{"line":47,"column":59,"offset":938}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">row\n 1    00    08    16\n 2    01 07 09 15 17\n 3    02 06 10 14 18\n 4    03 05 11 13 19\n 5    04    12    20</code></pre></div>","position":{"start":{"line":49,"column":1,"offset":940},"end":{"line":56,"column":4,"offset":1056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First calculate the matrix width:","position":{"start":{"line":58,"column":1,"offset":1058},"end":{"line":58,"column":34,"offset":1091}}}],"position":{"start":{"line":58,"column":1,"offset":1058},"end":{"line":58,"column":34,"offset":1091}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pairs = floor( len(s) / (numRows + numRows - 2) )\nwidth = pairs * 2 + ceil( (len(s) - pairs * (numRows + numRows - 2)) / numRows )</code></pre></div>","position":{"start":{"line":60,"column":1,"offset":1093},"end":{"line":63,"column":4,"offset":1231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can easily make a observation that the direction of odd and even columns and different.","position":{"start":{"line":65,"column":1,"offset":1233},"end":{"line":65,"column":91,"offset":1323}}}],"position":{"start":{"line":65,"column":1,"offset":1233},"end":{"line":65,"column":91,"offset":1323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let the first column be index 0 and let i be the current position at column col.","position":{"start":{"line":67,"column":1,"offset":1325},"end":{"line":67,"column":81,"offset":1405}}}],"position":{"start":{"line":67,"column":1,"offset":1325},"end":{"line":67,"column":81,"offset":1405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We need to count the items between matrix","position":{"start":{"line":69,"column":1,"offset":1407},"end":{"line":69,"column":42,"offset":1448}}},{"type":"text","value":"[row][col]","position":{"start":{"line":69,"column":43,"offset":1449},"end":{"line":69,"column":46,"offset":1452}}},{"type":"text","value":" and matrix","position":{"start":{"line":69,"column":52,"offset":1458},"end":{"line":69,"column":63,"offset":1469}}},{"type":"text","value":"[row][col+1]","position":{"start":{"line":69,"column":64,"offset":1470},"end":{"line":69,"column":67,"offset":1473}}},{"type":"text","value":", exclusive.","position":{"start":{"line":69,"column":75,"offset":1481},"end":{"line":69,"column":87,"offset":1493}}}],"position":{"start":{"line":69,"column":1,"offset":1407},"end":{"line":69,"column":87,"offset":1493}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">next_i = i + (numRows - row) + (numRows - row), if col is even &amp;&amp; 1 &lt; row &lt; numRows\nnext_i = i + row - 2 + row, if col is odd &amp;&amp; 1 &lt; row &lt; numRows</code></pre></div>","position":{"start":{"line":71,"column":1,"offset":1495},"end":{"line":74,"column":4,"offset":1649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If row == 1 or row == numRows, skip the odd columns.","position":{"start":{"line":76,"column":1,"offset":1651},"end":{"line":76,"column":53,"offset":1703}}}],"position":{"start":{"line":76,"column":1,"offset":1651},"end":{"line":76,"column":53,"offset":1703}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">next_i = i + numRows + (numRows - 2), if col is even &amp;&amp; (row == 1 || row == numRows)</code></pre></div>","position":{"start":{"line":78,"column":1,"offset":1705},"end":{"line":80,"column":4,"offset":1797}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">/**\n * @param {string} s\n * @param {number} numRows\n * @return {string}\n */</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">convert</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> numRows</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>numRows <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> pairs <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>numRows <span class=\"token operator\">+</span> numRows <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> pairs <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> pairs <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>numRows <span class=\"token operator\">+</span> numRows <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> numRows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> row <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;=</span> numRows<span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> row <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        result <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> row <span class=\"token operator\">===</span> numRows<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>col <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    i <span class=\"token operator\">+=</span> numRows <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>numRows <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>col <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    i <span class=\"token operator\">+=</span> numRows <span class=\"token operator\">-</span> row <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>numRows <span class=\"token operator\">-</span> row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    i <span class=\"token operator\">+=</span> row <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> row<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            result <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":82,"column":1,"offset":1799},"end":{"line":122,"column":4,"offset":2804}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":124,"column":1,"offset":2806},"end":{"line":124,"column":4,"offset":2809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"☆","position":{"start":{"line":126,"column":1,"offset":2811},"end":{"line":126,"column":2,"offset":2812}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":126,"column":3,"offset":2813},"end":{"line":126,"column":21,"offset":2831}}}],"position":{"start":{"line":126,"column":2,"offset":2812},"end":{"line":126,"column":22,"offset":2832}}},{"type":"text","value":"☆☆","position":{"start":{"line":126,"column":22,"offset":2832},"end":{"line":126,"column":24,"offset":2834}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":126,"column":25,"offset":2835},"end":{"line":126,"column":43,"offset":2853}}}],"position":{"start":{"line":126,"column":24,"offset":2834},"end":{"line":126,"column":44,"offset":2854}}},{"type":"text","value":"☆☆","position":{"start":{"line":126,"column":44,"offset":2854},"end":{"line":126,"column":46,"offset":2856}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":126,"column":47,"offset":2857},"end":{"line":126,"column":65,"offset":2875}}}],"position":{"start":{"line":126,"column":46,"offset":2856},"end":{"line":126,"column":66,"offset":2876}}},{"type":"text","value":"☆","position":{"start":{"line":126,"column":66,"offset":2876},"end":{"line":126,"column":67,"offset":2877}}}],"position":{"start":{"line":126,"column":1,"offset":2811},"end":{"line":126,"column":67,"offset":2877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":128,"column":1,"offset":2879},"end":{"line":128,"column":4,"offset":2882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":130,"column":1,"offset":2884},"end":{"line":130,"column":4,"offset":2887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"☆","position":{"start":{"line":132,"column":1,"offset":2889},"end":{"line":132,"column":2,"offset":2890}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":132,"column":3,"offset":2891},"end":{"line":132,"column":21,"offset":2909}}}],"position":{"start":{"line":132,"column":2,"offset":2890},"end":{"line":132,"column":22,"offset":2910}}},{"type":"text","value":"☆☆","position":{"start":{"line":132,"column":22,"offset":2910},"end":{"line":132,"column":24,"offset":2912}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":132,"column":25,"offset":2913},"end":{"line":132,"column":43,"offset":2931}}}],"position":{"start":{"line":132,"column":24,"offset":2912},"end":{"line":132,"column":44,"offset":2932}}},{"type":"text","value":"☆","position":{"start":{"line":132,"column":44,"offset":2932},"end":{"line":132,"column":45,"offset":2933}}}],"position":{"start":{"line":132,"column":1,"offset":2889},"end":{"line":132,"column":45,"offset":2933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":134,"column":1,"offset":2935},"end":{"line":134,"column":4,"offset":2938}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":135,"column":1,"offset":2939}}}}