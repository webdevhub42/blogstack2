{"expireTime":9007200911206581000,"key":"transformer-remark-markdown-html-ast-b570b3808c54bb10c6762df79ff2563e-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/letter-combinations-of-a-phone-number/description/"},"children":[{"type":"text","value":"17. Letter Combinations of a Phone Number","position":{"start":{"line":3,"column":5,"offset":6},"end":{"line":3,"column":46,"offset":47}}}],"position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":129,"offset":130}}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":129,"offset":130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":5,"column":5,"offset":136},"end":{"line":5,"column":13,"offset":144}}}],"position":{"start":{"line":5,"column":1,"offset":132},"end":{"line":5,"column":13,"offset":144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a string containing digits from ","position":{"start":{"line":7,"column":1,"offset":146},"end":{"line":7,"column":39,"offset":184}}},{"type":"raw","value":"<code class=\"language-text\">2-9</code>","position":{"start":{"line":7,"column":39,"offset":184},"end":{"line":7,"column":44,"offset":189}}},{"type":"text","value":" inclusive, return all possible letter combinations that the number could represent.","position":{"start":{"line":7,"column":44,"offset":189},"end":{"line":7,"column":128,"offset":273}}}],"position":{"start":{"line":7,"column":1,"offset":146},"end":{"line":7,"column":128,"offset":273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.","position":{"start":{"line":9,"column":1,"offset":275},"end":{"line":9,"column":124,"offset":398}}}],"position":{"start":{"line":9,"column":1,"offset":275},"end":{"line":9,"column":124,"offset":398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Telephone-keypad2.svg/200px-Telephone-keypad2.svg.png","alt":"200px-Telephone-keypad2"},"children":[],"position":{"start":{"line":11,"column":1,"offset":400},"end":{"line":11,"column":140,"offset":539}}}],"position":{"start":{"line":11,"column":1,"offset":400},"end":{"line":11,"column":140,"offset":539}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":13,"column":3,"offset":543},"end":{"line":13,"column":11,"offset":551}}}],"position":{"start":{"line":13,"column":1,"offset":541},"end":{"line":13,"column":13,"offset":553}}}],"position":{"start":{"line":13,"column":1,"offset":541},"end":{"line":13,"column":13,"offset":553}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: \"23\"\nOutput: [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"].</code></pre></div>","position":{"start":{"line":15,"column":1,"offset":555},"end":{"line":18,"column":4,"offset":638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":20,"column":3,"offset":642},"end":{"line":20,"column":8,"offset":647}}}],"position":{"start":{"line":20,"column":1,"offset":640},"end":{"line":20,"column":10,"offset":649}}}],"position":{"start":{"line":20,"column":1,"offset":640},"end":{"line":20,"column":10,"offset":649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Although the above answer is in lexicographical order, your answer could be in any order you want.","position":{"start":{"line":22,"column":1,"offset":651},"end":{"line":22,"column":99,"offset":749}}}],"position":{"start":{"line":22,"column":1,"offset":651},"end":{"line":22,"column":99,"offset":749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":24,"column":5,"offset":755},"end":{"line":24,"column":14,"offset":764}}}],"position":{"start":{"line":24,"column":1,"offset":751},"end":{"line":24,"column":14,"offset":764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":26,"column":6,"offset":771},"end":{"line":26,"column":9,"offset":774}}}],"position":{"start":{"line":26,"column":1,"offset":766},"end":{"line":26,"column":9,"offset":774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript specific optimization.","position":{"start":{"line":28,"column":1,"offset":776},"end":{"line":28,"column":34,"offset":809}}}],"position":{"start":{"line":28,"column":1,"offset":776},"end":{"line":28,"column":34,"offset":809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">Array.prototype.push</code>","position":{"start":{"line":30,"column":1,"offset":811},"end":{"line":30,"column":23,"offset":833}}},{"type":"text","value":" accepts arbitrary arguments which enables tighter loops.","position":{"start":{"line":30,"column":23,"offset":833},"end":{"line":30,"column":80,"offset":890}}}],"position":{"start":{"line":30,"column":1,"offset":811},"end":{"line":30,"column":80,"offset":890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Also, appending string is faster than prepending.","position":{"start":{"line":32,"column":1,"offset":892},"end":{"line":32,"column":50,"offset":941}}}],"position":{"start":{"line":32,"column":1,"offset":892},"end":{"line":32,"column":50,"offset":941}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">/**\n * @param {string} digits\n * @return {string[]}\n */</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">letterCombinations</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">digits</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> letters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'j'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'k'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'q'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'v'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'z'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">''</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> digits<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> letters<span class=\"token punctuation\">[</span>digits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> newResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        arr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> newResult<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> r <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result <span class=\"token operator\">=</span> newResult<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":34,"column":1,"offset":943},"end":{"line":69,"column":4,"offset":1639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":71,"column":6,"offset":1646},"end":{"line":71,"column":9,"offset":1649}}}],"position":{"start":{"line":71,"column":1,"offset":1641},"end":{"line":71,"column":9,"offset":1649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"General recursive DFS solution.","position":{"start":{"line":73,"column":1,"offset":1651},"end":{"line":73,"column":32,"offset":1682}}}],"position":{"start":{"line":73,"column":1,"offset":1651},"end":{"line":73,"column":32,"offset":1682}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">/**\n * @param {string} digits\n * @return {string[]}\n */</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">letterCombinations</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">digits</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> letters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'def'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ghi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jkl'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mno'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pqrs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tuv'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wxyz'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> letters<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">digits<span class=\"token punctuation\">,</span> idigit<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> letters<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idigit <span class=\"token operator\">>=</span> digits<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> letters<span class=\"token punctuation\">[</span>digits<span class=\"token punctuation\">[</span>idigit<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">,</span> idigit <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> path <span class=\"token operator\">+</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> letters<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":75,"column":1,"offset":1684},"end":{"line":100,"column":4,"offset":2302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":102,"column":1,"offset":2304},"end":{"line":102,"column":4,"offset":2307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"☆","position":{"start":{"line":104,"column":1,"offset":2309},"end":{"line":104,"column":2,"offset":2310}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":104,"column":3,"offset":2311},"end":{"line":104,"column":21,"offset":2329}}}],"position":{"start":{"line":104,"column":2,"offset":2310},"end":{"line":104,"column":22,"offset":2330}}},{"type":"text","value":"☆☆","position":{"start":{"line":104,"column":22,"offset":2330},"end":{"line":104,"column":24,"offset":2332}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":104,"column":25,"offset":2333},"end":{"line":104,"column":43,"offset":2351}}}],"position":{"start":{"line":104,"column":24,"offset":2332},"end":{"line":104,"column":44,"offset":2352}}},{"type":"text","value":"☆☆","position":{"start":{"line":104,"column":44,"offset":2352},"end":{"line":104,"column":46,"offset":2354}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":104,"column":47,"offset":2355},"end":{"line":104,"column":65,"offset":2373}}}],"position":{"start":{"line":104,"column":46,"offset":2354},"end":{"line":104,"column":66,"offset":2374}}},{"type":"text","value":"☆","position":{"start":{"line":104,"column":66,"offset":2374},"end":{"line":104,"column":67,"offset":2375}}}],"position":{"start":{"line":104,"column":1,"offset":2309},"end":{"line":104,"column":67,"offset":2375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":106,"column":1,"offset":2377},"end":{"line":106,"column":4,"offset":2380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":108,"column":1,"offset":2382},"end":{"line":108,"column":4,"offset":2385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"☆","position":{"start":{"line":110,"column":1,"offset":2387},"end":{"line":110,"column":2,"offset":2388}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":110,"column":3,"offset":2389},"end":{"line":110,"column":21,"offset":2407}}}],"position":{"start":{"line":110,"column":2,"offset":2388},"end":{"line":110,"column":22,"offset":2408}}},{"type":"text","value":"☆☆","position":{"start":{"line":110,"column":22,"offset":2408},"end":{"line":110,"column":24,"offset":2410}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":110,"column":25,"offset":2411},"end":{"line":110,"column":43,"offset":2429}}}],"position":{"start":{"line":110,"column":24,"offset":2410},"end":{"line":110,"column":44,"offset":2430}}},{"type":"text","value":"☆","position":{"start":{"line":110,"column":44,"offset":2430},"end":{"line":110,"column":45,"offset":2431}}}],"position":{"start":{"line":110,"column":1,"offset":2387},"end":{"line":110,"column":45,"offset":2431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":112,"column":1,"offset":2433},"end":{"line":112,"column":4,"offset":2436}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":113,"column":1,"offset":2437}}}}